{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\byj\\Deposit\\Alteration.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\byj\\Deposit\\Alteration.vue","mtime":1635749455616},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport FlowSelect from '@/components/Flow/flowSelect'\r\nimport PersonSelect from '@/components/SearchBar/form/PersonSelect'\r\nimport UpFile from '@/components/UpLoad/UpFile'\r\nimport FlowAttitude from '@/components/Flow/flowAttitude'\r\nimport Detailsedit from '@/components/Detailsedit'\r\nimport FlowDisplay from '@/components/Flow/flowDisplay'\r\nimport { GetModifyBillFlow, AddDepositModify, CheckDepositModify, DeleteDepositModify } from '@/api/cwgl/Deposit.js'\r\nexport default {\r\n  components: {\r\n    PersonSelect,\r\n    UpFile,\r\n    FlowSelect,\r\n    FlowAttitude,\r\n    Detailsedit,\r\n    FlowDisplay\r\n  },\r\n  props: {\r\n    type: { // 审批:approval 新增:add\r\n      type: String,\r\n      default: 'add'\r\n    },\r\n    alteration: { // 变更信息\r\n      type: Object,\r\n      default: null\r\n    },\r\n    details: { // 详情信息\r\n      type: Object,\r\n      default() {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      size: 'mini',\r\n      currStep: 1, // 步骤\r\n      saveLoading: false,\r\n      approvalForm: {\r\n        person: {\r\n          number: '',\r\n          name: ''\r\n        },\r\n        reason: '',\r\n        returnDate: '',\r\n        fileList: []\r\n      },\r\n      alterationForm: {\r\n        billFlow: null,\r\n        depositId: '',\r\n        state: 1,\r\n        id: 0,\r\n        personId: '',\r\n        name: '',\r\n        returnDate: '',\r\n        reason: '',\r\n        fileList: []\r\n      },\r\n      alterationRules: {\r\n        text: [{ required: true, message: '请输入内容', trigger: 'change' }],\r\n        date: [{ required: true, message: '请输入日期', trigger: 'change' }]\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    isCurrUser() {\r\n      return this.$store.state.user.uid === this.alteration.createUserId\r\n    },\r\n    attitudePara() {\r\n      const { billFlow, id, billFlowId } = this.alteration\r\n      return { formId: billFlow?.formId, billFlowId, planId: id }\r\n    },\r\n    alterationInfo() {\r\n      const {\r\n        person: {\r\n          number,\r\n          name\r\n        },\r\n        reason,\r\n        returnDate,\r\n        upFile\r\n      } = this.alteration\r\n\r\n      // 数据格式化\r\n      // const m = (val) => this.utils.formatMoney(val, 2, 4)\r\n      const d = (dataStr) => dataStr ? this.$moment(dataStr).format('YYYY-MM-DD') : dataStr\r\n      // const a = this.utils.amountInWords\r\n\r\n      return [\r\n        { label: '经手人工号', value: number },\r\n        { label: '经手人', value: name },\r\n        { label: '回收日期', value: d(returnDate), monopolize: true },\r\n        { label: '变更原因', value: reason, monopolize: true },\r\n        { label: '附件', value: upFile || [], component: 'UpFile', monopolize: true }\r\n      ]\r\n    }\r\n  },\r\n  watch: {\r\n    details: {\r\n      immediate: true,\r\n      handler(val) {\r\n        if (val && !this.isSetSlterationForm) {\r\n          const {\r\n            person: {\r\n              name\r\n            },\r\n            personId,\r\n            planReturnDate,\r\n            upFile\r\n          } = val.data\r\n          Object.assign(this.alterationForm, { returnDate: planReturnDate, name, personId, fileList: upFile || [] })\r\n        }\r\n      }\r\n    },\r\n    alteration: {\r\n      immediate: true,\r\n      handler(val) {\r\n        if (val) {\r\n          if (this.type === 'add') {\r\n            const {\r\n              person: {\r\n                name\r\n              },\r\n              personId,\r\n              reason,\r\n              returnDate,\r\n              upFile\r\n            } = val\r\n            this.isSetSlterationForm = true\r\n            Object.assign(this.alterationForm, { returnDate, name, reason, personId, fileList: upFile || [] })\r\n          } else {\r\n            this.approvalForm = { ...val, fileList: val.upFile || [] }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    invalidForm() {\r\n      this.$confirm('是否确定作废？', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.saveLoading = true\r\n        // const attitude = this.$refs.flowAttitude.getPostData()\r\n        DeleteDepositModify({ id: this.alteration.id }).then(res => {\r\n          if (res.code === 200) {\r\n            this.$message.success(res.message)\r\n            this.goBack() // 跳转\r\n          } else {\r\n            this.$message.error(res.message)\r\n          }\r\n        }).finally(() => {\r\n          this.saveLoading = false\r\n        })\r\n      })\r\n    },\r\n    saveFlow(depositModify = this.alteration) {\r\n      this.$confirm('是否确定保存？', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.saveLoading = true\r\n        const attitude = this.$refs.flowAttitude.getPostData()\r\n        CheckDepositModify({ attitude, depositModify }).then(res => {\r\n          if (res.code === 200) {\r\n            this.$message.success(res.message)\r\n            this.goBack() // 跳转\r\n          } else {\r\n            this.$message.error(res.message)\r\n          }\r\n        }).finally(() => {\r\n          this.saveLoading = false\r\n        })\r\n      })\r\n    },\r\n    /**\r\n     * 返回上一页，并关闭当前页\r\n     */\r\n    goBack() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    },\r\n    selectPerson2(user) {\r\n      Object.assign(this.approvalForm.person, user)\r\n    },\r\n    selectPerson(user) {\r\n      this.alterationForm.personId = user.id\r\n      this.alterationForm.name = user.name\r\n    },\r\n    setActive(curr) {\r\n      this.currStep = curr\r\n    },\r\n    submitForm() {\r\n      const { id, personId, PlanReturnDate } = this.details.data\r\n      const req = {\r\n        ...this.alterationForm,\r\n        depositId: id,\r\n        formerPersonId: personId,\r\n        formerReturnDate: PlanReturnDate\r\n      }\r\n\r\n      if (this.alterationForm.billFlow) {\r\n        const billFlow = this.$refs.flowSelect.getBillFlow()\r\n        if (billFlow) {\r\n          req.billFlow = billFlow\r\n          AddDepositModify(req).then((res) => {\r\n          // 添加\r\n            this.$message.success(res.message)\r\n            this.goBack()\r\n          })\r\n        } else {\r\n          return this.$message.error('获取流程数据失败')\r\n        }\r\n      } else {\r\n        return this.$message.error('流程数据不能为空')\r\n      }\r\n    },\r\n    /**\r\n     * 提交审批意见以后的回调函数\r\n     */\r\n    updateFlow() {\r\n      // 直接返回\r\n      this.goBack()\r\n    },\r\n    /**\r\n     * @description: 变更下一步\r\n     */\r\n    nextStep(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          // 获取流程数据\r\n          const { data: { id, personId, PlanReturnDate, orgId }} = this.details\r\n          const req = {\r\n            ...this.alterationForm,\r\n            orgId,\r\n            depositId: id,\r\n            formerPersonId: personId,\r\n            formerReturnDate: PlanReturnDate\r\n          }\r\n          if (this.alteration?.billFlowData) req.billFlowId = this.alteration.billFlowData.id\r\n          GetModifyBillFlow(req).then(({ data, success, message }) => {\r\n            if (success) {\r\n              this.alterationForm.billFlow = data.billFlow\r\n              this.setActive(2)\r\n            } else {\r\n              this.$message.error(message)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n",null]}