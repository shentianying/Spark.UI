{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\lcgl\\components\\addFlow.vue?vue&type=template&id=4aa4d435&scoped=true&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\lcgl\\components\\addFlow.vue","mtime":1624071363351},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"el-form\",\n    {\n      ref: \"ruleForm\",\n      attrs: {\n        \"status-icon\": \"\",\n        model: _vm.ruleForm,\n        rules: _vm.rules,\n        \"label-width\": \"120px\",\n        size: \"mini\"\n      }\n    },\n    [\n      _c(\"el-form-item\", { attrs: { label: \"单据名称\", prop: \"name\" } }),\n      _vm._v(\" \"),\n      _c(\"el-form-item\", { attrs: { label: \"流程名称\", prop: \"name\" } }),\n      _vm._v(\" \"),\n      _c(\"el-form-item\", { attrs: { label: \"流程\" } }, [\n        _c(\"div\", { staticClass: \"main\" }, [\n          _c(\"div\", { staticClass: \"flexwrap\" }, [\n            _c(\"div\", { staticClass: \"flownode\" }, [\n              _c(\"div\", [_vm._v(\"开始\")])\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", [_c(\"i\", { staticClass: \"fontSize20 el-icon-right\" })])\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"flexwrap\" }, [\n            _c(\"div\", { staticClass: \"flownode\" }, [\n              _c(\"div\", [_vm._v(\"结束\")])\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"是否可用\", prop: \"inUse\" } },\n        [\n          _c(\"el-switch\", {\n            attrs: { \"active-color\": \"#13ce66\", \"inactive-color\": \"#ff4949\" },\n            model: {\n              value: _vm.ruleForm.inUse,\n              callback: function($$v) {\n                _vm.$set(_vm.ruleForm, \"inUse\", $$v)\n              },\n              expression: \"ruleForm.inUse\"\n            }\n          })\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-form-item\",\n        [\n          _c(\n            \"el-button\",\n            {\n              attrs: {\n                type: \"primary\",\n                size: \"mini\",\n                loading: _vm.buttonLoading\n              },\n              on: {\n                click: function($event) {\n                  return _vm.submitForm(\"ruleForm\")\n                }\n              }\n            },\n            [_vm._v(\"更新保存\")]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-button\",\n            {\n              attrs: { size: \"mini\" },\n              on: {\n                click: function($event) {\n                  return _vm.resetForm(\"ruleForm\")\n                }\n              }\n            },\n            [_vm._v(\"重置\")]\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}