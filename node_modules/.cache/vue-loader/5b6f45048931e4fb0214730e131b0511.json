{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\zggl\\organization\\workerOrgEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\zggl\\organization\\workerOrgEdit.vue","mtime":1634371102587},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { saveData, getWorkerOrgById, getDefaultOptions } from '@/api/zggl/workerOrg'\r\nimport PersonSelect2 from '@/components/Other/PersonSelect2'\r\nimport { getPersonListWithType } from '@/api/rsgl/person'\r\nimport WorkerSelect from '@/components/Other/WorkerSelect'\r\nexport default {\r\n  name: 'WorkerOrgEdit',\r\n  // 局部注册的组件\r\n  components: {\r\n    PersonSelect2,\r\n    WorkerSelect\r\n  },\r\n  // 组件状态值\r\n  data() {\r\n    return {\r\n      size: 'mini', // 整体大小\r\n      type: '', // edit：编辑 add:新增\r\n      ruleForm: {\r\n        id: 0,\r\n        type: null,\r\n        personId: null,\r\n        post: null,\r\n        number: '',\r\n        parentPersonId: null,\r\n        orgPost: null,\r\n        orgPostName: '',\r\n        parentPerson: {},\r\n        person: []\r\n      },\r\n      postTypeOptions: [],\r\n      personTypeOptions: [],\r\n      // 验证规则\r\n      rules: {\r\n        type: [{ required: true, message: '请选择', trigger: 'change' }],\r\n        post: [{ required: true, message: '请选择', trigger: 'change' }],\r\n        parentPersonId: [\r\n          { required: true, message: '请选择', trigger: 'change' }\r\n        ],\r\n        personId: [\r\n          { required: true, message: '请选择', trigger: 'change' }\r\n        ]\r\n      },\r\n      personList: [],\r\n      // workerList: [],\r\n      loading: false\r\n    }\r\n  },\r\n  watch: {\r\n    'ruleForm.personId': {\r\n      handler: function(value) {\r\n        /**\r\n         * 联动工号和岗位\r\n         */\r\n        var person = this.personList.find(f => f.id === value)\r\n        if (person !== undefined) {\r\n          this.ruleForm.number = person.number\r\n          this.ruleForm.orgPostName = person.postName\r\n          this.ruleForm.orgPost = person.postId\r\n        }\r\n      },\r\n      immediate: false\r\n    },\r\n    'ruleForm.type': {\r\n      handler: function(value, oldvalue) {\r\n        if (oldvalue !== null && value !== oldvalue) {\r\n          this.ruleForm.number = ''\r\n          this.ruleForm.orgPostName = ''\r\n          this.ruleForm.personId = null\r\n        }\r\n      }, immediate: false\r\n    }\r\n  },\r\n  beforeRouteEnter(to, from, next) {\r\n    next(vm => {\r\n      vm.initData()\r\n    })\r\n  },\r\n  // 组件方法\r\n  methods: {\r\n    initData() {\r\n      const { id } = this.$route.query\r\n      this.ruleForm.id = id\r\n      this.getOptions()\r\n      this.getPersonList()\r\n      this.getWorkerOrgForm()\r\n    },\r\n    // async invalid() {\r\n    //   // 作废之前弹窗确定一下\r\n    //   this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\r\n    //     type: 'warning'\r\n    //   })\r\n    //     .then(() => {\r\n    //       return invalid(this.ruleForm.id)\r\n    //     })\r\n    //     .then(res => {\r\n    //       this.$message.success(res.message)\r\n    //       this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    //     })\r\n    //     .catch(err => {\r\n    //       console.log(err)\r\n    //       // this.$message.error(err.errorMsg || '操作失败')\r\n    //     })\r\n    // },\r\n    async getOptions() {\r\n      const {\r\n        personTypeOptions,\r\n        postTypeOptions\r\n      } = await getDefaultOptions()\r\n      this.personTypeOptions = personTypeOptions\r\n      this.postTypeOptions = postTypeOptions\r\n    },\r\n    // 获取劳务关系数据\r\n    getWorkerOrgForm() {\r\n      getWorkerOrgById(this.ruleForm)\r\n        .then(res => {\r\n          const { code, data } = res\r\n          if (code === 200 && data !== undefined) {\r\n            for (const key in this.ruleForm) {\r\n              if (Object.hasOwnProperty.call(this.ruleForm, key)) {\r\n                this.ruleForm[key] = data[key]\r\n              }\r\n            }\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          // this.$message.error(err.errorMsg)\r\n        })\r\n    },\r\n    // 提交表单\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(async valid => {\r\n        if (valid) {\r\n          const data = {\r\n            id: this.ruleForm.id,\r\n            number: this.ruleForm.number,\r\n            orgPost: this.ruleForm.orgPost,\r\n            parentPersonId: this.ruleForm.parentPersonId,\r\n            personId: this.ruleForm.personId,\r\n            post: this.ruleForm.post,\r\n            type: this.ruleForm.type\r\n          }\r\n          const res = await saveData(data)\r\n\r\n          this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n          this.$message.success(res.message)\r\n        }\r\n      })\r\n    },\r\n    /**\r\n     * 取消并返回上一页\r\n     */\r\n    goBack() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    },\r\n    /**\r\n     * 获取人员信息\r\n     */\r\n    getPersonList() {\r\n      getPersonListWithType()\r\n        .then(res => {\r\n          const { code, data } = res\r\n          if (code === 200) {\r\n            this.personList = data\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          // this.$message.error(err.errorMsg)\r\n        })\r\n    }\r\n    // selectWorkers() {\r\n    //   this.$refs.workerRef.openDialog()\r\n    // },\r\n    // getPersons(workerList) {\r\n    //   if ((workerList || []).length > 0) {\r\n    //     this.workerList = workerList.map(m => { return { id: m.id, name: m.name } })\r\n    //     this.$nextTick(() => {\r\n    //       this.ruleForm.parentPersonId = workerList[0].id\r\n    //       // this.ruleForm.personName = workerList[0].name\r\n    //     })\r\n    //   }\r\n    // }\r\n  }\r\n}\r\n",null]}