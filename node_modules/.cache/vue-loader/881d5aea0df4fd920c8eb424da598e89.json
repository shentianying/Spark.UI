{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\ggzx\\grgl\\worker\\exit\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\ggzx\\grgl\\worker\\exit\\edit.vue","mtime":1635749455664},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getFormById, getBillFlow, saveData, deleteData } from '@/api/ggzx/workerExit'\r\nimport { getDefaultOptions } from '@/api/ggzx/worker'\r\nimport UpFile from '@/components/UpLoad/UpFile'\r\nimport FlowSelect from '@/components/Flow/flowSelect'\r\nimport FlowDisplay from '@/components/Flow/flowDisplay'\r\nimport FlowAttitude from '@/components/Flow/flowAttitude'\r\nimport OrgSelect2 from '@/components/OrgSelect/index2'\r\nimport SelectWorker2 from '@/components/Other/ggzx/selectWorker2'\r\nexport default {\r\n  name: 'WorkerExitEdit',\r\n  components: {\r\n    UpFile,\r\n    FlowSelect,\r\n    FlowDisplay,\r\n    FlowAttitude,\r\n    OrgSelect2,\r\n    SelectWorker2\r\n  },\r\n  data() {\r\n    return {\r\n      id: null,\r\n      ruleForm: {\r\n        id: 0,\r\n        year: null,\r\n        number: '',\r\n        orgId: null,\r\n        exitReason: '',\r\n        exitDate: null,\r\n        remark: '',\r\n        fileList: []\r\n      },\r\n      list: [],\r\n      orgIdList: [],\r\n      workerList: [],\r\n      yearList: [],\r\n      loading: false,\r\n      activate: true,\r\n      active: 0,\r\n      dialogTableVisible: false,\r\n      dialogTitle: '保存',\r\n      dialogWidth: '70%',\r\n      comName: 'PlanDetailAdd',\r\n      currentRow: null,\r\n      billFlow: null,\r\n      isLoad: false,\r\n      attitudePara: {},\r\n      fileListKey: 0,\r\n      rules: {\r\n        orgId: [{ required: true, message: '请选择项目', trigger: 'change' }],\r\n        exitDate: [\r\n          { required: true, message: '请选择日期', trigger: 'change' }\r\n        ],\r\n        exitReason: [{ required: true, message: '请输入', trigger: 'blur' }],\r\n        year: [{ required: true, message: '请输入', trigger: 'blur' }]\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    'ruleForm.exitDate': {\r\n      handler: function(value, oldvalue) {\r\n        if (value !== oldvalue && oldvalue !== null) {\r\n          this.list.forEach(e => {\r\n            e.exitDate = value\r\n          })\r\n        }\r\n      }, deep: true\r\n    },\r\n    'ruleForm.orgId': {\r\n      handler: function(value, oldvalue) {\r\n        if (value !== null) {\r\n          const ids = []\r\n          ids.push(value)\r\n          this.orgIdList = ids\r\n        }\r\n      }, deep: true\r\n    }\r\n  },\r\n  activated() {\r\n  },\r\n  mounted() {\r\n    this.initData()\r\n  },\r\n  methods: {\r\n    async initData() {\r\n      if (this.$route.query.id) {\r\n        this.id = this.$route.query.id\r\n      }\r\n      if (this.id) {\r\n        this.loading = true\r\n        this.activate = false // 销毁部门组件\r\n        await getFormById({ id: this.id }).then(response => this.setData(response))\r\n      }\r\n      getDefaultOptions().then(op => {\r\n        const { yearOptions } = op\r\n        this.yearList = yearOptions\r\n      })\r\n    },\r\n    setData(response) {\r\n      this.fileListKey++\r\n      const { data } = response\r\n      this.ruleForm = data\r\n      console.log(data.upFile)\r\n      this.ruleForm.fileList = data.upFile\r\n      this.list = data.workerExitDetails\r\n      const workers = []\r\n      this.list.forEach(e => {\r\n        workers.push(e.worker)\r\n      })\r\n      this.workerList = workers\r\n      // this.billFlow = billFlowData\r\n      // this.attitudePara = { formId: billFlowData.formId, billFlowId: data.billFlowId, planId: data.id }\r\n      this.isLoad = true\r\n      this.loading = false // loading 状态关闭\r\n      this.activate = true // 加载部门组件\r\n    },\r\n    closeThePage() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    },\r\n    updateFlow() {\r\n      this.closeThePage()\r\n    },\r\n    // 根据表单获取流程\r\n    getDynamicFlow() {\r\n      this.$refs['ruleForm'].validate(valid => {\r\n        if (valid) {\r\n          this.loading = true\r\n          const postData = { ...this.ruleForm }\r\n          console.log(postData)\r\n          getBillFlow(postData).then(response => {\r\n            this.loading = false\r\n            if (response.success) {\r\n              this.billFlow = response.data.billFlow\r\n              this.active = 1\r\n            } else {\r\n              this.$message(response.message)\r\n            }\r\n          }).catch(() => { this.loading = false })\r\n        }\r\n      })\r\n    },\r\n    previous() {\r\n      // 上一步\r\n      this.active = 0\r\n      this.billFlow = null\r\n    },\r\n    submitForm(state) {\r\n      // 提交审批流程\r\n      this.$refs['ruleForm'].validate(valid => {\r\n        if (valid) {\r\n          this.loading = true\r\n          this.ruleForm.state = state\r\n          const billFlow = this.$refs.flowSelect.getBillFlow()\r\n          console.log('获取的billFlow:', billFlow)\r\n          this.ruleForm.billFlow = billFlow\r\n          var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n          const details = []\r\n          this.list.forEach(e => {\r\n            details.push({\r\n              workerId: e.worker.id,\r\n              exitReason: e.exitReason,\r\n              exitDate: e.exitDate,\r\n              remark: e.remark\r\n            })\r\n          })\r\n\r\n          const postdata = {\r\n            id: newObj.id,\r\n            orgId: newObj.orgId,\r\n            year: newObj.year,\r\n            exitReason: newObj.exitReason,\r\n            exitDate: newObj.exitDate,\r\n            remark: newObj.remark,\r\n            fileList: newObj.fileList,\r\n            state: newObj.state,\r\n            workerExitDetails: details,\r\n            billFlow: billFlow\r\n          }\r\n          saveData(postdata).then(response => {\r\n            this.closeThePage()\r\n          })\r\n        }\r\n      })\r\n    },\r\n    /**\r\n     * 选择工人\r\n     */\r\n    addWorker() {\r\n      this.$refs['ruleForm'].validate(valid => {\r\n        if (valid) {\r\n          this.$refs.workerRef.openDialog()\r\n        }\r\n      })\r\n    },\r\n    getPersons(personList) {\r\n      if ((personList || []).length > 0) {\r\n        const data = []\r\n        const workers = []\r\n        personList.forEach(person => {\r\n          data.push({\r\n            worker: {\r\n              id: person.id,\r\n              year: person.year,\r\n              number: person.number,\r\n              name: person.name,\r\n              organization: person.organization,\r\n              idNumber: person.idNumber\r\n            },\r\n            exitReason: this.ruleForm.exitReason,\r\n            exitDate: this.ruleForm.exitDate,\r\n            remark: ''\r\n          })\r\n          workers.push(person)\r\n        })\r\n        this.list = data\r\n        this.workerList = workers\r\n      }\r\n    },\r\n    cancel() {\r\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.loading = true\r\n        deleteData({ id: this.ruleForm.id }).then(response => {\r\n          this.$message(response.message)\r\n          this.loading = false\r\n          this.closeThePage()\r\n        })\r\n      }).catch(() => {})\r\n    }\r\n  }\r\n}\r\n",null]}