{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\ywgl\\zxb\\creditBidEdit.vue?vue&type=template&id=4f8c5e11&scoped=true&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\ywgl\\zxb\\creditBidEdit.vue","mtime":1635988762981},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"app-container\" }, [\n    _c(\n      \"div\",\n      [\n        _c(\n          \"el-steps\",\n          {\n            attrs: {\n              active: _vm.active,\n              \"finish-status\": \"success\",\n              \"align-center\": \"\"\n            }\n          },\n          [\n            _c(\"el-step\", {\n              attrs: { title: \"填写单据\", icon: \"el-icon-edit\" }\n            }),\n            _vm._v(\" \"),\n            _c(\"el-step\", {\n              attrs: { title: \"确认流程\", icon: \"el-icon-refresh\" }\n            })\n          ],\n          1\n        )\n      ],\n      1\n    ),\n    _vm._v(\" \"),\n    _c(\n      \"div\",\n      {\n        directives: [\n          {\n            name: \"show\",\n            rawName: \"v-show\",\n            value: _vm.active === 0 || _vm.active === 2,\n            expression: \"active===0 || active===2\"\n          }\n        ]\n      },\n      [\n        _c(\n          \"el-form\",\n          {\n            ref: \"ruleForm\",\n            attrs: {\n              \"status-icon\": \"\",\n              model: _vm.ruleForm,\n              rules: _vm.rules,\n              \"label-width\": \"160px\",\n              size: \"mini\"\n            }\n          },\n          [\n            _c(\n              \"el-row\",\n              { attrs: { gutter: 10 } },\n              [\n                _c(\n                  \"el-col\",\n                  { attrs: { sm: 12, xs: 24 } },\n                  [\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"编号：\", prop: \"number\" } },\n                      [\n                        _c(\"el-input\", {\n                          attrs: {\n                            readonly: \"readonly\",\n                            placeholder: \"自动生成\",\n                            size: \"mini\",\n                            maxlength: \"50\"\n                          },\n                          model: {\n                            value: _vm.ruleForm.number,\n                            callback: function($$v) {\n                              _vm.$set(_vm.ruleForm, \"number\", $$v)\n                            },\n                            expression: \"ruleForm.number\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"el-row\",\n              { attrs: { gutter: 10 } },\n              [\n                _c(\n                  \"el-col\",\n                  { attrs: { sm: 12, xs: 24 } },\n                  [\n                    _c(\n                      \"el-form-item\",\n                      {\n                        attrs: { label: \"工程名称：\", prop: \"bussinessInfoId\" }\n                      },\n                      [\n                        _c(\n                          \"el-input\",\n                          {\n                            attrs: {\n                              readonly: \"readonly\",\n                              size: \"mini\",\n                              maxlength: \"50\"\n                            },\n                            model: {\n                              value: _vm.bussinessInfoName,\n                              callback: function($$v) {\n                                _vm.bussinessInfoName = $$v\n                              },\n                              expression: \"bussinessInfoName\"\n                            }\n                          },\n                          [\n                            _c(\"el-button\", {\n                              attrs: { slot: \"append\", icon: \"el-icon-search\" },\n                              on: {\n                                click: function($event) {\n                                  return _vm.selectBussinessInfo()\n                                }\n                              },\n                              slot: \"append\"\n                            })\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"select-bussiness-info\", {\n                          ref: \"bussinessInfoRef\",\n                          attrs: { multiple: false },\n                          on: { getBussinessInfo: _vm.getBussinessInfo }\n                        })\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-col\",\n                  { attrs: { sm: 12, xs: 24 } },\n                  [\n                    _vm.orgList\n                      ? _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"组织机构：\", prop: \"orgId\" } },\n                          [\n                            _vm.orgList\n                              ? _c(\"org-select2\", {\n                                  key: _vm.keyOrg,\n                                  attrs: {\n                                    \"data-mode\": 0,\n                                    size: \"mini\",\n                                    \"collapse-tags\": false,\n                                    \"show-all-levels\": true,\n                                    multiple: false,\n                                    filterable: true,\n                                    \"check-strictly\": false,\n                                    options: _vm.orgList,\n                                    disabled: true,\n                                    \"select-data\": _vm.ruleForm.orgId,\n                                    \"select-style\": \"width:100%;\"\n                                  },\n                                  model: {\n                                    value: _vm.ruleForm.orgId,\n                                    callback: function($$v) {\n                                      _vm.$set(_vm.ruleForm, \"orgId\", $$v)\n                                    },\n                                    expression: \"ruleForm.orgId\"\n                                  }\n                                })\n                              : _vm._e()\n                          ],\n                          1\n                        )\n                      : _vm._e()\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"el-row\",\n              { attrs: { gutter: 10 } },\n              [\n                _c(\n                  \"el-col\",\n                  { attrs: { sm: 12, xs: 24 } },\n                  [\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"发包单位：\" } },\n                      [\n                        _c(\"el-input\", {\n                          attrs: {\n                            readonly: \"readonly\",\n                            size: \"mini\",\n                            maxlength: \"50\"\n                          },\n                          model: {\n                            value: _vm.infoForm.developer,\n                            callback: function($$v) {\n                              _vm.$set(_vm.infoForm, \"developer\", $$v)\n                            },\n                            expression: \"infoForm.developer\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-col\",\n                  { attrs: { sm: 12, xs: 24 } },\n                  [\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"招标形式：\" } },\n                      [\n                        _c(\"el-input\", {\n                          attrs: {\n                            readonly: \"readonly\",\n                            size: \"mini\",\n                            maxlength: \"50\"\n                          },\n                          model: {\n                            value: _vm.infoForm.tenderMode,\n                            callback: function($$v) {\n                              _vm.$set(_vm.infoForm, \"tenderMode\", $$v)\n                            },\n                            expression: \"infoForm.tenderMode\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"el-row\",\n              { attrs: { gutter: 10 } },\n              [\n                _c(\n                  \"el-col\",\n                  { attrs: { sm: 12, xs: 24 } },\n                  [\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"预估造价：\" } },\n                      [\n                        _c(\n                          \"el-input\",\n                          {\n                            attrs: {\n                              readonly: \"readonly\",\n                              size: \"mini\",\n                              maxlength: \"50\"\n                            },\n                            model: {\n                              value: _vm.infoForm.cost,\n                              callback: function($$v) {\n                                _vm.$set(_vm.infoForm, \"cost\", $$v)\n                              },\n                              expression: \"infoForm.cost\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"i\",\n                              {\n                                staticStyle: { \"margin-right\": \"10px\" },\n                                attrs: { slot: \"suffix\" },\n                                slot: \"suffix\"\n                              },\n                              [_vm._v(\"万元\")]\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-col\",\n                  { attrs: { sm: 12, xs: 24 } },\n                  [\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"装饰面积：\" } },\n                      [\n                        _c(\n                          \"el-input\",\n                          {\n                            attrs: {\n                              readonly: \"readonly\",\n                              size: \"mini\",\n                              maxlength: \"50\"\n                            },\n                            model: {\n                              value: _vm.infoForm.decorationArea,\n                              callback: function($$v) {\n                                _vm.$set(_vm.infoForm, \"decorationArea\", $$v)\n                              },\n                              expression: \"infoForm.decorationArea\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"i\",\n                              {\n                                staticStyle: { \"margin-right\": \"10px\" },\n                                attrs: { slot: \"suffix\" },\n                                slot: \"suffix\"\n                              },\n                              [_vm._v(\"平方米\")]\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"el-row\",\n              { attrs: { gutter: 10 } },\n              [\n                _c(\n                  \"el-col\",\n                  { attrs: { sm: 12, xs: 24 } },\n                  [\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"跟踪级别：\" } },\n                      [\n                        _c(\"el-input\", {\n                          attrs: {\n                            readonly: \"readonly\",\n                            size: \"mini\",\n                            maxlength: \"50\"\n                          },\n                          model: {\n                            value: _vm.infoForm.traceLevel,\n                            callback: function($$v) {\n                              _vm.$set(_vm.infoForm, \"traceLevel\", $$v)\n                            },\n                            expression: \"infoForm.traceLevel\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-col\",\n                  { attrs: { sm: 12, xs: 24 } },\n                  [\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"投标截止日期：\" } },\n                      [\n                        _c(\"el-input\", {\n                          attrs: {\n                            readonly: \"readonly\",\n                            size: \"mini\",\n                            maxlength: \"50\"\n                          },\n                          model: {\n                            value: _vm.infoForm.tenderEndDate,\n                            callback: function($$v) {\n                              _vm.$set(_vm.infoForm, \"tenderEndDate\", $$v)\n                            },\n                            expression: \"infoForm.tenderEndDate\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"el-row\",\n              { attrs: { gutter: 10 } },\n              [\n                _c(\n                  \"el-col\",\n                  { attrs: { sm: 12, xs: 24 } },\n                  [\n                    _c(\n                      \"el-form-item\",\n                      {\n                        attrs: {\n                          label: \"持证项目经理：\",\n                          prop: \"certificateProjectManager\"\n                        }\n                      },\n                      [\n                        _c(\n                          \"el-input\",\n                          {\n                            attrs: {\n                              readonly: \"readonly\",\n                              size: \"mini\",\n                              maxlength: \"50\"\n                            },\n                            model: {\n                              value: _vm.certificateProjectManagerName,\n                              callback: function($$v) {\n                                _vm.certificateProjectManagerName = $$v\n                              },\n                              expression: \"certificateProjectManagerName\"\n                            }\n                          },\n                          [\n                            _c(\"el-button\", {\n                              attrs: { slot: \"append\", icon: \"el-icon-search\" },\n                              on: {\n                                click: function($event) {\n                                  return _vm.selectPerson()\n                                }\n                              },\n                              slot: \"append\"\n                            })\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"select-person\", {\n                          ref: \"personRef\",\n                          attrs: { multiple: false },\n                          on: { getPersons: _vm.getPersons }\n                        })\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-col\",\n                  { attrs: { sm: 12, xs: 24 } },\n                  [\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"是否参与评分：\" } },\n                      [\n                        _c(\"el-switch\", {\n                          attrs: { \"active-text\": \"是\", \"inactive-text\": \"否\" },\n                          model: {\n                            value: _vm.ruleForm.isRate,\n                            callback: function($$v) {\n                              _vm.$set(_vm.ruleForm, \"isRate\", $$v)\n                            },\n                            expression: \"ruleForm.isRate\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"el-row\",\n              { attrs: { gutter: 10 } },\n              [\n                _c(\n                  \"el-col\",\n                  { attrs: { sm: 24, xs: 24 } },\n                  [\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"备注：\", prop: \"remark\" } },\n                      [\n                        _c(\"el-input\", {\n                          attrs: {\n                            type: \"textarea\",\n                            rows: 3,\n                            size: \"mini\",\n                            maxlength: \"500\"\n                          },\n                          model: {\n                            value: _vm.ruleForm.remark,\n                            callback: function($$v) {\n                              _vm.$set(_vm.ruleForm, \"remark\", $$v)\n                            },\n                            expression: \"ruleForm.remark\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"附件：\" } },\n                      [\n                        _c(\"up-file\", {\n                          attrs: {\n                            size: 50,\n                            \"is-upfile\": true,\n                            \"is-preview\": true,\n                            \"is-download\": true,\n                            \"is-delete\": true,\n                            \"is-rename\": true,\n                            \"file-list\": _vm.ruleForm.fileList\n                          },\n                          model: {\n                            value: _vm.ruleForm.fileList,\n                            callback: function($$v) {\n                              _vm.$set(_vm.ruleForm, \"fileList\", $$v)\n                            },\n                            expression: \"ruleForm.fileList\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            )\n          ],\n          1\n        ),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          [\n            _c(\n              \"div\",\n              { staticClass: \"flex_div\" },\n              [\n                _c(\n                  \"el-button\",\n                  {\n                    attrs: { loading: _vm.loading, size: \"mini\" },\n                    on: {\n                      click: function($event) {\n                        return _vm.add()\n                      }\n                    }\n                  },\n                  [_vm._v(\"+添加评分细则及估值\")]\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"el-table\",\n              {\n                directives: [\n                  {\n                    name: \"loading\",\n                    rawName: \"v-loading\",\n                    value: _vm.loading,\n                    expression: \"loading\"\n                  }\n                ],\n                attrs: {\n                  id: \"detailTable\",\n                  data: _vm.list,\n                  \"show-summary\": \"\",\n                  \"summary-method\": _vm.getSummaries,\n                  \"element-loading-text\": \"Loading\",\n                  border: \"\",\n                  fit: \"\",\n                  \"highlight-current-row\": \"\",\n                  size: \"mini\",\n                  \"span-method\": _vm.setColSpan\n                }\n              },\n              [\n                _c(\"el-table-column\", {\n                  attrs: {\n                    type: \"index\",\n                    width: \"55\",\n                    align: \"center\",\n                    label: \"序号\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    label: \"评分项目\",\n                    align: \"center\",\n                    \"min-width\": \"50\",\n                    prop: \"branchName\"\n                  },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function(scope) {\n                        return [\n                          _vm._v(\n                            \"\\n            \" +\n                              _vm._s(scope.row.branchName) +\n                              \"\\n          \"\n                          )\n                        ]\n                      }\n                    }\n                  ])\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    label: \"分值\",\n                    align: \"center\",\n                    \"min-width\": \"50\",\n                    prop: \"branchScore\"\n                  },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function(scope) {\n                        return [\n                          _vm._v(\n                            \"\\n            \" +\n                              _vm._s(scope.row.branchScore) +\n                              \"\\n          \"\n                          )\n                        ]\n                      }\n                    }\n                  ])\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    label: \"评分明细\",\n                    align: \"center\",\n                    \"min-width\": \"50\",\n                    prop: \"branchDetail\"\n                  },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function(scope) {\n                        return [\n                          _vm._v(\n                            \"\\n            \" +\n                              _vm._s(scope.row.branchDetail) +\n                              \"\\n          \"\n                          )\n                        ]\n                      }\n                    }\n                  ])\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    label: \"概要内容\",\n                    align: \"center\",\n                    \"min-width\": \"50\",\n                    prop: \"branchSummary\"\n                  },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function(scope) {\n                        return [\n                          _vm._v(\n                            \"\\n            \" +\n                              _vm._s(scope.row.branchSummary) +\n                              \"\\n          \"\n                          )\n                        ]\n                      }\n                    }\n                  ])\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    label: \"预估得分\",\n                    align: \"center\",\n                    \"min-width\": \"50\",\n                    prop: \"branchEstimatedScore\"\n                  },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function(scope) {\n                        return [\n                          _vm._v(\n                            \"\\n            \" +\n                              _vm._s(scope.row.branchEstimatedScore) +\n                              \"\\n          \"\n                          )\n                        ]\n                      }\n                    }\n                  ])\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    label: \"备注\",\n                    align: \"center\",\n                    \"min-width\": \"50\",\n                    prop: \"branchContent\"\n                  },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function(scope) {\n                        return [\n                          _vm._v(\n                            \"\\n            \" +\n                              _vm._s(scope.row.branchContent) +\n                              \"\\n          \"\n                          )\n                        ]\n                      }\n                    }\n                  ])\n                }),\n                _vm._v(\" \"),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    label: \"操作\",\n                    fixed: \"right\",\n                    align: \"center\",\n                    width: \"120\"\n                  },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function(scope) {\n                        return [\n                          _c(\n                            \"el-button-group\",\n                            [\n                              _c(\"el-button\", {\n                                staticStyle: { padding: \"6px\" },\n                                attrs: {\n                                  type: \"primary\",\n                                  plain: \"\",\n                                  size: \"small\",\n                                  icon: \"el-icon-edit\",\n                                  title: \"编辑\"\n                                },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.edit(scope)\n                                  }\n                                }\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"el-button\", {\n                                staticStyle: { padding: \"6px\" },\n                                attrs: {\n                                  type: \"primary\",\n                                  plain: \"\",\n                                  size: \"small\",\n                                  icon: \"el-icon-delete\",\n                                  title: \"删除\"\n                                },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.del(scope)\n                                  }\n                                }\n                              })\n                            ],\n                            1\n                          )\n                        ]\n                      }\n                    }\n                  ])\n                })\n              ],\n              1\n            )\n          ],\n          1\n        ),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticStyle: { \"text-align\": \"center\", \"margin-top\": \"15px\" } },\n          [\n            _c(\n              \"el-button\",\n              {\n                attrs: { size: \"mini\", type: \"success\", loading: _vm.loading },\n                on: {\n                  click: function($event) {\n                    return _vm.getDynamicFlow(\"ruleForm\")\n                  }\n                }\n              },\n              [_vm._v(\"下一步➜\")]\n            )\n          ],\n          1\n        )\n      ],\n      1\n    ),\n    _vm._v(\" \"),\n    _vm.dialogTableVisible\n      ? _c(\n          \"div\",\n          [\n            _c(\n              \"el-dialog\",\n              {\n                attrs: {\n                  title: _vm.dialogTitle,\n                  \"destroy-on-close\": true,\n                  visible: _vm.dialogTableVisible,\n                  width: _vm.dialogWidth,\n                  \"append-to-body\": false\n                },\n                on: {\n                  \"update:visible\": function($event) {\n                    _vm.dialogTableVisible = $event\n                  }\n                }\n              },\n              [\n                _c(_vm.comName, {\n                  tag: \"component\",\n                  attrs: { obj: _vm.currentRow, \"is-preview\": true },\n                  on: { dialogClose: _vm.dialogClose }\n                })\n              ],\n              1\n            )\n          ],\n          1\n        )\n      : _vm._e(),\n    _vm._v(\" \"),\n    _c(\n      \"div\",\n      {\n        directives: [\n          {\n            name: \"show\",\n            rawName: \"v-show\",\n            value: _vm.active === 1 || _vm.active === 2,\n            expression: \"active===1 || active===2\"\n          }\n        ]\n      },\n      [\n        _vm.billFlow\n          ? _c(\"flow-select\", {\n              ref: \"flowSelect\",\n              attrs: { \"bill-flow\": _vm.billFlow }\n            })\n          : _vm._e(),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticStyle: { \"text-align\": \"center\", \"margin-top\": \"10px\" } },\n          [\n            _vm.ruleForm.id > 0 && _vm.ruleForm.state === 0\n              ? _c(\n                  \"el-button\",\n                  {\n                    attrs: {\n                      size: \"mini\",\n                      type: \"warning\",\n                      loading: _vm.loading\n                    },\n                    on: {\n                      click: function($event) {\n                        return _vm.cancel()\n                      }\n                    }\n                  },\n                  [_vm._v(\"作废\")]\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.ruleForm.state === 0\n              ? _c(\n                  \"el-button\",\n                  {\n                    attrs: {\n                      size: \"mini\",\n                      type: \"primary\",\n                      loading: _vm.loading\n                    },\n                    on: {\n                      click: function($event) {\n                        return _vm.submitForm(\"ruleForm\", 1)\n                      }\n                    }\n                  },\n                  [_vm._v(\"提交\")]\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.ruleForm.state === 0\n              ? _c(\n                  \"el-button\",\n                  {\n                    attrs: {\n                      size: \"mini\",\n                      type: \"success\",\n                      loading: _vm.loading\n                    },\n                    on: {\n                      click: function($event) {\n                        return _vm.submitForm(\"ruleForm\", 0)\n                      }\n                    }\n                  },\n                  [_vm._v(\"保存\")]\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.ruleForm.state === 0\n              ? _c(\n                  \"el-button\",\n                  {\n                    attrs: {\n                      size: \"mini\",\n                      type: \"success\",\n                      loading: _vm.loading\n                    },\n                    on: {\n                      click: function($event) {\n                        return _vm.previous()\n                      }\n                    }\n                  },\n                  [_vm._v(\"上一步\")]\n                )\n              : _vm._e()\n          ],\n          1\n        )\n      ],\n      1\n    ),\n    _vm._v(\" \"),\n    _c(\n      \"div\",\n      [\n        _vm.loadFlow\n          ? _c(\"flow-attitude\", {\n              ref: \"flowAttitude\",\n              attrs: { show: false, para: _vm.attitudePara }\n            })\n          : _vm._e()\n      ],\n      1\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}