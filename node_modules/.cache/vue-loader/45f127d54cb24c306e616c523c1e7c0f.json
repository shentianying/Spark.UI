{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\task\\taskCheck.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\task\\taskCheck.vue","mtime":1635216068756},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getCGTaskPaging, getCGTaskById } from '@/api/cggl/task'\r\nimport OrgSelect2 from '@/components/OrgSelect/index2'\r\nexport default {\r\n  name: 'TaskCheck',\r\n  components: {\r\n    OrgSelect2\r\n  },\r\n  props: {\r\n    obj: {\r\n      type: Object,\r\n      default: null\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n      },\r\n      taskList: [],\r\n      search: {\r\n        number: '',\r\n        orgIds: [],\r\n        states: []\r\n      },\r\n      total: 0,\r\n      currentPage: 1,\r\n      pageSize: this.utils.getPersonalSettings().pageSize,\r\n      loading: false,\r\n      list: [],\r\n      fileList: [],\r\n      listLoading: false,\r\n      multipleSelection: [],\r\n      columnShow: { unit2: true,\r\n        brand: true,\r\n        model: true,\r\n        spec: true,\r\n        thickness: true,\r\n        texture: true,\r\n        surfaceTreatment: true,\r\n        designNumber: true\r\n      },\r\n      rules: {\r\n        number: [{ required: true, message: '请输入', trigger: 'change' }]\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n  },\r\n  watch: {\r\n  },\r\n  activated() {\r\n  },\r\n  mounted() {\r\n    this.initData()\r\n  },\r\n  methods: {\r\n    async initData() {\r\n      this.listLoading = true\r\n      var postData = {}\r\n      postData.currentPage = this.currentPage\r\n      postData.pageSize = this.pageSize\r\n      postData.number = this.search.number\r\n      postData.orgIds = this.search.orgIds\r\n      postData.states = this.search.states\r\n      postData.states.push(10000) // 已确认的任务单\r\n      postData.isBuyer = true\r\n      if (this.obj && this.obj.times > 1) {\r\n        postData.number = this.obj.taskNumber\r\n      }\r\n      getCGTaskPaging(postData).then(response => {\r\n        const { data, count } = response\r\n        this.taskList = data\r\n        this.total = count\r\n        this.listLoading = false\r\n      })\r\n    },\r\n    setColumnShow() { // 设置列的显示。列中，都没有值，就隐藏\r\n      var modelunit2 = false\r\n      var modelbrand = false\r\n      var modelmodel = false\r\n      var modelspec = false\r\n      var modelthickness = false\r\n      var modeltexture = false\r\n      var modelsurfaceTreatment = false\r\n      var modeldesignNumber = false\r\n      for (var row of this.list) {\r\n        if (row.unit2) { modelunit2 = true }\r\n        if (row.brand) { modelbrand = true }\r\n        if (row.model) { modelmodel = true }\r\n        if (row.spec) { modelspec = true }\r\n        if (row.thickness) { modelthickness = true }\r\n        if (row.texture) { modeltexture = true }\r\n        if (row.surfaceTreatment) { modelsurfaceTreatment = true }\r\n        if (row.designNumber) { modeldesignNumber = true }\r\n      }\r\n      this.columnShow['unit2'] = modelunit2\r\n      this.columnShow['brand'] = modelbrand\r\n      this.columnShow['model'] = modelmodel\r\n      this.columnShow['spec'] = modelspec\r\n      this.columnShow['thickness'] = modelthickness\r\n      this.columnShow['texture'] = modeltexture\r\n      this.columnShow['surfaceTreatment'] = modelsurfaceTreatment\r\n      this.columnShow['designNumber'] = modeldesignNumber\r\n    },\r\n    // 多选框选中数据\r\n    handleSelectionChange(selection) {\r\n      this.multipleSelection = selection\r\n    },\r\n    checkTask() {\r\n      if (this.multipleSelection.length <= 0) {\r\n        this.$message.error('请选择材料')\r\n      } else {\r\n        var data = {\r\n          form: this.ruleForm,\r\n          list: this.multipleSelection\r\n        }\r\n        this.$emit('dialogClose', data, 'add')\r\n      }\r\n    },\r\n    handleCurrentChange(val) {\r\n      this.loading = true\r\n      this.ruleForm = val\r\n      getCGTaskById({ id: val.id }).then(response => {\r\n        const { data } = response\r\n        var pom = []\r\n        data.planDetails.forEach(e => {\r\n          pom.push({\r\n            id: e.id,\r\n            materialId: e.materialId,\r\n            categoryId: e.material.categoryId,\r\n            category: { id: e.material.categoryId,\r\n              name: e.material.materialCategory.name,\r\n              unit: e.material.materialCategory.unit,\r\n              isMain: e.material.materialCategory.isMain },\r\n            unit: e.material.unit,\r\n            unit2: e.material.unit2,\r\n            brand: e.material.brand,\r\n            model: e.material.model,\r\n            spec: e.material.spec,\r\n            thickness: e.material.thickness,\r\n            texture: e.material.texture,\r\n            surfaceTreatment: e.material.surfaceTreatment,\r\n            designNumber: e.material.designNumber,\r\n            applicationQuantity: e.applicationQuantity,\r\n            applicationQuantity2: e.applicationQuantity2,\r\n            quantity: e.quantity,\r\n            quantity2: e.quantity2,\r\n            entryDate: e.entryDate,\r\n            remark: e.remark,\r\n            state: e.state\r\n          })\r\n        })\r\n        this.list = pom\r\n        this.loading = false\r\n      })\r\n    },\r\n    sizeChange(val) {\r\n      this.pageSize = val\r\n      this.initData()\r\n    }\r\n  }\r\n}\r\n",null]}