{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\jcsj\\userFrame.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\jcsj\\userFrame.vue","mtime":1624672720234},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getPersonById } from '@/api/rsgl/person'\r\nimport SelectRole from '@/views/xtgl/qxgl/component/selectRole'\r\nimport UserEdit from './components/userEdit'\r\nimport UserCheckupOrganization from './components/userCheckupOrganization'\r\nimport UserDataRange from './components/userDataRange'\r\nexport default {\r\n  name: 'UserFrame',\r\n  components: {\r\n    SelectRole,\r\n    UserEdit,\r\n    UserDataRange,\r\n    UserCheckupOrganization\r\n  },\r\n  props: {\r\n    obj: {\r\n      type: Object,\r\n      default: null\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      name: '',\r\n      number: '',\r\n      activeTab: 'edit',\r\n      tabsInfo: [\r\n        { name: 'edit', selected: false, label: '用户信息' },\r\n        { name: 'userRole', selected: false, label: '用户权限' },\r\n        { name: 'userOrg', selected: false, label: '用户审核范围' },\r\n        { name: 'userDataRang', selected: false, label: '用户数据范围' }\r\n      ]\r\n    }\r\n  },\r\n  created() {\r\n    if (this.$route.query.tab) {\r\n      // 根据参数选中标签\r\n      const tabsName = this.$route.query.tab\r\n      this.activeTab = tabsName\r\n      // 加载对应子组件\r\n      var item = this.tabsInfo.find(f => f.name === tabsName)\r\n      item.selected = true\r\n    } else {\r\n      console.log('添加')\r\n      // 没参数显示默认的选项\r\n      this.tabsInfo[0].selected = true\r\n    }\r\n  },\r\n  activated() {\r\n    if (!this.$route.query.tab) {\r\n      // 没参数显示默认的选项\r\n      this.tabsInfo[0].selected = true\r\n    }\r\n    if (this.$route.params.id) {\r\n      getPersonById({ id: this.$route.query.id }).then((response) => {\r\n        const { data } = response\r\n        this.number = data.number\r\n        this.name = data.name\r\n      })\r\n\r\n      this.refreshRouterName = this.$route.params.refreshRouterName\r\n    }\r\n  },\r\n  mounted() {\r\n  },\r\n  methods: {\r\n    // 解决 一次打开 多个选项卡一次性 加载 所有数据的问题\r\n    setSelected(tag) {\r\n      // this.tabsInfo[Number(tag.index)].selected = true  //如果有上面或中间不显示的tab，跳转tab时会不显示，index会重新排序\r\n      this.tabsInfo.find(f => f.name === tag.name).selected = true\r\n    }\r\n  }\r\n}\r\n",null]}