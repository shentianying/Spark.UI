{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\layout\\components\\Navbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\layout\\components\\Navbar.vue","mtime":1624613416884},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapGetters } from 'vuex'\r\nimport Breadcrumb from '@/components/Breadcrumb'\r\nimport Hamburger from '@/components/Hamburger'\r\n\r\nexport default {\r\n  components: {\r\n    Breadcrumb,\r\n    Hamburger\r\n  },\r\n  data() {\r\n    return {\r\n      selectOrgId: this.$store.state.user.selectOrgId,\r\n      userOrg: this.$store.state.user.info.userOrg\r\n      // avatar: process.env.VUE_APP_BASE_API + this.$store.state.user.info.avatar\r\n      // badgeValue: 99\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      'sidebar',\r\n      // 'avatar',\r\n      'name',\r\n      'info',\r\n      'noReadCount'\r\n    ]),\r\n    getAvatar() {\r\n      return process.env.VUE_APP_BASE_API + this.info.avatar\r\n    }\r\n  },\r\n  methods: {\r\n    toggleSideBar() {\r\n      this.$store.dispatch('app/toggleSideBar')\r\n    },\r\n    readMessages() {\r\n      // this.badgeValue = 0\r\n      this.$router.replace({ name: 'Message' })\r\n    },\r\n    async logout() {\r\n      this.$store.dispatch('tagsView/delAllViews')\r\n      await this.$store.dispatch('user/logout')\r\n      // this.$router.push(`/login?redirect=${this.$route.fullPath}`)\r\n      this.$router.push(`/login`)\r\n    },\r\n    async toggleOrg() {\r\n      await this.$store.dispatch('user/toggleOrg', this.selectOrgId)\r\n      this.$router.go(0)\r\n    }\r\n  }\r\n}\r\n",null]}