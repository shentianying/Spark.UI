{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\components\\Other\\dictSelect.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\components\\Other\\dictSelect.vue","mtime":1629362631824},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getDictionarysByTypes } from '@/api/xtgl/dictionary'\r\nexport default {\r\n  name: 'DictSelect',\r\n  props: {\r\n    typeName: { type: String, default: '' }, // 字典类型方式，从后端读取\r\n    options: { type: Array, default: () => { return [] } }, // 固定列表方式，直接绑定\r\n    selectStyle: { type: String, default: 'width:100%' }, // 样式\r\n    multiple: { type: Boolean, default: false }\r\n  },\r\n  data() {\r\n    return {\r\n      svalue: null,\r\n      dictItems: []\r\n    }\r\n  },\r\n  watch: {\r\n    // 判断下拉框的值是否改变\r\n    svalue(value, oldValue) {\r\n      if (value !== oldValue) {\r\n        // 组件内对值发生改变后向外部发送通知\r\n        this.$emit('input', value)\r\n      }\r\n    },\r\n    value(value, oldValue) {\r\n      // 监听外部对props属性变更\r\n      this.svalue = value\r\n    }\r\n  },\r\n  mounted() {\r\n    var that = this\r\n\r\n    if (this.typeName && this.typeName !== '') {\r\n      // 使用字典类型，从服务器请求数据\r\n      var params = { types: this.typeName }\r\n      getDictionarysByTypes(params).then(response => {\r\n        var list = response.data\r\n        if (list) {\r\n          list.forEach(item => {\r\n            that.dictItems.push({ name: item.name, value: item.value })\r\n          })\r\n          console.log(that.dictItems)\r\n        }\r\n      })\r\n    } else if (this.options && this.options.length > 0) {\r\n      // 使用固定字典列表\r\n      this.options.forEach(item => {\r\n        if (item && typeof (item.value) !== 'undefined') {\r\n          that.dictItems.push(item)\r\n        }\r\n      })\r\n    }\r\n    // 设置默认值\r\n    this.svalue = this.value\r\n  },\r\n  methods: {\r\n\r\n  }\r\n}\r\n",null]}