{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\lcgl\\flowDesign\\component\\addFlowNode.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\lcgl\\flowDesign\\component\\addFlowNode.vue","mtime":1634371102581},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n// import { initFlowNode } from '@/api/xtgl/flow'\r\nimport AddFlowNodeRole from './addFlowNodeRole'\r\nimport { getObjectValue } from '@/utils/index'\r\nexport default {\r\n  name: 'AddFlowNode',\r\n  components: {\r\n    AddFlowNodeRole\r\n  },\r\n  props: {\r\n    obj: {\r\n      type: [Object, Array],\r\n      default: null\r\n    },\r\n    formStateId: { type: Number, default: null },\r\n    dropDownData: { type: Object, default: null }\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        group: 0,\r\n        // state: null,\r\n        flowId: 0,\r\n        mode: 1,\r\n        maxDays: 0,\r\n        grade: 0\r\n      },\r\n      list: [],\r\n      flowNodeType: [],\r\n      flowNodeMode: [],\r\n      flowNodeObj: null, // 编辑的对象\r\n      editFlowNodeIndex: 0, // 编辑flowNode当前的index\r\n      buttonLoading: false,\r\n      dialogTableVisible: false,\r\n      rules: {\r\n        group: [{ required: true, message: '必填', trigger: 'blur' }],\r\n        // state: [{ required: true, message: '必填', trigger: 'blur' }],\r\n        mode: [{ required: true, message: '必填', trigger: 'blur' }]\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    getObjectValue() {\r\n      return getObjectValue\r\n    }\r\n  },\r\n  mounted() {\r\n    // console.log('addFlowNode.vue==>this.obj:', this.obj)\r\n    this.initData()\r\n  },\r\n  created() {\r\n  },\r\n  methods: {\r\n    submitForm() {\r\n      this.$refs['ruleForm1'].validate(valid => {\r\n        if (valid) {\r\n          var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n          var result = []\r\n          this.list.forEach(e => {\r\n            result.push({\r\n              id: e.id,\r\n              group: newObj.group,\r\n              // state: newObj.state,\r\n              maxDays: e.maxDays,\r\n              grade: e.grade,\r\n              option: e.option,\r\n              mode: newObj.mode,\r\n              roleId: e.roleId,\r\n              roleType: e.roleType })\r\n          })\r\n          // console.log('result:', result)\r\n          if (this.obj) {\r\n            this.$emit('dialogEditClose', result) // 编辑\r\n          } else {\r\n            this.$emit('dialogAddClose', result) // 添加\r\n          }\r\n        }\r\n      })\r\n    },\r\n    initData() {\r\n      if (this.obj) {\r\n        var thisObj = JSON.parse(JSON.stringify(this.obj))\r\n        this.ruleForm =\r\n          {\r\n            flowId: thisObj[0].flowId,\r\n            group: thisObj[0].group,\r\n            // state: thisObj[0].state,\r\n            mode: thisObj[0].mode\r\n          }\r\n        this.list = thisObj\r\n      }\r\n    },\r\n    dialogClose(data, type) {\r\n      if (type === 0) {\r\n        // 修改 角色 判断重复\r\n        if (data.roleId === 0) {\r\n          const _has = this.list.find(f => f.roleType === data.roleType && f.id !== data.id)\r\n          if (_has) {\r\n            const roleType = this.dropDownData.roleTypeList.find(f => f.value === data.roleType).name\r\n            this.$alert(`【${roleType}】重复了`)\r\n            return false\r\n          }\r\n        }\r\n        if (data.roleId > 0) {\r\n          const _has = this.list.find(f => f.roleId === data.roleId && f.id !== data.id)\r\n          if (_has) {\r\n            const roleName = getObjectValue(this.dropDownData.roleList.find(f => f.id === data.roleId), 'name')\r\n            const roleType = getObjectValue(this.dropDownData.roleTypeList.find(f => f.value === data.roleType), 'name')\r\n            this.$alert(`【${roleType}】-【${roleName}】重复了`)\r\n            return false\r\n          }\r\n        }\r\n        this.list.splice(this.editFlowNodeIndex, 1, data)\r\n      }\r\n\r\n      if (type === 1) {\r\n        // 添加 角色 判断重复\r\n        if (data.roleId === 0) {\r\n          const _has = this.list.find(f => f.roleType === data.roleType)\r\n          if (_has) {\r\n            const roleType = this.dropDownData.roleTypeList.find(f => f.value === data.roleType).name\r\n            this.$alert(`选的【${roleType}】重复了`)\r\n            return false\r\n          }\r\n        }\r\n        if (data.roleId > 0) {\r\n          const _has = this.list.find(f => f.roleId === data.roleId)\r\n          if (_has) {\r\n            const roleName = getObjectValue(this.dropDownData.roleList.find(f => f.id === data.roleId), 'name')\r\n            const roleType = getObjectValue(this.dropDownData.roleTypeList.find(f => f.value === data.roleType), 'name')\r\n            this.$alert(`选的【${roleType}】-【${roleName}】重复了`)\r\n            return false\r\n          }\r\n        }\r\n\r\n        this.list.push(data)\r\n      }\r\n\r\n      this.dialogTableVisible = false\r\n    },\r\n    addNodeRole() {\r\n      this.flowNodeObj = null\r\n      this.editFlowNodeIndex = 0\r\n      this.dialogTableVisible = true\r\n    },\r\n    deleteFlowNode(index) {\r\n      this.list.splice(index, 1)\r\n    },\r\n    editFlowNode(index, row) {\r\n      this.editFlowNodeIndex = index\r\n      this.flowNodeObj = row\r\n      this.dialogTableVisible = true\r\n    }\r\n  }\r\n}\r\n",null]}