{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\components\\Flow\\flowDisplay.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\components\\Flow\\flowDisplay.vue","mtime":1635840233762},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n// 查看流程进度\r\nimport FlowDisplayAdd from './flowDisplayAdd'\r\nexport default {\r\n  name: 'FlowDisplay',\r\n  components: {\r\n    FlowDisplayAdd\r\n  },\r\n  props: {\r\n    billFlow: { type: Object, default: null },\r\n    isEdit: { type: Boolean, default: false } // 是否启用编辑\r\n  },\r\n  data() {\r\n    return {\r\n      stateList: [],\r\n      loading: false,\r\n      activeName: ['1'],\r\n      createUserName: '',\r\n      billFlowData: null,\r\n      dialogTableVisible: false,\r\n      dialogTitle: '编辑流程',\r\n      dialogWidth: '70%',\r\n      comName: 'FlowDisplayAdd',\r\n      formStateOption: []\r\n    }\r\n  },\r\n  computed: {\r\n    // 是否允许编辑\r\n    allowEdit() {\r\n      // 只有制单人 或者 当前审批人才能显示编辑流程的按钮 并且流程状态state>1<10000 审批中\r\n      if (this.billFlow.state < 1 || this.billFlow.state >= 10000) { return false }\r\n      if (this.billFlow.createUserId === this.$store.state.user.uid) { return true }\r\n      const arr = this.billFlow?.billFlowNode?.filter(f => f.isCurrentState && !f.isChecked) || []\r\n      if (arr.find(v => v.personId === this.$store.state.user.uid)) { return true }\r\n      return false\r\n    }\r\n  },\r\n  watch: {\r\n    /**\r\n     * 写这个是为了使得页面没有关闭从新打开另一个单子详情的时候审批组件的内容会刷新\r\n     */\r\n    billFlow() {\r\n      this.fetchData()\r\n    }\r\n\r\n  },\r\n  created() {\r\n  },\r\n  mounted() {\r\n    this.billFlowData = JSON.parse(JSON.stringify(this.billFlow))\r\n    this.fetchData()\r\n  },\r\n  methods: {\r\n    /**\r\n     * 这个方法要重写,\r\n     * 因为原来那个不符合现在的页面逻辑,\r\n     * 在已有页面不关闭的情况下,再次进入会在原来基础上增加\r\n     * 所以现在采用每次都新拼接一个再反向覆盖的方式\r\n     */\r\n    fetchData() {\r\n      const { form: { formState }, billFlowNode } = this.utils.easyDeepClone(this.billFlowData)\r\n      this.billFlowData.billFlowNode.forEach(fe => {\r\n        fe.personId = fe.personId || null\r\n      })\r\n      const newList = []\r\n      formState.forEach((e, i) => {\r\n        if (e.isFlowNode) {\r\n          if (e.isCheckup) {\r\n            e.stateNode = this.groupBy(billFlowNode.filter(f => f.state === e.value), item => [item.group])\r\n          }\r\n          newList.push(e)\r\n        }\r\n        if ((e.formStateOption || []).length > 0) {\r\n          // console.log('e.formStateOption:', e.formStateOption)\r\n          e.formStateOption.forEach(e0 => {\r\n            this.formStateOption.push({ ...e0 })\r\n          })\r\n        }\r\n      })\r\n      this.stateList = newList\r\n    },\r\n    groupBy(array, f) {\r\n      const groups = {}\r\n      array.forEach(function(o) {\r\n        const group = JSON.stringify(f(o))\r\n        groups[group] = groups[group] || []\r\n        groups[group].push(o)\r\n      })\r\n      return Object.keys(groups).map(function(group) { return groups[group] })\r\n    },\r\n    addChecker() {\r\n      this.dialogTitle = '编辑流程'\r\n      this.dialogTableVisible = true\r\n    },\r\n    dialogClose(bf) {\r\n      // 刷新流程数据\r\n      this.billFlowData = bf\r\n      this.stateList = []\r\n      this.dialogTableVisible = false\r\n      this.fetchData()\r\n      this.$parent.$refs.flowAttitude.fetchData() // 刷新 审批列表信息\r\n    }\r\n  }\r\n}\r\n",null]}