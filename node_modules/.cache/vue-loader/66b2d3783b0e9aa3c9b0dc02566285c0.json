{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\material\\components\\addMaterialCategoryProperty.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\material\\components\\addMaterialCategoryProperty.vue","mtime":1624071363317},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getAllMaterialProperty, addMaterialCategoryProperty, getMaterialCategoryPropertyByCategoryId } from '@/api/cggl/material'\r\nexport default {\r\n  name: 'AddMaterialCategoryProperty',\r\n  props: {\r\n    obj: {\r\n      type: Object,\r\n      default: null\r\n    },\r\n    organizationId: {\r\n      type: Number,\r\n      default: 0\r\n    }\r\n\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {},\r\n      list: null,\r\n      listLoading: false,\r\n      buttonLoading: false,\r\n      selectionItem: [],\r\n      rules: {\r\n        // propertyArray: [{ type: 'array', required: true, message: '请选择', trigger: 'change' }]\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchData()\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          if (this.selectionItem.length <= 0) {\r\n            this.$message.error('请选择属性')\r\n            return false\r\n          }\r\n          const postData = []\r\n          this.selectionItem.forEach(element => {\r\n            const row = {}\r\n            row.categoryId = this.obj.id\r\n            row.propertyId = element.propertyId\r\n            row.canInput = element.canInput\r\n            row.inUse = element.inUse\r\n            postData.push(row)\r\n          })\r\n          this.buttonLoading = true\r\n          addMaterialCategoryProperty(postData).then(response => {\r\n            this.$message(response.message)\r\n            this.buttonLoading = false\r\n            this.$emit('dialogClose')\r\n          }).catch(() => { this.buttonLoading = false })\r\n        }\r\n      })\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields()\r\n    },\r\n    fetchData() {\r\n      this.listLoading = true\r\n      new Promise((resolve, reject) => {\r\n        var postData = {}\r\n        postData.organizationId = this.organizationId\r\n        getAllMaterialProperty(postData).then(response => {\r\n          const data = []\r\n          response.data.forEach(ele => {\r\n            const row = {}\r\n            row.name = ele.name\r\n            row.inUse = true\r\n            row.canInput = true\r\n            row.propertyId = ele.id\r\n            data.push(row)\r\n          })\r\n          this.list = data\r\n          resolve(data)\r\n        })\r\n      }).then(res => {\r\n        getMaterialCategoryPropertyByCategoryId({ categoryId: this.obj.id }).then(response => {\r\n          response.data.forEach(ele => {\r\n            res.forEach(row => {\r\n              if (row.propertyId === ele.propertyId) {\r\n                row.inUse = ele.inUse\r\n                row.canInput = ele.canInput\r\n              }\r\n            })\r\n            this.$refs.selectTable.toggleRowSelection(res.find(item => item.propertyId === ele.propertyId))\r\n          })\r\n          this.listLoading = false\r\n        })\r\n      }).catch(() => { this.listLoading = false })\r\n    },\r\n    handleSelectionChange(val) {\r\n      this.selectionItem = val\r\n    }\r\n  }\r\n}\r\n",null]}