{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\task\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\task\\index.vue","mtime":1635216068755},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getCGTaskPaging } from '@/api/cggl/task'\r\nimport OrgSelect2 from '@/components/OrgSelect/index2'\r\n// import PlanFrame from './PlanFrame'\r\nimport { getPersonList } from '@/api/rsgl/person'\r\nimport SearchForm from '@/components/Other/searchForm'\r\nexport default {\r\n  name: 'Task',\r\n  components: {\r\n    // PlanFrame\r\n    OrgSelect2,\r\n    SearchForm\r\n  },\r\n  data() {\r\n    return {\r\n      list: null,\r\n      listLoading: false,\r\n      dialogTableVisible: false,\r\n      dialogTitle: '保存',\r\n      comName: 'TargetCostEdit',\r\n      total: 0,\r\n      currentPage: 1,\r\n      pageSize: this.utils.getPersonalSettings().pageSize,\r\n      planStateList: null,\r\n      planTypeList: null,\r\n      currentRow: null,\r\n      search: {\r\n        number: '',\r\n        orgIds: [],\r\n        states: [],\r\n        buyerIds: null,\r\n        // createStartDate: null,\r\n        // createEndDate: null,\r\n        createRange: [],\r\n        categoryName: ''\r\n      },\r\n      rules: {\r\n\r\n      },\r\n      formState: [],\r\n      personList: [],\r\n      loading: false\r\n    }\r\n  },\r\n  computed: {\r\n    getOrgList() {\r\n      return this.$store.state.user.info.orgList\r\n    }\r\n  },\r\n  activated() {\r\n    if (this.$route.params.refresh) {\r\n      this.fetchData()\r\n    }\r\n  },\r\n  mounted() {\r\n    this.formState = [{\r\n      value: 0,\r\n      name: '待确认'\r\n    }, {\r\n      value: -1,\r\n      name: '拒收'\r\n    }, {\r\n      value: 10000,\r\n      name: '已确认'\r\n    }]\r\n    this.fetchData()\r\n  },\r\n  methods: {\r\n    searchData(currentPage) {\r\n      this.currentPage = currentPage\r\n      this.fetchData()\r\n    },\r\n    fetchData() {\r\n      this.listLoading = true\r\n\r\n      var postData = {}\r\n      postData.currentPage = this.currentPage\r\n      postData.pageSize = this.pageSize\r\n      postData.number = this.search.number\r\n      postData.orgIds = this.search.orgIds\r\n      postData.states = this.search.states\r\n      postData.buyerIds = this.search.buyerIds\r\n      // postData.createStartDate = this.search.createStartDate\r\n      // postData.createEndDate = this.search.createEndDate\r\n      postData.createRange = this.search.createRange\r\n      postData.categoryName = this.search.categoryName\r\n      // postData.companyId = this.$store.state.user.selectOrgId\r\n\r\n      getCGTaskPaging(postData).then(response => {\r\n        const { data, count } = response\r\n        this.list = data\r\n        this.total = count\r\n        this.listLoading = false\r\n      })\r\n    },\r\n    dialogClose() {\r\n      this.dialogTableVisible = false\r\n      this.fetchData()\r\n    },\r\n    // handleAdd(row) {\r\n    //   this.$router.push({ name: 'TargetCostEdit', query: { refreshRouterName: this.$route.name }})\r\n    // },\r\n    taskDetail(row) {\r\n      var isCheck = false\r\n      if (row.state === 10000) { isCheck = true }\r\n      this.$router.push({ name: 'TaskDetail', query: { id: row.id, refreshRouterName: this.$route.name, tab: 'detail' }, params: { id: row.id, isCheck: isCheck }})\r\n    },\r\n    priceListEdit(row) {\r\n      // console.log('this.$route.name:', this.$route.name)\r\n      this.$router.push({ name: 'QuotationAdd', query: { id: row.id, refreshRouterName: this.$route.name, tab: 'edit' }, params: { id: row.id }})\r\n    },\r\n    sizeChange(val) {\r\n      this.pageSize = val\r\n      this.fetchData()\r\n    },\r\n    getRemotePerson(query) {\r\n      query = query.trim()\r\n      if (query !== '') {\r\n        this.loading = true\r\n        setTimeout(() => {\r\n          getPersonList().then(response => {\r\n            this.personList = response.data\r\n            this.loading = false\r\n          })\r\n        }, 200)\r\n      } else {\r\n        this.personList = []\r\n      }\r\n    }\r\n  }\r\n}\r\n",null]}