{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\htly\\ProjectCompleteManage\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\htly\\ProjectCompleteManage\\edit.vue","mtime":1633684104557},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n// import TreeSelect from '@/components/SearchBar/form/OrgSelect'\r\nimport FlowSelect from '@/components/Flow/flowSelect'\r\nimport MyForm from '@/components/MyForm'\r\n// import { validate } from '@/utils/validate'\r\nimport { GetBillFlow, GetProjectCompleteManageById, InitProjectCompleteManage, AddProjectCompleteManage, PutProjectCompleteManage, DeleteProjectCompleteManage } from '@/api/xmgl/ProjectCompleteManage.js'\r\nimport { getProjectById } from '@/api/xmgl/project.js'\r\n\r\nexport default {\r\n  name: 'ProjectCompleteManageEdit',\r\n  components: {\r\n    FlowSelect,\r\n    MyForm\r\n  },\r\n  data() {\r\n    return {\r\n      size: 'mini',\r\n      inputPlaceholder: '请输入',\r\n      selectPlaceholder: '请选择',\r\n      autoPlaceholder: '自动带出',\r\n      active: 1, // 提交进度 1: 编辑信息 2: 编辑审批流程\r\n      firstForm: {\r\n        projectId: null, // 项目id\r\n        companyId: 2, // 中南装饰的\r\n        id: 0, // 新增为0\r\n        number: '', // 新增时,编号后端生成\r\n        orgId: '', // 部门id\r\n        orgStr: '', // 部门名称\r\n        orderType: 1, // 指令类型\r\n        completDate: '', // 竣工验收日期\r\n        remark: '', // 备注\r\n        fileList: [], // 附件\r\n        state: 0, // 状态\r\n        billFlow: [] // 单据流程\r\n      },\r\n      firstRules: {\r\n        projectId: [\r\n          { required: true, message: '请选择项目' }\r\n        ],\r\n        completDate: [\r\n          { required: true, message: '请选择竣工验收日期' }\r\n        ],\r\n        orderType: [\r\n          { required: true, message: '请选择指令类型' }\r\n        ]\r\n      },\r\n      filter: {\r\n        orderTypeList: [] // 指令类型list\r\n      },\r\n      project: {}\r\n    }\r\n  },\r\n  computed: {\r\n    title() {\r\n      const { active } = this\r\n      return active === 2 ? '审批流程' : '项目竣工'\r\n    },\r\n    /**\r\n     * 计算质保完成日期\r\n     * 质保完成日期=竣工验收日期+质保期\r\n     */\r\n    warrantyFinishDate() {\r\n      const { project: { warrantyDays }, firstForm: { completDate }} = this\r\n      return completDate ? this.$moment(completDate).add(warrantyDays || 0, 'days').format('YYYY-MM-DD') : ''\r\n    },\r\n    /**\r\n     * 处理form表单的数据\r\n     */\r\n    formNodeData() {\r\n      const {\r\n        project: {\r\n          orgName,\r\n          area,\r\n          contractDuration,\r\n          contractStartDate,\r\n          contractFinishDate,\r\n          realStartDate,\r\n          computeFinishDate,\r\n          warrantyDays\r\n        },\r\n        inputPlaceholder,\r\n        selectPlaceholder,\r\n        autoPlaceholder,\r\n        warrantyFinishDate,\r\n        filter: {\r\n          orderTypeList\r\n        }\r\n      } = this\r\n      return [\r\n        { label: '编码:', monopolize: true, keyword: 'number', props: { disabled: true, placeholder: '系统自动生成' }},\r\n        { label: '项目:', keyword: 'projectId', component: 'ProjectSelect', props: { placeholder: selectPlaceholder, projectState: [1] }},\r\n        { label: '组织机构:', value: orgName, props: { disabled: true, placeholder: '请选择有项目的部门' }},\r\n        { label: '竣工验收日期:', keyword: 'completDate', component: 'el-date-picker', props: { type: 'date', placeholder: selectPlaceholder, valueFormat: 'yyyy-MM-dd' }},\r\n        { label: '指令类型:', keyword: 'orderType', component: 'Select', props: { propsLabel: 'name', options: orderTypeList, placeholder: selectPlaceholder }},\r\n        { label: '建筑面积:', value: area, component: 'Input', props: { disabled: true, placeholder: autoPlaceholder, unit: '㎡' }},\r\n        { label: '合同工期:', value: contractDuration, props: { disabled: true, placeholder: autoPlaceholder }},\r\n        { label: '合同开工日期:', value: contractStartDate, props: { disabled: true, placeholder: autoPlaceholder }},\r\n        { label: '合同竣工日期:', value: contractFinishDate, props: { disabled: true, placeholder: autoPlaceholder }},\r\n        { label: '开工日期说明:', value: contractStartDate, monopolize: true, props: { disabled: true, placeholder: autoPlaceholder }},\r\n        { label: '实际开工日期:', value: realStartDate, props: { disabled: true, placeholder: autoPlaceholder }},\r\n        { label: '计算竣工日期:', value: computeFinishDate, props: { disabled: true, placeholder: autoPlaceholder }},\r\n        { label: '质保完成日期:', value: warrantyFinishDate, monopolize: true, props: { disabled: true, placeholder: autoPlaceholder }},\r\n        { label: '质保期:', value: warrantyDays, monopolize: true, props: { disabled: true, placeholder: autoPlaceholder }},\r\n        { label: '备注:', keyword: 'remark', monopolize: true, props: { placeholder: inputPlaceholder, type: 'textarea' }},\r\n        { label: '附件:', monopolize: true, keyword: 'fileList', component: 'UpFile', width: '100%', props: { isUpfile: true, isDelete: true }}\r\n      ]\r\n    }\r\n  },\r\n  beforeRouteEnter(to, from, next) {\r\n    next(vm => {\r\n      vm.initSelect()\r\n      const newId = vm.$route.query.id\r\n      const oldId = vm.firstForm.id\r\n      if (newId && newId !== oldId) {\r\n      // 说明是打开另一个单子的编辑页面\r\n        vm.firstForm.id = newId\r\n        vm.initDataById(newId)\r\n        vm.active = 1\r\n      } else if (!newId && oldId) {\r\n        // 说明是打开一个新建页面\r\n        // 将data数据初始成定义时的状态\r\n        Object.assign(vm.$data, vm.$options.data())\r\n        vm.$nextTick(() => {\r\n          vm.$refs.firstForm.resetFields()\r\n        })\r\n      }\r\n    })\r\n  },\r\n  methods: {\r\n    /**\r\n     * 处理项目选择器选择事件\r\n     */\r\n    handelProjectSelect(val) {\r\n      Object.assign(this.firstForm, {\r\n        orgId: val.orgId,\r\n        companyId: val.companyId\r\n      })\r\n      this.getProjectMessage()\r\n    },\r\n    /**\r\n     * @description: 初始化选项框数据\r\n     */\r\n    initSelect() {\r\n      InitProjectCompleteManage().then(({ orderTypeList }) => {\r\n        this.filter.orderTypeList = orderTypeList\r\n      })\r\n    },\r\n    /**\r\n     * @description: 根据id获取数据\r\n     */\r\n    initDataById(id) {\r\n      GetProjectCompleteManageById({ id }).then(({ data, billFlowData }) => {\r\n        Object.keys(this.firstForm).forEach(key => {\r\n          this.firstForm[key] = data[key] || this.firstForm[key]\r\n        })\r\n        Object.assign(this.firstForm, {\r\n          fileList: data.upFile,\r\n          billFlow: billFlowData,\r\n          completDate: this.$moment(data.completDate).format('YYYY-MM-DD')\r\n        })\r\n        this.getProjectMessage()\r\n      })\r\n    },\r\n    /**\r\n     * 根据id获取项目信息\r\n     */\r\n    getProjectMessage() {\r\n      const req = {\r\n        id: this.firstForm.projectId\r\n      }\r\n      const formatDate = date => date ? this.$moment(date).format('YYYY-MM-DD') : ''\r\n      getProjectById(req).then(({ data }) => {\r\n        this.project = {\r\n          ...data,\r\n          orgName: data.organization.name,\r\n          contractStartDate: formatDate(data.contractStartDate),\r\n          contractFinishDate: formatDate(data.contractFinishDate),\r\n          realStartDate: formatDate(data.realStartDate),\r\n          computeFinishDate: formatDate(data.computeFinishDate)\r\n        }\r\n      })\r\n    },\r\n    getBillFlow() {\r\n      // 获取流程数据\r\n      const { state, billFlow } = this.firstForm\r\n      const req = {\r\n        ...this.firstForm,\r\n        state: state || 0\r\n      }\r\n      if (billFlow) req.billFlowId = billFlow.id\r\n      delete req.billFlow\r\n      GetBillFlow(req).then(({ data, success, message }) => {\r\n        if (success) {\r\n          this.firstForm.billFlow = data.billFlow\r\n          this.setActive(2)\r\n        } else {\r\n          this.$message.error(message)\r\n        }\r\n      })\r\n    },\r\n    /**\r\n     * 修改填报进度\r\n     */\r\n    setActive(active) {\r\n      this.active = active\r\n    },\r\n    /**\r\n     * 下一步\r\n     */\r\n    nextStep(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          this.getBillFlow()\r\n        }\r\n      })\r\n    },\r\n    // 作废\r\n    invalidForm() {\r\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        return DeleteProjectCompleteManage({ id: this.firstForm.id })\r\n      }).then(() => {\r\n        this.$message.success('操作成功')\r\n        this.back()\r\n      })\r\n    },\r\n    /**\r\n     * 提交表单\r\n     * @param {Number} state 提交类型，0：保存；1：提交\r\n     */\r\n    submitForm(state) {\r\n      const req = {\r\n        ...this.firstForm,\r\n        state\r\n      }\r\n      delete req.number\r\n      delete req.orgStr\r\n      if (this.firstForm.billFlow) {\r\n        // 获取流程组件中的数据\r\n        const billFlow = this.$refs.flowSelect.getBillFlow()\r\n        if (!billFlow) {\r\n          return false\r\n        }\r\n        req.billFlow = billFlow\r\n      } else {\r\n        this.$message.error('流程数据不能为空')\r\n        return\r\n      }\r\n      if (req.id) {\r\n        PutProjectCompleteManage(req).then(res => {\r\n          this.$message.success('保存成功')\r\n          this.back()\r\n        })\r\n      } else {\r\n        AddProjectCompleteManage(req).then(() => {\r\n          this.$message.success('提交成功')\r\n          this.back()\r\n        })\r\n      }\r\n    },\r\n    /**\r\n     * 返回上一页，并关闭当前页\r\n     */\r\n    back() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    }\r\n  }\r\n}\r\n",null]}