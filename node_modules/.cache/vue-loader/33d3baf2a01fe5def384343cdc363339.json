{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\components\\Flow\\flowDisplayAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\components\\Flow\\flowDisplayAdd.vue","mtime":1635749455597},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { addBillFlowNodes } from '@/api/xtgl/billFlow'\r\nimport { uuid } from '@/utils/index'\r\nimport SelectPerson from '@/components/Other/selectPerson'\r\nexport default {\r\n  name: 'FlowDisplayAdd1',\r\n  components: {\r\n    SelectPerson\r\n  },\r\n  props: {\r\n    billFlow: { type: Object, default: null }\r\n  },\r\n  data() {\r\n    return {\r\n      stateList: [],\r\n      loading: false,\r\n      createUserName: '',\r\n      billFlowData: null,\r\n      state: null,\r\n      group: null,\r\n      mode: null,\r\n      isCurrentState: false,\r\n      temp: {\r\n        keyId: null, // 添加流程节点，页面上的唯一标识\r\n        billFlowId: 0,\r\n        // checkupDate: null,\r\n        // checkupPersonId: null,\r\n        //   createDate: null,\r\n        createUserId: null,\r\n        //   createUserName: null,\r\n        group: 100,\r\n        id: 0,\r\n        isAutoChecked: false,\r\n        isChecked: false,\r\n        isCurrentState: false,\r\n        isFixedNode: true,\r\n        maxDays: 0,\r\n        mode: 1,\r\n        nodeType: 1, // 1 新增节点\r\n        option: 0,\r\n        orgId: 0, // ?\r\n        person: null,\r\n        personId: null,\r\n        personList: null,\r\n        receiveDate: null,\r\n        remark: null,\r\n        //   role: null,\r\n        roleId: 0,\r\n        roleType: 3,\r\n        state: 1\r\n        //  userList: []\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    getUid() {\r\n      return this.$store.state.user.info.uid\r\n    }\r\n  },\r\n  created() {\r\n  },\r\n  mounted() {\r\n    // console.log('flowDisplayAdd mounted:this.billFlow:', this.billFlow)\r\n    this.billFlowData = JSON.parse(JSON.stringify(this.billFlow))\r\n    this.fetchData()\r\n  },\r\n  methods: {\r\n    fetchData() {\r\n      this.createUserName = this.billFlowData.createUserName\r\n      this.billFlowData.billFlowNode.forEach(fe => {\r\n        fe.personId = fe.personId || null\r\n      })\r\n      this.billFlowData.form.formState.forEach((e, i) => {\r\n        if (e.isFlowNode) {\r\n          if (e.isCheckup) {\r\n            e.stateNode = this.groupBy(this.billFlowData.billFlowNode.filter(f => f.state === e.value), function(item) { return [item.group] })\r\n          }\r\n          this.stateList.push(e)\r\n        }\r\n      })\r\n    },\r\n    groupBy(array, f) {\r\n      const groups = {}\r\n      array.forEach(function(o) {\r\n        const group = JSON.stringify(f(o))\r\n        groups[group] = groups[group] || []\r\n        groups[group].push(o)\r\n      })\r\n      return Object.keys(groups).map(function(group) { return groups[group] })\r\n    },\r\n    addChecker(item1, index, index1) {\r\n      this.group = item1[0].group\r\n      this.state = item1[0].state\r\n      this.isCurrentState = item1[0].isCurrentState\r\n      this.mode = item1[0].mode\r\n\r\n      this.$refs.personRef.openDialog()\r\n    },\r\n    // 添加完成关闭后执行的\r\n    getPersons(personList) {\r\n      const temp = JSON.parse(JSON.stringify(this.temp))\r\n      // 设置group\r\n      temp.keyId = uuid\r\n      temp.createUserId = this.getUid\r\n      temp.group = this.group\r\n      temp.state = this.state\r\n      temp.personId = personList[0].id\r\n      temp.person = personList[0]\r\n      temp.mode = this.mode\r\n      temp.billFlowId = this.billFlow.id\r\n      temp.isCurrentState = this.isCurrentState\r\n\r\n      var sameGroup = this.billFlowData.billFlowNode.filter(f => f.state === temp.state && f.group === temp.group)\r\n      if (sameGroup) {\r\n        var haveSameGroupNode = sameGroup.map(m => m.personId).includes(temp.personId)\r\n        if (haveSameGroupNode) {\r\n          this.$message('同一个组中，不能添加相同的审核人')\r\n          return\r\n        }\r\n      }\r\n      this.billFlowData.billFlowNode.push(temp)\r\n      this.billFlowData.billFlowNode.sort(function(a, b) { return a.group - b.group })\r\n      this.stateList = []\r\n      this.fetchData()\r\n    },\r\n    addBillFlowNode(item, index1) {\r\n      // console.log('addBillFlowNode')\r\n      const group1 = item[index1][0].group // 小 例如：group:200\r\n      const group2 = item[index1 + 1][0].group // 大 例如：group:210\r\n\r\n      this.group = Math.round((group2 + group1) / 2) // 四舍五入中间值：205\r\n      this.state = item[index1 + 1][0].state\r\n      this.mode = item[index1 + 1][0].mode\r\n      this.isCurrentState = false\r\n\r\n      this.$refs.personRef.openDialog()\r\n    },\r\n    addBillFlowNode2(item, index) {\r\n      if (index === 0) {\r\n        this.$alert('此位置不允许添加节点')\r\n        return\r\n      }\r\n      // 获取是审核表单状态的 formState\r\n      const filterFormState = this.stateList.filter(f => f.inUse && f.isCheckup && f.isFlowNode && f.stateNode.length > 0)\r\n      // 当前审批节点\r\n      const currentFormState = this.billFlowData.billFlowNode.filter(f => f.isCurrentState)\r\n      if (!currentFormState) {\r\n        this.$alert('数据异常，流程中没有当前审批节点')\r\n        return\r\n      }\r\n\r\n      if (index < filterFormState.length) {\r\n        // 点击2个审核节点之间的箭头\r\n        const formState_A = [...filterFormState[index - 1].stateNode].reverse()[0][0]\r\n        const formState_B = filterFormState[index].stateNode[0][0]\r\n        const smallGroup = formState_A.group // 200\r\n        const largeGroup = formState_B.group // 300\r\n        var calGroup = (largeGroup + smallGroup) / 2 // 250\r\n\r\n        if (currentFormState[0] > calGroup) {\r\n          this.$alert('当前审批节点前面不允许添加审批人')\r\n          return\r\n        }\r\n        this.group = Math.round(calGroup)\r\n        this.state = formState_B.state\r\n        this.mode = formState_B.mode\r\n      } else if (index === filterFormState.length) {\r\n        // 点击的是最后一个箭头\r\n        if (item.stateNode.length > 0) {\r\n          const lastFormState = [...filterFormState[index - 1].stateNode].reverse()[0][0]\r\n          this.group = lastFormState.group + 100\r\n          this.state = lastFormState.state\r\n          this.mode = lastFormState.mode\r\n        }\r\n      }\r\n\r\n      this.isCurrentState = false\r\n      if (item.stateNode.length > 0) {\r\n        this.$refs.personRef.openDialog()\r\n      }\r\n    },\r\n    save() {\r\n      const bfn = JSON.parse(JSON.stringify(this.billFlowData.billFlowNode))\r\n      // const arr = bfn.filter(f => f.id === 0)\r\n      // if (arr) {\r\n      bfn.forEach(e => {\r\n        delete e.person\r\n        delete e.personList\r\n        delete e.keyId\r\n        e.remark = '编辑时添加'\r\n      })\r\n      this.$confirm('是否确定修改该流程', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.loading = true\r\n        addBillFlowNodes(bfn).then(res => {\r\n          const { data, message } = res\r\n          this.loading = false\r\n          this.$emit('dialogClose', data)\r\n          // this.billFlowData = JSON.parse(JSON.stringify(data))\r\n          // this.fetchData()\r\n          this.$message.success(message)\r\n        }).catch(() => { this.loading = false })\r\n      }).catch(() => {})\r\n      // }\r\n    },\r\n    delBillFlowNode(item1, item2) {\r\n      if (item2.isChecked) {\r\n        this.$message('审批过的不能删除哦！')\r\n        return\r\n      }\r\n      if (item2.nodeType === 0) {\r\n        this.$message('只有手动创建的才能删除')\r\n        return\r\n      }\r\n      if (item2.createUserId !== this.getUid) {\r\n        this.$message('不是创建人，无法删除哦')\r\n        return\r\n      }\r\n      let flag = false\r\n      if (item2.isCurrentState) {\r\n        const noCheckedCount = item1.filter(f => f.isCurrentState && !f.isChecked)\r\n        if (noCheckedCount.length === 1) {\r\n          if (noCheckedCount[0].personId === item2.personId) {\r\n            flag = true\r\n          }\r\n        }\r\n      }\r\n      if (flag) {\r\n        // 审批节点最后一个审批人不能被删除，删除就数据错误，不能审批了。\r\n        this.$message('审批节点最后一个审批人不能被删除')\r\n        return\r\n      }\r\n\r\n      if (item2.id > 0) { // 从数据库获取的数据\r\n        const findIndex = this.billFlowData.billFlowNode.findIndex(f => f.id === item2.id)\r\n        this.billFlowData.billFlowNode.splice(findIndex, 1)\r\n      } else {\r\n        this.billFlowData.billFlowNode.splice(this.billFlowData.billFlowNode.findIndex(f => f.keyId === item2.keyId), 1)\r\n      }\r\n\r\n      this.billFlowData.billFlowNode.sort(function(a, b) { return a.group - b.group })\r\n      this.stateList = []\r\n      this.fetchData()\r\n      // console.log('删除后的对象stateList：', this.stateList)\r\n    }\r\n  }\r\n}\r\n",null]}