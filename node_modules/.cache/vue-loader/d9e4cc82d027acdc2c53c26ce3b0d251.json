{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\ywgl\\SocialResource\\relation.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\ywgl\\SocialResource\\relation.vue","mtime":1635820476220},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getRelationGraph } from '@/api/ywgl/socialResource.js'\r\nimport RelationGraph from 'relation-graph'\r\nexport default {\r\n  name: 'Relation',\r\n  components: { RelationGraph },\r\n  data() {\r\n    return {\r\n      isShowNodeTipsPanel: false,\r\n      nodeMenuPanelPosition: { x: 0, y: 0 },\r\n      currentNode: {},\r\n      graphOptions: {\r\n        defaultNodeBorderWidth: 0,\r\n        disableZoom: true,\r\n        defaultNodeColor: '#409EFF',\r\n        allowSwitchLineShape: true,\r\n        allowSwitchJunctionPoint: true,\r\n        defaultJunctionPoint: 'border',\r\n        'layouts': [\r\n          {\r\n            'label': '自动布局',\r\n            'layoutName': 'force',\r\n            'layoutClassName': 'seeks-layout-force'\r\n          }\r\n        ]\r\n        // 这里可以参考\"Graph 图谱\"中的参数进行设置\r\n      },\r\n      rootId: 0,\r\n      level: 1\r\n    }\r\n  },\r\n  mounted() {\r\n    this.rootId = this.$route.query.id\r\n    this.showSeeksGraph(this.rootId)\r\n  },\r\n  methods: {\r\n    showSeeksGraph(rootId) {\r\n      getRelationGraph({ id: rootId, level: this.level }).then(({ nodes, links }) => {\r\n        var __graph_json_data = {\r\n          rootId: rootId.toString(),\r\n          nodes: nodes,\r\n          links: links\r\n        }\r\n        // 以上数据中的node和link可以参考\"Node节点\"和\"Link关系\"中的参数进行配置\r\n        this.$refs.seeksRelationGraph.setJsonData(__graph_json_data, (seeksRGGraph) => {\r\n          // Called when the relation-graph is completed\r\n        })\r\n      })\r\n    },\r\n    onNodeClick(nodeObject, $event) {\r\n      this.rootId = nodeObject.data.id\r\n      this.showSeeksGraph(nodeObject.data.id)\r\n    },\r\n    onLineClick(lineObject, $event) {\r\n      console.log('onLineClick:', lineObject)\r\n    },\r\n    onLevelOptionChanged() {\r\n      this.showSeeksGraph(this.rootId)\r\n    },\r\n    showNodeTips(nodeObject, $event) {\r\n      this.currentNode = nodeObject\r\n      var _base_position = this.$refs.myRelation.getBoundingClientRect()\r\n      this.isShowNodeTipsPanel = true\r\n      this.nodeMenuPanelPosition.x = $event.clientX - _base_position.x + 10\r\n      this.nodeMenuPanelPosition.y = $event.clientY - _base_position.y + 10\r\n    },\r\n    hideNodeTips(nodeObject, $event) {\r\n      this.isShowNodeTipsPanel = false\r\n    }\r\n  }\r\n}\r\n",null]}