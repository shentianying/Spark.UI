{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\htly\\kggl\\projectStartManageEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\htly\\kggl\\projectStartManageEdit.vue","mtime":1629765113745},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { putTechnicalBid, addTechnicalBid, getTechnicalBidEditInit, getTechnicalBidById, getBillFlow, deleteTechnicalBid } from '@/api/ywgl/technicalBid'\r\nimport UpFile from '@/components/UpLoad/UpFile'\r\nimport FlowSelect from '@/components/Flow/flowSelect'\r\nimport SelectProject from '@/components/Other/xmgl/selectProject'\r\nimport OrgSelect2 from '@/components/OrgSelect/index2'\r\nexport default {\r\n  name: 'ProjectStartManageEdit',\r\n  components: {\r\n    FlowSelect,\r\n    UpFile,\r\n    OrgSelect2,\r\n    SelectProject\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        id: 0,\r\n        number: '',\r\n        orgId: null,\r\n        companyId: this.$store.state.user.selectOrgId,\r\n        name: '',\r\n        remark: '',\r\n        state: 0,\r\n        billFlowId: 0,\r\n        fileList: []\r\n      },\r\n      startManageId: null,\r\n      projectName: '',\r\n\r\n      keyOrg: 0,\r\n      orgList: [],\r\n      startTypeList: [],\r\n\r\n      attitudePara: null,\r\n      loadFlow: false,\r\n      billFlow: null,\r\n      isCheck: false,\r\n\r\n      active: 0,\r\n      loading: false,\r\n      rules: {\r\n        orgId: [{ required: true, message: '请输入', trigger: 'change' }],\r\n        projectId: [{ required: true, message: '请选择', trigger: 'blur' }],\r\n        startDate: [{ required: true, message: '请选择', trigger: 'blur' }],\r\n        startType: [{ required: true, message: '请选择', trigger: 'blur' }],\r\n        orderCompany: [{ required: true, message: '请输入', trigger: 'blur' }],\r\n        contractDuration: [{ required: true, message: '请输入', trigger: 'blur' }]\r\n      }\r\n    }\r\n  },\r\n  activated() {\r\n    if (this.$route.params.id) {\r\n      this.ruleForm.orgId = null // 刷新 org 列表\r\n      this.initData()\r\n      this.refreshRouterName = this.$route.params.refreshRouterName\r\n    }\r\n  },\r\n  mounted() {\r\n    if (!this.$route.params.id) {\r\n      this.initData()\r\n      this.activate = true\r\n    }\r\n  },\r\n  methods: {\r\n    submitForm(formName, state) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n          let tempIds = []\r\n          if (newObj.fileList.length > 0) {\r\n            tempIds = newObj.fileList.map(m => {\r\n              return { id: m.id, addFlag: m.addFlag }\r\n            })\r\n          } else {\r\n            if (state === 1) {\r\n              this.$message('必须上传附件!')\r\n              return\r\n            }\r\n          }\r\n          newObj.fileList = tempIds\r\n          newObj.state = state\r\n\r\n          if (this.billFlow) {\r\n            // 获取流程组件中的数据\r\n            const billFlow = this.$refs.flowSelect.getBillFlow()\r\n            if (!billFlow) {\r\n              return false\r\n            }\r\n            newObj.billFlow = billFlow\r\n          } else {\r\n            this.$message('流程数据不能为空')\r\n            return\r\n          }\r\n          this.loading = true\r\n\r\n          if (this.technicalBidId) {\r\n            putTechnicalBid(newObj).then(response => {\r\n              if (response.errorMsg) {\r\n              // 验证错误\r\n                this.$alert(`${response.errorMsg.replace(/；/g, '；<br />')}`,\r\n                  { dangerouslyUseHTMLString: true })\r\n                return\r\n              }\r\n              this.$message(response.message)\r\n              this.loading = false\r\n              this.closeThePage()\r\n            }).catch(() => {\r\n              this.loading = false\r\n              this.active = 0\r\n            })\r\n          } else {\r\n            addTechnicalBid(newObj).then(response => {\r\n              if (response.errorMsg) {\r\n                // 验证错误\r\n                this.$alert(`${response.errorMsg.replace(/；/g, '；<br />')}`,\r\n                  { dangerouslyUseHTMLString: true })\r\n                return\r\n              }\r\n              this.$message(response.message)\r\n              this.loading = false\r\n              this.closeThePage()\r\n              // this.setData(response)\r\n            }).catch(() => {\r\n              this.loading = false\r\n              this.active = 0\r\n            })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    initData() {\r\n      // 有参数id 就是编辑\r\n      if (this.$route.query.id) {\r\n        this.startManageId = this.$route.query.id\r\n      }\r\n      new Promise((resolve, reject) => {\r\n        getTechnicalBidEditInit().then(response => {\r\n          const { orgList, result1 } = response\r\n          this.orgList = orgList\r\n          this.startTypeList = result1\r\n          this.keyOrg += 1\r\n          resolve(orgList)\r\n        })\r\n      }).then(orgList => {\r\n        if (this.startManageId) {\r\n          getTechnicalBidById({ id: this.startManageId }).then(response => {\r\n            const { data } = response\r\n            this.ruleForm = data\r\n            this.keyOrg += 1\r\n            this.ruleForm.fileList = data.upFile\r\n          })\r\n        }\r\n      }).catch(() => {\r\n        this.$message.error('信息错误')\r\n      })\r\n    },\r\n    getDynamicFlow(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n\r\n          getBillFlow(newObj).then(response => {\r\n            if (response.success) {\r\n              this.billFlow = response.data.billFlow\r\n              this.active = 1\r\n            } else {\r\n              this.$message(response.message)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    previous() {\r\n      // 上一步\r\n      this.active--\r\n      this.billFlow = null\r\n    },\r\n    cancel() {\r\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.active = 2\r\n        this.loading = true\r\n        deleteTechnicalBid({ id: this.ruleForm.id }).then(response => {\r\n          this.$message(response.message)\r\n          this.loading = false\r\n          this.closeThePage()\r\n        })\r\n      }).catch(() => {})\r\n    },\r\n    closeThePage() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    },\r\n    selectProject() {\r\n      this.$refs.projectRef.openDialog()\r\n    },\r\n    getProject(data) {\r\n      if (data.length > 0) {\r\n        this.ruleForm.projectId = data[0].id\r\n        this.projectName = data[0].name\r\n      }\r\n    }\r\n  }\r\n}\r\n",null]}