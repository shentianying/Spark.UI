{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\fpgl\\EntertainmentPlan\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\fpgl\\EntertainmentPlan\\edit.vue","mtime":1635839321801},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport SocialResourceSelect from '@/components/SearchBar/form/SocialResourceSelect'\r\nimport FlowSelect from '@/components/Flow/flowSelect'\r\nimport MyForm from '@/components/MyForm'\r\nimport { validate } from '@/utils/validate'\r\nimport TableEx from '@/components/TableEx'\r\nimport { GetBillFlow, PutEntertainmentPlan, AddEntertainmentPlan, GetDepositById, DeleteEntertainmentPlan } from '@/api/cwgl/EntertainmentPlan'\r\n\r\nexport default {\r\n  name: 'EntertainmentPlanEdit',\r\n  components: {\r\n    MyForm,\r\n    TableEx,\r\n    FlowSelect\r\n  },\r\n  data() {\r\n    return {\r\n      addbtnLoad: false, // 提交按钮loading状态\r\n      size: 'mini',\r\n      inputPlaceholder: '请输入',\r\n      selectPlaceholder: '请选择',\r\n      active: 1, // 提交进度 1: 编辑信息 2: 编辑审批流程\r\n      firstForm: {\r\n        id: 0, // 新增为0\r\n        companyId: '', // 公司id\r\n        number: '', // 新增时,编号后端生成\r\n        orgId: '', // 部门id\r\n        personId: '', // 人员id\r\n        date: '', // 日期\r\n        bussinessInfoId: '', // 业务工程信息编号\r\n        isBussinessFee: 0, // 是否是项目营销费用\r\n        applicationAmount: '', // 申请金额\r\n        entertainmentPlanDetails: [], // 招待费计划详细数据列表\r\n        summary: '', // 用途\r\n        remark: '', // 备注\r\n        // fileList: [], // 附件\r\n        state: 0, // 状态\r\n        billFlow: null // 单据流程\r\n      },\r\n      firstRules: {\r\n        orgId: [\r\n          { required: true, message: '请选择部门', trigger: 'change' }\r\n        ],\r\n        personId: [\r\n          { required: true, message: '请输入姓名', trigger: 'change' }\r\n        ],\r\n        summary: [\r\n          { required: true, message: '请输入事由', trigger: 'change' }\r\n        ],\r\n        isBussinessFee: [\r\n          { required: true, message: '请选择是否为项目营销费用', trigger: 'change' }\r\n        ],\r\n        date: [\r\n          { required: true, message: '请选择日期', trigger: 'change' }\r\n        ],\r\n        applicationAmount: [\r\n          { required: true, message: '请输入金额', trigger: 'change' },\r\n          { validator: validate.money, message: '金额格式不正确', trigger: 'change' },\r\n          { validator: validate.max_amount, message: '超过所能存储的最大金额', trigger: 'change' }\r\n        ]\r\n      },\r\n      filter: {\r\n        isBussinessFeeList: [\r\n          { label: '否', value: 0 },\r\n          { label: '是', value: 1 }\r\n        ]\r\n      },\r\n      bussinessInfo: { // 选择的工程信息相关\r\n        number: ''\r\n      },\r\n\r\n      entertainmentPlantable: {\r\n        columns: [\r\n          { label: '序号',\r\n            minWidth: '80', // 最小宽度\r\n            format: (val, format, row, column, scoped) => `0${scoped.$index + 1}`\r\n          },\r\n          {\r\n            render: (h) => {\r\n              return (\r\n                <el-table-column minWidth='180' align='center' label='姓名' scopedSlots={{ default: ({ row }) => {\r\n                  if (this.firstForm.state === 0) {\r\n                    return (<SocialResourceSelect\r\n                      value={row.socialResourceId}\r\n                      vModel={row.socialResourceId}\r\n                      onSelect={\r\n                        (val) => {\r\n                          row.unit = val[0].company\r\n                          row.position = val[0].position\r\n                          row.name = val[0].name\r\n                        }\r\n                      }\r\n                      onChange={\r\n                        (val) => {\r\n                          if (val === '') {\r\n                            row.unit = ''\r\n                            row.position = ''\r\n                            row.name = ''\r\n                          }\r\n                        }\r\n                      } size='mini'\r\n                      placeholder='输入关键字搜索'/>\r\n                    )\r\n                  } else {\r\n                    return row.name\r\n                  }\r\n                } }} />\r\n              )\r\n            }\r\n          },\r\n          {\r\n            label: '单位',\r\n            prop: 'unit',\r\n            minWidth: '180'\r\n          },\r\n          {\r\n            label: '职务',\r\n            prop: 'position',\r\n            minWidth: '180'\r\n          },\r\n          {\r\n            render: (h) => {\r\n              return (\r\n                <el-table-column minWidth='120' align='center' label='金额' scopedSlots={{ default: ({ row }) => {\r\n                  if (this.firstForm.state === 0) {\r\n                    return (<el-input\r\n                      vModel={row.applicationAmount}\r\n                      size='mini'\r\n                      onInput={ ($event) => {\r\n                        row.applicationAmount = $event.replace(/[^\\d.]/g, '')\r\n                      } }\r\n                      onBlur={this.calculateAmount}\r\n                      placeholder='输入金额'/>\r\n                    )\r\n                  } else {\r\n                    return row.applicationAmount\r\n                  }\r\n                } }} />\r\n              )\r\n            }\r\n          },\r\n          {\r\n            // label: '备注',\r\n            // prop: 'remark',\r\n            // minWidth: '180'\r\n            render: (h) => {\r\n              return (\r\n                <el-table-column minWidth='120' align='center' label='备注' scopedSlots={{ default: ({ row }) => {\r\n                  if (this.firstForm.state === 0) {\r\n                    return (<el-input\r\n                      vModel={row.remark}\r\n                      size='mini'\r\n                      placeholder='输入备注'/>\r\n                    )\r\n                  } else {\r\n                    return row.remark\r\n                  }\r\n                } }} />\r\n              )\r\n            }\r\n          }\r\n        ],\r\n        list: [\r\n          {\r\n            id: 1,\r\n            entertainmentPlanId: '', // 详情id\r\n            socialResourceId: '', // 社会资源id\r\n            name: '', // 姓名\r\n            position: '', // 职务\r\n            unit: '', // 单位\r\n            applicationAmount: '', // 申请金额\r\n            amount: '', // 批准金额\r\n            remark: '' // 备注\r\n          }\r\n        ],\r\n        tbLoading: false\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n\r\n    disabled() {\r\n      return false\r\n    },\r\n    title() {\r\n      const { active } = this\r\n      return active === 2 ? '审批流程' : '招待费计划'\r\n    },\r\n    formNodeData() {\r\n      const {\r\n        inputPlaceholder,\r\n        selectPlaceholder,\r\n        firstForm,\r\n        filter: { isBussinessFeeList },\r\n        bussinessInfo\r\n      } = this\r\n      return [\r\n        { label: '编号:', keyword: 'number', props: { disabled: true, placeholder: '系统自动生成' }},\r\n        { label: '部门:', keyword: 'orgId', component: 'OrgSelect', props: { placeholder: selectPlaceholder }},\r\n        { label: '姓名:', keyword: 'personId', component: 'PersonSelect', props: { propsLabel: 'name', multiple: false, placeholder: selectPlaceholder }},\r\n        { label: '日期:', keyword: 'date', component: 'el-date-picker', props: { type: 'date', placeholder: '选择日期', valueFormat: 'yyyy-MM-dd' }},\r\n        { label: '项目营销费用:', keyword: 'isBussinessFee', component: 'Select', props: { placeholder: selectPlaceholder, options: isBussinessFeeList }},\r\n        { label: '金额:', keyword: 'applicationAmount', props: { disabled: true, placeholder: inputPlaceholder }},\r\n        { label: '业务信息工程:', if: (firstForm.isBussinessFee === 1), keyword: 'bussinessInfoId', component: 'BussinessInfoSelect', props: { placeholder: selectPlaceholder }},\r\n        { label: '业务信息编号:', if: (firstForm.isBussinessFee === 1), value: bussinessInfo.number, props: { disabled: true, placeholder: '自动带出' }},\r\n        { label: '事由:', keyword: 'summary', props: { placeholder: inputPlaceholder, type: 'textarea' }},\r\n        { label: '备注:', keyword: 'remark', props: { placeholder: inputPlaceholder, type: 'textarea' }}\r\n      ]\r\n    }\r\n  },\r\n  beforeRouteEnter(to, from, next) {\r\n    next(vm => {\r\n      const newId = vm.$route.query.id\r\n      const oldId = vm.firstForm.id\r\n      const type = vm.$route.query.type\r\n      if (type === 'edit' && newId !== oldId) {\r\n      // 说明是打开另一个单子的编辑页面\r\n        vm.firstForm.id = newId\r\n        vm.initForm()\r\n        vm.initDataById(newId)\r\n        vm.active = 1\r\n      } else {\r\n        const form = vm.firstForm\r\n        const { info: { uid, userName, name }, selectOrgId } = vm.$store.state.user\r\n        vm.user = {\r\n          id: uid,\r\n          number: userName,\r\n          name: name\r\n        }\r\n        form.companyId = selectOrgId\r\n        form.personId = uid\r\n        if (type === 'add' && oldId) {\r\n          vm.initForm()\r\n          vm.active = 1\r\n        }\r\n      }\r\n    })\r\n  },\r\n  methods: {\r\n    getBussinessInfo(row) {\r\n      this.bussinessInfo = row\r\n    },\r\n    initForm() {\r\n      Object.assign(this.$data.firstForm, this.$options.data().firstForm)\r\n      this.$nextTick(() => {\r\n        this.$refs.firstForm.clearValidate()\r\n        this.$data.entertainmentPlantable.list = [{\r\n          id: 1,\r\n          entertainmentPlanId: '', // 详情id\r\n          socialResourceId: '', // 社会资源id\r\n          name: '', // 姓名\r\n          position: '', // 职务\r\n          unit: '', // 单位\r\n          applicationAmount: '', // 申请金额\r\n          amount: '', // 批准金额\r\n          remark: '' // 备注\r\n        }]\r\n      })\r\n    },\r\n    /**\r\n     * @description: 根据id获取数据并且初始化选项框数据\r\n     */\r\n    initDataById(id) {\r\n      GetDepositById({ id }).then(res => {\r\n        const form = this.firstForm\r\n        for (const key in form) {\r\n          if (Object.hasOwnProperty.call(form, key)) {\r\n            form[key] = res.data[key] || form[key]\r\n          }\r\n        }\r\n        form.isBussinessFee = Number(form.isBussinessFee)\r\n        this.user = res.data.person\r\n        this.bussinessInfo = res.data.bussinessInfo || { number: '' }\r\n        this.entertainmentPlantable.list = res.data.entertainmentPlanDetails\r\n        form.billFlow = res.billFlowData\r\n        form.fileList = res.data.upFile\r\n      })\r\n    },\r\n    /*\r\n     *下一步\r\n     */\r\n    nextStep(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          this.getBillFlow()\r\n        }\r\n      })\r\n    },\r\n    getBillFlow() {\r\n      // 组装招待费计划信息\r\n      let flage = true\r\n      this.entertainmentPlantable.list.forEach(e => {\r\n        if (e.applicationAmount === '' || e.socialResourceId === '') { flage = false }\r\n        delete e.id\r\n        delete e.entertainmentPlanId\r\n      })\r\n      if (!flage) {\r\n        this.$message('请将申请信息填写完整!')\r\n        return false\r\n      }\r\n      this.firstForm.entertainmentPlanDetails = [...this.entertainmentPlantable.list]\r\n      // 获取流程数据\r\n      const { state, billFlow } = this.firstForm\r\n      const req = {\r\n        ...this.firstForm,\r\n        state: state || 0\r\n      }\r\n      if (billFlow) req.billFlowId = billFlow.id\r\n      delete req.billFlow\r\n      delete req.number\r\n      GetBillFlow(req).then(({ data, success, message }) => {\r\n        if (success) {\r\n          this.firstForm.billFlow = data.billFlow\r\n          this.setActive(2)\r\n        } else {\r\n          this.$message.error(message)\r\n        }\r\n      })\r\n    },\r\n    /**\r\n     * 修改填报进度\r\n     */\r\n    setActive(active) {\r\n      if (active === 1) {\r\n        this.entertainmentPlantable.list.forEach((e, i) => {\r\n          e.id = i\r\n        })\r\n      }\r\n      this.active = active\r\n    },\r\n    /**\r\n     * 提交表单\r\n     * @param {Number} state 提交类型，0：保存；1：提交; 10000: 修改\r\n     */\r\n    submitForm(state) {\r\n      const req = {\r\n        ...this.firstForm,\r\n        state\r\n      }\r\n      if (req.isBussinessFee === 0) req.bussinessInfoId = null\r\n      delete req.number\r\n      if (this.firstForm.billFlow) {\r\n        // 获取流程组件中的数据\r\n        const billFlow = this.$refs.flowSelect.getBillFlow()\r\n        if (!billFlow) {\r\n          return false\r\n        }\r\n        req.billFlow = billFlow\r\n      } else {\r\n        this.$message.error('流程数据不能为空')\r\n        return\r\n      }\r\n      if (req.id) {\r\n        PutEntertainmentPlan(req).then(res => {\r\n          // 更新\r\n          this.$message.success('保存成功')\r\n          this.back()\r\n        })\r\n      } else {\r\n        this.addbtnLoad = true\r\n        AddEntertainmentPlan(req).then(() => {\r\n          // 添加\r\n          this.$message.success('提交成功')\r\n          this.back()\r\n        }).catch(() => {\r\n          this.addbtnLoad = false\r\n        }).finally(() => {\r\n          this.addbtnLoad = false\r\n        })\r\n      }\r\n    },\r\n    // 作废\r\n    invalidForm() {\r\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        return DeleteEntertainmentPlan({ id: this.firstForm.id })\r\n      }).then(() => {\r\n        this.$message.success('操作成功')\r\n        this.back()\r\n      })\r\n    },\r\n    /**\r\n     * 返回上一页，并关闭当前页\r\n     */\r\n    back() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    },\r\n    /**\r\n     * 添加招待费计划列表\r\n     */\r\n    addTable() {\r\n      // 最后一条数据不能删掉 所以新增的一条数据的id 只能取list的最后一条数据的id+1; 直接取list.length会有问题\r\n      const length = this.entertainmentPlantable.list.length - 1\r\n      const id = this.entertainmentPlantable.list[length].id + 1\r\n      this.entertainmentPlantable.list.push({\r\n        id: id,\r\n        socialResourceId: '', // 社会资源id\r\n        name: '', // 姓名\r\n        position: '', // 职务\r\n        unit: '', // 单位\r\n        applicationAmount: '', // 申请金额\r\n        amount: '', // 批准金额\r\n        remark: '' // 备注\r\n      })\r\n    },\r\n    /**\r\n     * 删除招待费计划信息\r\n     */\r\n    handleDel(row) {\r\n      // 删除选中的招待费计划信息\r\n      if (this.entertainmentPlantable.list.length > 1) {\r\n        this.entertainmentPlantable.list = this.entertainmentPlantable.list.filter(e => {\r\n          if (e.id === row.id && e.applicationAmount !== '') {\r\n            this.firstForm.applicationAmount = Number(this.firstForm.applicationAmount) - Number(e.applicationAmount)\r\n          }\r\n          return e.id !== row.id\r\n        })\r\n      }\r\n    },\r\n    /**\r\n     * 当金额输入框失去焦点后计算申请金额\r\n     */\r\n    calculateAmount() {\r\n      let allAmout = 0\r\n      this.entertainmentPlantable.list.forEach(el => {\r\n        allAmout += +el.applicationAmount\r\n      })\r\n      this.firstForm.applicationAmount = allAmout\r\n    }\r\n  }\r\n}\r\n",null]}