{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\gckgl\\gathering\\projectGatheringDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\gckgl\\gathering\\projectGatheringDetail.vue","mtime":1635749455693},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getProjectGatheringDetailById } from '@/api/xmgl/projectGathering'\r\nexport default {\r\n  name: 'ProjectGatheringDetail',\r\n  components: {\r\n  },\r\n  data() {\r\n    return {\r\n      type: '', // edit：编辑 add:新增\r\n      ruleForm: {\r\n        id: 0,\r\n        number: '',\r\n        orgId: null,\r\n        companyId: this.$store.state.user.selectOrgId,\r\n        projectId: null,\r\n        gatheringType: '',\r\n        capitalType: '',\r\n        gatheringDate: new Date(),\r\n        personId: this.$store.state.user.uid,\r\n        gatheringAmount: '',\r\n        remark: '',\r\n        state: 0,\r\n        splitOrgId: null,\r\n        splitCompanyProjectId: null,\r\n        splitCompanyAmount: '',\r\n        splitProjectAmount: '',\r\n        groupManageFee: '',\r\n        bank: ''\r\n      },\r\n      projectGatheringId: null,\r\n      orgName: '',\r\n      splitOrgName: '',\r\n      splitCompanyProject: '',\r\n\r\n      loading: false,\r\n      rules: {\r\n\r\n      }\r\n    }\r\n  },\r\n  activated() {\r\n    console.log('activated')\r\n    if (this.$route.params.id) {\r\n      console.log(this.$route.params.id)\r\n      this.initData()\r\n      this.refreshRouterName = this.$route.params.refreshRouterName\r\n    }\r\n  },\r\n  mounted() {\r\n    if (!this.$route.params.id) {\r\n      this.active = 0\r\n      this.initData()\r\n      this.refreshRouterName = this.$route.params.refreshRouterName\r\n    }\r\n  },\r\n  methods: {\r\n    initData() {\r\n      console.log(this.$route.query.id)\r\n      this.projectGatheringId = this.$route.query.id\r\n      if (this.projectGatheringId) {\r\n        getProjectGatheringDetailById({ id: this.projectGatheringId }).then(response => {\r\n          const { data, orgName, splitOrgName, splitCompanyProject, gatheringType, capitalType } = response\r\n          this.ruleForm = data\r\n          this.orgName = orgName\r\n          this.splitOrgName = splitOrgName\r\n          this.splitCompanyProject = splitCompanyProject\r\n          this.ruleForm.capitalType = capitalType.name\r\n          this.ruleForm.gatheringType = gatheringType.name\r\n        })\r\n      }\r\n    },\r\n    closeThePage() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    }\r\n  }\r\n}\r\n",null]}