{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\paid\\paidAttitude.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\paid\\paidAttitude.vue","mtime":1634781212949},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport UpFile from '@/components/UpLoad/UpFile'\r\nimport FlowSelect from '@/components/Flow/flowSelect'\r\nimport FlowDisplay from '@/components/Flow/flowDisplay'\r\nimport FlowAttitude from '@/components/Flow/flowAttitude'\r\nimport { getCGPaidById, addAttitude, payFor } from '@/api/cggl/paid'\r\nimport { getDictionarysByTypes } from '@/api/xtgl/dictionary'\r\nimport AcceptanceList from './AcceptanceList'\r\nimport CheckAcceptance from './CheckAcceptance'\r\nimport OrgSelect2 from '@/components/OrgSelect/index2'\r\nexport default {\r\n  name: 'PaidAttitude',\r\n  components: {\r\n    UpFile,\r\n    FlowSelect,\r\n    FlowDisplay,\r\n    FlowAttitude,\r\n    AcceptanceList,\r\n    CheckAcceptance,\r\n    OrgSelect2\r\n  },\r\n  props: {\r\n    obj: {\r\n      type: Object,\r\n      default: null\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        id: 0,\r\n        number: '',\r\n        orgId: null,\r\n        fileList: [],\r\n        quotation: {},\r\n        supplier: {},\r\n        contract: [],\r\n        sumAmount: 0,\r\n        amount: 0,\r\n        attitudeAmount: 0\r\n      },\r\n      loading: false,\r\n      activate: true,\r\n      orgStr: '',\r\n      active: 0,\r\n      dialogTableVisible: false,\r\n      dialogTitle: '保存',\r\n      dialogWidth: '70%',\r\n      comName: 'PlanDetailAdd',\r\n      currentRow: null,\r\n      list: [],\r\n      payModes: [],\r\n      payModeOptions: [],\r\n      keyPayMode: 0,\r\n      billFlow: null,\r\n      isLoad: false,\r\n      attitudePara: {},\r\n      loadFlow: false,\r\n      rules: {},\r\n      isPaid: false,\r\n      attitudeAmount: 0,\r\n      acceptanceList: []\r\n    }\r\n  },\r\n  watch: {\r\n  },\r\n  activated() {\r\n  },\r\n  mounted() {\r\n    this.initData()\r\n  },\r\n  methods: {\r\n    async initData() {\r\n      // 有参数id 就是编辑\r\n      if (this.$route.query.id) {\r\n        if (this.obj && this.obj.id) {\r\n          this.id = this.obj.id\r\n        } else {\r\n          this.id = this.$route.query.id\r\n        }\r\n      }\r\n      if (this.id) {\r\n        this.loading = true\r\n        this.activate = false // 销毁部门组件\r\n        await getCGPaidById({ id: this.id }).then(response => this.setData(response))\r\n      }\r\n      getDictionarysByTypes({ types: 'CapitalType' })\r\n        .then((response) => {\r\n          const { data } = response\r\n          var optionList = []\r\n          data.forEach(element => {\r\n            element.pid = element.pId\r\n            optionList.push(element)\r\n          })\r\n          this.payModeOptions = optionList\r\n          this.keyPayMode += 1\r\n        })\r\n    },\r\n    setData(response) {\r\n      const { data, orgStr, billFlowData, sumAmount } = response\r\n      // 检查当前 状态 是否有特殊操作\r\n      var filterOption = billFlowData.billFlowNode.filter(f => f.isCurrentState)\r\n      if ((filterOption || []).length) {\r\n        if (filterOption[0].option > 0) {\r\n          // alert('当前节点有特殊操作')\r\n          var userId = this.$store.state.user.info.uid\r\n          if (filterOption[0].option === 99 && filterOption[0].personId === userId) {\r\n            // 特殊操作为支付\r\n            this.isPaid = true\r\n          }\r\n        }\r\n      }\r\n\r\n      this.ruleForm = data\r\n      this.ruleForm.fileList = data.upFile\r\n      this.ruleForm.sumAmount = sumAmount\r\n      this.attitudeAmount = data.attitudeAmount\r\n      this.orgStr = orgStr\r\n      this.billFlow = billFlowData\r\n      this.attitudePara = { formId: billFlowData.formId, billFlowId: data.billFlowId, planId: data.id }\r\n      this.isLoad = true\r\n      // 填充 明细列表\r\n      this.payModes = data.cgPaidDetails\r\n      this.loading = false // loading 状态关闭\r\n      this.activate = true // 加载部门组件\r\n    },\r\n    closeThePage() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    },\r\n    updateFlow() {\r\n      this.closeThePage()\r\n    },\r\n    openContract(id) {\r\n      this.$router.push({ name: 'ContractDetail', query: { id: id, refreshRouterName: this.$route.name }, params: { id: id }})\r\n    },\r\n    getPayModeName(type) {\r\n      if (type !== null) {\r\n        var entryType = this.payModeOptions.find(f => f.value === type)\r\n        if (entryType !== undefined) {\r\n          return entryType.name\r\n        } else {\r\n          return ''\r\n        }\r\n      } else {\r\n        return ''\r\n      }\r\n    },\r\n    getSummaries(param) {\r\n      const { columns, data } = param\r\n      const sums = []\r\n      columns.forEach((column, index) => {\r\n        if (index === 0) {\r\n          sums[index] = '合计'\r\n          return\r\n        }\r\n        const values = data.map(item => Number(item[column.property]))\r\n        if (!values.every(value => isNaN(value))) {\r\n          sums[index] = values.reduce((prev, curr) => {\r\n            const value = curr\r\n            if (!isNaN(value)) {\r\n              return prev + curr\r\n            } else {\r\n              return prev\r\n            }\r\n          }, 0)\r\n          // sums[index] += ' 元'\r\n        } else {\r\n          sums[index] = ''\r\n        }\r\n      })\r\n      sums[2] = Number(sums[2]).toFixed(4)\r\n      this.ruleForm.attitudeAmount = sums[2]\r\n      return sums\r\n    },\r\n    save() {\r\n      // 保存审批步骤\r\n      // 1.调用组件中的验证\r\n      // 2.获取表单参数数据\r\n      // 3.请求 审批\r\n\r\n      const result = this.$refs.flowAttitude.checkValidate()\r\n      if (result) {\r\n        var attitudeData = this.$refs.flowAttitude.getPostData()\r\n        var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n        var paidData = {}\r\n        paidData.id = newObj.id\r\n        paidData.attitudeAmount = newObj.attitudeAmount\r\n        paidData.storageAmount = newObj.storageAmount\r\n        paidData.dues = newObj.dues\r\n        paidData.invoice = newObj.invoice\r\n        paidData.capitalType = newObj.capitalType\r\n        // 提交数据\r\n        var postData = {\r\n          attitude: attitudeData,\r\n          cgPaid: paidData\r\n        }\r\n        this.loading = true\r\n        addAttitude(postData).then(res => {\r\n          if (res.success) {\r\n            this.$message.success('保存成功')\r\n            // 如果只填写意见不转下一步 需要子组件更新流程审批信息\r\n            // if (this.type !== 2) {\r\n            //   this.list = attitudeList\r\n            // }\r\n            this.closeThePage() // 跳转\r\n          } else {\r\n            this.$message.error(res.message)\r\n          }\r\n          this.loading = false\r\n        }).catch(() => { this.loading = false })\r\n      }\r\n    },\r\n    // openAcceptance(row) {\r\n    //   if (row.payMode === 2 || row.payMode === 3) {\r\n    //     var total_list = []\r\n    //     this.acceptanceList.forEach(e => {\r\n    //       if (e.capitalType === this.getPayModeName(row.payMode)) {\r\n    //         total_list.push(e)\r\n    //       }\r\n    //     })\r\n    //     var data = {\r\n    //       list: total_list\r\n    //     }\r\n    //     this.currentRow = data\r\n    //     this.dialogTitle = this.getPayModeName(row.payMode) + '已选择承兑明细'\r\n    //     this.comName = 'AcceptanceList'\r\n    //     this.dialogWidth = '60%'\r\n    //     this.dialogTableVisible = true\r\n    //   }\r\n    // },\r\n    openAcceptance(row, type) {\r\n      this.$router.push({ name: 'ChengDuiXinXiDetails', query: { id: row.id, type, refreshRouterName: this.$route.name }})\r\n    },\r\n    checkAcceptance() {\r\n      // 选择承兑\r\n      // if (row.payMode === 2 || row.payMode === 3) {\r\n      //   var data = {\r\n      //     id: row.id,\r\n      //     capitalType: row.payMode,\r\n      //     list: this.acceptanceList\r\n      //   }\r\n      //   this.currentRow = data\r\n      //   this.dialogTitle = this.getPayModeName(row.payMode) + '选择承兑明细'\r\n      //   this.comName = 'CheckAcceptance'\r\n      //   this.dialogWidth = '60%'\r\n      //   this.dialogTableVisible = true\r\n      // }\r\n      var _data = this.ruleForm\r\n      if (_data.capitalType === 2 || _data.capitalType === 3) {\r\n        var data = {\r\n          id: _data.id,\r\n          capitalType: _data.capitalType,\r\n          list: this.acceptanceList\r\n        }\r\n        this.currentRow = data\r\n        this.dialogTitle = this.getPayModeName(_data.capitalType) + '选择承兑明细'\r\n        this.comName = 'CheckAcceptance'\r\n        this.dialogWidth = '60%'\r\n        this.dialogTableVisible = true\r\n      }\r\n    },\r\n    dialogClose(data, state) {\r\n      this.addAcceptance(data, state)\r\n      this.dialogTableVisible = false\r\n    },\r\n    addAcceptance(data, state) {\r\n      // if (state === 'add') {\r\n      //   if (data.amount > this.payModes.find(f => f.id === data.id).attitudeAmount) {\r\n      //     this.$message.error('支付金额不可大于审批金额')\r\n      //   } else {\r\n      //     var total_list = []\r\n      //     this.acceptanceList.forEach(e => {\r\n      //       if (e.capitalType !== this.getPayModeName(data.capitalType)) {\r\n      //         total_list.push(e)\r\n      //       }\r\n      //     })\r\n      //     data.list.forEach(e => {\r\n      //       total_list.push(e)\r\n      //     })\r\n      //     this.acceptanceList = total_list\r\n      //     this.payModes.find(f => f.id === data.id).paid = data.amount\r\n      //   }\r\n      // }\r\n      if (state === 'add') {\r\n        if (data.amount > this.ruleForm.attitudeAmount) {\r\n          this.$message.error('支付金额不可大于审批金额')\r\n        } else {\r\n          this.acceptanceList = data.list\r\n          this.ruleForm.amount = data.amount\r\n        }\r\n      }\r\n    },\r\n    wantToPay() {\r\n      // const { flowAttitude } = this.$refs\r\n      // flowAttitude.$refs['ruleForm'].validate(valid => {\r\n      //   if (valid) {\r\n      //     const newObj = JSON.parse(JSON.stringify(flowAttitude.ruleForm))\r\n      //     newObj.billId = flowAttitude.para.planId\r\n      //     newObj.formId = flowAttitude.para.formId\r\n\r\n      //     newObj.operation = flowAttitude.data.find(f => f.value === flowAttitude.ruleForm.attitudeType).text\r\n      //     if (flowAttitude.ruleForm.attitudeType === 3) {\r\n      //       if (flowAttitude.ruleForm.backGroup === 0) {\r\n      //         newObj.operation += '制单'\r\n      //       } else {\r\n      //         newObj.operation += flowAttitude.billFlowNodeList.find(f => f.value === flowAttitude.ruleForm.backGroup).name\r\n      //       }\r\n      //     }\r\n      //     this.$confirm('是否确定', '提示', {\r\n      //       confirmButtonText: '确定',\r\n      //       cancelButtonText: '取消',\r\n      //       type: 'warning'\r\n      //     }).then(() => {\r\n      //       if (flowAttitude.ruleForm.attitudeType !== 3) {\r\n      //         var newObj2 = JSON.parse(JSON.stringify(this.ruleForm))\r\n      //         if (newObj2.amount === 0) {\r\n      //           this.$message.error('支付金额不可为0')\r\n      //         } else if (this.acceptanceList.length < 1 && (newObj2.capitalType === 2 || newObj2.capitalType === 3)) {\r\n      //           this.$message.error('请选择承兑列表')\r\n      //         } else {\r\n      //           var postData = {}\r\n      //           postData.id = newObj2.id\r\n      //           // postData.paid = newObj2.paid\r\n      //           postData.amount = newObj2.amount\r\n      //           postData.capitalType = newObj2.capitalType\r\n      //           var acceptances = []\r\n      //           this.acceptanceList.forEach(e => {\r\n      //             var data = {\r\n      //               id: e.id\r\n      //             }\r\n      //             acceptances.push(data)\r\n      //           })\r\n      //           postData.acceptanceList = acceptances\r\n      //           payFor(postData).then(() => {\r\n      //             this.$refs['flowAttitude'].add(newObj)\r\n      //           })\r\n      //         }\r\n      //       } else {\r\n      //         this.$refs['flowAttitude'].add(newObj)\r\n      //       }\r\n      //     })\r\n      //   }\r\n      // })\r\n\r\n      // 保存审批步骤\r\n      // 1.调用组件中的验证\r\n      // 2.获取表单参数数据\r\n      // 3.请求 审批\r\n\r\n      const result = this.$refs.flowAttitude.checkValidate()\r\n      if (result) {\r\n        var attitudeData = this.$refs.flowAttitude.getPostData()\r\n        var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n        var paidData = {}\r\n        paidData.id = newObj.id\r\n        paidData.amount = newObj.amount\r\n        paidData.capitalType = newObj.capitalType\r\n        var acceptances = []\r\n        this.acceptanceList.forEach(e => {\r\n          var data = {\r\n            id: e.id\r\n          }\r\n          acceptances.push(data)\r\n        })\r\n        paidData.acceptanceList = acceptances\r\n        // 提交数据\r\n        var postData = {\r\n          attitude: attitudeData,\r\n          cgPaid: paidData\r\n        }\r\n        this.loading = true\r\n        payFor(postData).then(res => {\r\n          if (res.success) {\r\n            this.$message.success('支付成功')\r\n            // 如果只填写意见不转下一步 需要子组件更新流程审批信息\r\n            // if (this.type !== 2) {\r\n            //   this.list = attitudeList\r\n            // }\r\n            this.closeThePage() // 跳转\r\n          } else {\r\n            this.$message.error(res.message)\r\n          }\r\n          this.loading = false\r\n        }).catch(() => { this.loading = false })\r\n      }\r\n    }\r\n    // openSupplier(id) {\r\n    //   this.$router.push({ name: 'SupplierDetail', query: { id: id, refreshRouterName: this.$route.name }, params: { id: id }})\r\n    // },\r\n  }\r\n}\r\n",null]}