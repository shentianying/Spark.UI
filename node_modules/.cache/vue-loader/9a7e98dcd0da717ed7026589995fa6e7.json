{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\fpgl\\InvoiceReimburse\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\fpgl\\InvoiceReimburse\\edit.vue","mtime":1635749455629},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Select from '@/components/SearchBar/form/Select'\r\nimport FlowSelect from '@/components/Flow/flowSelect'\r\n\r\nimport MyForm from '@/components/MyForm'\r\nimport TableEx from '@/components/TableEx'\r\nimport { hasPower, formatMoney } from '@/utils'\r\n\r\nimport { validate } from '@/utils/validate'\r\n\r\nimport { getAccountSetByOrgId } from '@/api/xtgl/accountSet'\r\nimport { InitInvoiceReimburse, GetBillFlow, AddInvoiceReimburse, PutInvoiceReimburse, DeleteInvoiceReimburse, GetInvoiceReimburseById } from '@/api/cwgl/InvoiceReimburse'\r\nexport default {\r\n  name: 'InvoiceReimburseEdit',\r\n  components: {\r\n    FlowSelect,\r\n    MyForm,\r\n    TableEx\r\n  },\r\n  data() {\r\n    return {\r\n      reimburseTypeDisable: false, //  报销类型选择工人发票时, 项目营销费用选中 否 并且禁止修改\r\n      addbtnLoad: false, // 提交按钮loading状态\r\n      size: 'mini',\r\n      inputPlaceholder: '请输入',\r\n      selectPlaceholder: '请选择',\r\n      tableSelect: '请选择',\r\n      active: 1, // 提交进度 1: 编辑信息 2: 编辑审批流程\r\n      firstForm: {\r\n        id: 0, // 新增为0\r\n        companyId: '', // 公司id\r\n        number: '', // 新增时,编号后端生成\r\n        orgId: '', // 部门id\r\n        accountId: '', // 账套id\r\n        personId: '', // 人员id\r\n        reimburseType: 1, // 报销类型\r\n        invoiceType: 1, // 发票类型 默认电子发票\r\n        invoiceDate: '', // 发票日期\r\n        invoiceCategory: 318, // 发票类别 默认招待费 : id318\r\n        costPlanId: '', // 费用计划id\r\n        entertainmentPlanId: '', // 招待费计划id\r\n        isNonCash: 0, // 是否现报销\r\n\r\n        personNumber: '', // 工号\r\n        personName: '', // 姓名\r\n        bussinessInfoId: '', // 业务工程信息编号\r\n        isBussinessFee: 1, // 是否是项目营销费用\r\n        applicationAmount: '', // 申请金额\r\n        // entertainmentPlanDetails: [], // 招待费计划详细数据列表\r\n        summary: '', // 用途\r\n        remark: '', // 备注\r\n        fileList: [], // 附件\r\n        invoiceFileList: [], // 发票附件\r\n        invoiceReimburseDetails: [], // 发票明细\r\n        state: 0, // 状态\r\n        billFlow: null // 单据流程\r\n      },\r\n      firstRules: {\r\n        reimburseType: [\r\n          { required: true, message: '请选择报销类型', trigger: 'change' }\r\n        ],\r\n        orgId: [\r\n          { required: true, message: '请选择部门', trigger: 'change' }\r\n        ],\r\n        accountId: [\r\n          { required: true, message: '请选择账套信息', trigger: 'change' }\r\n        ],\r\n        invoiceType: [\r\n          { required: true, message: '请选择发票类型', trigger: 'change' }\r\n        ],\r\n        invoiceDate: [\r\n          { required: true, message: '请选择发票日期', trigger: 'change' }\r\n        ],\r\n        invoiceCategory: [\r\n          { required: true, message: '请选择发票类别', trigger: 'change' }\r\n        ],\r\n        personId: [\r\n          { required: true, message: '请选择工号', trigger: 'change' }\r\n        ],\r\n        summary: [\r\n          { required: true, message: '请填写事由', trigger: 'change' }\r\n        ],\r\n        applicationAmount: [\r\n          { required: true, message: '请输入金额', trigger: 'change' },\r\n          { validator: validate.money, message: '金额格式不正确', trigger: 'change' },\r\n          { validator: validate.max_amount, message: '超过所能存储的最大金额', trigger: 'change' }\r\n        ],\r\n        bussinessInfoId: [\r\n          { required: true, message: '请选择业务工程信息', trigger: 'change' }\r\n        ]\r\n      },\r\n      filter: {\r\n        isBussinessFeeList: [\r\n          { label: '否', value: 0 },\r\n          { label: '是', value: 1 }\r\n        ],\r\n        isNonCashList: [\r\n          { label: '否', value: 0 },\r\n          { label: '是', value: 1 }\r\n        ],\r\n        allInvoiceCategoryList: [],\r\n        invoiceCategoryList: [], // 发票类别列表\r\n        invoiceTypeList: [], // 发票类型列表\r\n        reimburseTypeList: [], // 发票报销类型\r\n        accountList: [],\r\n        taxList: [], // 税率的列表\r\n        secondList: [] // 表格二级选项\r\n      },\r\n      // 发票表格\r\n      invoiceReimburseTable: {\r\n        columns: [\r\n          {\r\n            label: '序号', // 表头\r\n            minWidth: '50', // 最小宽度\r\n            format: (val, format, row, column, scoped) => `0${scoped.$index + 1}`\r\n          },\r\n          {\r\n            render: (h) => {\r\n              return (\r\n                <el-table-column\r\n                  class='TableExColumn'\r\n                  label='发票类别'\r\n                  min-width='100'\r\n                  show-overflow-tooltip={true}\r\n                  scopedSlots={ {\r\n                    default: (scoped) => {\r\n                      const { filter: { secondList }, size, tableSelect } = this\r\n                      if (this.firstForm.state === 0) {\r\n                        return (<el-cascader\r\n                          props={{\r\n                            props: { value: 'id', label: 'name', emitPath: false },\r\n                            size: size,\r\n                            clearable: true,\r\n                            showAllLevels: false,\r\n                            collapseTags: true,\r\n                            options: secondList || [],\r\n                            placeholder: tableSelect\r\n                          }}\r\n                          vModel={scoped.row.invoiceCategory}\r\n                          onChange={(val) => {\r\n                            if (secondList[0].children) {\r\n                              const newList = secondList[0].children.filter(e => e.id === val)\r\n                              if (newList.length === 0) {\r\n                                scoped.row.invoiceCategoryName = ''\r\n                              } else {\r\n                                scoped.row.invoiceCategoryName = newList[0]?.name\r\n                              }\r\n                            } else {\r\n                              scoped.row.invoiceCategoryName = secondList[0]?.name\r\n                            }\r\n                          }}\r\n                        />)\r\n                      } else {\r\n                        return scoped.row.invoiceCategoryName\r\n                      }\r\n                    }\r\n                  }}\r\n                />\r\n              )\r\n            }\r\n          },\r\n          {\r\n            // label: '发票代码', // 表头\r\n            // minWidth: '100', // 最小宽度\r\n            // prop: 'invoiceCode'\r\n            render: (h) => {\r\n              return (\r\n                <el-table-column\r\n                  class='TableExColumn'\r\n                  label='发票代码'\r\n                  min-width='100'\r\n                  show-overflow-tooltip={true}\r\n                  scopedSlots={{\r\n                    default: ({ row }) => {\r\n                      const { size } = this\r\n                      if (this.firstForm.state === 0) {\r\n                        return (\r\n                          <el-input\r\n                            vModel={row.invoiceCode}\r\n                            size={size}\r\n                            onInput={ ($event) => {\r\n                              row.invoiceCode = $event.replace(/[^\\d.]/g, '')\r\n                            } }\r\n                            placeholder='发票代号'/>\r\n                        )\r\n                      } else {\r\n                        return row.invoiceCode\r\n                      }\r\n                    }\r\n                  }}\r\n                />\r\n\r\n              )\r\n            }\r\n          },\r\n          {\r\n            // label: '票号', // 表头\r\n            // minWidth: '50', // 最小宽度\r\n            // prop: 'invoiceNum'\r\n            render: (h) => {\r\n              return (\r\n                <el-table-column\r\n                  class='TableExColumn'\r\n                  label='票号'\r\n                  min-width='100'\r\n                  show-overflow-tooltip={true}\r\n                  scopedSlots={{\r\n                    default: ({ row }) => {\r\n                      const { size } = this\r\n                      if (this.firstForm.state === 0) {\r\n                        return (\r\n                          <el-input\r\n                            vModel={row.invoiceNum}\r\n                            size={size}\r\n                            onInput={ ($event) => {\r\n                              row.invoiceNum = $event.replace(/[^\\d.]/g, '')\r\n                            } }\r\n                            placeholder='票号'/>\r\n                        )\r\n                      } else {\r\n                        return row.invoiceNum\r\n                      }\r\n                    }\r\n                  }}\r\n                />\r\n\r\n              )\r\n            }\r\n          },\r\n          {\r\n            // label: '金额(含税)', // 表头\r\n            // minWidth: '120', // 最小宽度\r\n            // prop: 'applicationAmount'\r\n            render: (h) => {\r\n              return (\r\n                <el-table-column\r\n                  class='TableExColumn'\r\n                  label='申请金额(含税)'\r\n                  min-width='100'\r\n                  show-overflow-tooltip={true}\r\n                  scopedSlots={{\r\n                    default: ({ row }) => {\r\n                      const { size } = this\r\n                      if (this.firstForm.state === 0) {\r\n                        return (\r\n                          <el-input\r\n                            vModel={row.applicationAmount}\r\n                            size={size}\r\n                            onInput={ ($event) => {\r\n                              row.applicationAmount = $event.replace(/[^\\d.]/g, '')\r\n                            } }\r\n                            onBlur={() => this.calculateAmount(row)}\r\n                            placeholder='金额'/>\r\n                        )\r\n                      } else {\r\n                        return formatMoney(row.applicationAmount, 2, 0)\r\n                      }\r\n                    }\r\n                  }}\r\n                />\r\n\r\n              )\r\n            }\r\n          },\r\n          {\r\n            // label: '税率', // 表头\r\n            // minWidth: '50', // 最小宽度\r\n            // prop: 'tax'\r\n            render: (h) => {\r\n              return (\r\n                <el-table-column\r\n                  class='TableExColumn'\r\n                  label='税率'\r\n                  min-width='100'\r\n                  show-overflow-tooltip={true}\r\n                  scopedSlots={{\r\n                    default: ({ row }) => {\r\n                      const { size, filter: { taxList }} = this\r\n                      if (this.firstForm.state === 0) {\r\n                        return (\r\n                          <Select\r\n                            value={row.tax}\r\n                            vModel={row.tax}\r\n                            options={taxList}\r\n                            onChange={\r\n                              (val) => {\r\n                                if (row.applicationAmount) {\r\n                                  row.taxAmount = +row.applicationAmount * val\r\n                                  row.excludeTaxAmount = row.applicationAmount - row.taxAmount\r\n                                } else {\r\n                                  row.tax = ''\r\n                                  this.$message('请先输入金额')\r\n                                  return\r\n                                }\r\n                              }\r\n                            } size={size}\r\n                          />\r\n                        )\r\n                      } else {\r\n                        return row.tax\r\n                      }\r\n                    }\r\n                  }}\r\n                />\r\n\r\n              )\r\n            }\r\n          },\r\n          {\r\n            align: 'right',\r\n            label: '税额', // 表头\r\n            minWidth: '80', // 最小宽度\r\n            format: 'money',\r\n            prop: 'taxAmount'\r\n          },\r\n          {\r\n            align: 'right',\r\n            label: '金额(不含税)', // 表头\r\n            minWidth: '120', // 最小宽度\r\n            format: 'money',\r\n            prop: 'excludeTaxAmount'\r\n          },\r\n          {\r\n            // label: '备注', // 表头\r\n            // minWidth: '50', // 最小宽度\r\n            // prop: 'remark'\r\n            render: (h) => {\r\n              return (\r\n                <el-table-column\r\n                  class='TableExColumn'\r\n                  label='备注'\r\n                  min-width='100'\r\n                  show-overflow-tooltip={true}\r\n                  scopedSlots={{\r\n                    default: ({ row }) => {\r\n                      const { size } = this\r\n                      if (this.firstForm.state === 0) {\r\n                        return (\r\n                          <el-input\r\n                            vModel={row.remark}\r\n                            size={size}\r\n                            placeholder='备注'/>\r\n                        )\r\n                      } else {\r\n                        return row.remark\r\n                      }\r\n                    }\r\n                  }}\r\n                />\r\n\r\n              )\r\n            }\r\n          }\r\n        ],\r\n        list: [\r\n          {\r\n            id: 0,\r\n            invoiceReimburseId: 0,\r\n            invoiceCategory: 0,\r\n            invoiceCategoryName: '', // 发票类别名称\r\n            invoiceCode: '',\r\n            invoiceNum: '', // 票号\r\n            applicationAmount: '',\r\n            tax: '',\r\n            taxAmount: '',\r\n            excludeTaxAmount: '',\r\n            remark: ''\r\n          }\r\n        ]\r\n      },\r\n      bussinessInfo: { // 选择的工程信息相关\r\n        number: ''\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n\r\n    disabled() {\r\n      return false\r\n    },\r\n    title() {\r\n      const { active } = this\r\n      return active === 2 ? '审批流程' : '发票报销'\r\n    },\r\n    formNodeData() {\r\n      const {\r\n        inputPlaceholder,\r\n        selectPlaceholder,\r\n        reimburseTypeDisable,\r\n        firstForm,\r\n        filter: {\r\n          isBussinessFeeList,\r\n          reimburseTypeList,\r\n          accountList,\r\n          invoiceTypeList,\r\n          invoiceCategoryList,\r\n          isNonCashList\r\n        },\r\n        disabled,\r\n        bussinessInfo\r\n      } = this\r\n      return [\r\n        { label: '报销类型:', keyword: 'reimburseType', component: 'Select', props: { propsLabel: 'name', placeholder: selectPlaceholder, options: reimburseTypeList }},\r\n        { label: '编号:', keyword: 'number', props: { disabled: true, placeholder: '系统自动生成' }},\r\n        { label: '部门:', keyword: 'orgId', component: 'OrgSelect', props: { placeholder: selectPlaceholder }},\r\n        { label: '账套:', keyword: 'accountId', component: 'Select', props: { propsValue: 'id', propsLabel: 'name', placeholder: selectPlaceholder, options: accountList }},\r\n        { label: '发票类型:', keyword: 'invoiceType', component: 'Select', props: { propsLabel: 'name', placeholder: selectPlaceholder, options: invoiceTypeList }},\r\n        { label: '发票日期:', keyword: 'invoiceDate', component: 'el-date-picker', props: { type: 'date', placeholder: '选择日期', valueFormat: 'yyyy-MM-dd' }},\r\n        { label: '发票类别:', keyword: 'invoiceCategory', component: 'Select', props: { propsLabel: 'name', propsValue: 'id', placeholder: selectPlaceholder, options: invoiceCategoryList }},\r\n        { label: '招待费计划号:', if: (firstForm.invoiceCategory === 318), keyword: 'entertainmentPlanId', component: 'EntertainmentPlanSelect', props: { propsLabel: 'number', placeholder: selectPlaceholder }},\r\n        { label: '费用计划号:', if: (firstForm.invoiceCategory !== 318), keyword: 'costPlanId', component: 'CostPlanSelect', props: { propsLabel: 'number', placeholder: selectPlaceholder }},\r\n        { label: '非现报销:', monopolize: true, if: hasPower('INVOICEREIMBURSEEDIT'), keyword: 'isNonCash', component: 'Select', props: { placeholder: selectPlaceholder, options: isNonCashList }},\r\n        { label: '工号:', keyword: 'personId', component: 'PersonSelect', props: { propsLabel: 'number', multiple: false, placeholder: selectPlaceholder }},\r\n        { label: '姓名:', keyword: 'personName', props: { disabled: true, placeholder: '自动带出' }},\r\n        { label: '项目营销费用:', keyword: 'isBussinessFee', component: 'Select', props: { disabled: reimburseTypeDisable, placeholder: selectPlaceholder, options: isBussinessFeeList }},\r\n        { label: '金额:', keyword: 'applicationAmount', props: { disabled: true, placeholder: '自动计算' }},\r\n        { label: '业务信息工程:', if: (firstForm.isBussinessFee === 1), keyword: 'bussinessInfoId', component: 'BussinessInfoSelect', props: { placeholder: selectPlaceholder }},\r\n        { label: '业务信息编号:', if: (firstForm.isBussinessFee === 1), value: bussinessInfo.number, props: { disabled: true, placeholder: '自动带出' }},\r\n        { label: '事由:', keyword: 'summary', props: { placeholder: inputPlaceholder, type: 'textarea' }},\r\n        { label: '备注:', keyword: 'remark', props: { placeholder: inputPlaceholder, type: 'textarea' }},\r\n        { label: '发票附件:', keyword: 'invoiceFileList', component: 'UpFile', props: { isUpfile: !disabled, isDelete: !disabled, fileSize: 100, isPreview: true }},\r\n        { label: '其他附件:', keyword: 'fileList', component: 'UpFile', props: { isUpfile: !disabled, isDelete: !disabled, fileSize: 100, isPreview: true }}\r\n      ]\r\n    }\r\n  },\r\n  beforeRouteEnter(to, from, next) {\r\n    next(vm => {\r\n      const newId = vm.$route.query.id\r\n      const oldId = vm.firstForm.id\r\n      const type = vm.$route.query.type\r\n      vm.InitInvoiceReimburseSelect()\r\n      if (type === 'edit' && newId !== oldId) {\r\n      // 说明是打开另一个单子的编辑页面\r\n        vm.firstForm.id = newId\r\n        vm.initForm()\r\n        vm.initDataById(newId)\r\n        vm.active = 1\r\n      } else {\r\n        const form = vm.firstForm\r\n        const { info: { uid, userName, name }, selectOrgId } = vm.$store.state.user\r\n        vm.user = {\r\n          id: uid,\r\n          number: userName,\r\n          name: name\r\n        }\r\n        form.companyId = selectOrgId\r\n        form.personName = name\r\n        form.personNumber = userName\r\n        form.personId = uid\r\n        if (type === 'add' && oldId) {\r\n          vm.initForm()\r\n          vm.active = 1\r\n        }\r\n      }\r\n    })\r\n  },\r\n  methods: {\r\n    // 根据部门id获取账套信息\r\n    getAccount(id) {\r\n      getAccountSetByOrgId({ orgId: id }).then(res => {\r\n        this.filter.accountList = res.data\r\n        if (this.filter.accountList.length === 1) {\r\n          this.firstForm.accountId ? '' : this.firstForm.accountId = this.filter.accountList[0].id\r\n        }\r\n      })\r\n    },\r\n    initForm() {\r\n      Object.assign(this.$data.firstForm, this.$options.data().firstForm)\r\n      this.$nextTick(() => {\r\n        this.$refs.firstForm.clearValidate()\r\n        this.$data.invoiceReimburseTable.list = [{\r\n          id: 0,\r\n          invoiceReimburseId: 0,\r\n          invoiceCategory: 0,\r\n          invoiceCategoryName: '', // 发票类别名称\r\n          invoiceCode: '',\r\n          invoiceNum: '', // 票号\r\n          applicationAmount: '',\r\n          tax: '',\r\n          taxAmount: '',\r\n          excludeTaxAmount: '',\r\n          remark: ''\r\n        }]\r\n      })\r\n    },\r\n    // 获取人员工号信息\r\n    selectPerson(user) {\r\n      this.firstForm.personNumber = user.number\r\n      this.firstForm.personName = user.name\r\n    },\r\n    // 获取业务信息编号\r\n    getBussinessInfo(row) {\r\n      this.bussinessInfo = row\r\n    },\r\n    // 报销类型选择工人发票时, 项目营销费用固定选中否 并且禁止修改\r\n    setIsBussinessFee(val) {\r\n      if (val === 2) {\r\n        this.reimburseTypeDisable = true\r\n        this.firstForm.isBussinessFee = 0\r\n      } else {\r\n        this.reimburseTypeDisable = false\r\n        this.firstForm.isBussinessFee = 1\r\n      }\r\n    },\r\n    /*\r\n      初始化选择框数据\r\n    */\r\n    InitInvoiceReimburseSelect() {\r\n      InitInvoiceReimburse().then(res => {\r\n        this.filter.reimburseTypeList = res.reimburseTypeList // 报销类型\r\n        this.filter.invoiceTypeList = res.invoiceTypeList // 发票类型\r\n        this.filter.invoiceCategoryList = res.invoiceCategoryList.filter((e) => e.pId === 0) // 发票类别\r\n        const tmp = res.invoiceCategoryList.map(item => {\r\n          return { ...item, pid: item.pId }\r\n        })\r\n        this.filter.allInvoiceCategoryList = this.utils.getTree(0, tmp)\r\n        res.taxList.forEach(e => {\r\n          e.label = e.name\r\n        })\r\n        this.filter.taxList = res.taxList\r\n        // 默认的业务招待费筛选二级选项\r\n        this.filterSelect(this.firstForm.invoiceCategory)\r\n      })\r\n    },\r\n    // 通过发票类别筛选表格的发票类别选项\r\n    filterSelect(val) {\r\n      if (val === 318) {\r\n        this.firstForm.isBussinessFee = 1\r\n      } else {\r\n        this.firstForm.isBussinessFee = 0\r\n      }\r\n      this.filter.secondList = this.filter.allInvoiceCategoryList.filter(e => e.id === val)\r\n      let labelName = ''\r\n      if (!this.filter.secondList[0].children) {\r\n        labelName = this.filter.secondList[0].name\r\n      }\r\n      this.tableSelect = this.filter.secondList[0].name\r\n      this.$nextTick(() => {\r\n        this.invoiceReimburseTable.list = this.invoiceReimburseTable.list.map(item => {\r\n          return { ...item, invoiceCategory: val, invoiceCategoryName: labelName }\r\n        })\r\n      })\r\n    },\r\n    /**\r\n     * @description: 根据id获取数据并且初始化选项框数据\r\n     */\r\n    initDataById(id) {\r\n      GetInvoiceReimburseById({ id }).then(res => {\r\n        const form = this.firstForm\r\n        for (const key in form) {\r\n          if (Object.hasOwnProperty.call(form, key)) {\r\n            form[key] = res.data[key] || form[key]\r\n          }\r\n        }\r\n        form.isBussinessFee = Number(form.isBussinessFee)\r\n        form.isNonCash = Number(form.isNonCash)\r\n        this.bussinessInfo = res.data.bussinessInfo ? res.data.bussinessInfo : { number: '' }\r\n        this.invoiceReimburseTable.list = res.data.invoiceReimburseDetails\r\n        this.filter.secondList = this.filter.allInvoiceCategoryList.filter(e => e.id === res.data.invoiceCategory)\r\n        form.billFlow = res.billFlowData\r\n        form.fileList = res.data.upFile\r\n        form.invoiceFileList = res.data.invoiceUpFile\r\n        this.getAccount(form.orgId)\r\n      })\r\n    },\r\n    /*\r\n     *下一步\r\n     */\r\n    nextStep(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          // 组装招待费计划信息\r\n          // 设置flag 只要有一项没填 就设置为false\r\n          let flage = true\r\n          let messageType = 1\r\n          this.invoiceReimburseTable.list.forEach(e => {\r\n            if (e.invoiceCategoryName === '' || e.applicationAmount === '' || e.invoiceNum === '' || e.invoiceCode === '' || e.tax === '') {\r\n              flage = false\r\n              messageType = 1\r\n            }\r\n            delete e.id\r\n          })\r\n          // 判断是票号和发票代码是否都重复\r\n          if (!this.formatCope(this.invoiceReimburseTable.list, 'invoiceCode') && !this.formatCope(this.invoiceReimburseTable.list, 'invoiceNum')) {\r\n            flage = false\r\n            messageType = 2\r\n          }\r\n          if (!flage) {\r\n            messageType === 1 ? this.$message('请将申请信息填写完整!') : this.$message('发票代码和票号不能都重复!')\r\n            return false\r\n          }\r\n          this.getBillFlow()\r\n        }\r\n      })\r\n    },\r\n    getBillFlow() {\r\n      // 组装招待费计划信息\r\n      this.firstForm.invoiceReimburseDetails = [...this.invoiceReimburseTable.list]\r\n      // 获取流程数据\r\n      const { state, billFlow } = this.firstForm\r\n      const req = {\r\n        ...this.firstForm,\r\n        state: state || 0\r\n      }\r\n      if (billFlow) req.billFlowId = billFlow.id\r\n      delete req.billFlow\r\n      delete req.number\r\n      GetBillFlow(req).then(({ data, success, message }) => {\r\n        if (success) {\r\n          this.firstForm.billFlow = data.billFlow\r\n          this.setActive(2)\r\n        } else {\r\n          this.$message.error(message)\r\n        }\r\n      })\r\n    },\r\n    /**\r\n     * 修改填报进度\r\n     */\r\n    setActive(active) {\r\n      if (active === 1) {\r\n        this.invoiceReimburseTable.list.forEach((e, i) => {\r\n          e.id = i\r\n        })\r\n      }\r\n      this.active = active\r\n    },\r\n    /**\r\n     * 提交表单\r\n     * @param {Number} state 提交类型，0：保存；1：提交; 10000: 修改\r\n     */\r\n    submitForm(state) {\r\n      const req = {\r\n        ...this.firstForm,\r\n        state\r\n      }\r\n      delete req.number\r\n      if (this.firstForm.billFlow) {\r\n        // 获取流程组件中的数据\r\n        const billFlow = this.$refs.flowSelect.getBillFlow()\r\n        if (!billFlow) {\r\n          return false\r\n        }\r\n        req.billFlow = billFlow\r\n      } else {\r\n        this.$message.error('流程数据不能为空')\r\n        return\r\n      }\r\n      if (req.id) {\r\n        PutInvoiceReimburse(req).then(res => {\r\n          // 更新\r\n          this.$message.success('保存成功')\r\n          this.back()\r\n        })\r\n      } else {\r\n        this.addbtnLoad = true\r\n        AddInvoiceReimburse(req).then(() => {\r\n          // 添加\r\n          this.$message.success('提交成功')\r\n          this.back()\r\n        }).catch(() => {\r\n          this.addbtnLoad = false\r\n        }).finally(() => {\r\n          this.addbtnLoad = false\r\n        })\r\n      }\r\n    },\r\n    // 作废\r\n    invalidForm() {\r\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        return DeleteInvoiceReimburse({ id: this.firstForm.id })\r\n      }).then(() => {\r\n        this.$message.success('操作成功')\r\n        this.back()\r\n      })\r\n    },\r\n    /**\r\n     * 返回上一页，并关闭当前页\r\n     */\r\n    back() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    },\r\n    // 添加table数据\r\n    addTable() {\r\n      // 最后一条数据不能删掉 所以新增的一条数据的id 只能取list的最后一条数据的id+1; 直接取list.length会有问题\r\n      const length = this.invoiceReimburseTable.list.length - 1\r\n      const id = this.invoiceReimburseTable.list[length].id + 1\r\n      this.invoiceReimburseTable.list.push({\r\n        id: id,\r\n        invoiceReimburseId: 0,\r\n        invoiceCategory: 0,\r\n        invoiceCategoryName: '', // 发票类别名称\r\n        invoiceCode: '',\r\n        invoiceNum: '', // 票号\r\n        applicationAmount: '',\r\n        tax: '',\r\n        taxAmount: '',\r\n        excludeTaxAmount: '',\r\n        remark: ''\r\n      })\r\n    },\r\n    // 删除table数据\r\n    handleDel(row) {\r\n      if (this.invoiceReimburseTable.list.length > 1) {\r\n        this.invoiceReimburseTable.list = this.invoiceReimburseTable.list.filter(e => {\r\n          if (e.id === row.id && e.applicationAmount !== '') {\r\n            this.firstForm.applicationAmount = Number(this.firstForm.applicationAmount) - Number(e.applicationAmount)\r\n          }\r\n          return e.id !== row.id\r\n        })\r\n      }\r\n    },\r\n    /**\r\n     * 当金额输入框失去焦点后计算申请金额\r\n     */\r\n    calculateAmount(row) {\r\n      let allAmout = null\r\n      this.invoiceReimburseTable.list.forEach(el => {\r\n        allAmout += +el.applicationAmount\r\n      })\r\n      allAmout === 0 ? this.firstForm.applicationAmount = '' : this.firstForm.applicationAmount = allAmout\r\n      if (this.firstForm.applicationAmount !== '' && row.tax !== '') {\r\n        row.taxAmount = +row.applicationAmount * row.tax\r\n        row.excludeTaxAmount = +row.applicationAmount - row.taxAmount\r\n      } else {\r\n        row.tax = ''\r\n        row.taxAmount = ''\r\n        row.excludeTaxAmount = ''\r\n      }\r\n    },\r\n    /* 判断数组中的某一项是否重复 */\r\n    formatCope(list, keyword) {\r\n      const keywordList = list.map(e => e[keyword])\r\n      const newLst = [...new Set(keywordList)]\r\n      if (keywordList.length === newLst.length) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n}\r\n",null]}