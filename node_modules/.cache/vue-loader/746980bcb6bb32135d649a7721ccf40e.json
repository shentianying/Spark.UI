{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\byj\\Imprest\\ApplicationDetails.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\byj\\Imprest\\ApplicationDetails.vue","mtime":1635749455621},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { GetImprestAppliactionAttitudeById, PayFor, CheckImprestAppliaction, DeleteImprestAppliaction } from '@/api/cwgl/Impresst.js'\r\nimport CapitalSelect from '@/components/SearchBar/form/CapitalSelect'\r\nimport FlowDisplay from '@/components/Flow/flowDisplay'\r\nimport FlowAttitude from '@/components/Flow/flowAttitude'\r\nimport Detailsedit from '@/components/Detailsedit'\r\nexport default {\r\n  name: 'ImprestApplicationDetails',\r\n  components: {\r\n    FlowDisplay,\r\n    FlowAttitude,\r\n    Detailsedit,\r\n    CapitalSelect\r\n  },\r\n  data() {\r\n    return {\r\n      type: 'details', // 审核:approval 详情:details 支付:pay\r\n      size: 'mini',\r\n      capitalType: 1,\r\n      amount: '',\r\n      filter: {\r\n        stateOptions: [ // 状态数组\r\n        ]\r\n      },\r\n      activeNames: ['0', '1', '2'], // 展开的折叠面板\r\n      saveLoading: false,\r\n      payLoading: false,\r\n      myDetails: null, // 详情数据\r\n      billFlowData: null, // 流程信息\r\n      attitudePara: null, // 审批信息\r\n      showPayButton: false\r\n    }\r\n  },\r\n  computed: {\r\n    /**\r\n     * 详情各字段计算\r\n     */\r\n    infoList() {\r\n      const {\r\n        myDetails: {\r\n          orgStr,\r\n          imprestType,\r\n          capitalType,\r\n          data: {\r\n            person,\r\n            number,\r\n            amount,\r\n            isBalanceAdjust,\r\n            applicationAmount,\r\n            bank,\r\n            account,\r\n            remark,\r\n            summary,\r\n            upFile,\r\n            createUserName,\r\n            createDate,\r\n            lastEditUserName,\r\n            lastEditDate,\r\n            payoutUserName,\r\n            payoutDate,\r\n            submitUserName,\r\n            submitDate,\r\n            state\r\n          }\r\n\r\n        }\r\n      } = this\r\n\r\n      const m = (val) => this.utils.formatMoney(val, 2, 0)\r\n      // const d = (dataStr) => dataStr ? this.$moment(dataStr).format('YYYY-MM-DD') : dataStr\r\n      const a = this.utils.amountInWords\r\n      const info = [\r\n        { label: '制单人', value: createUserName },\r\n        { label: '制单时间', value: createDate },\r\n        { label: '提交人', value: submitUserName },\r\n        { label: '提交时间', value: submitDate },\r\n        { label: '支付人', value: payoutUserName },\r\n        { label: '支付时间', value: payoutDate },\r\n        { label: '更新人', value: lastEditUserName },\r\n        { label: '更新时间', value: lastEditDate },\r\n        { label: '状态', value: this.filter.stateOptions.find(item => item.value === state).name }\r\n      ]\r\n      return [\r\n        { label: '编号', value: number },\r\n        { label: '部门', value: orgStr },\r\n        { label: '工号', value: person.number },\r\n        { label: '姓名', value: person.name },\r\n        { label: '申请金额', value: m(applicationAmount) },\r\n        { label: '金额大写', value: a(applicationAmount) },\r\n        { label: '批准金额', value: m(amount) },\r\n        { label: '金额大写', value: a(amount) },\r\n        { label: '类别', value: imprestType },\r\n        { label: '余额调整', value: isBalanceAdjust ? '是' : '否' },\r\n        { label: '用途', value: summary },\r\n        { label: '开户行', value: bank },\r\n        { label: '账号', value: account },\r\n        { label: '支付方式', value: capitalType },\r\n        { label: '备注', value: remark, monopolize: true },\r\n        { label: '附件', value: upFile || [], component: 'UpFile', monopolize: true },\r\n        ...(state === 10000 ? info : [])\r\n      ]\r\n    }\r\n  },\r\n  beforeRouteEnter(to, from, next) {\r\n    next(vm => {\r\n      vm.initData()\r\n    })\r\n  },\r\n  // watch: {\r\n  //   '$route.query.type'(val) {\r\n  //     this.type = val\r\n  //   }\r\n  // },\r\n  methods: {\r\n    // 作废\r\n    invalidForm() {\r\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        return DeleteImprestAppliaction({ id: this.myId })\r\n      }).then(() => {\r\n        this.$message.success('操作成功')\r\n        this.back()\r\n      })\r\n    },\r\n    saveFlow() {\r\n      this.$confirm('是否确定保存？', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        const attitude = this.$refs.flowAttitude.getPostData()\r\n        if (attitude.attitudeType === 1 || attitude.attitudeType === 2) {\r\n          if (!this.amount) {\r\n            return this.$message.error('请填写批准金额')\r\n          }\r\n          if (Number(this.amount) > this.myDetails.data.applicationAmount) {\r\n            return this.$message.error('批准金额不能大于申请金额')\r\n          }\r\n        }\r\n        this.saveLoading = true\r\n\r\n        CheckImprestAppliaction({ attitude, id: this.myDetails.data.id, amount: this.amount }).then(res => {\r\n          if (res.code === 200) {\r\n            this.$message.success(res.message)\r\n            this.goBack() // 跳转\r\n          } else {\r\n            this.$message.error(res.message)\r\n          }\r\n        }).finally(() => {\r\n          this.saveLoading = false\r\n        })\r\n      })\r\n    },\r\n    wantToPay2() {\r\n      this.$confirm('确定要支付吗?', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.payLoading = true\r\n        const { data: { id }} = this.myDetails\r\n        const attitudeData = this.$refs.flowAttitude.getPostData()\r\n        PayFor({ attitude: attitudeData, id, capitalType: this.capitalType }).then(res => {\r\n          if (res.code === 200) {\r\n            this.$message.success(res.message)\r\n            this.goBack() // 跳转\r\n          } else {\r\n            this.$message.error(res.message)\r\n          }\r\n        }).finally(() => {\r\n          this.payLoading = false\r\n        })\r\n      })\r\n    },\r\n    /**\r\n     * @description: 初始化数据\r\n     */\r\n    initData() {\r\n      const { id, type } = this.$route.query\r\n      this.type = type\r\n      this.myId = id\r\n      this.fetchData()\r\n    },\r\n    /**\r\n     * 提交审批意见以后的回调函数\r\n     */\r\n    updateFlow() {\r\n      // 直接返回\r\n      this.goBack()\r\n    },\r\n    /**\r\n     * 获取详情信息\r\n     */\r\n    async fetchData() {\r\n      if (!this.myId) return\r\n      GetImprestAppliactionAttitudeById({ id: this.myId }).then(res => {\r\n        this.billFlowData = res.billFlowData\r\n        this.filter.stateOptions = res.billFlowData?.form?.formState || []\r\n        this.myDetails = res\r\n        this.capitalType = res.capitalType || this.capitalType\r\n        this.amount = res?.data?.amount || ''\r\n        this.showPayButton = res.showPayButton\r\n        this.attitudePara = { formId: res.billFlowData.formId, billFlowId: res.data.billFlowId, planId: res.data.id }\r\n        this.$nextTick(() => {\r\n          this.$refs['flowAttitude'].ruleForm.content = res.showPayButton ? '已支付' : ''\r\n        })\r\n      }).catch(e => {\r\n        console.log('fetchData:请求列表数据失败，错误信息：', e)\r\n      })\r\n    },\r\n    /**\r\n     * 作废\r\n     */\r\n    // deleteIt() {\r\n    //   this.$confirm('作废以后将无法编辑和审批，是否确定作废？', '提示', {\r\n    //     type: 'warning'\r\n    //   }).then(() => {\r\n    //     return DeleteImprestAppliaction({ id: this.myId })\r\n    //   }).then((res) => {\r\n    //     this.$message.success(res.message)\r\n\r\n    //     this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    //   }).catch(err => {\r\n    //     console.log(err)\r\n    //     // this.$message.error(err.errorMsg || '操作失败')\r\n    //   })\r\n    // },\r\n    goBack() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    }\r\n  }\r\n}\r\n",null]}