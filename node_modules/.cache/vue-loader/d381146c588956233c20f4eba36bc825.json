{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\jcsj\\components\\userDataRange.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\jcsj\\components\\userDataRange.vue","mtime":1624613416892},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getTree, findPNode } from '@/utils/index'\r\nimport { addUserOrg, getUserDataRange } from '@/api/xtgl/role'\r\n\r\nexport default {\r\n  name: 'UserDataRange',\r\n  components: {\r\n  },\r\n  props: {\r\n    id: {\r\n      type: Number,\r\n      default: null\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      list: null,\r\n      buttonLoading: false,\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'name'\r\n      },\r\n      userOrg: [],\r\n      orgList: []\r\n    }\r\n  },\r\n  activated() {\r\n    if (this.$route.params.id) {\r\n      this.fetchData()\r\n      this.refreshRouterName = this.$route.params.refreshRouterName\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchData()\r\n  },\r\n  methods: {\r\n    fetchData() {\r\n      this.buttonLoading = true\r\n      var postData = {}\r\n      postData.userId = this.id\r\n      getUserDataRange(postData).then(response => {\r\n        const { data1, data2 } = response\r\n        this.orgList = data2\r\n        this.list = getTree(0, data2)\r\n        this.userOrg = data1\r\n        // 默认设置\r\n        var orgIdArray = this.userOrg.map(m => m.organizationId)\r\n        this.$refs.tree.setCheckedKeys(orgIdArray)\r\n        this.buttonLoading = false\r\n      }).catch(() => { this.buttonLoading = false })\r\n    },\r\n    closeThePage() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    },\r\n    save() {\r\n      var nodes = this.$refs.tree.getCheckedNodes()\r\n      if (!nodes) {\r\n        this.$message('请选择用户范围权限')\r\n        return\r\n      }\r\n      // console.log('nodes:', nodes)\r\n      const arr = []\r\n      nodes.forEach(ele => {\r\n        // 取最大父节点\r\n        const pNodes = findPNode(this.orgList, ele.id)\r\n        const pNode = pNodes.find(f => f.pid === 0)\r\n        // 添加到数组\r\n        arr.push({ userId: this.$route.query.id, companyId: pNode.id, organizationId: ele.id })\r\n      })\r\n      // console.log('拼装后的userorgList：', arr)\r\n      this.buttonLoading = true\r\n      addUserOrg(arr).then(response => {\r\n        this.$message(response.message)\r\n        this.buttonLoading = false\r\n      }).catch(() => { this.buttonLoading = false })\r\n    }\r\n  }\r\n}\r\n",null]}