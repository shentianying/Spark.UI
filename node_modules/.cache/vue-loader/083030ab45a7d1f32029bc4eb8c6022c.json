{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\rsgl\\gwc\\postPoolDetailAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\rsgl\\gwc\\postPoolDetailAdd.vue","mtime":1624235471655},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getPostList } from '@/api/rsgl/post'\r\nimport { getPostPoolList, getPostPoolById, getPostPoolDetailList } from '@/api/rsgl/postPool'\r\nexport default {\r\n  name: 'PostPoolDetailAdd',\r\n  components: {\r\n\r\n  },\r\n  props: {\r\n    obj: {\r\n      type: Object,\r\n      default: null\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        postId: null,\r\n        post: null,\r\n        qualifications: '',\r\n        postDuty: '',\r\n        adminLeaderId: null,\r\n        lineLeaderId: null,\r\n        roleId: 0\r\n      },\r\n      buttonLoading: false,\r\n      comName: '',\r\n      postList: [],\r\n      leaderList: null,\r\n      postPoolDetailList: null,\r\n      rules: {\r\n        postId: [{ required: true, message: '请选择', trigger: 'blur' }],\r\n        adminLeaderId: [{ required: true, message: '请选择', trigger: 'blur' }],\r\n        lineLeaderId: [{ required: true, message: '请选择', trigger: 'blur' }]\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n\r\n  },\r\n  mounted() {\r\n    getPostList().then(response => {\r\n      const { data } = response\r\n      this.postList = data\r\n    })\r\n    getPostPoolDetailList().then(response => {\r\n      const { data } = response\r\n      this.postPoolDetailList = data\r\n      this.initData()\r\n    })\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n          // 级联中最后一个id\r\n          var computeradminLeaderId = this.ruleForm.adminLeaderId[this.ruleForm.adminLeaderId.length - 1]\r\n          newObj.adminLeaderId = computeradminLeaderId\r\n          var computerlineLeaderId = this.ruleForm.lineLeaderId[this.ruleForm.lineLeaderId.length - 1]\r\n          newObj.lineLeaderId = computerlineLeaderId\r\n          newObj.post = this.postList.find(f => f.id === newObj.postId)\r\n          // console.log('修改后返回的值:', newObj)\r\n          if (this.obj) {\r\n            this.$emit('dialogClose', newObj, 'update')\r\n          } else {\r\n            this.$emit('dialogClose', newObj, 'add')\r\n          }\r\n        }\r\n      })\r\n    },\r\n    initData() {\r\n      const promise = this.getLeader()\r\n      if (this.obj) {\r\n        promise.then(() => {\r\n          var newObj = JSON.parse(JSON.stringify(this.obj))\r\n          this.ruleForm = newObj\r\n          // 拼接岗位池id成二级数组，来匹配 选岗位池 级联菜单\r\n          var adminLeaderIdArray = []\r\n          if (newObj.adminLeaderId !== -1) {\r\n            // getPostPoolDetailById({ id: newObj.adminLeaderId }).then(response => {\r\n            //   const { data } = response\r\n            //   adminLeaderIdArray.push(data.postPoolId)\r\n            // })\r\n            const adminpostPoolId = this.postPoolDetailList.find(f => f.id === newObj.adminLeaderId).postPoolId\r\n            adminLeaderIdArray.push(adminpostPoolId)\r\n          }\r\n          adminLeaderIdArray.push(newObj.adminLeaderId)\r\n          this.ruleForm.adminLeaderId = adminLeaderIdArray\r\n\r\n          var lineLeaderIdArray = []\r\n          if (newObj.lineLeaderId !== -1) {\r\n            // getPostPoolDetailById({ id: newObj.lineLeaderId }).then(response => {\r\n            //   const { data } = response\r\n            //   lineLeaderIdArray.push(data.postPoolId)\r\n            // })\r\n            const leaderPostPoolId = this.postPoolDetailList.find(f => f.id === newObj.lineLeaderId).postPoolId\r\n            lineLeaderIdArray.push(leaderPostPoolId)\r\n          }\r\n          lineLeaderIdArray.push(newObj.lineLeaderId)\r\n          this.ruleForm.lineLeaderId = lineLeaderIdArray\r\n        })\r\n      }\r\n    },\r\n    getLeader() {\r\n      const pro1 = new Promise((resolve, reject) => {\r\n        getPostPoolList().then(response => {\r\n          const { data } = response\r\n          this.leaderList = data.map((value, i) => {\r\n            var child = []\r\n            getPostPoolById({ id: value.id }).then(response => {\r\n              const { data } = response\r\n              data.postPoolDetail.forEach(e => {\r\n                child.push({\r\n                  value: e.id,\r\n                  label: e.post.name\r\n                })\r\n              })\r\n            })\r\n\r\n            return {\r\n              value: value.id,\r\n              label: value.name,\r\n              children: child\r\n            }\r\n          })\r\n          this.leaderList.push({\r\n            value: -1,\r\n            label: '无'\r\n          })\r\n          // console.log(this.leaderList)\r\n          resolve()\r\n        }).catch(() => { reject() })\r\n      })\r\n      return pro1\r\n    }\r\n  }\r\n}\r\n",null]}