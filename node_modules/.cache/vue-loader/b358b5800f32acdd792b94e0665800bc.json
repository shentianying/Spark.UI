{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\task\\taskDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\task\\taskDetail.vue","mtime":1627105574193},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getCGTaskById, checkCGTaskById } from '@/api/cggl/task'\r\nimport UpFile from '@/components/UpLoad/UpFile'\r\nexport default {\r\n  name: 'TaskDetail',\r\n  components: {\r\n    UpFile\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        number: '',\r\n        planId: null,\r\n        planNumber: '',\r\n        orgId: null,\r\n        orgStr: '',\r\n        materialTypeName: '',\r\n        buyerId: null,\r\n        fileList: [],\r\n        remark: ''\r\n      },\r\n      isCheck: false,\r\n      loading: false,\r\n      showbuttons: false,\r\n      loadFlow: false,\r\n      dialogTableVisible: false,\r\n      dialogTitle: '保存',\r\n      dialogWidth: '70%',\r\n      currentRow: null,\r\n      listIndex: 0,\r\n      list: [],\r\n      attitudePara: null,\r\n      fileList: [],\r\n      columnShow: { unit2: true,\r\n        brand: true,\r\n        model: true,\r\n        spec: true,\r\n        thickness: true,\r\n        texture: true,\r\n        surfaceTreatment: true,\r\n        designNumber: true\r\n      },\r\n      rules: {\r\n        // number: [{ required: true, message: '请输入', trigger: 'blur' }],\r\n        // buyerId: [{ required: true, message: '请输入', trigger: 'change' }]\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    getOrgList() {\r\n      return this.$store.state.user.info.orgList\r\n    }\r\n  },\r\n  watch: {\r\n    // 'ruleForm.orgId': {\r\n    //   handler: function(value, oldvalue) {\r\n    //     if (!oldvalue) {\r\n    //       this.$refs['ruleForm'].validateField('orgId', (valid) => {})\r\n    //     }\r\n    //   }, deep: true\r\n    // }\r\n  },\r\n  activated() {\r\n  },\r\n  mounted() {\r\n    this.initData()\r\n    if (this.$route.params.isCheck === true) {\r\n      this.isCheck = true\r\n    }\r\n  },\r\n  methods: {\r\n    async initData() {\r\n      if (this.$route.params.id) {\r\n        this.loading = true\r\n        getCGTaskById({ id: this.$route.params.id }).then(response => {\r\n          const { data, orgStr } = response\r\n          this.ruleForm = {\r\n            number: data.number,\r\n            person: data.person.name,\r\n            orgId: data.orgId,\r\n            orgStr: orgStr,\r\n            fileList: data.upFile.filter(f => f.tableId === data.id),\r\n            remark: data.remark\r\n          }\r\n          var pom = []\r\n          data.planDetails.forEach(e => {\r\n            pom.push({\r\n              id: e.id,\r\n              categoryId: e.material.categoryId,\r\n              category: { id: e.material.categoryId,\r\n                name: e.material.materialCategory.name,\r\n                unit: e.material.materialCategory.unit,\r\n                isMain: e.material.materialCategory.isMain },\r\n              unit: e.material.unit,\r\n              unit2: e.material.unit2,\r\n              brand: e.material.brand,\r\n              model: e.material.model,\r\n              spec: e.material.spec,\r\n              thickness: e.material.thickness,\r\n              texture: e.material.texture,\r\n              surfaceTreatment: e.material.surfaceTreatment,\r\n              designNumber: e.material.designNumber,\r\n              applicationQuantity: e.applicationQuantity,\r\n              applicationQuantity2: e.applicationQuantity2,\r\n              quantity: e.quantity,\r\n              quantity2: e.quantity2,\r\n              entryDate: e.entryDate,\r\n              remark: e.remark,\r\n              state: e.state\r\n            })\r\n          })\r\n          this.list = pom\r\n        })\r\n        this.loading = false\r\n        this.setColumnShow()\r\n      }\r\n    },\r\n    closeThePage() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    },\r\n    setColumnShow() { // 设置列的显示。列中，都没有值，就隐藏\r\n      var modelunit2 = false\r\n      var modelbrand = false\r\n      var modelmodel = false\r\n      var modelspec = false\r\n      var modelthickness = false\r\n      var modeltexture = false\r\n      var modelsurfaceTreatment = false\r\n      var modeldesignNumber = false\r\n      for (var row of this.list) {\r\n        if (row.unit2) { modelunit2 = true }\r\n        if (row.brand) { modelbrand = true }\r\n        if (row.model) { modelmodel = true }\r\n        if (row.spec) { modelspec = true }\r\n        if (row.thickness) { modelthickness = true }\r\n        if (row.texture) { modeltexture = true }\r\n        if (row.surfaceTreatment) { modelsurfaceTreatment = true }\r\n        if (row.designNumber) { modeldesignNumber = true }\r\n      }\r\n      this.columnShow['unit2'] = modelunit2\r\n      this.columnShow['brand'] = modelbrand\r\n      this.columnShow['model'] = modelmodel\r\n      this.columnShow['spec'] = modelspec\r\n      this.columnShow['thickness'] = modelthickness\r\n      this.columnShow['texture'] = modeltexture\r\n      this.columnShow['surfaceTreatment'] = modelsurfaceTreatment\r\n      this.columnShow['designNumber'] = modeldesignNumber\r\n    },\r\n    // showFileList(fileList) {\r\n    //   this.dialogTitle = '附件列表'\r\n    //   this.comName = 'UpFile'\r\n    //   this.dialogWidth = '50%'\r\n    //   this.fileList = fileList\r\n    //   this.dialogTableVisible = true\r\n    // },\r\n    dialogClose() {\r\n      this.initData()\r\n      this.dialogTableVisible = false\r\n    },\r\n    check() {\r\n      this.loading = true\r\n      checkCGTaskById({ id: this.$route.params.id }).then(response => {\r\n        if (response.result === 400) {\r\n          this.$alert(`${response.msg.replace(/；/g, '；<br />')}`,\r\n            { dangerouslyUseHTMLString: true })\r\n        } else {\r\n          this.$message(response.message)\r\n        }\r\n        this.loading = false\r\n        this.closeThePage()\r\n      }).catch(() => { this.loading = false })\r\n    }\r\n  }\r\n}\r\n",null]}