{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\jcsj\\user.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\jcsj\\user.vue","mtime":1635216068846},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getPersonPaging, setDefaultPassword } from '@/api/rsgl/person'\r\nimport SelectRole from '@/views/xtgl/qxgl/component/selectRole'\r\nimport OrgSelect2 from '@/components/OrgSelect/index2'\r\nimport UserFrame from './userFrame'\r\nexport default {\r\n  name: 'Users',\r\n  components: {\r\n    SelectRole,\r\n    UserFrame,\r\n    OrgSelect2\r\n  },\r\n  data() {\r\n    return {\r\n      list: null,\r\n      listLoading: false,\r\n      dialogTableVisible: false,\r\n      currentRow: null,\r\n      total: 0,\r\n      currentPage: 1,\r\n      pageSize: this.utils.getPersonalSettings().pageSize,\r\n      searchText: '',\r\n      comName: '',\r\n      orgValue: [],\r\n      loadOrg: true\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchData()\r\n  },\r\n  activated() {\r\n    if (this.$route.params.refresh) {\r\n      this.fetchData()\r\n      this.loadOrg = false\r\n      this.$nextTick(() => {\r\n        this.loadOrg = true\r\n      })\r\n    }\r\n  },\r\n  methods: {\r\n    fetchData() {\r\n      this.listLoading = true\r\n      var postData = {}\r\n      postData.name = this.searchText\r\n      postData.currentPage = this.currentPage\r\n      postData.pageSize = this.pageSize\r\n      postData.orgId = this.orgValue\r\n\r\n      getPersonPaging(postData).then(response => {\r\n        const { data, count } = response\r\n        this.list = data\r\n        this.total = count\r\n        this.listLoading = false\r\n      }).catch(() => {\r\n        this.listLoading = false\r\n      })\r\n    },\r\n    goSearch() {\r\n      this.currentPage = 1\r\n      this.fetchData()\r\n    },\r\n    dialogClose() {\r\n      this.dialogTableVisible = false\r\n      this.fetchData()\r\n    },\r\n    handleAdd() {\r\n      // this.currentRow = null\r\n      // this.comName = 'AddUsers'\r\n      // this.dialogTableVisible = true\r\n\r\n      this.$router.push({ name: 'UserFrame', query: { id: 0, refreshRouterName: this.$route.name, showTag: 1 }})\r\n    },\r\n    handleEdit(row) {\r\n      // this.$router.push({ path: '/xtgl/users/addUsers', query: { userId: row.id }})\r\n      // this.$router.push({ name: 'AddUsers', query: { id: row.id, refreshRouterName: this.$route.name }, params: { id: row.id }})\r\n      this.$router.push({ name: 'UserFrame', query: { id: row.id, refreshRouterName: this.$route.name, tab: 'edit', showTag: 1 }, params: { id: row.id }})\r\n    },\r\n    setDefaultPassword(row) {\r\n      setDefaultPassword({ id: row.id }).then(response => {\r\n        this.$message(response.message)\r\n        this.fetchData()\r\n      })\r\n    },\r\n    handleAddRole(row) {\r\n      this.currentRow = row\r\n      this.comName = 'SelectRole'\r\n      this.dialogTableVisible = true\r\n    },\r\n    sizeChange(val) {\r\n      this.pageSize = val\r\n      this.fetchData()\r\n    }\r\n  }\r\n\r\n}\r\n",null]}