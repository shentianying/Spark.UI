{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\ywgl\\srht\\incomeContractEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\ywgl\\srht\\incomeContractEdit.vue","mtime":1635988261523},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { putIncomeContract, addIncomeContract, getIncomeContractEditInit, getIncomeContractById, getBillFlow, deleteIncomeContract, getBussinessInfoById } from '@/api/ywgl/incomeContract'\r\n// import { getProjectById } from '@/api/xmgl/project'\r\nimport { getTree } from '@/utils'\r\nimport UpFile from '@/components/UpLoad/UpFile'\r\nimport FlowSelect from '@/components/Flow/flowSelect'\r\nimport OrgSelect2 from '@/components/OrgSelect/index2'\r\nimport SelectBussinessInfo from '@/components/Other/ywgl/selectBussinessInfo'\r\nimport SelectProject from '@/components/Other/xmgl/selectProject'\r\nimport SelectPerson from '@/components/Other/selectPerson.vue'\r\nexport default {\r\n  name: 'IncomeContractEdit',\r\n  components: {\r\n    FlowSelect,\r\n    UpFile,\r\n    OrgSelect2,\r\n    SelectProject,\r\n    SelectBussinessInfo,\r\n    SelectPerson\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        id: 0,\r\n        number: '',\r\n        companyId: this.$store.state.user.selectOrgId,\r\n        orgId: null,\r\n        bussinessInfoId: null,\r\n        name: '',\r\n        projectProperty: null,\r\n        sourceType: null,\r\n        certificateProjectManager: null,\r\n        qualityGoal: '',\r\n        planSignDate: null,\r\n        taxType: null,\r\n        developer: '',\r\n        contractPrice: 0,\r\n        changePrice: 0,\r\n        address: '',\r\n        constructionArea: 0,\r\n        contractDuration: 0,\r\n        guaranteePeriod: 0,\r\n        retentionMoney: 0,\r\n        contractStartDate: null,\r\n        contractFinishDate: null,\r\n        estimatedProfit: 0,\r\n        constructionScope: '',\r\n        paymentTerms: '',\r\n        performanceGuarantee: '',\r\n        priceAdjust: '',\r\n        completionSettlement: '',\r\n        materialsFirst: '',\r\n        remark: '',\r\n        score: 0,\r\n        state: 0,\r\n        billFlowId: 0,\r\n        fileList: []\r\n      },\r\n      orgStr: '',\r\n      buildingStructure: '',\r\n      incomeContractId: null,\r\n\r\n      taxTypeList: [],\r\n      sourceTypeList: [],\r\n      projectPropertyList: [],\r\n      orgList: null,\r\n\r\n      attitudePara: null,\r\n      loadFlow: false,\r\n      billFlow: null,\r\n\r\n      certificateProjectManagerName: '',\r\n\r\n      active: 0,\r\n      loading: false,\r\n      rules: {\r\n        name: [{ required: true, message: '请输入', trigger: ['blur', 'change'] }],\r\n        orgId: [{ required: true, message: '请输入', trigger: 'blur' }],\r\n        contractPrice: [{ required: true, message: '请输入', trigger: 'blur' }],\r\n        certificateProjectManager: [{ required: true, message: '请输入', trigger: 'blur' }],\r\n        changePrice: [{ required: true, message: '请输入', trigger: 'blur' }],\r\n        planSignDate: [{ required: true, message: '请输入', trigger: 'change' }],\r\n        sourceType: [{ required: true, message: '请输入', trigger: 'change' }],\r\n        contractStartDate: [{ required: true, message: '请输入', trigger: 'change' }],\r\n        contractFinishDate: [{ required: true, message: '请输入', trigger: 'change' }]\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    'ruleForm.sourceType': {\r\n      handler: function(value) {\r\n        if (value === 3) { this.rules.changePrice[0].required = true } else { this.rules.changePrice[0].required = false }\r\n      },\r\n      immediate: true\r\n    }\r\n  },\r\n  activated() {\r\n    if (this.$route.params.id) {\r\n      this.ruleForm.orgId = null // 刷新 org 列表\r\n      this.initData()\r\n      this.refreshRouterName = this.$route.params.refreshRouterName\r\n    }\r\n  },\r\n  mounted() {\r\n    if (!this.$route.params.id) {\r\n      this.initData()\r\n      this.activate = true\r\n    }\r\n  },\r\n  methods: {\r\n    submitForm(formName, state) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n          let tempIds = []\r\n          if (newObj.fileList.length > 0) {\r\n            tempIds = newObj.fileList.map(m => {\r\n              return { id: m.id, addFlag: m.addFlag }\r\n            })\r\n          } else {\r\n            if (state === 1) {\r\n              this.$message('必须上传附件!')\r\n              return\r\n            }\r\n          }\r\n          newObj.fileList = tempIds\r\n          newObj.state = state\r\n\r\n          if (this.billFlow) {\r\n            // 获取流程组件中的数据\r\n            const billFlow = this.$refs.flowSelect.getBillFlow()\r\n            if (!billFlow) {\r\n              return false\r\n            }\r\n            newObj.billFlow = billFlow\r\n          } else {\r\n            this.$message('流程数据不能为空')\r\n            return\r\n          }\r\n          this.loading = true\r\n\r\n          if (this.incomeContractId) {\r\n            putIncomeContract(newObj).then(response => {\r\n              if (response.errorMsg) {\r\n              // 验证错误\r\n                this.$alert(`${response.errorMsg.replace(/；/g, '；<br />')}`,\r\n                  { dangerouslyUseHTMLString: true })\r\n                return\r\n              }\r\n              this.$message(response.message)\r\n              this.loading = false\r\n              this.closeThePage()\r\n            }).catch(() => {\r\n              this.loading = false\r\n              this.active = 0\r\n            })\r\n          } else {\r\n            addIncomeContract(newObj).then(response => {\r\n              if (response.errorMsg) {\r\n                // 验证错误\r\n                this.$alert(`${response.errorMsg.replace(/；/g, '；<br />')}`,\r\n                  { dangerouslyUseHTMLString: true })\r\n                return\r\n              }\r\n              this.$message(response.message)\r\n              this.loading = false\r\n              this.closeThePage()\r\n              // this.setData(response)\r\n            }).catch(() => {\r\n              this.loading = false\r\n              this.active = 0\r\n            })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    initData() {\r\n      // 有参数id 就是编辑\r\n      if (this.$route.query.id) {\r\n        this.incomeContractId = this.$route.query.id\r\n      }\r\n      new Promise((resolve, reject) => {\r\n        getIncomeContractEditInit().then(response => {\r\n          const { orgList, result1, result2, result3 } = response\r\n          this.orgList = orgList\r\n          this.sourceTypeList = result1\r\n          this.taxTypeList = result3\r\n          result2.forEach(element => {\r\n            element.pid = element.pId\r\n            element.label = element.name\r\n          })\r\n          this.projectPropertyList = getTree(0, result2)\r\n          resolve(orgList)\r\n        })\r\n      }).then(orgList => {\r\n        if (this.incomeContractId) {\r\n          getIncomeContractById({ id: this.incomeContractId }).then(response => {\r\n            const { data } = response\r\n            this.ruleForm = data\r\n            this.certificateProjectManagerName = data.person.name\r\n            if (data.upFile) {\r\n              this.ruleForm.fileList = data.upFile\r\n            }\r\n            this.orgStr = data.organization.name\r\n            this.keyProjectProperty += 1\r\n          })\r\n        }\r\n      }).catch(() => {\r\n        this.$message.error('信息错误')\r\n      })\r\n    },\r\n    getDynamicFlow(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n          console.log(newObj)\r\n          getBillFlow(newObj).then(response => {\r\n            if (response.success) {\r\n              this.billFlow = response.data.billFlow\r\n              this.active = 1\r\n            } else {\r\n              this.$message(response.message)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    previous() {\r\n      // 上一步\r\n      this.active--\r\n      this.billFlow = null\r\n    },\r\n    cancel() {\r\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.active = 2\r\n        this.loading = true\r\n        deleteIncomeContract({ id: this.ruleForm.id }).then(response => {\r\n          this.$message(response.message)\r\n          this.loading = false\r\n          this.closeThePage()\r\n        })\r\n      }).catch(() => {})\r\n    },\r\n    closeThePage() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    },\r\n    selectChange(val) {\r\n      this.ruleForm.bussinessInfoId = 0\r\n      this.ruleForm.name = ''\r\n      this.orgStr = ''\r\n      this.ruleForm.orgId = null\r\n      this.ruleForm.companyId = this.$store.state.user.selectOrgId\r\n      this.ruleForm.contractPrice = 0\r\n      this.ruleForm.estimatedProfit = 0\r\n      this.selectValue = []\r\n    },\r\n    dayDiff() {\r\n      if (this.ruleForm.contractStartDate && this.ruleForm.contractFinishDate) {\r\n        var dateBegin = new Date(this.ruleForm.contractStartDate)\r\n        var dateEnd = new Date(this.ruleForm.contractFinishDate)\r\n        var dateDiff = dateEnd.getTime() - dateBegin.getTime() // 时间差的毫秒数\r\n        var dayDiff = Math.floor(dateDiff / (24 * 3600 * 1000)) // 计算出相差天数\r\n        this.ruleForm.contractDuration = dayDiff\r\n      }\r\n    },\r\n    selectBussinessInfo() {\r\n      this.$refs.bussinessInfoRef.openDialog()\r\n    },\r\n    selectProject() {\r\n      this.$refs.projectRef.openDialog()\r\n    },\r\n    selectPerson() {\r\n      this.$refs.personRef.openDialog()\r\n    },\r\n    getBussinessInfo(data) {\r\n      if (data.length > 0) {\r\n        this.ruleForm.bussinessInfoId = data[0].id\r\n        this.ruleForm.name = data[0].projectName\r\n        this.ruleForm.orgId = data[0].orgId\r\n        this.ruleForm.companyId = data[0].companyId\r\n        this.orgStr = data[0].orgStr\r\n        getBussinessInfoById({ id: this.ruleForm.bussinessInfoId }).then((response) => {\r\n          const { data } = response\r\n          if (data) {\r\n            this.ruleForm.contractPrice = data.planForeignQuotation\r\n            this.ruleForm.estimatedProfit = data.estimatedProfit\r\n          }\r\n        })\r\n      }\r\n    },\r\n    getProject(data) {\r\n      if (data.length > 0) {\r\n        this.ruleForm.bussinessInfoId = data[0].id\r\n        this.ruleForm.name = data[0].name\r\n        this.ruleForm.orgId = data[0].orgId\r\n        this.ruleForm.companyId = data[0].companyId\r\n        this.orgStr = data[0].orgStr\r\n      }\r\n    },\r\n    getPersons(data) {\r\n      if (data.length > 0) {\r\n        this.ruleForm.certificateProjectManager = data[0].id\r\n        this.certificateProjectManagerName = data[0].name\r\n      }\r\n    }\r\n  }\r\n}\r\n",null]}