{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\ggzx\\grgl\\worker\\workType\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\ggzx\\grgl\\worker\\workType\\edit.vue","mtime":1635749455676},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getAllList, saveData } from '@/api/ggzx/workType'\r\nimport { getTree } from '@/utils/index'\r\nimport Treeselect from '@riophae/vue-treeselect'\r\nimport '@riophae/vue-treeselect/dist/vue-treeselect.css'\r\nexport default {\r\n  name: 'WorkTypeEdit',\r\n  components: {\r\n    // OrgSelect2\r\n    Treeselect\r\n  },\r\n  props: {\r\n    obj: {\r\n      type: Object,\r\n      default: null\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        pid: 0,\r\n        name: '',\r\n        // value: '',\r\n        sort: '',\r\n        remark: '',\r\n        inUse: true\r\n      },\r\n      treeList: null,\r\n      buttonLoading: false,\r\n      isLoad: false,\r\n      rules: {\r\n        // path: [{ required: true, message: '请输入活动名称', trigger: 'blur' }],\r\n        // name: [{ required: true, message: '请输入路由名称', trigger: 'blur' }],\r\n        // component: [\r\n        //   { required: true, message: '请选择活动区域', trigger: 'blur' }\r\n        // ]\r\n      }\r\n    }\r\n  },\r\n  wathch: {\r\n\r\n  },\r\n  mounted() {\r\n    this.initData()\r\n    this.initTree()\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n          this.buttonLoading = true\r\n          if (this.obj) {\r\n            newObj.id = this.obj.id\r\n          }\r\n          saveData(newObj).then(response => {\r\n            this.$message(response.message)\r\n            this.buttonLoading = true\r\n            this.$emit('dialogClose')\r\n          }).catch(() => { this.buttonLoading = false })\r\n        }\r\n      })\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields()\r\n    },\r\n    initData() {\r\n      if (this.obj) {\r\n        var newObj = JSON.parse(JSON.stringify(this.obj))\r\n        // newObj.inUse = newObj.inUse ? 'true' : 'false'\r\n        this.ruleForm = newObj\r\n        console.log('传过来的数据：', newObj)\r\n      }\r\n    },\r\n    initTree() {\r\n      this.listLoading = true\r\n      getAllList().then(response => {\r\n        response.data.forEach(ele => {\r\n          ele.label = ele.name\r\n        })\r\n        // this.treeList = response.data\r\n        this.isLoad = true\r\n        // console.log('树形结构：', this.treeList)\r\n        const result = getTree(0, response.data)\r\n        this.treeList = [{ id: 0, pid: 0, label: '一级根目录', children: result }]\r\n        this.listLoading = false\r\n      })\r\n    },\r\n    /**\r\n     * 设置禁用\r\n     */\r\n    my_normalizer(node) {\r\n      if (node.id !== 0 && node.pid !== 0) {\r\n        node.isDisabled = true\r\n      } else {\r\n        node.isDisabled = false\r\n      }\r\n      console.log(node)\r\n      return node\r\n    }\r\n  }\r\n}\r\n",null]}