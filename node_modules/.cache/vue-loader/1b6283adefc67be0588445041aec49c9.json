{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\contract\\contractEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\contract\\contractEdit.vue","mtime":1628661590176},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getContractById, addContract, putContract, getBillFlow, deleteContract } from '@/api/cggl/contract'\r\nimport OrgSelect2 from '@/components/OrgSelect/index2'\r\nimport UpFile from '@/components/UpLoad/UpFile'\r\nimport FlowSelect from '@/components/Flow/flowSelect'\r\nimport FlowDisplay from '@/components/Flow/flowDisplay'\r\nimport FlowAttitude from '@/components/Flow/flowAttitude'\r\nimport QuotationSuppliersCheck from '@/views/cggl/quotation/quotationSuppliersCheck'\r\nexport default {\r\n  name: 'ContractEdit',\r\n  components: {\r\n    OrgSelect2,\r\n    UpFile,\r\n    FlowSelect,\r\n    FlowDisplay,\r\n    FlowAttitude,\r\n    QuotationSuppliersCheck\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        id: 0,\r\n        number: '',\r\n        orgId: null,\r\n        fileList: [],\r\n        quotation: {},\r\n        supplier: {}\r\n      },\r\n      loading: false,\r\n      activate: true,\r\n      active: 0,\r\n      dialogTableVisible: false,\r\n      dialogTitle: '保存',\r\n      dialogWidth: '70%',\r\n      comName: 'PlanDetailAdd',\r\n      currentRow: null,\r\n      list: [],\r\n      payModes: [],\r\n      billFlow: null,\r\n      attitudePara: null,\r\n      loadFlow: false,\r\n      orgKey: 0,\r\n      fileListKey: 0,\r\n      columnShow: { unit2: true,\r\n        brand: true,\r\n        model: true,\r\n        spec: true,\r\n        thickness: true,\r\n        texture: true,\r\n        surfaceTreatment: true,\r\n        designNumber: true },\r\n      rules: {\r\n        // orgId: [{ required: true, message: '请输入', trigger: 'change' }],\r\n        // quotationNumber: [{ required: true, message: '请选择', trigger: 'blur' }],\r\n        howSupply: [{ required: true, message: '请输入', trigger: 'blur' }],\r\n        breachDuty: [{ required: true, message: '请输入', trigger: 'blur' }],\r\n        contractDate: [{ required: true, message: '请输入', trigger: 'blur' }]\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n  },\r\n  activated() {\r\n    this.initData()\r\n  },\r\n  mounted() {\r\n  },\r\n  methods: {\r\n    // 根据表单获取流程\r\n    getDynamicFlow() {\r\n      this.$refs['ruleForm'].validate(valid => {\r\n        if (valid) {\r\n          this.loading = true\r\n          this.ruleForm.orgId = this.ruleForm.quotation.orgId\r\n          var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n          var postData = {}\r\n          postData.number = newObj.number\r\n          postData.contractDate = newObj.contractDate\r\n          postData.orgId = newObj.orgId\r\n          postData.quotationId = newObj.quotation.id\r\n          postData.supplierId = newObj.supplier.id\r\n          postData.howSupply = newObj.howSupply\r\n          postData.breachDuty = newObj.breachDuty\r\n          postData.explain = newObj.explain\r\n          postData.billFlowId = newObj.billFlowId\r\n          if (this.id) {\r\n            postData.id = this.id\r\n          }\r\n          getBillFlow(postData).then(response => {\r\n            this.loading = false\r\n            if (response.success) {\r\n              this.billFlow = response.data.billFlow\r\n              this.active = 1\r\n            } else {\r\n              this.$message(response.message)\r\n            }\r\n          }).catch(() => { this.loading = false })\r\n        }\r\n      })\r\n    },\r\n    submitForm(state) {\r\n      this.$refs['ruleForm'].validate(valid => {\r\n        if (valid) {\r\n          this.ruleForm.state = state\r\n          this.loading = true\r\n          this.ruleForm.orgId = this.ruleForm.quotation.orgId\r\n          var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n          var postData = {}\r\n          postData.contractDate = newObj.contractDate\r\n          postData.orgId = newObj.orgId\r\n          postData.quotationId = newObj.quotation.id\r\n          postData.supplierId = newObj.supplier.id\r\n          postData.howSupply = newObj.howSupply\r\n          postData.breachDuty = newObj.breachDuty\r\n          postData.explain = newObj.explain\r\n          var pom = []\r\n          this.list.forEach(e => {\r\n            pom.push({\r\n              planDetailId: e.planDetail.id,\r\n              materialId: e.materialId,\r\n              quantity: e.quantity,\r\n              quantity2: e.quantity2,\r\n              taxExclusivePrice: e.taxExclusivePrice,\r\n              taxInclusivePrice: e.taxInclusivePrice,\r\n              taxRate: e.taxRate,\r\n              taxExclusiveAmount: e.taxExclusiveAmount,\r\n              taxInclusiveAmount: e.taxInclusiveAmount,\r\n              tax: e.tax,\r\n              remark: e.remark\r\n            })\r\n          })\r\n          var pom2 = []\r\n          this.payModes.forEach(e => {\r\n            pom2.push({\r\n              requirement: e.requirement,\r\n              scale: e.scale,\r\n              days: e.days,\r\n              remark: e.property\r\n            })\r\n          })\r\n          postData.contractDate = newObj.contractDate\r\n          postData.orgId = newObj.orgId\r\n          postData.supplierId = newObj.supplier.id\r\n          postData.quotationId = newObj.quotation.id\r\n          postData.howSupply = newObj.howSupply\r\n          postData.breachDuty = newObj.breachDuty\r\n          postData.explain = newObj.explain\r\n          postData.contractDetails = pom\r\n          postData.contractPayModes = pom2\r\n          postData.fileList = newObj.fileList\r\n          postData.state = state\r\n          // 获取流程组件中的数据\r\n          if (state === 1) {\r\n            // 如果是提交，验证流程人员的完整信息\r\n            const checkBillFlow = this.$refs.flowSelect.checkBillFlow()\r\n            if (!checkBillFlow) {\r\n              this.$message('流程错误，流程中审批人员不能为空')\r\n              return false\r\n            }\r\n          }\r\n\r\n          const billFlow = this.$refs.flowSelect.getBillFlow()\r\n          console.log('获取的billFlow:', billFlow)\r\n          this.ruleForm.billFlow = billFlow\r\n          postData.billFlow = billFlow\r\n\r\n          if (this.id) {\r\n            postData.id = this.id\r\n            putContract(postData).then(response => {\r\n              this.closeThePage()\r\n            }).catch(() => { this.loading = false })\r\n          } else {\r\n            postData.id = 0\r\n            addContract(postData).then(response => {\r\n              this.closeThePage()\r\n            }).catch(() => { this.loading = false })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    previous() {\r\n      // 上一步\r\n      this.active = 0\r\n      this.billFlow = null\r\n    },\r\n    async initData() {\r\n      // 有参数id 就是编辑\r\n      if (this.$route.query.id) {\r\n        this.id = this.$route.query.id\r\n      }\r\n      if (this.id) {\r\n        this.loading = true\r\n        this.activate = false // 销毁部门组件\r\n        await getContractById({ id: this.id }).then(response => this.setData(response))\r\n      }\r\n      // 复制报价单信息\r\n      if (this.$route.params.ruleForm) {\r\n        this.loading = true\r\n        var data = this.$route.params.ruleForm\r\n        this.ruleForm.quotation = data\r\n        var supplier = data.quotationSuppliers.find(f => f.supplierId === data.recommendSupplier)\r\n        this.payModes = supplier.quotationSupplierPayModes\r\n        this.list = supplier.quotationSupplierDetails\r\n        if (this.$route.params.recommendSupplierList) {\r\n          this.ruleForm.supplier = this.$route.params.recommendSupplierList.find(f => f.id === data.recommendSupplier)\r\n        }\r\n        this.list.forEach(e => {\r\n          e.maxQuantity = e.quotationDetail.planDetail.applicationQuantity\r\n          e.maxQuantity2 = e.quotationDetail.planDetail.applicationQuantity2\r\n          e.planDetail = { id: e.quotationDetail.planDetailId }\r\n        })\r\n        this.setColumnShow()\r\n        this.loading = false\r\n      }\r\n    },\r\n    setData(response) {\r\n      const { data } = response\r\n      this.ruleForm = data\r\n      this.ruleForm.fileList = data.upFile\r\n      this.orgKey++ // 重新加载项目组件\r\n      this.fileListKey++ // 重新加载文件组件\r\n      // 填充 明细列表\r\n      this.list = data.contractDetails\r\n      this.list.forEach(e => {\r\n        e.quotationDetail = { planDetail: { id: e.planDetail.id, applicationQuantity: e.quantity, applicationQuantity2: e.quantity2 }}\r\n      })\r\n      this.payModes = data.contractPayModes\r\n      this.setColumnShow()\r\n      this.loading = false // loading 状态关闭\r\n      this.activate = true // 加载部门组件\r\n    },\r\n    closeThePage() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    },\r\n    setColumnShow() { // 设置列的显示。列中，都没有值，就隐藏\r\n      var modelunit2 = false\r\n      var modelbrand = false\r\n      var modelmodel = false\r\n      var modelspec = false\r\n      var modelthickness = false\r\n      var modeltexture = false\r\n      var modelsurfaceTreatment = false\r\n      var modeldesignNumber = false\r\n      for (var row of this.list) {\r\n        if (row.material.unit2) { modelunit2 = true }\r\n        if (row.material.brand) { modelbrand = true }\r\n        if (row.material.model) { modelmodel = true }\r\n        if (row.material.spec) { modelspec = true }\r\n        if (row.material.thickness) { modelthickness = true }\r\n        if (row.material.texture) { modeltexture = true }\r\n        if (row.material.surfaceTreatment) { modelsurfaceTreatment = true }\r\n        if (row.material.designNumber) { modeldesignNumber = true }\r\n      }\r\n      this.columnShow['unit2'] = modelunit2\r\n      this.columnShow['brand'] = modelbrand\r\n      this.columnShow['model'] = modelmodel\r\n      this.columnShow['spec'] = modelspec\r\n      this.columnShow['thickness'] = modelthickness\r\n      this.columnShow['texture'] = modeltexture\r\n      this.columnShow['surfaceTreatment'] = modelsurfaceTreatment\r\n      this.columnShow['designNumber'] = modeldesignNumber\r\n    },\r\n    checkQuotationSup() {\r\n      this.dialogTitle = '选择供应商报价单'\r\n      this.comName = 'QuotationSuppliersCheck'\r\n      this.currentRow = null\r\n      this.dialogWidth = '100%'\r\n      this.fileList = []\r\n      this.dialogTableVisible = true\r\n    },\r\n    dialogClose(data) {\r\n      this.dialogTableVisible = false\r\n    },\r\n    cancel() { // 作废\r\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.loading = true\r\n        deleteContract({ id: this.ruleForm.id }).then(response => {\r\n          this.$message(response.message)\r\n          this.loading = false\r\n          this.closeThePage()\r\n        })\r\n      }).catch(() => {})\r\n    },\r\n    openQuotation(id) {\r\n      this.$router.push({ name: 'QuotationAttitude', query: { id: id, refreshRouterName: this.$route.name }, params: { id: id }})\r\n    },\r\n    openSupplier(id) {\r\n      this.$router.push({ name: 'SupplierDetail', query: { id: id, refreshRouterName: this.$route.name }, params: { id: id }})\r\n    },\r\n    handleChange() {\r\n      //\r\n    },\r\n    add() {\r\n      var data = {\r\n        requirement: '',\r\n        days: '',\r\n        scale: '',\r\n        remark: ''\r\n      }\r\n      this.payModes.push(data)\r\n    },\r\n    del(d) {\r\n      // 列表删除\r\n      this.payModes.splice(d.$index, 1)\r\n    }\r\n  }\r\n}\r\n",null]}