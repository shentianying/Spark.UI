{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\zjgl\\FundAllocation\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\zjgl\\FundAllocation\\index.vue","mtime":1635749455637},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n// import { getBussinessInfoPaging, getBussinessInfoEditInit } from '@/api/ywgl/bussinessInfo'\r\nimport { GetFundAllocationPaging } from '@/api/cwgl/zjgl/FundAllocation.js'\r\nimport SearchBar from '@/components/SearchBar'\r\n// import searchData from './searchData'\r\nimport TableEx from '@/components/TableEx'\r\nexport default {\r\n  name: 'ZiJinDiaoBo',\r\n  components: {\r\n    SearchBar,\r\n    TableEx\r\n  },\r\n  data() {\r\n    return {\r\n      size: 'mini',\r\n      searchData: require('./searchData').default(), // 渲染搜索栏数据\r\n      lastSearch: null, // 最近一次搜索的数据\r\n      amount: 0, // 统计金额\r\n\r\n      filter: { // 过滤数据\r\n        type: '3', // 类型\r\n        typeOptions: [ // 类型数组\r\n          {\r\n            value: '0',\r\n            name: '我发起的'\r\n          },\r\n          {\r\n            value: '1',\r\n            name: '待审批'\r\n          },\r\n          {\r\n            value: '2',\r\n            name: '已审批'\r\n          },\r\n          {\r\n            value: '3',\r\n            name: '列表'\r\n          }\r\n        ]\r\n      },\r\n      /* 列表数据相关 */\r\n      table: {\r\n        columns: [\r\n          {\r\n            label: '编号', // 表头\r\n            prop: 'number', // 渲染的属性\r\n            class: 'link', // class\r\n            minWidth: '130', // 宽度\r\n            click: (row) => this.handleDetails(row)\r\n          },\r\n          {\r\n            label: '调出部门',\r\n            prop: 'orgIdObj.name',\r\n            minWidth: '130'\r\n          },\r\n          {\r\n            label: '调入部门',\r\n            prop: 'orgIdInObj.name',\r\n            minWidth: '100'\r\n          },\r\n          {\r\n            label: '金额',\r\n            align: 'right',\r\n            prop: 'amount',\r\n            format: 'money',\r\n            width: '100'\r\n          },\r\n          {\r\n            business: 'state' // 业务部分的快捷使用参考 src\\components\\TableEx\\Column\\businessList.js\r\n          },\r\n          {\r\n            label: '支付',\r\n            prop: 'payerId',\r\n            format: (val) => val ? '是' : '否',\r\n            width: '50'\r\n          },\r\n          {\r\n            label: '待处理',\r\n            prop: 'billFlow',\r\n            format: (billFlow) => this.getPerson(billFlow),\r\n            minWidth: '150'\r\n          },\r\n          {\r\n            business: 'createUser' // 业务部分的快捷使用参考 src\\components\\TableEx\\Column\\businessList.js\r\n          }\r\n        ],\r\n        list: [],\r\n        exLoading: false, // 导出loading\r\n        tbLoading: false, // table loading\r\n        total: 0,\r\n        currentPage: 1,\r\n        pageSize: this.utils.getPersonalSettings().pageSize\r\n      }\r\n    }\r\n  },\r\n  beforeRouteEnter(to, from, next) {\r\n    next(vm => {\r\n      vm.fetchData()\r\n    })\r\n  },\r\n  methods: {\r\n    fetchData(type) { // SearchBar 事件类型 重置:reset  搜索:search\r\n      switch (type) {\r\n        case 'filter':\r\n          this.table.currentPage = 1\r\n          break\r\n        case 'reset':\r\n        case 'search':\r\n          this.table.currentPage = 1\r\n          this.lastSearch = null\r\n          break\r\n      }\r\n      this.table.tbLoading = true\r\n      this.getTable()\r\n        .then(res => this.parseServeDate(res))\r\n        .finally(() => {\r\n          this.table.tbLoading = false\r\n        })\r\n    },\r\n    /**\r\n     * @description:表格导出功能\r\n     */\r\n    async exportExcel() {\r\n      const Excel = this.$refs['TableEx'].initExcel()\r\n      this.getTable(1, this.table.total).then(({ data }) => {\r\n        Excel.format([{ ...Excel.sheet[0], table: data }]).export()\r\n      }).catch(() => {\r\n        this.$message.error('导出失败')\r\n        Excel.cancel()\r\n      })\r\n    },\r\n    /**\r\n     * @description: 获取列表数据、搜索数据\r\n     * @return {*}\r\n     */\r\n    parseServeDate(response) {\r\n      const { data, count, totalAmount } = response\r\n      this.$refs['SearchBar'].setData('states', 'options', data[0]?.billFlow?.form?.formState, 'init')\r\n      this.amount = totalAmount\r\n      // 列表数据初始化\r\n      this.table.list = data\r\n      this.table.total = count\r\n    },\r\n    /**\r\n     * @description: 获取列表数据、搜索数据\r\n     * @return {*}\r\n     */\r\n    getTable(currentPage = this.table.currentPage, pageSize = this.table.pageSize) {\r\n      // 获取请求参数\r\n      const postData = this.getSearchData()\r\n      // const { currentPage, pageSize } = this.table\r\n      return GetFundAllocationPaging({\r\n        ...postData,\r\n        currentPage,\r\n        pageSize,\r\n        type: this.filter.type\r\n      })\r\n    },\r\n    /**\r\n     * @description: 搜索栏数据转换\r\n     * @return {Object} request数据\r\n     */\r\n    getSearchData() {\r\n      if (this.lastSearch === null) {\r\n        this.lastSearch = {}\r\n        this.searchData.forEach(item => {\r\n          const { value, transformType, name } = item\r\n          if (transformType === 'property-serial') {\r\n            value.forEach((ele, index) => {\r\n              const serial = index + 1\r\n              this.lastSearch[name + serial] = ele\r\n            })\r\n          } else {\r\n            this.lastSearch[name] = value\r\n          }\r\n        })\r\n      }\r\n      return this.lastSearch\r\n    },\r\n    /**\r\n     * @description: 路由到详情页\r\n     * @param {*} row\r\n     */\r\n    handleDetails(row) {\r\n      this.$router.push({ name: 'ZiJinDiaoBoDetails', query: { id: row.id, refreshRouterName: this.$route.name }})\r\n    },\r\n    /**\r\n     * @description: table编辑\r\n     * @param {Object} id\r\n     */\r\n    handleEdit(id = '') {\r\n      this.$router.push({ name: 'ZiJinDiaoBoEdit', query: { id, refreshRouterName: this.$route.name }})\r\n    },\r\n    /**\r\n     * 获取待处理人\r\n     * @param {Object} bf 流程对象\r\n     * @returns {String} 待处理人字符串\r\n     */\r\n    getPerson(bf) {\r\n      if (bf) {\r\n        var arr = bf.billFlowNode.filter(f => f.isCurrentState && !f.isChecked)\r\n        return arr.map(m => m.person.name).join('、')\r\n      }\r\n    },\r\n    /**\r\n     * 判断自己是否是待处理人\r\n     */\r\n    IsNextPerson(bf) {\r\n      const arr = bf?.billFlowNode?.filter(f => f.isCurrentState && !f.isChecked) || []\r\n      return arr.find(v => v.person.id === this.$store.state.user.uid)\r\n    }\r\n  }\r\n}\r\n",null]}