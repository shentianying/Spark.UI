{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\components\\Other\\WorkerSelect.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\components\\Other\\WorkerSelect.vue","mtime":1634371102575},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n// import { getWorkerPaging } from '@/api/zggl/worker'\r\nimport SelectWorker from './selectWorker.vue'\r\nexport default {\r\n  name: 'WorkerSelect',\r\n  components: { SelectWorker },\r\n  model: { event: 'change', prop: 'value' },\r\n  props: {\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    multiple: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    placeholder: {\r\n      type: String,\r\n      default: '选择'\r\n    },\r\n    size: {\r\n      type: String,\r\n      default: 'small'\r\n    },\r\n    value: {\r\n      type: [Array, String, Number],\r\n      default: ''\r\n    },\r\n    orgId: {\r\n      type: Number,\r\n      default: null\r\n    },\r\n    personList: {\r\n      type: Array,\r\n      default: () => []\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      workerList: [],\r\n      loading: false\r\n    }\r\n  },\r\n  computed: {\r\n    inputVal: {\r\n      set(val) {\r\n        // console.log(val)\r\n        this.$emit('change', val)\r\n      },\r\n      get() {\r\n        return this.value\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getWorkerList()\r\n  },\r\n  methods: {\r\n    getPersons(personList) {\r\n      this.workerList = personList\r\n      if ((personList || []).length > 0) {\r\n        this.$nextTick(() => {\r\n          if (this.multiple) {\r\n            this.inputVal = [...this.inputVal, ...personList.map(item => item.id)]\r\n          } else {\r\n            this.inputVal = personList[0].id\r\n          }\r\n        })\r\n      }\r\n    },\r\n    selectWorker() {\r\n      this.$refs.elSelectWorker.blur()\r\n      this.$refs.workerRef.openDialog()\r\n    },\r\n    async getWorkerList() {\r\n      try {\r\n        this.loading = true\r\n        // const postData = {}\r\n        // postData.currentPage = 1\r\n        // postData.pageSize = 10\r\n        // const res = getWorkerPaging(postData)\r\n        // this.personList = res.data\r\n        this.workerList = this.personList\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    }\r\n  }\r\n}\r\n",null]}