{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\task\\taskAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\task\\taskAdd.vue","mtime":1624071363330},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { addCGTask, getCGTaskNumber } from '@/api/cggl/task'\r\nimport { getPersonList } from '@/api/rsgl/person'\r\nimport UpFile from '@/components/UpLoad/UpFile'\r\nexport default {\r\n  name: 'TaskAdd',\r\n  components: {\r\n    UpFile\r\n  },\r\n  props: {\r\n    obj: {\r\n      type: Object,\r\n      default: null\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        number: '',\r\n        planId: null,\r\n        planNumber: '',\r\n        orgId: null,\r\n        orgStr: '',\r\n        planTypeName: '',\r\n        materialTypeName: '',\r\n        buyerId: null,\r\n        fileList: [],\r\n        remark: ''\r\n      },\r\n      loading: false,\r\n      showbuttons: false,\r\n      loadFlow: false,\r\n      dialogTableVisible: false,\r\n      dialogTitle: '保存',\r\n      dialogWidth: '70%',\r\n      currentRow: null,\r\n      listIndex: 0,\r\n      list: [],\r\n      attitudePara: null,\r\n      fileList: [],\r\n      columnShow: { unit2: true,\r\n        brand: true,\r\n        model: true,\r\n        spec: true,\r\n        thickness: true,\r\n        texture: true,\r\n        surfaceTreatment: true,\r\n        designNumber: true\r\n      },\r\n      personList: [],\r\n      rules: {\r\n        // number: [{ required: true, message: '请输入', trigger: 'blur' }],\r\n        buyerId: [{ required: true, message: '请输入', trigger: 'change' }]\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    getOrgList() {\r\n      return this.$store.state.user.info.orgList\r\n    }\r\n  },\r\n  watch: {\r\n    // 'ruleForm.orgId': {\r\n    //   handler: function(value, oldvalue) {\r\n    //     if (!oldvalue) {\r\n    //       this.$refs['ruleForm'].validateField('orgId', (valid) => {})\r\n    //     }\r\n    //   }, deep: true\r\n    // }\r\n  },\r\n  activated() {\r\n  },\r\n  mounted() {\r\n    this.initData()\r\n  },\r\n  methods: {\r\n    async initData() {\r\n      if (this.obj) {\r\n        this.ruleForm = {\r\n          id: 0,\r\n          number: '',\r\n          planId: this.obj.planId,\r\n          orgId: this.obj.orgId,\r\n          buyerId: null,\r\n          fileList: [],\r\n          state: 0,\r\n          remark: ''\r\n        }\r\n        getCGTaskNumber({ planNumber: this.obj.planNumber }).then(response => {\r\n          response.data = response.data + 1\r\n          this.ruleForm.number = this.obj.planNumber + '-' + response.data\r\n        })\r\n        this.loading = true\r\n        this.list = this.obj.data\r\n        this.loading = false\r\n        this.setColumnShow()\r\n      }\r\n      getPersonList().then(response => {\r\n        this.personList = response.data\r\n      })\r\n    },\r\n    // closeThePage() {\r\n    //   this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    // },\r\n    setColumnShow() { // 设置列的显示。列中，都没有值，就隐藏\r\n      var modelunit2 = false\r\n      var modelbrand = false\r\n      var modelmodel = false\r\n      var modelspec = false\r\n      var modelthickness = false\r\n      var modeltexture = false\r\n      var modelsurfaceTreatment = false\r\n      var modeldesignNumber = false\r\n      for (var row of this.list) {\r\n        if (row.unit2) { modelunit2 = true }\r\n        if (row.brand) { modelbrand = true }\r\n        if (row.model) { modelmodel = true }\r\n        if (row.spec) { modelspec = true }\r\n        if (row.thickness) { modelthickness = true }\r\n        if (row.texture) { modeltexture = true }\r\n        if (row.surfaceTreatment) { modelsurfaceTreatment = true }\r\n        if (row.designNumber) { modeldesignNumber = true }\r\n      }\r\n      this.columnShow['unit2'] = modelunit2\r\n      this.columnShow['brand'] = modelbrand\r\n      this.columnShow['model'] = modelmodel\r\n      this.columnShow['spec'] = modelspec\r\n      this.columnShow['thickness'] = modelthickness\r\n      this.columnShow['texture'] = modeltexture\r\n      this.columnShow['surfaceTreatment'] = modelsurfaceTreatment\r\n      this.columnShow['designNumber'] = modeldesignNumber\r\n    },\r\n    showFileList(fileList) {\r\n      this.dialogTitle = '附件列表'\r\n      this.comName = 'UpFile'\r\n      this.dialogWidth = '50%'\r\n      this.fileList = fileList\r\n      this.dialogTableVisible = true\r\n    },\r\n    getRemotePerson(query) {\r\n      query = query.trim()\r\n      if (query !== '') {\r\n        this.loading = true\r\n        setTimeout(() => {\r\n          getPersonList().then(response => {\r\n            this.personList = response.data\r\n            this.loading = false\r\n          })\r\n        }, 200)\r\n      } else {\r\n        this.personList = []\r\n      }\r\n    },\r\n    addTask() {\r\n      this.$refs['ruleForm'].validate(valid => {\r\n        if (valid) {\r\n          var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n          newObj.state = 0\r\n          // 拼接材料明细参数\r\n          var arr1 = []\r\n          this.list.forEach(e => {\r\n            var m = {}\r\n            m.categoryId = e.categoryId\r\n            m.categoryName = e.category.name\r\n            // m.unit = e.category.unit\r\n            m.unit2 = e.unit2\r\n            m.brand = e.brand\r\n            m.model = e.model\r\n            m.spec = e.spec\r\n            m.thickness = e.thickness\r\n            m.texture = e.texture\r\n            m.surfaceTreatment = e.surfaceTreatment\r\n            m.designNumber = e.designNumber\r\n            var item = {}\r\n            item.material = m\r\n            // item.fileList = []\r\n            // if (e.fileList.length) {\r\n            //   item.fileList = e.fileList.map(m => { return { id: m.id, addFlag: m.addFlag } })\r\n            // }\r\n            item.id = e.id\r\n            item.applicationQuantity = e.applicationQuantity\r\n            item.applicationQuantity2 = e.applicationQuantity2 || 0\r\n            item.quantity = e.quantity\r\n            item.quantity2 = e.quantity2\r\n            item.entryDate = e.entryDate\r\n            item.remark = e.remark\r\n            item.targetCostMaterialId = e.targetCostMaterialId\r\n            item.state = 0\r\n            arr1.push(item)\r\n          })\r\n          newObj.planDetails = arr1\r\n          console.log('分配的数据：', newObj)\r\n          this.loading = true\r\n          addCGTask(newObj).then(response => {\r\n            this.$message(response.message)\r\n            this.loading = false\r\n            // this.closeThePage()\r\n            this.$emit('dialogClose')\r\n          }).catch(() => { this.loading = false })\r\n          // this.loading = false\r\n          // this.$emit('dialogClose')\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n",null]}