{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\material\\category.vue?vue&type=template&id=fe9da98c&scoped=true&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\material\\category.vue","mtime":1635216068737},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"app-container\" },\n    [\n      _c(\n        \"div\",\n        { staticStyle: { \"padding-bottom\": \"10px\" } },\n        [\n          _c(\n            \"el-button\",\n            {\n              directives: [\n                {\n                  name: \"has\",\n                  rawName: \"v-has\",\n                  value: \"CATEGORY_ADD\",\n                  expression: \"'CATEGORY_ADD'\"\n                }\n              ],\n              attrs: { type: \"primary\", size: \"mini\" },\n              on: { click: _vm.addCategory }\n            },\n            [_vm._v(\"添加类别\")]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-button\",\n            {\n              directives: [\n                {\n                  name: \"has\",\n                  rawName: \"v-has\",\n                  value: \"PROPERTY_ADD\",\n                  expression: \"'PROPERTY_ADD'\"\n                }\n              ],\n              attrs: { type: \"primary\", size: \"mini\" },\n              on: { click: _vm.addPro }\n            },\n            [_vm._v(\"批量添加属性\")]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-button\",\n            {\n              directives: [\n                {\n                  name: \"has\",\n                  rawName: \"v-has\",\n                  value: \"MATERIAL_COPY\",\n                  expression: \"'MATERIAL_COPY'\"\n                }\n              ],\n              attrs: { type: \"primary\", size: \"mini\" },\n              on: { click: _vm.copyTo }\n            },\n            [_vm._v(\"批量复制属性\")]\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-container\",\n        { staticStyle: { height: \"calc(100vh - 162px)\" } },\n        [\n          _c(\n            \"el-aside\",\n            { attrs: { width: \"500px\" } },\n            [\n              _c(\"el-alert\", {\n                attrs: { title: \"物料类别\", type: \"success\", closable: false }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-input\", {\n                attrs: { size: \"mini\", placeholder: \"输入关键字进行查找\" },\n                model: {\n                  value: _vm.filterText,\n                  callback: function($$v) {\n                    _vm.filterText = $$v\n                  },\n                  expression: \"filterText\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-tree\", {\n                ref: \"tree\",\n                attrs: {\n                  data: _vm.list,\n                  \"show-checkbox\": \"\",\n                  \"node-key\": \"id\",\n                  \"filter-node-method\": _vm.filterNode,\n                  \"highlight-current\": \"\",\n                  \"expand-on-click-node\": false,\n                  props: _vm.defaultProps,\n                  \"default-expanded-keys\": _vm.expandIds\n                },\n                on: { \"node-click\": _vm.handleNodeClick },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(ref) {\n                      var node = ref.node\n                      var data = ref.data\n                      return _c(\"span\", { staticClass: \"custom-tree-node\" }, [\n                        _c(\n                          \"span\",\n                          {\n                            staticStyle: {\n                              width: \"200px\",\n                              overflow: \"hidden\",\n                              \"white-space\": \"nowrap\",\n                              \"text-overflow\": \"ellipsis\"\n                            },\n                            attrs: { title: node.label }\n                          },\n                          [_vm._v(_vm._s(data.label))]\n                        ),\n                        _vm._v(\" \"),\n                        data.level === 3\n                          ? _c(\"span\", { staticStyle: { width: \"80px\" } }, [\n                              _vm._v(_vm._s(data.unit))\n                            ])\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        data.level === 3\n                          ? _c(\"span\", { staticStyle: { width: \"14px\" } }, [\n                              data.isMain\n                                ? _c(\"i\", { staticClass: \"el-icon-check\" })\n                                : _c(\"i\", { staticClass: \"el-icon-close\" })\n                            ])\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        _c(\n                          \"span\",\n                          [\n                            _c(\n                              \"el-button-group\",\n                              [\n                                _c(\"el-button\", {\n                                  directives: [\n                                    {\n                                      name: \"has\",\n                                      rawName: \"v-has\",\n                                      value: \"MATERIAL_EDIT\",\n                                      expression: \"'MATERIAL_EDIT'\"\n                                    }\n                                  ],\n                                  staticStyle: { padding: \"6px\" },\n                                  attrs: {\n                                    type: \"text\",\n                                    size: \"mini\",\n                                    icon: \"el-icon-edit\",\n                                    title: \"编辑\"\n                                  },\n                                  on: {\n                                    click: function($event) {\n                                      $event.stopPropagation()\n                                      return (function() {\n                                        return _vm.update(data)\n                                      })($event)\n                                    }\n                                  }\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"el-button\", {\n                                  directives: [\n                                    {\n                                      name: \"has\",\n                                      rawName: \"v-has\",\n                                      value: \"CATEGORY_DELETE\",\n                                      expression: \"'CATEGORY_DELETE'\"\n                                    }\n                                  ],\n                                  staticStyle: { padding: \"6px\" },\n                                  attrs: {\n                                    type: \"text\",\n                                    icon: \"el-icon-delete\",\n                                    size: \"mini\",\n                                    title: \"删除\"\n                                  },\n                                  on: {\n                                    click: function($event) {\n                                      $event.stopPropagation()\n                                      return (function() {\n                                        return _vm.remove(node, data)\n                                      })($event)\n                                    }\n                                  }\n                                })\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ])\n                    }\n                  }\n                ])\n              })\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-main\",\n            { staticStyle: { \"padding-top\": \"0px\" } },\n            [\n              _c(\"el-alert\", {\n                attrs: {\n                  title:\n                    \"物料属性 \" +\n                    (_vm.currentCategory ? _vm.currentCategory.label : \"\"),\n                  type: \"success\",\n                  closable: false\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\n                \"el-table\",\n                {\n                  attrs: {\n                    \"v-loading\": _vm.tableListLoading,\n                    data: _vm.tableList,\n                    \"element-loading-text\": \"Loading\",\n                    border: \"\",\n                    fit: \"\",\n                    \"highlight-current-row\": \"\",\n                    size: \"mini\"\n                  }\n                },\n                [\n                  _c(\"el-table-column\", {\n                    attrs: { type: \"index\", width: \"30\" }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"属性\",\n                      \"min-width\": \"80\"\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _vm._v(\n                              \"\\n            \" +\n                                _vm._s(scope.row.property.name) +\n                                \"\\n          \"\n                            )\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"允许手动输入\",\n                      width: \"70\"\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            scope.row.canInput\n                              ? _c(\"i\", { staticClass: \"el-icon-check\" })\n                              : _c(\"i\", { staticClass: \"el-icon-close\" })\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: { align: \"center\", label: \"是否必输\", width: \"70\" },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            scope.row.isRequired\n                              ? _c(\"i\", { staticClass: \"el-icon-check\" })\n                              : _c(\"i\", { staticClass: \"el-icon-close\" })\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"是否目标成本必输\",\n                      width: \"70\"\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            scope.row.isTargetRequired\n                              ? _c(\"i\", { staticClass: \"el-icon-check\" })\n                              : _c(\"i\", { staticClass: \"el-icon-close\" })\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"可选项\",\n                      \"min-width\": \"150\"\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return _vm._l(scope.row.mcpItem, function(\n                            item,\n                            index\n                          ) {\n                            return _c(\n                              \"el-tag\",\n                              { key: index, attrs: { type: \"primary\" } },\n                              [_vm._v(_vm._s(item.name) + \" \")]\n                            )\n                          })\n                        }\n                      }\n                    ])\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: { align: \"center\", label: \"操作\", width: \"75\" },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _c(\n                              \"el-button-group\",\n                              [\n                                _c(\"el-button\", {\n                                  directives: [\n                                    {\n                                      name: \"has\",\n                                      rawName: \"v-has\",\n                                      value: \"PROPERTYITEM_EDIT\",\n                                      expression: \"'PROPERTYITEM_EDIT'\"\n                                    }\n                                  ],\n                                  staticStyle: { padding: \"6px\" },\n                                  attrs: {\n                                    type: \"primary\",\n                                    plain: \"\",\n                                    size: \"mini\",\n                                    icon: \"el-icon-edit\",\n                                    title: \"编辑\"\n                                  },\n                                  on: {\n                                    click: function($event) {\n                                      return _vm.handleEdit(scope.row)\n                                    }\n                                  }\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"el-button\", {\n                                  directives: [\n                                    {\n                                      name: \"has\",\n                                      rawName: \"v-has\",\n                                      value: \"PROPERTY_DELETE\",\n                                      expression: \"'PROPERTY_DELETE'\"\n                                    }\n                                  ],\n                                  staticStyle: { padding: \"6px\" },\n                                  attrs: {\n                                    type: \"primary\",\n                                    plain: \"\",\n                                    icon: \"el-icon-delete\",\n                                    size: \"mini\",\n                                    title: \"删除\",\n                                    disabled: scope.row.property.isRequired\n                                  },\n                                  on: {\n                                    click: function($event) {\n                                      return _vm.handleDel(scope.row)\n                                    }\n                                  }\n                                })\n                              ],\n                              1\n                            )\n                          ]\n                        }\n                      }\n                    ])\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _vm.dialogTableVisible\n        ? _c(\n            \"div\",\n            [\n              _c(\n                \"el-dialog\",\n                {\n                  attrs: {\n                    title: _vm.dialogTitle,\n                    \"destroy-on-close\": true,\n                    visible: _vm.dialogTableVisible,\n                    width: \"70%\"\n                  },\n                  on: {\n                    \"update:visible\": function($event) {\n                      _vm.dialogTableVisible = $event\n                    }\n                  }\n                },\n                [\n                  _c(_vm.comName, {\n                    tag: \"component\",\n                    attrs: {\n                      obj: _vm.currentRow,\n                      nodes: _vm.checkedNodes,\n                      pid: _vm.pid\n                    },\n                    on: {\n                      addItemclose: _vm.addItemClose,\n                      addCategoryClose: _vm.addCategoryClose,\n                      addProClose: _vm.addProClose\n                    }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          )\n        : _vm._e()\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}