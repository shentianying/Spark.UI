{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\lcgl\\flowDesign\\component\\addFlowNode.vue?vue&type=template&id=644132a5&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\lcgl\\flowDesign\\component\\addFlowNode.vue","mtime":1634371102581},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"app-container\" },\n    [\n      _c(\n        \"el-form\",\n        {\n          ref: \"ruleForm1\",\n          attrs: {\n            \"status-icon\": \"\",\n            model: _vm.ruleForm,\n            rules: _vm.rules,\n            \"label-width\": \"120px\",\n            size: \"mini\"\n          }\n        },\n        [\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"模式\", prop: \"mode\" } },\n            [\n              _c(\n                \"el-select\",\n                {\n                  attrs: { placeholder: \"请选择\" },\n                  model: {\n                    value: _vm.ruleForm.mode,\n                    callback: function($$v) {\n                      _vm.$set(_vm.ruleForm, \"mode\", $$v)\n                    },\n                    expression: \"ruleForm.mode\"\n                  }\n                },\n                _vm._l(_vm.dropDownData.flowNodeModeList, function(\n                  item,\n                  index\n                ) {\n                  return _c(\"el-option\", {\n                    key: index,\n                    attrs: { label: item.name, value: item.value }\n                  })\n                }),\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"节点角色\" } },\n            [\n              _c(\n                \"div\",\n                {\n                  staticStyle: {\n                    \"text-align\": \"right\",\n                    \"margin-bottom\": \"10px\"\n                  }\n                },\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: { type: \"primary\", size: \"mini\" },\n                      on: {\n                        click: function($event) {\n                          return _vm.addNodeRole()\n                        }\n                      }\n                    },\n                    [_vm._v(\"添加节点角色\")]\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-table\",\n                {\n                  attrs: {\n                    data: _vm.list,\n                    \"element-loading-text\": \"Loading\",\n                    border: \"\",\n                    fit: \"\",\n                    \"highlight-current-row\": \"\",\n                    size: \"mini\"\n                  }\n                },\n                [\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"角色类型：\",\n                      \"min-width\": \"10\"\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _vm._v(\n                              \"\\n            \" +\n                                _vm._s(\n                                  _vm.getObjectValue(\n                                    _vm.dropDownData.roleTypeList.find(function(\n                                      f\n                                    ) {\n                                      return f.value === scope.row.roleType\n                                    }),\n                                    \"name\"\n                                  )\n                                ) +\n                                \"\\n          \"\n                            )\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"角色\",\n                      \"min-width\": \"10\"\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _vm._v(\n                              \"\\n            \" +\n                                _vm._s(\n                                  scope.row.roleId === 0\n                                    ? \"-\"\n                                    : _vm.getObjectValue(\n                                        _vm.dropDownData.roleList.find(function(\n                                          f\n                                        ) {\n                                          return f.id === scope.row.roleId\n                                        }),\n                                        \"name\"\n                                      )\n                                ) +\n                                \"\\n          \"\n                            )\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: { align: \"center\", label: \"审批天数\", width: \"80\" },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _vm._v(\n                              \"\\n            \" +\n                                _vm._s(\n                                  scope.row.maxDays === 0\n                                    ? \"0（不限）\"\n                                    : scope.row.maxDays\n                                ) +\n                                \"\\n          \"\n                            )\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: { align: \"center\", label: \"紧急程度\", width: \"80\" },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _vm._v(\n                              \"\\n            \" +\n                                _vm._s(\n                                  _vm.getObjectValue(\n                                    _vm.dropDownData.gradeList.find(function(\n                                      f\n                                    ) {\n                                      return f.value === scope.row.grade\n                                    }),\n                                    \"name\",\n                                    \"-\"\n                                  )\n                                ) +\n                                \"\\n          \"\n                            )\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"操作类型\",\n                      \"min-width\": \"10\"\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _vm._v(\n                              \"\\n            \" +\n                                _vm._s(\n                                  scope.row.option === 0\n                                    ? \"无\"\n                                    : _vm.getObjectValue(\n                                        _vm.dropDownData.options.find(function(\n                                          f\n                                        ) {\n                                          return f.value === scope.row.option\n                                        }),\n                                        \"name\",\n                                        \"-\"\n                                      )\n                                ) +\n                                \"\\n          \"\n                            )\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: { align: \"center\", label: \"操作\", width: \"60\" },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _c(\n                              \"el-link\",\n                              {\n                                attrs: { type: \"danger\", underline: false },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.editFlowNode(\n                                      scope.$index,\n                                      scope.row\n                                    )\n                                  }\n                                }\n                              },\n                              [_c(\"i\", { staticClass: \"el-icon-edit\" })]\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"el-link\",\n                              {\n                                attrs: { type: \"danger\", underline: false },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.deleteFlowNode(scope.$index)\n                                  }\n                                }\n                              },\n                              [_c(\"i\", { staticClass: \"el-icon-delete\" })]\n                            )\n                          ]\n                        }\n                      }\n                    ])\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"\" } },\n            [\n              _c(\n                \"el-button\",\n                {\n                  attrs: {\n                    type: \"primary\",\n                    size: \"mini\",\n                    loading: _vm.buttonLoading\n                  },\n                  on: {\n                    click: function($event) {\n                      return _vm.submitForm()\n                    }\n                  }\n                },\n                [_vm._v(\"保存\")]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _vm.dialogTableVisible\n        ? _c(\n            \"div\",\n            [\n              _c(\n                \"el-dialog\",\n                {\n                  attrs: {\n                    title: \"添加节点\",\n                    \"destroy-on-close\": true,\n                    fullscreen: false,\n                    visible: _vm.dialogTableVisible,\n                    \"append-to-body\": true\n                  },\n                  on: {\n                    \"update:visible\": function($event) {\n                      _vm.dialogTableVisible = $event\n                    }\n                  }\n                },\n                [\n                  _c(\n                    \"el-form\",\n                    {\n                      ref: \"ruleForm\",\n                      attrs: {\n                        \"status-icon\": \"\",\n                        model: _vm.ruleForm,\n                        rules: _vm.rules,\n                        \"label-width\": \"120px\",\n                        size: \"mini\"\n                      }\n                    },\n                    [\n                      _c(\"add-flow-node-role\", {\n                        attrs: {\n                          \"drop-down-data\": _vm.dropDownData,\n                          \"form-state-id\": _vm.formStateId,\n                          obj: _vm.flowNodeObj\n                        },\n                        on: { dialogClose: _vm.dialogClose }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        : _vm._e()\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}