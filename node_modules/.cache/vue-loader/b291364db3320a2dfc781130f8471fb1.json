{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\ggzx\\grgl\\worker\\workerEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\ggzx\\grgl\\worker\\workerEdit.vue","mtime":1635749455678},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getFormById, getDefaultOptions, saveData } from '@/api/ggzx/worker'\r\nimport OrgSelect2 from '@/components/OrgSelect/index2'\r\nimport UpFile from '@/components/UpLoad/UpFile'\r\nimport { getPersonList } from '@/api/rsgl/person'\r\nimport SelectPerson from '@/components/Other/selectPerson'\r\nimport TreeSelect from '@/components/SearchBar/form/TreeSelect.vue'\r\nexport default {\r\n  name: 'WorkerEdit',\r\n  components: {\r\n    OrgSelect2,\r\n    UpFile,\r\n    SelectPerson,\r\n    TreeSelect\r\n  },\r\n  data() {\r\n    return {\r\n      size: 'mini', // 整体大小\r\n      labelPosition: 'right', // 对齐方式\r\n      loading: false,\r\n      workerForm: {\r\n        id: null,\r\n        orgId: null,\r\n        year: null,\r\n        number: '',\r\n        name: '',\r\n        contractNumber: '',\r\n        idNumber: '',\r\n        homeAddress: '',\r\n        gender: '',\r\n        nation: '',\r\n        age: 0,\r\n        workType: null,\r\n        workTypeList: [],\r\n        workerType: null,\r\n        idCardExpireStart: null,\r\n        idCardExpireEnd: null,\r\n        awBank: null,\r\n        account: '',\r\n        gongZhangId: null,\r\n        xiezhaorenId: null,\r\n        phoneNumber: '',\r\n        signUpDate: null,\r\n        workingAge: '',\r\n        signUpState: null,\r\n        isBD: false,\r\n        bdDate: null,\r\n        isWithInsurance: false,\r\n        insuranceDate: null,\r\n        isPause: false,\r\n        pauseReason: '',\r\n        isExit: false,\r\n        exitDate: null,\r\n        exitReason: '',\r\n        integrity: '',\r\n        isPhysicalExamination: false,\r\n        heartRate: '',\r\n        SBP: '',\r\n        DBP: '',\r\n        liverFunction: null,\r\n        lungFunction: null,\r\n        remark: '',\r\n        fileList: []\r\n      },\r\n      searchOptions: {\r\n        workTypes: [],\r\n        workerTypes: [],\r\n        awBanks: [],\r\n        signUpStates: [],\r\n        peStates: []\r\n      },\r\n      dialogTableVisible: false,\r\n      dialogTitle: '保存',\r\n      dialogWidth: '70%',\r\n      comName: 'ContractDetailCheck',\r\n      currentRow: null,\r\n      // 验证规则\r\n      rules: {\r\n        // orgId: [{ required: true, message: '请选择部门', trigger: 'change' }],\r\n        // gatheringType: [\r\n        //   { required: true, message: '请选择收款类型', trigger: 'change' }\r\n        // ],\r\n        // capitalType: [\r\n        //   { required: true, message: '请选择资金类型', trigger: 'change' }\r\n        // ],\r\n        // gatheringDate: [\r\n        //   { required: true, message: '请选择日期', trigger: 'change' }\r\n        // ],\r\n        // personId: [\r\n        //   { required: true, message: '请选择经手人', trigger: 'change' }\r\n        // ],\r\n        // amount: [\r\n        //   { required: true, message: '请输入金额', trigger: 'change' },\r\n        //   { validator: validate.money, message: '金额格式不正确' },\r\n        //   { validator: validate.max_amount, message: '超过所能存储的最大金额' }\r\n        // ]\r\n      },\r\n      personList: [],\r\n      workTypeKey: 0,\r\n      orgKey: 0 // 项目\r\n    }\r\n  },\r\n  computed: {\r\n    getOrgList() {\r\n      return this.$store.state.user.info.orgList\r\n    }\r\n  },\r\n  watch: {\r\n    // 'ruleForm.orgId': {\r\n    //   handler: function(value, oldvalue) {\r\n    //     if (value !== oldvalue && oldvalue !== null) {\r\n    //       this.list = []\r\n    //     }\r\n    //   }, deep: true\r\n    // }\r\n  },\r\n  activated() {\r\n    this.initData()\r\n  },\r\n  mounted() {\r\n    this.initData()\r\n  },\r\n  methods: {\r\n    // 提交数据\r\n    submitForm() {\r\n      this.$refs['ruleForm'].validate(async valid => {\r\n        if (valid) {\r\n          const data = { ...this.workerForm }\r\n          const res = await saveData(data)\r\n\r\n          this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n          this.$message.success(res.message)\r\n        }\r\n      })\r\n    },\r\n    // 初始化\r\n    async initData() {\r\n      const { id } = this.$route.query\r\n      this.workerForm.id = id\r\n      this.getForm()\r\n      this.getOptions()\r\n    },\r\n    /**\r\n     * 获取下拉选项\r\n     */\r\n    async getOptions() {\r\n      const {\r\n        workOptions2,\r\n        workerOptions,\r\n        bankOptions,\r\n        signUpStateOptions,\r\n        peStateOptions\r\n      } = await getDefaultOptions()\r\n      this.searchOptions.workTypes = workOptions2\r\n      this.searchOptions.workerTypes = workerOptions\r\n      this.searchOptions.awBanks = bankOptions\r\n      this.searchOptions.signUpStates = signUpStateOptions\r\n      this.searchOptions.peStates = peStateOptions\r\n      this.searchOptions.workTypes.forEach(element => {\r\n        element.pid = element.pId\r\n      })\r\n      getPersonList().then(response => {\r\n        this.personList = response.data\r\n      })\r\n      // 组件重载\r\n      this.workTypeKey += 1\r\n      this.orgKey += 1\r\n    },\r\n    /**\r\n     * 获取表单数据\r\n     */\r\n    getForm() {\r\n      getFormById({ id: this.workerForm.id })\r\n        .then(res => {\r\n          const { code, data } = res\r\n          if (code === 200) {\r\n            for (const key in this.workerForm) {\r\n              if (Object.hasOwnProperty.call(this.workerForm, key)) {\r\n                this.workerForm[key] = data[key]\r\n              }\r\n            }\r\n            this.workerForm.fileList = data.upFile\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          // this.$message.error(err.errorMsg)\r\n        })\r\n    },\r\n    getRemotePerson(query) {\r\n      query = query.trim()\r\n      if (query !== '') {\r\n        this.loading = true\r\n        setTimeout(() => {\r\n          getPersonList().then(response => {\r\n            this.personList = response.data\r\n            this.loading = false\r\n          })\r\n        }, 200)\r\n      } else {\r\n        this.personList = []\r\n      }\r\n    },\r\n    getPersons(personList) {\r\n      if ((personList || []).length > 0) {\r\n        this.personList = personList.map(m => { return { id: m.id, name: m.name } })\r\n        this.$nextTick(() => {\r\n          this.ruleForm.personId = personList[0].id\r\n          this.ruleForm.personName = personList[0].name\r\n        })\r\n      }\r\n    },\r\n    selectPerson() {\r\n      // this.tempItem2 = item2\r\n      this.$refs.personRef1.openDialog()\r\n    },\r\n    selectGongZhang() {\r\n      // this.tempItem2 = item2\r\n      this.$refs.personRef1.openDialog()\r\n    },\r\n    getGongZhangs(personList) {\r\n      if ((personList || []).length > 0) {\r\n        this.personList = personList.map(m => { return { id: m.id, name: m.name } })\r\n        this.$nextTick(() => {\r\n          this.workerForm.gongZhangId = personList[0].id\r\n        })\r\n      }\r\n    },\r\n    selectXieZhaoRen() {\r\n      // this.tempItem2 = item2\r\n      this.$refs.personRef2.openDialog()\r\n    },\r\n    getXieZhaoPeople(personList) {\r\n      if ((personList || []).length > 0) {\r\n        this.personList = personList.map(m => { return { id: m.id, name: m.name } })\r\n        this.$nextTick(() => {\r\n          this.workerForm.xiezhaorenId = personList[0].id\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n",null]}