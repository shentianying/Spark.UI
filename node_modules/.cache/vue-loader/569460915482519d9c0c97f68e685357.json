{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\rsgl\\gwc\\postPoolDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\rsgl\\gwc\\postPoolDetail.vue","mtime":1629185538536},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getPostPoolById, getPostPoolDetailList } from '@/api/rsgl/postPool'\r\nexport default {\r\n  name: 'PostPoolDetail',\r\n  components: {\r\n\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        id: 0,\r\n        name: '',\r\n        orgName: '',\r\n        category: '',\r\n        inUse: true,\r\n        categoryId: 1\r\n      },\r\n      loading: false,\r\n      currentRow: null,\r\n      list: [],\r\n      categoryList: null,\r\n      postPoolId: null,\r\n      leaderList: null\r\n    }\r\n  },\r\n  mounted() {\r\n    getPostPoolDetailList().then(response => {\r\n      const { data } = response\r\n      this.leaderList = data\r\n    })\r\n  },\r\n  activated() {\r\n    if (this.$route.params.id) {\r\n      this.initData()\r\n      this.refreshRouterName = this.$route.params.refreshRouterName\r\n    }\r\n  },\r\n  methods: {\r\n    async initData() {\r\n      // 有参数id 就是编辑\r\n      if (this.$route.query.id) {\r\n        this.postPoolId = this.$route.query.id\r\n      }\r\n      if (this.postPoolId) {\r\n        this.loading = true\r\n        await getPostPoolById({ id: this.postPoolId }).then(response => this.setData(response))\r\n      }\r\n    },\r\n    setData(response) {\r\n      const { data, dictionaries, orgName } = response\r\n      var pom = []\r\n      data.postPoolDetail.forEach(e => {\r\n        pom.push({\r\n          id: e.id,\r\n          postId: e.postId,\r\n          post: {\r\n            id: e.post.id,\r\n            name: e.post.name\r\n          },\r\n          qualifications: e.qualifications,\r\n          postDuty: e.postDuty,\r\n          adminLeaderId: e.adminLeaderId,\r\n          lineLeaderId: e.lineLeaderId\r\n        })\r\n      })\r\n      // 填充参数\r\n      this.ruleForm = {\r\n        id: data.id,\r\n        name: data.name,\r\n        orgName: orgName,\r\n        category: dictionaries[0].name,\r\n        inUse: data.inUse,\r\n        categoryId: data.category\r\n      }\r\n      // 填充 明细列表\r\n      this.list = pom\r\n      this.loading = false // loading 状态关闭\r\n    },\r\n    closeThePage() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    }\r\n  }\r\n}\r\n",null]}