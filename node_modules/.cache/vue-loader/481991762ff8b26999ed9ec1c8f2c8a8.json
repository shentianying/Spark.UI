{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\rsgl\\rygw\\userPost.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\rsgl\\rygw\\userPost.vue","mtime":1624072442069},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1624071351959},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":1624071351555},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1624071351959},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":1624071362372}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getPersonPaging } from '@/api/rsgl/person'\r\nimport OrgSelect2 from '@/components/OrgSelect/index2'\r\nexport default {\r\n  name: 'UserPost',\r\n  components: {\r\n    OrgSelect2\r\n  },\r\n  props: {\r\n    id: {\r\n      type: Number,\r\n      default: null\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      userList: [],\r\n      listLoading: false,\r\n      searchText: '',\r\n      orgValue: [],\r\n\r\n      total: 0,\r\n      currentPage: 1,\r\n      pageSize: 10\r\n    }\r\n  },\r\n  activated() {\r\n    if (this.$route.params.refresh) {\r\n      this.fetchData()\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchData()\r\n  },\r\n  methods: {\r\n    fetchData() {\r\n      this.listLoading = true\r\n      var postData = {}\r\n      postData.currentPage = this.currentPage\r\n      postData.pageSize = this.pageSize\r\n      postData.name = this.searchText\r\n      postData.orgId = this.orgValue\r\n\r\n      getPersonPaging(postData).then(response => {\r\n        const { data, count } = response\r\n        this.userList = data\r\n        this.total = count\r\n        this.listLoading = false\r\n      }).catch(() => {\r\n        this.listLoading = false\r\n      })\r\n    },\r\n    handleAdd(row) {\r\n      this.$router.push({ name: 'UserPostEdit', query: { refreshRouterName: this.$route.name }, params: { type: 3 }})\r\n    },\r\n    handleEdit(row) {\r\n      this.$router.push({ name: 'UserPostEdit', query: { id: row.id, refreshRouterName: this.$route.name }, params: { id: row.id }})\r\n    },\r\n    handleDetail(row) {\r\n      this.$router.push({ name: 'UserPostDetail', query: { id: row.id, refreshRouterName: this.$route.name }, params: { id: row.id }})\r\n    },\r\n    sizeChange(val) {\r\n      this.pageSize = val\r\n      this.fetchData()\r\n    },\r\n    goSearch() {\r\n      this.fetchData()\r\n    }\r\n\r\n  }\r\n}\r\n",null]}