{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\storage\\allocation\\allocationEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\storage\\allocation\\allocationEdit.vue","mtime":1631670623793},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { addAllocation, putAllocation, getBillFlow, getAllocationById, deleteAllocation, getDefaultInfo } from '@/api/cggl/allocation'\r\n// import { getSupplierInfo } from '@/api/cggl/supplier'\r\nimport OrgSelect2 from '@/components/OrgSelect/index2'\r\nimport UpFile from '@/components/UpLoad/UpFile'\r\nimport FlowSelect from '@/components/Flow/flowSelect'\r\nimport FlowDisplay from '@/components/Flow/flowDisplay'\r\nimport FlowAttitude from '@/components/Flow/flowAttitude'\r\nimport StorageInDetailCheck from '@/views/cggl/storage/storageIn/storageInDetailCheck'\r\nimport { getPersonList } from '@/api/rsgl/person'\r\nimport SelectPerson from '@/components/Other/selectPerson'\r\nexport default {\r\n  name: 'StorageOutEdit',\r\n  components: {\r\n    OrgSelect2,\r\n    UpFile,\r\n    FlowSelect,\r\n    FlowDisplay,\r\n    FlowAttitude,\r\n    StorageInDetailCheck,\r\n    SelectPerson\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        id: 0,\r\n        number: '',\r\n        orgIdIn: null,\r\n        orgIdOut: null,\r\n        fileList: [],\r\n        personId: 0\r\n      },\r\n      loading: false,\r\n      activate: true,\r\n      active: 0,\r\n      dialogTableVisible: false,\r\n      dialogTitle: '保存',\r\n      dialogWidth: '70%',\r\n      comName: 'ContractDetailCheck',\r\n      currentRow: null,\r\n      list: [],\r\n      suppliers: [],\r\n      outTypeOptions: [],\r\n      keyOutType: 0,\r\n      billFlow: null,\r\n      attitudePara: null,\r\n      loadFlow: false,\r\n      orgKey: 0,\r\n      fileListKey: 0,\r\n      columnShow: { unit2: true,\r\n        brand: true,\r\n        model: true,\r\n        spec: true,\r\n        thickness: true,\r\n        texture: true,\r\n        surfaceTreatment: true,\r\n        designNumber: true },\r\n      rules: {\r\n        orgIdIn: [{ required: true, message: '请选择', trigger: 'blur' }],\r\n        orgIdOut: [{ required: true, message: '请选择', trigger: 'blur' }],\r\n        personId: [{ required: true, message: '请选择', trigger: 'blur' }]\r\n        // outDate: [{ required: true, message: '请选择', trigger: 'blur' }],\r\n        // useSpace: [{ required: true, message: '请输入', trigger: 'blur' }]\r\n      },\r\n      personList: []\r\n    }\r\n  },\r\n  computed: {\r\n    getOrgList() {\r\n      return this.$store.state.user.info.orgList\r\n    }\r\n  },\r\n  watch: {\r\n    'ruleForm.orgIdOut': {\r\n      handler: function(value, oldvalue) {\r\n        if (value !== oldvalue && oldvalue !== null) {\r\n          this.list = []\r\n        }\r\n      }, deep: true\r\n    }\r\n  },\r\n  activated() {\r\n    // this.initData()\r\n  },\r\n  mounted() {\r\n    this.initData()\r\n  },\r\n  methods: {\r\n    // 根据表单获取流程\r\n    getDynamicFlow() {\r\n      this.$refs['ruleForm'].validate(valid => {\r\n        if (valid) {\r\n          this.loading = true\r\n          var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n          var postData = {}\r\n          postData.number = newObj.number\r\n          postData.orgIdIn = newObj.orgIdIn\r\n          postData.orgIdOut = newObj.orgIdOut\r\n          postData.remark = newObj.remark\r\n          postData.fileList = newObj.fileList\r\n          postData.billFlowId = newObj.billFlowId\r\n          if (this.id) {\r\n            postData.id = this.id\r\n          }\r\n          var isFailed = false\r\n          this.list.forEach(e => {\r\n            if (e.quantity === 0) {\r\n              isFailed = true\r\n            }\r\n          })\r\n          if (isFailed === true) {\r\n            this.$message.error('调拨数量不可为空！')\r\n            this.loading = false\r\n          } else if (this.ruleForm.orgIdIn === this.ruleForm.orgIdOut) {\r\n            this.$message.error('调出项目不可与调入项目一致，请检查。')\r\n            this.loading = false\r\n          } else {\r\n            getBillFlow(postData).then(response => {\r\n              this.loading = false\r\n              if (response.success) {\r\n                this.billFlow = response.data.billFlow\r\n                this.active = 1\r\n              } else {\r\n                this.$message(response.message)\r\n              }\r\n            }).catch(() => { this.loading = false })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    submitForm(state) {\r\n      this.$refs['ruleForm'].validate(valid => {\r\n        if (valid) {\r\n          this.ruleForm.state = state\r\n          this.loading = true\r\n          var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n          var postData = {}\r\n          var pom = []\r\n          this.list.forEach(e => {\r\n            pom.push({\r\n              id: e.id,\r\n              storageInDetailId: e.storageInDetail.id,\r\n              materialId: e.material.id,\r\n              quantity: e.quantity,\r\n              quantity2: e.quantity2,\r\n              remark: e.remark\r\n            })\r\n          })\r\n          postData.orgIdIn = newObj.orgIdIn\r\n          postData.orgIdOut = newObj.orgIdOut\r\n          postData.remark = newObj.remark\r\n          postData.personId = newObj.personId\r\n          postData.fileList = newObj.fileList\r\n          postData.state = state\r\n          postData.allocationDetails = pom\r\n          // 获取流程组件中的数据\r\n          if (state === 1) {\r\n            // 如果是提交，验证流程人员的完整信息\r\n            const checkBillFlow = this.$refs.flowSelect.checkBillFlow()\r\n            if (!checkBillFlow) {\r\n              this.$message('流程错误，流程中审批人员不能为空')\r\n              return false\r\n            }\r\n          }\r\n\r\n          const billFlow = this.$refs.flowSelect.getBillFlow()\r\n          console.log('获取的billFlow:', billFlow)\r\n          this.ruleForm.billFlow = billFlow\r\n          postData.billFlow = billFlow\r\n\r\n          if (this.id) {\r\n            postData.id = this.id\r\n            putAllocation(postData).then(response => {\r\n              this.closeThePage()\r\n            })\r\n          } else {\r\n            postData.id = 0\r\n            addAllocation(postData).then(response => {\r\n              this.closeThePage()\r\n            })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    previous() {\r\n      // 上一步\r\n      this.active = 0\r\n      this.billFlow = null\r\n    },\r\n    async initData() {\r\n      // 有参数id 就是编辑\r\n      if (this.$route.query.id) {\r\n        this.id = this.$route.query.id\r\n      }\r\n      if (this.id) {\r\n        this.loading = true\r\n        this.activate = false // 销毁部门组件\r\n        await getAllocationById({ id: this.id }).then(response => this.setData(response))\r\n      } else {\r\n        getDefaultInfo().then(response => {\r\n          this.personList = response.data\r\n          this.ruleForm.personId = response.data[0].id\r\n          this.ruleForm.person = response.uid\r\n        })\r\n      }\r\n    },\r\n    setData(response) {\r\n      const { data } = response\r\n      this.ruleForm = data\r\n      this.ruleForm.fileList = data.upFile\r\n      this.orgKey++ // 重新加载项目组件\r\n      this.fileListKey++ // 重新加载文件组件\r\n      this.keyOutType++ // 重新加载出库类别组件\r\n      // 填充 明细列表\r\n      var pom = []\r\n      data.allocationDetails.forEach(e => {\r\n        pom.push({\r\n          id: e.id,\r\n          material: e.material,\r\n          storageInDetail: e.storageInDetail,\r\n          planDetailId: e.planDetailId,\r\n          quantity: e.quantity,\r\n          quantity2: e.quantity2,\r\n          remark: ''\r\n        })\r\n      })\r\n      this.list = pom\r\n      this.personList = data.personList\r\n      this.setColumnShow()\r\n      this.loading = false // loading 状态关闭\r\n      this.activate = true // 加载部门组件\r\n    },\r\n    closeThePage() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    },\r\n    setColumnShow() { // 设置列的显示。列中，都没有值，就隐藏\r\n      var modelunit2 = false\r\n      var modelbrand = false\r\n      var modelmodel = false\r\n      var modelspec = false\r\n      var modelthickness = false\r\n      var modeltexture = false\r\n      var modelsurfaceTreatment = false\r\n      var modeldesignNumber = false\r\n      for (var row of this.list) {\r\n        if (row.material.unit2) { modelunit2 = true }\r\n        if (row.material.brand) { modelbrand = true }\r\n        if (row.material.model) { modelmodel = true }\r\n        if (row.material.spec) { modelspec = true }\r\n        if (row.material.thickness) { modelthickness = true }\r\n        if (row.material.texture) { modeltexture = true }\r\n        if (row.material.surfaceTreatment) { modelsurfaceTreatment = true }\r\n        if (row.material.designNumber) { modeldesignNumber = true }\r\n      }\r\n      this.columnShow['unit2'] = modelunit2\r\n      this.columnShow['brand'] = modelbrand\r\n      this.columnShow['model'] = modelmodel\r\n      this.columnShow['spec'] = modelspec\r\n      this.columnShow['thickness'] = modelthickness\r\n      this.columnShow['texture'] = modeltexture\r\n      this.columnShow['surfaceTreatment'] = modelsurfaceTreatment\r\n      this.columnShow['designNumber'] = modeldesignNumber\r\n    },\r\n    add() {\r\n      this.$refs['ruleForm'].validate(valid => {\r\n        if (valid) {\r\n          var data = {\r\n            orgId: this.ruleForm.orgIdOut,\r\n            datalist: this.list\r\n          }\r\n          this.dialogTitle = '选择材料'\r\n          this.comName = 'StorageInDetailCheck'\r\n          this.currentRow = data\r\n          this.dialogWidth = '100%'\r\n          this.fileList = []\r\n          this.dialogTableVisible = true\r\n        }\r\n      })\r\n    },\r\n    dialogClose(data, state) {\r\n      this.addMaterial(data, state)\r\n      this.dialogTableVisible = false\r\n    },\r\n    cancel() { // 作废\r\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.loading = true\r\n        deleteAllocation({ id: this.ruleForm.id }).then(response => {\r\n          this.$message(response.message)\r\n          this.loading = false\r\n          this.closeThePage()\r\n        })\r\n      }).catch(() => {})\r\n    },\r\n    addMaterial(data, state) {\r\n      if (state === 'check') {\r\n        this.loading = true\r\n        var pom = []\r\n        data.list.forEach(e => {\r\n          pom.push({\r\n            material: e.material,\r\n            storageInDetail: e,\r\n            quantity: 0,\r\n            quantity2: 0,\r\n            remark: ''\r\n          })\r\n        })\r\n        this.list = pom\r\n        this.setColumnShow()\r\n        this.loading = false\r\n      } else {\r\n        this.initData()\r\n      }\r\n    },\r\n    handleChange() {\r\n      //\r\n    },\r\n    getRemotePerson(query) {\r\n      query = query.trim()\r\n      if (query !== '') {\r\n        this.loading = true\r\n        setTimeout(() => {\r\n          getPersonList().then(response => {\r\n            this.personList = response.data\r\n            this.loading = false\r\n          })\r\n        }, 200)\r\n      } else {\r\n        this.personList = []\r\n      }\r\n    },\r\n    getPersons(personList) {\r\n      if ((personList || []).length > 0) {\r\n        this.personList = personList.map(m => { return { id: m.id, name: m.name } })\r\n        this.$nextTick(() => {\r\n          this.ruleForm.personId = personList[0].id\r\n          this.ruleForm.personName = personList[0].name\r\n        })\r\n      }\r\n    },\r\n    selectPerson() {\r\n      this.$refs.personRef.openDialog()\r\n    }\r\n  }\r\n}\r\n",null]}