{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\htly\\lxgl\\projectLXAttitude.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\htly\\lxgl\\projectLXAttitude.vue","mtime":1629686241860},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getProjectAttitudeById, addNewProjectToOrg } from '@/api/xmgl/project'\r\nimport FlowDisplay from '@/components/Flow/flowDisplay'\r\nimport FlowAttitude from '@/components/Flow/flowAttitude'\r\n// import UpFile from '@/components/UpLoad/UpFile'\r\nexport default {\r\n  name: 'ProjectLXAttitude',\r\n  components: {\r\n    FlowAttitude,\r\n    FlowDisplay\r\n    // UpFile\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        orgId: 0,\r\n        managementiState: 0,\r\n        inUse: true\r\n      },\r\n      projectForm: {\r\n        companyId: this.$store.state.user.selectOrgId,\r\n        number: '',\r\n        projectId: 0,\r\n        state: 0,\r\n        billFlowId: 0\r\n      },\r\n      orgStr: '',\r\n      fileList: [],\r\n      engPropertiesName: '',\r\n      managementiStateName: '',\r\n      structureName: '',\r\n      informationSourceName: '',\r\n      taxTypeName: '',\r\n      projectPropertyName: '',\r\n      proPropertiesName: '',\r\n      stateName: '',\r\n      projectId: null,\r\n\r\n      isLoad: false,\r\n      attitudePara: null,\r\n      billFlow: null\r\n    }\r\n  },\r\n  created() {\r\n  },\r\n  mounted() {\r\n    this.initData()\r\n  },\r\n  activated() {\r\n  },\r\n  methods: {\r\n    initData() {\r\n      this.projectId = this.$route.query.id\r\n      if (this.projectId) {\r\n        getProjectAttitudeById({ id: this.projectId }).then((response) => {\r\n          const { data, files, orgStr, dictionaries, billFlowData } = response\r\n          this.ruleForm = data.project\r\n          this.orgStr = orgStr\r\n          this.projectForm = data\r\n          this.fileList = files\r\n          dictionaries.forEach(element => {\r\n            if (element.type === 'engProperties') {\r\n              this.engPropertiesName = element.name\r\n            }\r\n            if (element.type === 'managementiState') {\r\n              this.managementiStateName = element.name\r\n            }\r\n            if (element.type === 'structureType') {\r\n              this.structureName = element.name\r\n            }\r\n            if (element.type === 'informationSource') {\r\n              this.informationSourceName = element.name\r\n            }\r\n            if (element.type === 'taxType') {\r\n              this.taxTypeName = element.name\r\n            }\r\n            if (element.type === 'projectProperty') {\r\n              this.projectPropertyName = element.name\r\n            }\r\n            if (element.type === 'proProperties') {\r\n              this.proPropertiesName = element.name\r\n            }\r\n            if (element.type === 'projectState') {\r\n              this.stateName = element.name\r\n            }\r\n          })\r\n          this.billFlow = billFlowData\r\n          this.attitudePara = { formId: billFlowData.formId, billFlowId: data.billFlowId, planId: data.id }\r\n          this.isLoad = true // 加载审批组件\r\n        })\r\n      }\r\n    },\r\n    closeThePage() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    },\r\n    updateFlow() {\r\n      var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n      addNewProjectToOrg(newObj).then((response) => {\r\n        this.$message(response.message)\r\n        this.closeThePage()\r\n      }).catch(() => {\r\n\r\n      })\r\n    }\r\n  }\r\n}\r\n",null]}