{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\fpgl\\EntertainmentPlan\\details.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\fpgl\\EntertainmentPlan\\details.vue","mtime":1635749455626},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport TableEx from '@/components/TableEx'\r\nimport Detailsedit from '@/components/Detailsedit'\r\nimport FlowDisplay from '@/components/Flow/flowDisplay'\r\nimport FlowAttitude from '@/components/Flow/flowAttitude'\r\nimport { formatMoney } from '@/utils'\r\n\r\nimport { GetDepositById, CheckEntertainmentPlan } from '@/api/cwgl/EntertainmentPlan'\r\nexport default {\r\n  name: 'EntertainmentPlanDetails',\r\n  components: {\r\n    TableEx,\r\n    Detailsedit,\r\n    FlowDisplay,\r\n    FlowAttitude\r\n  },\r\n  data() {\r\n    return {\r\n      type: 'details', // 审核:approval 详情:details\r\n      size: 'mini',\r\n      capitalType: 1,\r\n      amount: '',\r\n      filter: {\r\n        stateOptions: [ // 状态数组\r\n        ]\r\n      },\r\n      activeNames: ['0', '1', '2'], // 展开的折叠面板\r\n      saveLoading: false,\r\n      payLoading: false,\r\n      myDetails: null, // 详情数据\r\n      billFlowData: null, // 流程信息\r\n      attitudePara: null, // 审批信息\r\n      showPayButton: false,\r\n      entertainmentPlan: {\r\n        id: '',\r\n        orgId: '',\r\n        companyId: '',\r\n        number: '',\r\n        personId: '',\r\n        date: '',\r\n        applicationAmount: '',\r\n        amount: '',\r\n        isBussinessFee: null,\r\n        bussinessInfoid: '',\r\n        summary: '',\r\n        remark: '',\r\n        year: '',\r\n        state: '',\r\n        entertainmentPlanDetails: []\r\n      }, // 招待费计划参数\r\n      entertainmentPlantable: {\r\n        columns: [\r\n          { label: '序号',\r\n            minWidth: '80', // 最小宽度\r\n            type: 'index'\r\n          },\r\n          { label: '姓名',\r\n            minWidth: '100', // 最小宽度\r\n            prop: 'name'\r\n          },\r\n          {\r\n            label: '单位',\r\n            prop: 'unit',\r\n            minWidth: '180'\r\n          },\r\n          {\r\n            label: '职务',\r\n            prop: 'position',\r\n            minWidth: '180'\r\n          },\r\n          {\r\n            align: 'right',\r\n            label: '申请金额',\r\n            prop: 'applicationAmount',\r\n            format: 'money',\r\n            minWidth: '180'\r\n          },\r\n          {\r\n            // label: '金额',\r\n            // prop: 'amount',\r\n            // format: 'money',\r\n            // minWidth: '180'\r\n            render: (h) => {\r\n              return (\r\n                <el-table-column minWidth='120' align='right' label='批准金额' scopedSlots={{ default: ({ row }) => {\r\n                  if (this.entertainmentPlan.state === 1) {\r\n                    return (<el-input\r\n                      vModel={row.amount}\r\n                      onInput={ ($event) => {\r\n                        row.amount = $event.replace(/\\d+(\\.)\\d{3}?/g, '')\r\n                        if (row.amount > row.applicationAmount) {\r\n                          row.amount = ''\r\n                          this.$message('批准金额不能大于申请金额!')\r\n                        }\r\n                      } }\r\n                      size='mini'\r\n                      onBlur={this.calculateAmount}\r\n                      placeholder='输入金额'/>\r\n                    )\r\n                  } else {\r\n                    return formatMoney(row.amount, 2, 0)\r\n                  }\r\n                } }} />\r\n              )\r\n            }\r\n          },\r\n          {\r\n            label: '备注',\r\n            prop: 'remark',\r\n            minWidth: '180'\r\n          }\r\n        ],\r\n        list: [\r\n          // {\r\n          //   id: 1,\r\n          //   entertainmentPlanId: '', // 详情id\r\n          //   socialResourceId: '', // 社会资源id\r\n          //   name: '', // 姓名\r\n          //   position: '', // 职务\r\n          //   unit: '', // 单位\r\n          //   applicationAmount: '', // 申请金额\r\n          //   amount: '', // 批准金额\r\n          //   remark: '' // 备注\r\n          // }\r\n        ],\r\n        tbLoading: false\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    /**\r\n     * 详情各字段计算\r\n     */\r\n    infoList() {\r\n      const {\r\n        myDetails: {\r\n          orgStr,\r\n          stateName,\r\n          data: {\r\n            person,\r\n            number,\r\n            isBussinessFee,\r\n            applicationAmount,\r\n            date,\r\n            remark,\r\n            createUserName,\r\n            createDate,\r\n            lastEditUserName,\r\n            lastEditDate,\r\n            submitUserName,\r\n            submitDate,\r\n            summary\r\n          }\r\n        }\r\n      } = this\r\n\r\n      const m = (val) => this.utils.formatMoney(val, 2, 0)\r\n      const d = (dataStr) => dataStr ? this.$moment(dataStr).format('YYYY-MM-DD') : dataStr\r\n      const info = [\r\n        { label: '制单人', value: createUserName },\r\n        { label: '制单时间', value: createDate },\r\n        { label: '提交人', value: submitUserName },\r\n        { label: '提交时间', value: submitDate },\r\n        { label: '更新人', value: lastEditUserName },\r\n        { label: '更新时间', value: lastEditDate },\r\n        { label: '状态', value: stateName }\r\n      ]\r\n      return [\r\n        { label: '编号', value: number },\r\n        { label: '部门', value: orgStr },\r\n        { label: '姓名', value: person.name },\r\n        { label: '日期', value: d(date) },\r\n        { label: '项目运营费用', value: isBussinessFee ? '是' : '否' },\r\n        { label: '金额', value: m(applicationAmount) },\r\n        { label: '事由', value: summary },\r\n        { label: '备注', value: remark },\r\n        ...(this.type === 'details' ? info : [])\r\n      ]\r\n    }\r\n  },\r\n  beforeRouteEnter(to, from, next) {\r\n    next(vm => {\r\n      vm.initData()\r\n    })\r\n  },\r\n  methods: {\r\n    /**\r\n     * @description: 初始化数据\r\n     */\r\n    initData() {\r\n      const { id, type } = this.$route.query\r\n      this.type = type\r\n      this.myId = id\r\n      this.fetchData()\r\n    },\r\n    async fetchData() {\r\n      if (!this.myId) return\r\n      GetDepositById({ id: this.myId }).then(res => {\r\n        // 给招待费计划信息数据赋值\r\n        const form = this.entertainmentPlan\r\n        for (const key in form) {\r\n          if (Object.hasOwnProperty.call(form, key)) {\r\n            form[key] = res.data[key] || form[key]\r\n          }\r\n        }\r\n        this.entertainmentPlan.isBussinessFee = res.data.isBussinessFee\r\n        this.billFlowData = res.billFlowData\r\n        this.myDetails = res\r\n        this.entertainmentPlantable.list = res.data.entertainmentPlanDetails\r\n        this.attitudePara = { formId: res.billFlowData.formId, billFlowId: res.data.billFlowId, planId: res.data.id }\r\n      }).catch(e => {\r\n        console.log('fetchData:请求列表数据失败，错误信息：', e)\r\n      })\r\n    },\r\n    saveFlow() {\r\n      this.$confirm('是否确定保存？', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.saveLoading = true\r\n        this.entertainmentPlan.entertainmentPlanDetails = this.entertainmentPlantable.list\r\n        const attitude = this.$refs.flowAttitude.getPostData()\r\n        if (attitude.attitudeType === 1 || attitude.attitudeType === 2) {\r\n          if (!this.amount) {\r\n            this.saveLoading = false\r\n            return this.$message.error('请填写批准金额')\r\n          }\r\n          if (Number(this.amount) > this.myDetails.data.applicationAmount) {\r\n            this.saveLoading = false\r\n            return this.$message.error('批准金额不能大于申请金额')\r\n          }\r\n        }\r\n        CheckEntertainmentPlan({ attitude, entertainmentPlan: this.entertainmentPlan }).then(res => {\r\n          if (res.code === 200) {\r\n            this.$message.success(res.message)\r\n            this.goBack() // 跳转\r\n          } else {\r\n            this.$message.error(res.message)\r\n          }\r\n        }).finally(() => {\r\n          this.saveLoading = false\r\n        }).catch(() => {\r\n          this.saveLoading = false\r\n        })\r\n      })\r\n    },\r\n    /**\r\n     * 提交审批意见以后的回调函数\r\n     */\r\n    updateFlow() {\r\n      // 直接返回\r\n      this.goBack()\r\n    },\r\n    /**\r\n     * 计算批准金额是否超出申请金额\r\n     */\r\n    calculateAmount() {\r\n      let allAmount = 0\r\n      this.entertainmentPlantable.list.forEach(e => {\r\n        allAmount += +e.amount\r\n      })\r\n      this.amount = allAmount\r\n      this.entertainmentPlan.amount = allAmount\r\n    },\r\n    goBack() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    }\r\n  }\r\n}\r\n",null]}