{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\ywgl\\swb\\bussinessBidDetailAdd.vue?vue&type=template&id=0875269d&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\ywgl\\swb\\bussinessBidDetailAdd.vue","mtime":1629164376395},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"app-container\" }, [\n    _c(\n      \"div\",\n      [\n        _c(\n          \"el-form\",\n          {\n            ref: \"ruleForm\",\n            attrs: {\n              \"status-icon\": \"\",\n              model: _vm.ruleForm,\n              rules: _vm.rules,\n              \"label-width\": \"120px\",\n              size: \"mini\"\n            }\n          },\n          [\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"范围名称\", prop: \"name\" } },\n              [\n                _c(\"el-input\", {\n                  attrs: {\n                    placeholder: \"请输入\",\n                    size: \"mini\",\n                    maxlength: \"50\",\n                    disabled: _vm.diasabledInput\n                  },\n                  model: {\n                    value: _vm.ruleForm.name,\n                    callback: function($$v) {\n                      _vm.$set(_vm.ruleForm, \"name\", $$v)\n                    },\n                    expression: \"ruleForm.name\"\n                  }\n                })\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"报价\", prop: \"planQuote\" } },\n              [\n                _c(\n                  \"el-input\",\n                  {\n                    attrs: { type: \"number\", size: \"mini\", precision: 2 },\n                    on: { change: _vm.calProfit },\n                    model: {\n                      value: _vm.ruleForm.planQuote,\n                      callback: function($$v) {\n                        _vm.$set(_vm.ruleForm, \"planQuote\", $$v)\n                      },\n                      expression: \"ruleForm.planQuote\"\n                    }\n                  },\n                  [_c(\"template\", { slot: \"append\" }, [_vm._v(\"万元\")])],\n                  2\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"成本\", prop: \"estimatedCost\" } },\n              [\n                _c(\n                  \"el-input\",\n                  {\n                    attrs: { type: \"number\", size: \"mini\", precision: 2 },\n                    on: { change: _vm.calProfit },\n                    model: {\n                      value: _vm.ruleForm.estimatedCost,\n                      callback: function($$v) {\n                        _vm.$set(_vm.ruleForm, \"estimatedCost\", $$v)\n                      },\n                      expression: \"ruleForm.estimatedCost\"\n                    }\n                  },\n                  [_c(\"template\", { slot: \"append\" }, [_vm._v(\"万元\")])],\n                  2\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"利润\", prop: \"estimatedProfitMargin\" } },\n              [\n                _c(\n                  \"el-input\",\n                  {\n                    attrs: {\n                      type: \"number\",\n                      size: \"mini\",\n                      precision: 2,\n                      disabled: true\n                    },\n                    on: { change: _vm.calNetProfit },\n                    model: {\n                      value: _vm.ruleForm.estimatedProfitMargin,\n                      callback: function($$v) {\n                        _vm.$set(_vm.ruleForm, \"estimatedProfitMargin\", $$v)\n                      },\n                      expression: \"ruleForm.estimatedProfitMargin\"\n                    }\n                  },\n                  [_c(\"template\", { slot: \"append\" }, [_vm._v(\"%\")])],\n                  2\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"咨询费\", prop: \"estimatedConsultancyFee\" } },\n              [\n                _c(\n                  \"el-input\",\n                  {\n                    attrs: { type: \"number\", size: \"mini\", precision: 2 },\n                    on: { change: _vm.calNetProfit },\n                    model: {\n                      value: _vm.ruleForm.estimatedConsultancyFee,\n                      callback: function($$v) {\n                        _vm.$set(_vm.ruleForm, \"estimatedConsultancyFee\", $$v)\n                      },\n                      expression: \"ruleForm.estimatedConsultancyFee\"\n                    }\n                  },\n                  [_c(\"template\", { slot: \"append\" }, [_vm._v(\"%\")])],\n                  2\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"净利润\", prop: \"estimatedNetProfitMargin\" } },\n              [\n                _c(\n                  \"el-input\",\n                  {\n                    attrs: {\n                      type: \"number\",\n                      size: \"mini\",\n                      disabled: true,\n                      precision: 2\n                    },\n                    model: {\n                      value: _vm.ruleForm.estimatedNetProfitMargin,\n                      callback: function($$v) {\n                        _vm.$set(_vm.ruleForm, \"estimatedNetProfitMargin\", $$v)\n                      },\n                      expression: \"ruleForm.estimatedNetProfitMargin\"\n                    }\n                  },\n                  [_c(\"template\", { slot: \"append\" }, [_vm._v(\"%\")])],\n                  2\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"el-form-item\",\n              { attrs: { align: \"center\" } },\n              [\n                _c(\n                  \"el-button\",\n                  {\n                    attrs: { type: \"primary\", loading: _vm.buttonLoading },\n                    on: {\n                      click: function($event) {\n                        return _vm.submitForm(\"ruleForm\")\n                      }\n                    }\n                  },\n                  [_vm._v(\"保存\")]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-button\",\n                  {\n                    attrs: { type: \"primary\", loading: _vm.buttonLoading },\n                    on: {\n                      click: function($event) {\n                        return _vm.$emit(\"dialogClose\")\n                      }\n                    }\n                  },\n                  [_vm._v(\"关闭\")]\n                )\n              ],\n              1\n            )\n          ],\n          1\n        )\n      ],\n      1\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}