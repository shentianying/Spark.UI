{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\ggzx\\grgl\\workerRegister\\edit.vue?vue&type=template&id=c6eb0c80&scoped=true&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\ggzx\\grgl\\workerRegister\\edit.vue","mtime":1635749455683},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"app-container\" },\n    [\n      _c(\n        \"div\",\n        {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: _vm.active === 0,\n              expression: \"active===0\"\n            }\n          ]\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"ruleForm\",\n              attrs: {\n                \"status-icon\": \"\",\n                model: _vm.ruleForm,\n                rules: _vm.rules,\n                \"label-width\": \"120px\",\n                size: \"mini\"\n              }\n            },\n            [\n              _c(\n                \"el-row\",\n                { attrs: { gutter: 10 } },\n                [\n                  _c(\n                    \"el-col\",\n                    { attrs: { sm: 12, xs: 24 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"编号\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              readonly: \"readonly\",\n                              placeholder: \"自动生成\",\n                              size: \"mini\",\n                              maxlength: \"50\"\n                            },\n                            model: {\n                              value: _vm.ruleForm.number,\n                              callback: function($$v) {\n                                _vm.$set(_vm.ruleForm, \"number\", $$v)\n                              },\n                              expression: \"ruleForm.number\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"报到日期\", prop: \"registerDate\" } },\n                        [\n                          _c(\"el-date-picker\", {\n                            staticStyle: { width: \"100%\" },\n                            attrs: {\n                              type: \"date\",\n                              \"value-format\": \"yyyy-MM-dd\",\n                              placeholder: \"请选择\",\n                              size: \"mini\"\n                            },\n                            model: {\n                              value: _vm.ruleForm.registerDate,\n                              callback: function($$v) {\n                                _vm.$set(_vm.ruleForm, \"registerDate\", $$v)\n                              },\n                              expression: \"ruleForm.registerDate\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"附件\" } },\n                        [\n                          _c(\"up-file\", {\n                            key: \"fileListKey\",\n                            attrs: {\n                              \"is-preview\": true,\n                              \"is-upfile\": true,\n                              \"is-delete\": true,\n                              \"file-list\": _vm.ruleForm.fileList\n                            },\n                            model: {\n                              value: _vm.ruleForm.fileList,\n                              callback: function($$v) {\n                                _vm.$set(_vm.ruleForm, \"fileList\", $$v)\n                              },\n                              expression: \"ruleForm.fileList\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-col\",\n                    { attrs: { sm: 12, xs: 24 } },\n                    [\n                      _vm.activate\n                        ? _c(\n                            \"el-form-item\",\n                            { attrs: { label: \"所属部门\", prop: \"orgId\" } },\n                            [\n                              _c(\"org-select2\", {\n                                attrs: {\n                                  \"data-mode\": 0,\n                                  size: \"mini\",\n                                  \"collapse-tags\": false,\n                                  \"show-all-levels\": true,\n                                  multiple: false,\n                                  filterable: true,\n                                  \"check-strictly\": false,\n                                  \"select-data\": _vm.ruleForm.orgId,\n                                  \"select-style\": \"width:100%;\"\n                                },\n                                model: {\n                                  value: _vm.ruleForm.orgId,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.ruleForm, \"orgId\", $$v)\n                                  },\n                                  expression: \"ruleForm.orgId\"\n                                }\n                              })\n                            ],\n                            1\n                          )\n                        : _vm._e(),\n                      _vm._v(\" \"),\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"备注\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              type: \"textarea\",\n                              rows: 4,\n                              size: \"mini\",\n                              maxlength: \"500\"\n                            },\n                            model: {\n                              value: _vm.ruleForm.remark,\n                              callback: function($$v) {\n                                _vm.$set(_vm.ruleForm, \"remark\", $$v)\n                              },\n                              expression: \"ruleForm.remark\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"flex_div\" },\n            [\n              _c(\n                \"el-button\",\n                {\n                  attrs: { loading: _vm.loading, size: \"mini\" },\n                  on: {\n                    click: function($event) {\n                      return _vm.addWorker()\n                    }\n                  }\n                },\n                [_vm._v(\"选择工人\")]\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-table\",\n            {\n              directives: [\n                {\n                  name: \"loading\",\n                  rawName: \"v-loading\",\n                  value: _vm.loading,\n                  expression: \"loading\"\n                }\n              ],\n              attrs: {\n                data: _vm.list,\n                \"element-loading-text\": \"Loading\",\n                border: \"\",\n                fit: \"\",\n                \"highlight-current-row\": \"\",\n                size: \"mini\"\n              }\n            },\n            [\n              _c(\"el-table-column\", {\n                attrs: { label: \"年度\", align: \"center\", width: \"60\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _vm._v(\n                          \"\\n          \" +\n                            _vm._s(scope.row.worker.year) +\n                            \"\\n        \"\n                        )\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { label: \"工号\", align: \"center\", \"min-width\": \"100\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _vm._v(\n                          \"\\n          \" +\n                            _vm._s(scope.row.worker.number) +\n                            \"\\n        \"\n                        )\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  label: \"工人姓名\",\n                  align: \"center\",\n                  \"min-width\": \"100\"\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _vm._v(\n                          \"\\n          \" +\n                            _vm._s(scope.row.worker.name) +\n                            \"\\n        \"\n                        )\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { label: \"所属部门\", align: \"center\", width: \"140\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _vm._v(\n                          \"\\n          \" +\n                            _vm._s(scope.row.worker.organization.name) +\n                            \"\\n        \"\n                        )\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { label: \"证件号码\", align: \"center\", width: \"140\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _vm._v(\n                          \"\\n          \" +\n                            _vm._s(scope.row.worker.idNumber) +\n                            \"\\n        \"\n                        )\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { label: \"报到日期\", align: \"center\", width: \"200\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _vm._v(\n                          \"\\n          \" +\n                            _vm._s(\n                              _vm._f(\"dateFormat\")(scope.row.registerDate)\n                            ) +\n                            \"\\n        \"\n                        )\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  label: \"是否办理工伤保险\",\n                  align: \"center\",\n                  width: \"200\"\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _c(\"el-switch\", {\n                          attrs: {\n                            \"active-color\": \"#13ce66\",\n                            \"inactive-color\": \"#ff4949\"\n                          },\n                          model: {\n                            value: scope.row.worker.isWithInsurance,\n                            callback: function($$v) {\n                              _vm.$set(scope.row.worker, \"isWithInsurance\", $$v)\n                            },\n                            expression: \"scope.row.worker.isWithInsurance\"\n                          }\n                        })\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  label: \"工伤保险开始日期\",\n                  align: \"center\",\n                  width: \"200\"\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _c(\"el-date-picker\", {\n                          staticStyle: { width: \"100%\" },\n                          attrs: {\n                            type: \"date\",\n                            \"value-format\": \"yyyy-MM-dd\",\n                            placeholder: \"请选择\",\n                            size: \"mini\"\n                          },\n                          model: {\n                            value: scope.row.worker.insuranceDate,\n                            callback: function($$v) {\n                              _vm.$set(scope.row.worker, \"insuranceDate\", $$v)\n                            },\n                            expression: \"scope.row.worker.insuranceDate\"\n                          }\n                        })\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { label: \"备注\", align: \"center\", \"min-width\": \"200\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _c(\"el-input\", {\n                          attrs: {\n                            placeholder: \"请输入\",\n                            size: \"mini\",\n                            maxlength: \"200\"\n                          },\n                          model: {\n                            value: scope.row.remark,\n                            callback: function($$v) {\n                              _vm.$set(scope.row, \"remark\", $$v)\n                            },\n                            expression: \"scope.row.remark\"\n                          }\n                        })\n                      ]\n                    }\n                  }\n                ])\n              })\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticStyle: { \"text-align\": \"center\", \"margin-top\": \"15px\" } },\n            [\n              _c(\n                \"el-button\",\n                {\n                  attrs: {\n                    size: \"mini\",\n                    type: \"success\",\n                    loading: _vm.loading\n                  },\n                  on: {\n                    click: function($event) {\n                      return _vm.getDynamicFlow()\n                    }\n                  }\n                },\n                [_vm._v(\"下一步➜\")]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: _vm.active === 1,\n              expression: \"active===1\"\n            }\n          ]\n        },\n        [\n          _vm.billFlow\n            ? _c(\"flow-select\", {\n                ref: \"flowSelect\",\n                attrs: { \"bill-flow\": _vm.billFlow }\n              })\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticStyle: { \"text-align\": \"center\", \"margin-top\": \"10px\" } },\n            [\n              _vm.ruleForm.id > 0\n                ? _c(\n                    \"el-button\",\n                    {\n                      attrs: {\n                        size: \"mini\",\n                        type: \"warning\",\n                        loading: _vm.loading\n                      },\n                      on: {\n                        click: function($event) {\n                          return _vm.cancel()\n                        }\n                      }\n                    },\n                    [_vm._v(\"作废\")]\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  attrs: {\n                    size: \"mini\",\n                    type: \"primary\",\n                    loading: _vm.loading\n                  },\n                  on: {\n                    click: function($event) {\n                      return _vm.submitForm(1)\n                    }\n                  }\n                },\n                [_vm._v(\"提交\")]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  attrs: {\n                    size: \"mini\",\n                    type: \"success\",\n                    loading: _vm.loading\n                  },\n                  on: {\n                    click: function($event) {\n                      return _vm.submitForm(0)\n                    }\n                  }\n                },\n                [_vm._v(\"保存\")]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  attrs: {\n                    size: \"mini\",\n                    type: \"success\",\n                    loading: _vm.loading\n                  },\n                  on: {\n                    click: function($event) {\n                      return _vm.previous()\n                    }\n                  }\n                },\n                [_vm._v(\"上一步\")]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _vm.dialogTableVisible\n        ? _c(\n            \"div\",\n            [\n              _c(\n                \"el-dialog\",\n                {\n                  attrs: {\n                    title: _vm.dialogTitle,\n                    \"destroy-on-close\": true,\n                    visible: _vm.dialogTableVisible,\n                    width: _vm.dialogWidth,\n                    \"append-to-body\": false\n                  },\n                  on: {\n                    \"update:visible\": function($event) {\n                      _vm.dialogTableVisible = $event\n                    }\n                  }\n                },\n                [\n                  _c(_vm.comName, {\n                    tag: \"component\",\n                    attrs: {\n                      obj: _vm.currentRow,\n                      \"is-preview\": true,\n                      \"file-list\": _vm.fileList,\n                      fullscreen: \"fullscreen\"\n                    },\n                    on: { dialogClose: _vm.dialogClose }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          )\n        : _vm._e(),\n      _vm._v(\" \"),\n      _c(\"select-worker-2\", {\n        ref: \"workerRef\",\n        attrs: {\n          multiple: true,\n          \"org-ids\": _vm.orgIdList,\n          \"bd-state\": false,\n          \"worker-list\": _vm.workerList\n        },\n        on: { getPersons: _vm.getPersons }\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}