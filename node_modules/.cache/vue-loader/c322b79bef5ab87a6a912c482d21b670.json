{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\quotation\\quotationEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\quotation\\quotationEdit.vue","mtime":1628756195067},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { generateQuotation, getQuotationById, sendQuotationSupplier, addQuotationSupplier, deleteQuotationSupplier, getQuotationByFId } from '@/api/cggl/quotation'\r\nimport OrgSelect2 from '@/components/OrgSelect/index2'\r\nimport { getPersonList } from '@/api/rsgl/person'\r\nimport CheckTask from '@/views/cggl/task/taskCheck'\r\nimport { getDictionarysByTypes } from '@/api/xtgl/dictionary'\r\nimport QuotationSuppliersAdd from './quotationSuppliersAdd'\r\nimport QuotationSupplier from './quotationSupplier'\r\nimport UpFile from '@/components/UpLoad/UpFile'\r\nexport default {\r\n  name: 'QuotationEdit',\r\n  components: {\r\n    OrgSelect2,\r\n    CheckTask,\r\n    QuotationSuppliersAdd,\r\n    QuotationSupplier,\r\n    UpFile\r\n  },\r\n  data() {\r\n    return {\r\n      id: null,\r\n      fid: null,\r\n      ruleForm: {\r\n        orgId: null,\r\n        supplier_id: [],\r\n        state: 0,\r\n        taskId: null,\r\n        times: 1,\r\n        fileList: []\r\n      },\r\n      disabled: false,\r\n      loading: false,\r\n      dialogTableVisible: false,\r\n      dialogTitle: '保存',\r\n      dialogWidth: '70%',\r\n      currentRow: null,\r\n      fileList: [],\r\n      listIndex: 0,\r\n      list: [],\r\n      planTypeList: null,\r\n      billFlow: false,\r\n      orgKey: 0,\r\n      fileListKey: 0,\r\n      canSubmit: false,\r\n      columnShow: {\r\n        unit2: true,\r\n        brand: true,\r\n        model: true,\r\n        spec: true,\r\n        thickness: true,\r\n        texture: true,\r\n        surfaceTreatment: true,\r\n        designNumber: true\r\n      },\r\n      personList: [],\r\n      // 供应商-参标单位\r\n      suppliers: [],\r\n      // 填报方式\r\n      keyFillMode: 0,\r\n      fillModeOptions: [],\r\n      // 供应商星级\r\n      supplierRateOptions: [],\r\n      // 参标单位状态\r\n      quotationSupStateOptions: [],\r\n      // 多轮报价单\r\n      quotationList: [],\r\n      rules: {\r\n        // orgId: [{ required: true, message: '请选择', trigger: 'change' }],\r\n        supplierId: [{ required: true, message: '请选择', trigger: 'change' }],\r\n        importType: [{ required: true, message: '请选择', trigger: 'blur' }],\r\n        supplier_id: [{ required: true, message: '请选择', trigger: 'blur' }],\r\n        taskNumber: [{ required: true, message: '请选择', trigger: 'blur' }],\r\n        deadline: [{ required: true, message: '请选择', trigger: 'blur' }]\r\n        // executeStartDate: [{ required: true, message: '请选择', trigger: 'blur' }],\r\n        // executeEndDate: [{ required: true, message: '请选择', trigger: 'blur' }]\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    getOrgList() {\r\n      return this.$store.state.user.info.orgList\r\n    }\r\n  },\r\n  watch: {\r\n    // 'ruleForm.orgId': {\r\n    //   handler: function(value, oldvalue) {\r\n    //     if (!oldvalue) {\r\n    //       this.$refs['ruleForm'].validateField('orgId', (valid) => {})\r\n    //     }\r\n    //   }, deep: true\r\n    // }\r\n  },\r\n  activated() {\r\n    // this.initData()\r\n  },\r\n  mounted() {\r\n    this.initData()\r\n  },\r\n  methods: {\r\n    saveForm() {\r\n    },\r\n    submitForm(formName, state) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          var postData = {}\r\n          var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n          // 拼接材料明细参数\r\n          var arr1 = []\r\n          this.list.forEach(e => {\r\n            var item = {}\r\n            item.materialId = e.materialId\r\n            item.planDetailId = e.planDetailId\r\n            item.state = 0\r\n            item.remark = e.remark\r\n            arr1.push(item)\r\n          })\r\n          postData.fId = newObj.fId\r\n          postData.orgId = newObj.orgId\r\n          postData.taskId = newObj.taskId\r\n          postData.useSpace = newObj.useSpace\r\n          postData.executeUserId = newObj.executeUserId\r\n          postData.executeStartDate = newObj.executeStartDate\r\n          postData.executeEndDate = newObj.executeEndDate\r\n          postData.deadline = newObj.deadline\r\n          postData.times = newObj.times\r\n          // postData.planId = newObj.planId\r\n          postData.state = state\r\n          postData.remark = newObj.remark\r\n          postData.quotationDetails = arr1\r\n          // postData.quotationSuppliers = this.suppliers\r\n\r\n          this.loading = true\r\n          if (this.id) {\r\n            postData.id = this.id\r\n          }\r\n          // 判断供应商列表的填报方式都已填写\r\n          // var isWrite = true\r\n          // if (this.suppliers.length > 0) {\r\n          //   this.suppliers.forEach(e => {\r\n          //     if (!e.fillMode) {\r\n          //       this.$alert('请选择参标单位的填报方式！')\r\n          //       this.loading = false\r\n          //       isWrite = false\r\n          //     }\r\n          //   })\r\n          // }\r\n          // if (isWrite) {\r\n          // }\r\n          generateQuotation(postData).then(response => {\r\n            this.$message(response.message)\r\n            this.loading = false\r\n            // this.setData(response)\r\n            // this.closeThePage()\r\n            this.id = response.data\r\n            getQuotationById({ id: this.id }).then(response => { this.setData(response) })\r\n          }).catch(() => { this.loading = false })\r\n        }\r\n      })\r\n    },\r\n    async initData() {\r\n      // 用户\r\n      getPersonList().then(response => {\r\n        this.personList = response.data\r\n      })\r\n      // 数据初始化\r\n      if (this.$route.query.id) {\r\n        this.id = this.$route.query.id\r\n      }\r\n      // 再次报价\r\n      if (this.$route.params.fid) {\r\n        this.fid = this.$route.params.fid\r\n      }\r\n      var fillmodes = []\r\n      var supplierrates = []\r\n      var quotationsupstates = []\r\n      getDictionarysByTypes({ types: 'priceListImportType,supplierRate,quotationSupState' })\r\n        .then((response) => {\r\n          const { data } = response\r\n          data.forEach(element => {\r\n            element.pid = element.pId\r\n            if (element.type === 'priceListImportType') {\r\n              fillmodes.push(element)\r\n            }\r\n            if (element.type === 'supplierRate') {\r\n              supplierrates.push(element)\r\n            }\r\n            if (element.type === 'quotationSupState') {\r\n              quotationsupstates.push(element)\r\n            }\r\n          })\r\n        })\r\n      this.fillModeOptions = fillmodes\r\n      this.supplierRateOptions = supplierrates\r\n      this.quotationSupStateOptions = quotationsupstates\r\n      if (this.id) {\r\n        getQuotationById({ id: this.id }).then(response => { this.setData(response) })\r\n      }\r\n      if (this.fid) {\r\n        getQuotationByFId({ fid: this.fid }).then(response => { this.setAgainData(response) })\r\n      }\r\n    },\r\n    setAgainData(response) {\r\n      this.loading = true\r\n      const { data, quotationList, maxTimes } = response\r\n      var pom = []\r\n      data.quotationDetails.forEach(e => {\r\n        pom.push({\r\n          id: e.id,\r\n          categoryId: e.material.categoryId,\r\n          category: { id: e.material.categoryId, name: e.material.materialCategory.name, unit: e.material.materialCategory.unit },\r\n          unit2: e.material.unit2,\r\n          brand: e.material.brand,\r\n          model: e.material.model,\r\n          spec: e.material.spec,\r\n          thickness: e.material.thickness,\r\n          texture: e.material.texture,\r\n          surfaceTreatment: e.material.surfaceTreatment,\r\n          designNumber: e.material.designNumber,\r\n          applicationQuantity: e.planDetail.applicationQuantity,\r\n          applicationQuantity2: e.planDetail.applicationQuantity2,\r\n          quantity: e.planDetail.quantity,\r\n          quantity2: e.planDetail.quantity2,\r\n          entryDate: e.planDetail.entryDate,\r\n          remark: e.remark,\r\n          materialId: e.materialId,\r\n          planDetailId: e.planDetailId\r\n        })\r\n      })\r\n      this.ruleForm = data\r\n      this.ruleForm.taskNumber = data.cgTask.number\r\n      this.ruleForm.times = maxTimes\r\n      this.ruleForm.id = 0\r\n      this.quotationList = quotationList\r\n      this.list = pom\r\n      this.orgKey++ // 项目组件重新加载\r\n      this.keyFillMode++ // 付款方式组件重新加载\r\n      this.loading = false // loading 状态关闭\r\n      this.setColumnShow()\r\n    },\r\n    setData(response) {\r\n      this.loading = true\r\n      const { data } = response\r\n      if (data.state > 0) {\r\n        this.closeThePage()\r\n      }\r\n      var pom = []\r\n      data.quotationDetails.forEach(e => {\r\n        pom.push({\r\n          id: e.id,\r\n          categoryId: e.material.categoryId,\r\n          category: { id: e.material.categoryId, name: e.material.materialCategory.name, unit: e.material.materialCategory.unit },\r\n          unit2: e.material.unit2,\r\n          brand: e.material.brand,\r\n          model: e.material.model,\r\n          spec: e.material.spec,\r\n          thickness: e.material.thickness,\r\n          texture: e.material.texture,\r\n          surfaceTreatment: e.material.surfaceTreatment,\r\n          designNumber: e.material.designNumber,\r\n          applicationQuantity: e.planDetail.applicationQuantity,\r\n          applicationQuantity2: e.planDetail.applicationQuantity2,\r\n          quantity: e.planDetail.quantity,\r\n          quantity2: e.planDetail.quantity2,\r\n          entryDate: e.planDetail.entryDate,\r\n          remark: e.remark,\r\n          materialId: e.materialId,\r\n          planDetailId: e.planDetailId\r\n        })\r\n      })\r\n      // 填充参数\r\n      this.ruleForm = data\r\n      this.quotationList = data.quotationList\r\n      this.orgKey++ // 项目重新赋值\r\n      this.suppliers = data.supplier\r\n      // 是否可以提交\r\n      var isCan = false\r\n      data.supplier.forEach(e => {\r\n        if (e.state >= 2) {\r\n          isCan = true\r\n        }\r\n      })\r\n      this.canSubmit = isCan\r\n      this.keyFillMode += 1\r\n      this.suppliers.forEach(e => {\r\n        // if (e.state === 0) {\r\n        //   this.canSend = true\r\n        // } else {\r\n        //   this.disabled = true\r\n        // }\r\n        if (e.state !== 0) {\r\n          this.disabled = true\r\n        }\r\n      })\r\n      // 填充 明细列表\r\n      this.list = pom\r\n      this.loading = false // loading 状态关闭\r\n      this.setColumnShow()\r\n    },\r\n    setColumnShow() { // 设置列的显示。列中，都没有值，就隐藏\r\n      var modelunit2 = false\r\n      var modelbrand = false\r\n      var modelmodel = false\r\n      var modelspec = false\r\n      var modelthickness = false\r\n      var modeltexture = false\r\n      var modelsurfaceTreatment = false\r\n      var modeldesignNumber = false\r\n      for (var row of this.list) {\r\n        if (row.unit2) { modelunit2 = true }\r\n        if (row.brand) { modelbrand = true }\r\n        if (row.model) { modelmodel = true }\r\n        if (row.spec) { modelspec = true }\r\n        if (row.thickness) { modelthickness = true }\r\n        if (row.texture) { modeltexture = true }\r\n        if (row.surfaceTreatment) { modelsurfaceTreatment = true }\r\n        if (row.designNumber) { modeldesignNumber = true }\r\n      }\r\n      this.columnShow['unit2'] = modelunit2\r\n      this.columnShow['brand'] = modelbrand\r\n      this.columnShow['model'] = modelmodel\r\n      this.columnShow['spec'] = modelspec\r\n      this.columnShow['thickness'] = modelthickness\r\n      this.columnShow['texture'] = modeltexture\r\n      this.columnShow['surfaceTreatment'] = modelsurfaceTreatment\r\n      this.columnShow['designNumber'] = modeldesignNumber\r\n    },\r\n    closeThePage() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    },\r\n    dialogClose(data, state) {\r\n      this.addMaterial(data, state)\r\n      this.setColumnShow()\r\n      this.dialogTableVisible = false\r\n    },\r\n    checkTask() {\r\n      this.dialogTitle = '选择任务单'\r\n      this.comName = 'CheckTask'\r\n      this.dialogWidth = '100%'\r\n      if (this.ruleForm.times > 1) {\r\n        this.currentRow = this.ruleForm\r\n      }\r\n      this.fileList = []\r\n      this.dialogTableVisible = true\r\n    },\r\n    getRemotePerson(query) {\r\n      if (query.length > 0) {\r\n        query = query.trim()\r\n        setTimeout(() => {\r\n          getPersonList({ name: query }).then(response => {\r\n            this.personList = response.data\r\n          })\r\n        }, 200)\r\n      } else {\r\n        getPersonList().then(response => {\r\n          this.personList = response.data\r\n        })\r\n      }\r\n    },\r\n    addMaterial(data, state) {\r\n      if (state === 'add') {\r\n        var times = this.ruleForm.times\r\n        this.ruleForm = {\r\n          orgId: data.form.orgId,\r\n          taskNumber: data.form.number,\r\n          taskId: data.form.id,\r\n          executeUserId: data.form.buyerId,\r\n          planId: data.form.planId,\r\n          state: 0,\r\n          times: times\r\n        }\r\n        this.orgKey++\r\n        var pom = []\r\n        data.list.forEach(e => {\r\n          pom.push({\r\n            categoryId: e.categoryId,\r\n            category: e.category,\r\n            unit2: e.unit2,\r\n            brand: e.brand,\r\n            model: e.model,\r\n            spec: e.spec,\r\n            thickness: e.thickness,\r\n            texture: e.texture,\r\n            surfaceTreatment: e.surfaceTreatment,\r\n            designNumber: e.designNumber,\r\n            applicationQuantity: e.applicationQuantity,\r\n            applicationQuantity2: e.applicationQuantity2,\r\n            quantity: e.quantity,\r\n            quantity2: e.quantity2,\r\n            entryDate: e.entryDate,\r\n            remark: e.remark,\r\n            materialId: e.materialId,\r\n            planDetailId: e.id\r\n          })\r\n        })\r\n        this.list = pom\r\n      } else if (state === 'addSuppliers') {\r\n        // 新增参标单位\r\n        data.list.forEach(e => {\r\n          var arr = {}\r\n          // arr.id = 0\r\n          arr.quotationId = this.id\r\n          arr.supplierId = e.supplierId\r\n          arr.state = 0\r\n          arr.contacts = e.contacts\r\n          arr.contactsPhone = e.contactsPhone\r\n          // arr.fillMode = null\r\n          arr.supplier = e\r\n          this.suppliers.push(arr)\r\n        })\r\n        addQuotationSupplier(this.suppliers).then(response => {\r\n          this.suppliers = response.data\r\n          // this.initData()\r\n          // this.$alert('添加成功！')\r\n        })\r\n      } else {\r\n        this.initData()\r\n      }\r\n    },\r\n    getSupplierRate(rate) {\r\n      var supplierRate = this.supplierRateOptions.find(f => f.value === rate)\r\n      return supplierRate.name\r\n    },\r\n    addSupplier() {\r\n      this.dialogTitle = '选择参标单位'\r\n      this.comName = 'QuotationSuppliersAdd'\r\n      this.currentRow = this.suppliers\r\n      this.dialogWidth = '100%'\r\n      this.fileList = []\r\n      this.dialogTableVisible = true\r\n    },\r\n    del(d) {\r\n      // 删除数据库这一条数据\r\n      deleteQuotationSupplier(d).then(response => {\r\n        this.suppliers = response.data\r\n        // this.initData()\r\n      })\r\n    },\r\n    getquotationSupState(state) {\r\n      var quotationSupplier = this.quotationSupStateOptions.find(f => f.value === state)\r\n      return quotationSupplier.name\r\n    },\r\n    send() {\r\n      this.loading = true\r\n      sendQuotationSupplier(this.suppliers).then(response => {\r\n        this.suppliers = response.data\r\n        this.loading = false\r\n        this.initData()\r\n        this.$message.error(response.message)\r\n      })\r\n    },\r\n    fill(row) {\r\n      this.dialogTitle = row.row.supplier.name + '-填报'\r\n      this.comName = 'QuotationSupplier'\r\n      this.currentRow = row.row\r\n      this.dialogWidth = '100%'\r\n      this.fileList = []\r\n      this.dialogTableVisible = true\r\n    },\r\n    attitude() {\r\n      this.closeThePage()\r\n      this.$router.push({ name: 'QuotationAttitude', query: { id: this.id, refreshRouterName: this.$route.name }, params: { id: this.id }})\r\n    },\r\n    detail(row) {\r\n      this.$router.push({ name: 'QuotationAttitude', query: { id: row.id, refreshRouterName: this.$route.name }, params: { id: row.id }})\r\n    },\r\n    getOrgName(id) {\r\n      var orgList = this.getOrgList.find(f => f.id === id)\r\n      if (orgList) {\r\n        return orgList.name\r\n      } else {\r\n        return ''\r\n      }\r\n    }\r\n    // openTask(taskId) {\r\n    //   this.$router.push({ name: 'TaskDetail', query: { id: taskId, refreshRouterName: this.$route.name, tab: 'detail' }, params: { id: taskId, isCheck: false }})\r\n    // },\r\n  }\r\n}\r\n",null]}