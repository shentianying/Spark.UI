{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\fbgl\\fbdwgl\\SubcontractPeople\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\fbgl\\fbdwgl\\SubcontractPeople\\edit.vue","mtime":1635844823960},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport MyForm from '@/components/MyForm'\r\n\r\nimport { InitSubcontractPeople, AddSubcontractPeople, PutSubcontractPeople, GetSubcontractPeopleById } from '@/api/fbgl/subcontractPeople'\r\nexport default {\r\n  name: 'SubcontractPeopleEdit',\r\n  components: {\r\n    MyForm\r\n  },\r\n  data() {\r\n    return {\r\n      state: 0,\r\n      labelWidth: '160px',\r\n      size: 'mini',\r\n      selectPlaceholder: '输入选择',\r\n      inputPlaceholder: '请输入',\r\n      firstForm: {\r\n        id: 0,\r\n        name: '', // 分包人\r\n        idNumber: '', // 身份证号\r\n        orgId: '', // 部门\r\n        address: '', // 地址\r\n        tel: '', // 电话\r\n        phone: '', // 手机\r\n        fax: '', // 传真\r\n        email: '', // Email\r\n        type: '', // 类型\r\n        isForbidden: 0,\r\n        remark: '', // 备注\r\n        fileList: [] // 附件\r\n      },\r\n      firstRules: {\r\n        orgId: [\r\n          { required: true, message: '请选择部门', trigger: 'change' }\r\n        ],\r\n        name: [\r\n          { required: true, message: '请输入姓名', trigger: 'change' }\r\n        ],\r\n        type: [\r\n          { required: true, message: '请选择类型', trigger: 'change' }\r\n        ]\r\n      },\r\n      filter: {\r\n        isForbiddenalist: [\r\n          { label: '是', value: 1 },\r\n          { label: '否', value: 0 }\r\n        ],\r\n        typeList: [] // 分包人类型\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    formNodeData() {\r\n      const {\r\n        selectPlaceholder,\r\n        inputPlaceholder,\r\n        filter: {\r\n          isForbiddenalist,\r\n          typeList\r\n        }\r\n      } = this\r\n      return [\r\n        { label: '分包人姓名:', keyword: 'name', props: { placeholder: inputPlaceholder, maxlength: 4 }},\r\n        { label: '身份证号:', keyword: 'idNumber', props: { placeholder: inputPlaceholder, maxlength: 18 }},\r\n        { label: '部门:', keyword: 'orgId', component: 'OrgSelect', props: { placeholder: selectPlaceholder }},\r\n        { label: '地址:', keyword: 'address', props: { placeholder: inputPlaceholder, maxlength: 100 }},\r\n        { label: '电话:', keyword: 'tel', props: { placeholder: inputPlaceholder, maxlength: 11 }},\r\n        { label: '手机:', keyword: 'phone', props: { placeholder: inputPlaceholder, maxlength: 11 }},\r\n        { label: '传真:', keyword: 'fax', props: { placeholder: inputPlaceholder }},\r\n        { label: 'Email:', keyword: 'email', props: { placeholder: inputPlaceholder }},\r\n        { label: '类型:', keyword: 'type', component: 'Select', props: { propsLabel: 'name', placeholder: selectPlaceholder, options: typeList }},\r\n        { label: '是否禁止:', keyword: 'isForbidden', component: 'Select', props: { placeholder: selectPlaceholder, options: isForbiddenalist }},\r\n        { label: '备注:', monopolize: true, keyword: 'remark', props: { placeholder: inputPlaceholder, type: 'textarea' }},\r\n        { label: '附件:', monopolize: true, keyword: 'fileList', component: 'UpFile', width: '100%', props: { isUpfile: true, isDelete: true, fileSize: 100, isPreview: true }}\r\n      ]\r\n    }\r\n  },\r\n  beforeRouteEnter(to, from, next) {\r\n    next(vm => {\r\n      vm.initSelect()\r\n      const newId = vm.$route.query.id\r\n      const oldId = vm.firstForm.id\r\n      const type = vm.$route.query.type\r\n      if (type === 'edit' && newId !== oldId) {\r\n      // 说明是打开另一个单子的编辑页面\r\n        vm.firstForm.id = newId\r\n        vm.initForm()\r\n        vm.initDataById(newId)\r\n      } else {\r\n        const form = vm.firstForm\r\n        form.companyId = vm.$store.state.user.selectOrgId\r\n        // 由于缓存的原因，防止上一次是编辑留下的数据，所以需要判断一下oldId\r\n        if (type === 'add' && oldId) {\r\n          vm.initForm()\r\n        }\r\n      }\r\n    })\r\n  },\r\n  methods: {\r\n    /* 重新设置输入框的内容 */\r\n    resetData(value, str) {\r\n      const emailReg = /.+@globex\\.com/g\r\n      const idReg = /\\d{15}|d{18}/g\r\n      const phoneReg = /\\d{11}/g\r\n      const telReg = /^([0-9]{3,4}-)?[0-9]{7,8}$|\\d{11}/g\r\n      const faxReg = /[\\+? *[1-9]+]?[0-9]+/g\r\n      switch (str) {\r\n        case 'email':\r\n          if (value !== '' && !emailReg.test(value)) {\r\n            this.firstForm[str] = ''\r\n            this.$message.error('请输入正确的邮箱')\r\n          }\r\n          break\r\n        case 'idNumber':\r\n          if (value !== '' && !idReg.test(value)) {\r\n            this.firstForm[str] = ''\r\n            this.$message.error('请输入正确的身份证号')\r\n          }\r\n          break\r\n        case 'phone':\r\n          if (value !== '' && !phoneReg.test(value)) {\r\n            this.firstForm[str] = ''\r\n            this.$message.error('请输入正确的手机号')\r\n          }\r\n          break\r\n        case 'tel':\r\n          if (value !== '' && !telReg.test(value)) {\r\n            this.firstForm[str] = ''\r\n            this.$message.error('请输入正确的电话')\r\n          }\r\n          break\r\n        case 'fax':\r\n          if (value !== '' && !faxReg.test(value)) {\r\n            this.firstForm[str] = ''\r\n            this.$message.error('请输入正确的传真号')\r\n          }\r\n          break\r\n      }\r\n    },\r\n    /* 初始化选择框数据 */\r\n    initSelect() {\r\n      InitSubcontractPeople().then(res => {\r\n        const { typeList } = res\r\n        this.filter.typeList = typeList\r\n      })\r\n    },\r\n    initForm() {\r\n      Object.assign(this.$data.firstForm, this.$options.data().firstForm)\r\n      this.$nextTick(() => {\r\n        this.$refs.firstForm.clearValidate()\r\n      })\r\n    },\r\n    /**\r\n     * @description: 根据id获取数据并且初始化选项框数据\r\n     */\r\n    initDataById(id) {\r\n      GetSubcontractPeopleById({ id }).then(res => {\r\n        const form = this.firstForm\r\n        for (const key in form) {\r\n          if (Object.hasOwnProperty.call(form, key)) {\r\n            form[key] = res.data[key] || form[key]\r\n          }\r\n        }\r\n        form.isForbidden = Number(form.isForbidden)\r\n        form.fileList = res.data.upFile\r\n      })\r\n    },\r\n    /**\r\n     * 提交表单\r\n     * @param {Number} state 提交类型，0：保存；1：提交; 10000: 修改\r\n     */\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          const req = {\r\n            ...this.firstForm\r\n          }\r\n          if (req.id) {\r\n            PutSubcontractPeople(req).then(res => {\r\n              // 更新\r\n              this.$message.success('保存成功')\r\n              this.back()\r\n            })\r\n          } else {\r\n            AddSubcontractPeople(req).then(() => {\r\n              // 添加\r\n              this.$message.success('保存成功')\r\n              this.back()\r\n            })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    /**\r\n     * 返回上一页，并关闭当前页\r\n     */\r\n    back() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    }\r\n  }\r\n}\r\n",null]}