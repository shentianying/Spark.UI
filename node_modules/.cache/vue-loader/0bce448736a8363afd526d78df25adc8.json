{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\fbgl\\fbht\\SubcontractAssesment\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\fbgl\\fbht\\SubcontractAssesment\\edit.vue","mtime":1635844823967},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport FlowSelect from '@/components/Flow/flowSelect'\r\nimport MyForm from '@/components/MyForm'\r\nimport { validate } from '@/utils/validate'\r\n// import { hasPower } from '@/utils'\r\nimport { GetBillFlow, GetSubcontractAssesmentById, InitSubcontractAssesment, AddSubcontractAssesment, PutSubcontractAssesment, DeleteSubcontractSignSet } from '@/api/fbgl/subcontractAssesment.js'\r\nimport UpFile from '@/components/UpLoad/UpFile'\r\nexport default {\r\n  name: 'SubcontractAssesmentEdit',\r\n  components: {\r\n    MyForm,\r\n    FlowSelect,\r\n    UpFile\r\n  },\r\n  data() {\r\n    const date = (rule, value, callback) => {\r\n      const { contractStartDate, contractFinishDate } = this.firstForm\r\n      if (contractStartDate && contractFinishDate) {\r\n        if (new Date(contractStartDate).getTime() > new Date(contractFinishDate).getTime()) {\r\n          return callback(new Error('开工日期要早于竣工日期'))\r\n        }\r\n      }\r\n      return callback()\r\n    }\r\n    return {\r\n      size: 'mini',\r\n      inputPlaceholder: '请输入',\r\n      selectPlaceholder: '请选择',\r\n      active: 1, // 提交进度 1: 编辑信息 2: 编辑审批流程\r\n      firstForm: {\r\n        id: 0, // 新增为0\r\n        companyId: '', // 公司id\r\n        number: '', // 合同号\r\n        orgId: '', // 部门id\r\n        name: '', // 合同名称\r\n        subcontractType: 1, // 合同类型\r\n        sourceSubcontractId: '', // 初始合同Id（补充合同时必填）\r\n        isSeal: 1, // 是否用章\r\n        projectId: '', // 项目ID\r\n        subcontractorId: '', // 分包单位id\r\n        subcontractPeopleId: '', // 分包人id\r\n        secondParty: '', // 乙方代表\r\n        contractStartDate: '', // 合同开工日期\r\n        contractFinishDate: '', // 合同竣工日期\r\n        contractDuration: '', // 合同工期\r\n        contractAmount: '', // 合同额\r\n        inDeAmount: '', // 增减额\r\n        taxRate: '', // 开票税率\r\n        repairYear: '', // 保修年限\r\n        progressPaymentScale: '', // 进度款付款比例\r\n        settleReportScale: '', // 结算上报比例\r\n        acceptenceScale: '', // 竣工验收比例\r\n        settlePaymentScale: '', // 结算付款比例\r\n        subPart: '', // 分包部位\r\n        paymentTerms: '', // 付款条件\r\n        remark: '', // 备注\r\n        fileList: [], // 附件\r\n        listFileList: [], // 施工合同及清单扫描件\r\n        authorizationFileList: [], // 授权委托书\r\n        state: 0, // 状态\r\n        billFlow: null // 单据流程\r\n      },\r\n      firstRules: {\r\n        orgId: [\r\n          { required: true, message: '请选择部门', trigger: 'change' }\r\n        ],\r\n        name: [\r\n          { required: true, message: '请输入合同名称', trigger: 'change' }\r\n        ],\r\n        subcontractType: [\r\n          { required: true, message: '请选择合同类别', trigger: 'change' }\r\n        ],\r\n        isSeal: [\r\n          { required: true, message: '请选择是否用章', trigger: 'change' }\r\n        ],\r\n        projectId: [\r\n          { required: true, message: '请选择项目', trigger: 'change' }\r\n        ],\r\n        subcontractorId: [\r\n          { required: true, message: '请选择分包单位', trigger: 'change' }\r\n        ],\r\n        subcontractPeopleId: [\r\n          { required: true, message: '请选择代理人', trigger: 'change' }\r\n        ],\r\n        secondParty: [\r\n          { required: true, message: '请输入乙方代表', trigger: 'change' }\r\n        ],\r\n        contractStartDate: [\r\n          { required: true, message: '请选择合同开工日期', trigger: 'change' },\r\n          { validator: date, trigger: 'change' }\r\n        ],\r\n        contractFinishDate: [\r\n          { required: true, message: '请选择合同竣工日期', trigger: 'change' },\r\n          { validator: date, trigger: 'change' }\r\n        ],\r\n        contractAmount: [\r\n          { required: true, message: '请输入金额', trigger: 'change' },\r\n          { validator: validate.money, message: '金额格式不正确', trigger: 'change' },\r\n          { validator: validate.max_amount, message: '超过所能存储的最大金额', trigger: 'change' }\r\n        ],\r\n        taxRate: [\r\n          { required: true, message: '请输入开票税率', trigger: 'change' },\r\n          { validator: validate.money, message: '数字格式不正确', trigger: 'change' },\r\n          { validator: validate.max_amount, message: '超过所能存储的最大值', trigger: 'change' }\r\n        ],\r\n        repairYear: [\r\n          { required: true, message: '请输入保修年限', trigger: 'change' },\r\n          { validator: validate.number, message: '数字格式不正确', trigger: 'change' }\r\n        ],\r\n        progressPaymentScale: [\r\n          { required: true, message: '请输入进度款付款比例', trigger: 'change' },\r\n          { validator: validate.money, message: '数字格式不正确', trigger: 'change' },\r\n          { validator: validate.max_amount, message: '超过所能存储的最大值', trigger: 'change' }\r\n        ],\r\n        settleReportScale: [\r\n          { required: true, message: '请输入结算上报比例', trigger: 'change' },\r\n          { validator: validate.money, message: '数字格式不正确', trigger: 'change' },\r\n          { validator: validate.max_amount, message: '超过所能存储的最大值', trigger: 'change' }\r\n        ],\r\n        acceptenceScale: [\r\n          { required: true, message: '请输入竣工验收比例', trigger: 'change' },\r\n          { validator: validate.money, message: '数字格式不正确', trigger: 'change' },\r\n          { validator: validate.max_amount, message: '超过所能存储的最大值', trigger: 'change' }\r\n        ],\r\n        settlePaymentScale: [\r\n          { required: true, message: '请输入结算付款比例', trigger: 'change' },\r\n          { validator: validate.money, message: '数字格式不正确', trigger: 'change' },\r\n          { validator: validate.max_amount, message: '超过所能存储的最大值', trigger: 'change' }\r\n        ]\r\n      },\r\n      filter: {\r\n        subcontractTypeList: [],\r\n        isSealList: [{ name: '是', value: 1 }, { name: '否', value: 0 }]\r\n      },\r\n      subcontractor: {},\r\n      project: {}\r\n    }\r\n  },\r\n  computed: {\r\n\r\n    disabled() {\r\n      return this.firstForm.subcontractType === 2\r\n    },\r\n    title() {\r\n      const { active } = this\r\n      return active === 2 ? '审批流程' : '分包合同'\r\n    },\r\n    formNodeData() {\r\n      const {\r\n        inputPlaceholder,\r\n        selectPlaceholder,\r\n        subcontractor,\r\n        filter: { subcontractTypeList, isSealList },\r\n        firstForm,\r\n        disabled,\r\n        project\r\n      } = this\r\n      // console.log(firstForm.isSeal)\r\n      return [\r\n        { label: '合同号:', keyword: 'number', props: { disabled: true, placeholder: '系统自动生成' }},\r\n        { label: '合同名称:', keyword: 'name', props: { placeholder: inputPlaceholder }},\r\n        { label: '合同类别:', keyword: 'subcontractType', component: 'Select', props: { propsLabel: 'name', placeholder: selectPlaceholder, options: subcontractTypeList }},\r\n        { label: '是否用章:', keyword: 'isSeal', component: 'Select', props: { propsLabel: 'name', placeholder: selectPlaceholder, options: isSealList }},\r\n        { label: '主合同号:', monopolize: true, if: firstForm.subcontractType === 2, component: 'SubcontractSelect', keyword: 'sourceSubcontractId', props: { placeholder: inputPlaceholder }},\r\n        { label: '项目:', keyword: 'projectId', component: 'ProjectSelect', props: { disabled, placeholder: selectPlaceholder }},\r\n        { label: '组织机构:', value: project.orgId, component: 'OrgSelect', props: { disabled: true, placeholder: '请选择项目' }},\r\n        { label: '分包单位:', keyword: 'subcontractorId', component: 'SubcontractorSelect', props: { propsLabel: 'name', disabled, placeholder: inputPlaceholder }},\r\n        { label: '法定代表人:', value: subcontractor.corporation, props: { disabled: true, placeholder: '请选择分包单位' }},\r\n        { label: '代理人:', keyword: 'subcontractPeopleId', component: 'SubcontractPeopleSelect', props: { disabled, placeholder: inputPlaceholder }},\r\n        { label: '乙方代表:', keyword: 'secondParty', props: { disabled, placeholder: inputPlaceholder }},\r\n        { label: '合同开工日期:', keyword: 'contractStartDate', component: 'el-date-picker', props: { disabled, type: 'date', placeholder: '选择日期', valueFormat: 'yyyy-MM-dd' }},\r\n        { label: '合同竣工日期:', keyword: 'contractFinishDate', component: 'el-date-picker', props: { disabled, type: 'date', placeholder: '选择日期', valueFormat: 'yyyy-MM-dd' }},\r\n        { label: '合同工期:', keyword: 'contractDuration', props: { disabled: true, placeholder: '自动计算' }},\r\n        { label: '合同额:', keyword: 'contractAmount', props: { placeholder: inputPlaceholder }},\r\n        { label: '开票税率:', keyword: 'taxRate', props: { placeholder: inputPlaceholder }},\r\n        { label: '保修年限:', keyword: 'repairYear', props: { placeholder: inputPlaceholder }},\r\n        { label: '进度款付款比例:', keyword: 'progressPaymentScale', props: { placeholder: inputPlaceholder }},\r\n        { label: '结算上报比例:', keyword: 'settleReportScale', props: { placeholder: inputPlaceholder }},\r\n        { label: '竣工验收比例:', keyword: 'acceptenceScale', props: { placeholder: inputPlaceholder }},\r\n        { label: '结算付款比例:', keyword: 'settlePaymentScale', props: { placeholder: inputPlaceholder }},\r\n        { label: '分包部位:', keyword: 'subPart', props: { placeholder: inputPlaceholder, type: 'textarea' }},\r\n        { label: '付款条款:', keyword: 'paymentTerms', props: { placeholder: inputPlaceholder, type: 'textarea' }},\r\n        { label: '备注:', monopolize: true, keyword: 'remark', props: { placeholder: inputPlaceholder, type: 'textarea' }}\r\n        // { label: '附件:', monopolize: true, keyword: 'fileList', component: 'UpFile', width: '100%', props: { isUpfile: !disabled, isDelete: !disabled, fileSize: 100, isPreview: true }}\r\n      ]\r\n    }\r\n  },\r\n  watch: {\r\n    'firstForm.contractStartDate'() {\r\n      this.calcContractDuration()\r\n    },\r\n    'firstForm.contractFinishDate'() {\r\n      this.calcContractDuration()\r\n    }\r\n  },\r\n  beforeRouteEnter(to, from, next) {\r\n    next(vm => {\r\n      vm.initSelect()\r\n      const newId = vm.$route.query.id\r\n      const oldId = vm.firstForm.id\r\n      const type = vm.$route.query.type\r\n      if (type === 'edit' && newId !== oldId) {\r\n      // 说明是打开另一个单子的编辑页面\r\n        vm.firstForm.id = newId\r\n        vm.initForm()\r\n        vm.initDataById(newId)\r\n        vm.active = 1\r\n      } else {\r\n        const form = vm.firstForm\r\n        const { info: { uid, userName, name }, selectOrgId } = vm.$store.state.user\r\n        vm.user = {\r\n          id: uid,\r\n          number: userName,\r\n          name: name\r\n        }\r\n        form.companyId = selectOrgId\r\n        form.personId = uid\r\n        if (type === 'add' && oldId) {\r\n          vm.initForm()\r\n          vm.active = 1\r\n        }\r\n      }\r\n    })\r\n  },\r\n  methods: {\r\n    sourceSubcontractIdSelect(subcontract) {\r\n      // console.log(subcontract)\r\n      const { contractStartDate, contractFinishDate, projectId, subcontractPeopleId, subcontractorId, corporation, orgName, secondParty } = subcontract\r\n      this.firstForm = {\r\n        ...this.firstForm,\r\n        contractStartDate,\r\n        contractFinishDate,\r\n        projectId,\r\n        subcontractPeopleId,\r\n        subcontractorId,\r\n        secondParty\r\n      }\r\n      this.subcontractor = { id: subcontractorId, corporation }\r\n      this.project.orgStr = orgName\r\n      // project,subcontractor\r\n    },\r\n    calcContractDuration() {\r\n      const { contractStartDate, contractFinishDate } = this.firstForm\r\n      const day = 1000 * 60 * 60 * 24\r\n      const res = Math.ceil((new Date(new Date(contractFinishDate) - 1 + day) - new Date(contractStartDate)) / day)\r\n      this.firstForm.contractDuration = isNaN(res) ? '' : res\r\n    },\r\n    subcontractPeopleIdSelect(subcontractPeople) {\r\n      console.log(subcontractPeople)\r\n    },\r\n    projectIdSelect(project) {\r\n      this.project = project\r\n      this.firstForm.orgId = project.orgId\r\n    },\r\n    subcontractorIdSelect(subcontractor) {\r\n      console.log(subcontractor)\r\n      this.subcontractor = subcontractor\r\n    },\r\n    initForm() {\r\n      Object.assign(this.$data.firstForm, this.$options.data().firstForm)\r\n      this.$nextTick(() => {\r\n        this.$refs.firstForm.clearValidate()\r\n      })\r\n    },\r\n    /**\r\n     * @description: 初始化选项框数据\r\n     */\r\n    initSelect() {\r\n      InitSubcontractAssesment().then(res => {\r\n        this.filter.subcontractTypeList = res.subcontractTypeList\r\n      })\r\n    },\r\n    /**\r\n     * @description: 根据id获取数据并且初始化选项框数据\r\n     */\r\n    initDataById(id) {\r\n      GetSubcontractAssesmentById({ id }).then(res => {\r\n        const form = this.firstForm\r\n        for (const key in form) {\r\n          if (Object.hasOwnProperty.call(form, key)) {\r\n            if (key === 'isSeal') {\r\n              // console.log(11111111)\r\n              form[key] = typeof res.data[key] === 'boolean' ? Number(res.data[key]) : form[key]\r\n            } else {\r\n              form[key] = res.data[key] || form[key]\r\n            }\r\n          }\r\n        }\r\n        this.subcontractor = res.data.subcontractor\r\n        this.project = res.data.project\r\n        form.billFlow = res.billFlowData\r\n        // form.fileList = res.data.upFile\r\n        form.fileList = res.data.upFile\r\n        form.listFileList = res.data.listUpFile\r\n        form.authorizationFileList = res.data.authorizationUpFile\r\n      })\r\n    },\r\n    getBillFlow() {\r\n      // 获取流程数据\r\n      const { state, billFlow } = this.firstForm\r\n      const req = {\r\n        ...this.firstForm,\r\n        state: state || 0\r\n      }\r\n      if (billFlow) req.billFlowId = billFlow.id\r\n      delete req.billFlow\r\n      delete req.number\r\n      GetBillFlow(req).then(({ data, success, message }) => {\r\n        if (success) {\r\n          this.firstForm.billFlow = data.billFlow\r\n          this.setActive(2)\r\n        } else {\r\n          this.$message.error(message)\r\n        }\r\n      })\r\n    },\r\n    /**\r\n     * 修改填报进度\r\n     */\r\n    setActive(active) {\r\n      this.active = active\r\n    },\r\n    /**\r\n     * 下一步\r\n     */\r\n    nextStep(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          this.getBillFlow()\r\n        }\r\n      })\r\n    },\r\n    // 作废\r\n    invalidForm() {\r\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        return DeleteSubcontractSignSet({ id: this.firstForm.id })\r\n      }).then(() => {\r\n        this.$message.success('操作成功')\r\n        this.back()\r\n      })\r\n    },\r\n    /**\r\n     * 提交表单\r\n     * @param {Number} state 提交类型，0：保存；1：提交; 10000: 修改\r\n     */\r\n    submitForm(state) {\r\n      const req = {\r\n        ...this.firstForm,\r\n        state\r\n      }\r\n      delete req.number\r\n      if (this.firstForm.billFlow) {\r\n        // 获取流程组件中的数据\r\n        const billFlow = this.$refs.flowSelect.getBillFlow()\r\n        if (!billFlow) {\r\n          return false\r\n        }\r\n        req.billFlow = billFlow\r\n      } else {\r\n        this.$message.error('流程数据不能为空')\r\n        return\r\n      }\r\n      if (req.id) {\r\n        PutSubcontractAssesment(req).then(res => {\r\n          // 更新\r\n          this.$message.success('保存成功')\r\n          this.back()\r\n        })\r\n      } else {\r\n        AddSubcontractAssesment(req).then(() => {\r\n          // 添加\r\n          this.$message.success('提交成功')\r\n          this.back()\r\n        })\r\n      }\r\n    },\r\n    /**\r\n     * 返回上一页，并关闭当前页\r\n     */\r\n    back() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    }\r\n  }\r\n}\r\n",null]}