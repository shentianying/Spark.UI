{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\byj\\Imprest\\ApplicationEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\byj\\Imprest\\ApplicationEdit.vue","mtime":1635216068762},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport FlowSelect from '@/components/Flow/flowSelect'\r\nimport MyForm from '@/components/MyForm'\r\nimport { validate } from '@/utils/validate'\r\nimport { hasPower } from '@/utils'\r\nimport { GetBillFlow, GetImprestAppliactionById, InitImprestAppliaction, AddImprestAppliaction, PutImprestAppliaction, DeleteImprestAppliaction } from '@/api/cwgl/Impresst.js'\r\n\r\nexport default {\r\n  name: 'ImprestApplicationEdit',\r\n  components: {\r\n    MyForm,\r\n    FlowSelect\r\n  },\r\n  data() {\r\n    return {\r\n      size: 'mini',\r\n      inputPlaceholder: '请输入',\r\n      selectPlaceholder: '请选择',\r\n      active: 1, // 提交进度 1: 编辑信息 2: 编辑审批流程\r\n      user: {\r\n\r\n      },\r\n      firstForm: {\r\n        id: 0, // 新增为0\r\n        companyId: '', // 公司id\r\n        number: '', // 新增时,编号后端生成\r\n        orgId: '', // 部门id\r\n        personId: '', // 人员id\r\n        imprestType: 1, // 类别\r\n        applicationAmount: '', // 申请金额\r\n        summary: '', // 用途\r\n        isBalanceAdjust: false, // 余额调整（默认false）\r\n        bank: '', // 开户行\r\n        account: '', // 账号\r\n        remark: '', // 备注\r\n        type: 0, // 备用金申请 固定值为0\r\n        fileList: [], // 附件\r\n        state: 0, // 状态\r\n        billFlow: null // 单据流程\r\n      },\r\n      firstRules: {\r\n        orgId: [\r\n          { required: true, message: '请选择部门', trigger: 'change' }\r\n        ],\r\n        applicationAmount: [\r\n          { required: true, message: '请输入金额', trigger: 'change' },\r\n          { validator: validate.money, message: '金额格式不正确', trigger: 'change' },\r\n          { validator: validate.max_amount, message: '超过所能存储的最大金额', trigger: 'change' }\r\n        ],\r\n        personId: [\r\n          { required: true, message: '请输入工号', trigger: 'change' }\r\n        ],\r\n        imprestType: [\r\n          { required: true, message: '请选择类别', trigger: 'change' }\r\n        ],\r\n        summary: [\r\n          { required: true, message: '请输入用途', trigger: 'change' }\r\n        ]\r\n      },\r\n      filter: {\r\n        imprestTypeList: []\r\n      },\r\n      project: {}\r\n    }\r\n  },\r\n  computed: {\r\n\r\n    disabled() {\r\n      return false\r\n    },\r\n    title() {\r\n      const { active } = this\r\n      return active === 2 ? '审批流程' : '备用金申请'\r\n    },\r\n    formNodeData() {\r\n      const {\r\n        inputPlaceholder,\r\n        selectPlaceholder,\r\n        firstForm,\r\n        filter: { imprestTypeList },\r\n        disabled,\r\n        user\r\n      } = this\r\n      return [\r\n        { label: '编号:', keyword: 'number', props: { disabled: true, placeholder: '系统自动生成' }},\r\n        { label: '部门:', keyword: 'orgId', component: 'OrgSelect', props: { placeholder: selectPlaceholder }},\r\n        { label: '工号:', keyword: 'personId', component: 'PersonSelect', props: { disabled: !hasPower('APPLICATION_USERNAME'), propsLabel: 'number', multiple: false, placeholder: selectPlaceholder }},\r\n        { label: '姓名:', value: user.name, props: { disabled: true, placeholder: '自动带出' }},\r\n        { label: '类别:', keyword: 'imprestType', component: 'Select', props: { disabled: disabled, propsLabel: 'name', placeholder: selectPlaceholder, options: imprestTypeList }},\r\n        { label: '金额:', keyword: 'applicationAmount', props: { disabled: disabled, placeholder: inputPlaceholder }},\r\n        { label: '用途:', monopolize: !hasPower('APPLICATION_ADJUST'), keyword: 'summary', props: { disabled: disabled, placeholder: inputPlaceholder }},\r\n        { label: '余额调整:', keyword: 'isBalanceAdjust', if: !!hasPower('APPLICATION_ADJUST'), render: h => (\r\n          <el-checkbox value={firstForm.isBalanceAdjust}\r\n            false-label={0}\r\n            true-label={1}\r\n            onChange={($event) => { firstForm.isBalanceAdjust = !!$event }}\r\n          >期初余额调整</el-checkbox>) },\r\n        { label: '开户行:', keyword: 'bank', props: { disabled: disabled, placeholder: inputPlaceholder }},\r\n        { label: '账号:', keyword: 'account', props: { disabled: disabled, placeholder: inputPlaceholder }},\r\n        { label: '备注:', monopolize: true, keyword: 'remark', props: { disabled: disabled, placeholder: inputPlaceholder, type: 'textarea' }},\r\n        { label: '附件:', monopolize: true, keyword: 'fileList', component: 'UpFile', width: '100%', props: { isUpfile: !disabled, isDelete: !disabled, fileSize: 100, isPreview: true }}\r\n      ]\r\n    }\r\n  },\r\n  beforeRouteEnter(to, from, next) {\r\n    next(vm => {\r\n      vm.initSelect()\r\n      const newId = vm.$route.query.id\r\n      const oldId = vm.firstForm.id\r\n      const type = vm.$route.query.type\r\n      if (type === 'edit' && newId !== oldId) {\r\n      // 说明是打开另一个单子的编辑页面\r\n        vm.firstForm.id = newId\r\n        vm.initForm()\r\n        vm.initDataById(newId)\r\n        vm.active = 1\r\n      } else {\r\n        const form = vm.firstForm\r\n        const { info: { uid, userName, name }, selectOrgId } = vm.$store.state.user\r\n        vm.user = {\r\n          id: uid,\r\n          number: userName,\r\n          name: name\r\n        }\r\n        form.companyId = selectOrgId\r\n        form.personId = uid\r\n        if (type === 'add' && oldId) {\r\n          vm.initForm()\r\n          vm.active = 1\r\n        }\r\n      }\r\n    })\r\n  },\r\n  methods: {\r\n    selectPerson(user) {\r\n      this.firstForm.personId = user.id\r\n      this.user = user\r\n    },\r\n    initForm() {\r\n      Object.assign(this.$data.firstForm, this.$options.data().firstForm)\r\n      this.$nextTick(() => {\r\n        this.$refs.firstForm.clearValidate()\r\n      })\r\n    },\r\n    /**\r\n     * @description: 初始化选项框数据\r\n     */\r\n    initSelect() {\r\n      InitImprestAppliaction().then(res => {\r\n        this.filter.imprestTypeList = res.imprestTypeList\r\n      })\r\n    },\r\n    /**\r\n     * @description: 根据id获取数据并且初始化选项框数据\r\n     */\r\n    initDataById(id) {\r\n      GetImprestAppliactionById({ id }).then(res => {\r\n        const form = this.firstForm\r\n        for (const key in form) {\r\n          if (Object.hasOwnProperty.call(form, key)) {\r\n            form[key] = res.data[key] || form[key]\r\n          }\r\n        }\r\n        this.user = res.data.person\r\n        form.billFlow = res.billFlowData\r\n        form.fileList = res.data.upFile\r\n      })\r\n    },\r\n    getBillFlow() {\r\n      // 获取流程数据\r\n      const { state, billFlow } = this.firstForm\r\n      const req = {\r\n        ...this.firstForm,\r\n        state: state || 0\r\n      }\r\n      if (billFlow) req.billFlowId = billFlow.id\r\n      delete req.billFlow\r\n      delete req.number\r\n      GetBillFlow(req).then(({ data, success, message }) => {\r\n        if (success) {\r\n          this.firstForm.billFlow = data.billFlow\r\n          this.setActive(2)\r\n        } else {\r\n          this.$message.error(message)\r\n        }\r\n      })\r\n    },\r\n    /**\r\n     * 修改填报进度\r\n     */\r\n    setActive(active) {\r\n      this.active = active\r\n    },\r\n    /**\r\n     * 下一步\r\n     */\r\n    nextStep(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          this.getBillFlow()\r\n        }\r\n      })\r\n    },\r\n    // 作废\r\n    invalidForm() {\r\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        return DeleteImprestAppliaction({ id: this.firstForm.id })\r\n      }).then(() => {\r\n        this.$message.success('操作成功')\r\n        this.back()\r\n      })\r\n    },\r\n    /**\r\n     * 提交表单\r\n     * @param {Number} state 提交类型，0：保存；1：提交; 10000: 修改\r\n     */\r\n    submitForm(state) {\r\n      const req = {\r\n        ...this.firstForm,\r\n        state\r\n      }\r\n      delete req.number\r\n      if (this.firstForm.billFlow) {\r\n        // 获取流程组件中的数据\r\n        const billFlow = this.$refs.flowSelect.getBillFlow()\r\n        if (!billFlow) {\r\n          return false\r\n        }\r\n        req.billFlow = billFlow\r\n      } else {\r\n        this.$message.error('流程数据不能为空')\r\n        return\r\n      }\r\n      if (req.id) {\r\n        PutImprestAppliaction(req).then(res => {\r\n          // 更新\r\n          this.$message.success('保存成功')\r\n          this.back()\r\n        })\r\n      } else {\r\n        AddImprestAppliaction(req).then(() => {\r\n          // 添加\r\n          this.$message.success('提交成功')\r\n          this.back()\r\n        })\r\n      }\r\n    },\r\n    /**\r\n     * 返回上一页，并关闭当前页\r\n     */\r\n    back() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    }\r\n  }\r\n}\r\n",null]}