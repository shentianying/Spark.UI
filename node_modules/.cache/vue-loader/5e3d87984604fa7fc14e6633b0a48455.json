{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\fbgl\\fbdwgl\\SubcontractPeople\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\fbgl\\fbdwgl\\SubcontractPeople\\index.vue","mtime":1635749455643},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport TableEx from '@/components/TableEx'\r\nimport SearchBar from '@/components/SearchBar'\r\nimport { GetSubcontractPeoplePaging } from '@/api/fbgl/subcontractPeople'\r\nexport default {\r\n  name: 'SubcontractPeopleIndex',\r\n  components: {\r\n    TableEx,\r\n    SearchBar\r\n  },\r\n  data() {\r\n    return {\r\n      size: 'mini',\r\n      // labelWidth: 100,\r\n      searchData: require('./searchData').default(), // 渲染搜索栏数据\r\n      lastSearch: null, // 最近一次搜索的数据\r\n      table: {\r\n        columns: [\r\n          {\r\n            label: '分包人姓名', // 表头\r\n            prop: 'name', // 渲染的属性\r\n            minWidth: '90' // 最小宽度\r\n            // fixed: 'left'\r\n          },\r\n          {\r\n            label: '部门',\r\n            prop: 'orgName',\r\n            minWidth: '130'\r\n          },\r\n          {\r\n            label: '类型',\r\n            prop: 'type',\r\n            minWidth: '130'\r\n          },\r\n          {\r\n            label: '身份证号',\r\n            prop: 'idNumber',\r\n            minWidth: '150'\r\n          },\r\n          {\r\n            label: '地址',\r\n            prop: 'address',\r\n            minWidth: '150'\r\n          },\r\n          {\r\n            label: '电话',\r\n            prop: 'phone',\r\n            minWidth: '100'\r\n          },\r\n          {\r\n            business: 'createUser' // 业务部分的快捷使用参考 src\\components\\TableEx\\Column\\businessList.js\r\n          }\r\n        ],\r\n        list: [],\r\n        tbLoading: false, // table loading\r\n        total: 0,\r\n        currentPage: 1,\r\n        pageSize: this.utils.getPersonalSettings().pageSize\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 最后决定使用beforeRouteEnter路由守卫代替activated,和created;\r\n   * 其好处是:无论用哪种方式进入都会触发,并且只触发一次;\r\n   */\r\n  beforeRouteEnter(to, from, next) {\r\n    next(vm => {\r\n      vm.fetchData()\r\n    })\r\n  },\r\n  methods: {\r\n    fetchData(type) {\r\n      switch (type) {\r\n        case 'filter':\r\n          this.table.currentPage = 1\r\n          break\r\n        case 'reset':\r\n        case 'search':\r\n          this.table.currentPage = 1\r\n          this.lastSearch = null\r\n          break\r\n      }\r\n      this.table.tbLoading = true\r\n      this.getTable()\r\n        .then(res => this.parseServeDate(res))\r\n        .finally(() => {\r\n          this.table.tbLoading = false\r\n        })\r\n    },\r\n    getTable(currentPage = this.table.currentPage, pageSize = this.table.pageSize) {\r\n      // 获取请求参数\r\n      const postData = this.getSearchData()\r\n      postData.currentPage = currentPage\r\n      postData.pageSize = pageSize\r\n      // 请求开始\r\n      return GetSubcontractPeoplePaging(postData)\r\n    },\r\n    parseServeDate(res) {\r\n      const {\r\n        data,\r\n        count,\r\n        amount,\r\n        typeList\r\n      } = res\r\n      this.$refs['SearchBar'].setData('types', 'options', typeList, 'init')\r\n      // 列表数据初始化\r\n      this.amount = amount\r\n      this.table.list = data\r\n      this.table.total = count\r\n    },\r\n    /**\r\n     * @description: 搜索栏数据转换\r\n     * @return {Object} request数据\r\n     */\r\n    getSearchData() {\r\n      if (this.lastSearch === null) {\r\n        this.lastSearch = {}\r\n        this.searchData.forEach(item => {\r\n          const { value, transformType, name } = item\r\n          if (transformType === 'property-serial') {\r\n            value.forEach((ele, index) => {\r\n              const serial = index + 1\r\n              this.lastSearch[name + serial] = ele\r\n            })\r\n          } else {\r\n            this.lastSearch[name] = value\r\n          }\r\n        })\r\n      }\r\n      return this.lastSearch\r\n    },\r\n    /**\r\n     * @description: 路由到详情页\r\n     * @param {*} row\r\n     */\r\n    handleDetails(row) {\r\n      this.$router.push({ name: 'SubcontractPeopleDetails', query: { id: row.id, refreshRouterName: this.$route.name }})\r\n    },\r\n    /**\r\n     * @description: table编辑\r\n     * @param {Object} row\r\n     */\r\n    handleEdit(id = '', type) {\r\n      this.$router.push({ name: 'SubcontractPeopleEdit', query: { type, id, refreshRouterName: this.$route.name }})\r\n    }\r\n  }\r\n}\r\n",null]}