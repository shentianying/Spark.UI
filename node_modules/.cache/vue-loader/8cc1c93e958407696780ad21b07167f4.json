{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\ywgl\\bussiness\\bussinessInfoEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\ywgl\\bussiness\\bussinessInfoEdit.vue","mtime":1635986769250},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getCustomerById } from '@/api/ywgl/customer'\r\nimport { getBussinessInfoEditInit, getBussinessInfoWithAttitudeById, putBussinessInfo, addBussinessInfo } from '@/api/ywgl/bussinessInfo'\r\nimport OrgSelect2 from '@/components/OrgSelect/index2'\r\nimport SelectPerson from '@/components/Other/selectPerson'\r\n// import { validate } from '@/utils/validate'\r\nimport UpFile from '@/components/UpLoad/UpFile'\r\nimport SelectCustomer from '@/components/Other/ywgl/selectCustomer'\r\nimport { getTree } from '@/utils'\r\nexport default {\r\n  name: 'BussinessInfoEdit',\r\n  components: {\r\n    OrgSelect2,\r\n    UpFile,\r\n    SelectPerson,\r\n    SelectCustomer\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        orgId: null,\r\n        companyId: this.$store.state.user.selectOrgId,\r\n        professionalType: null,\r\n        informationSource: null,\r\n        area: null,\r\n        progress: null,\r\n        marketCategory: null,\r\n        cooperationMode: null,\r\n        projectName: '',\r\n        isDirectEntrust: false,\r\n        generalContractor: '',\r\n        builder: '',\r\n        projectSurvey: '',\r\n        developer: null,\r\n        linkMan: '',\r\n        intermediary: '',\r\n        intermediaryTel: '',\r\n        address: '',\r\n        houseProperty: null,\r\n        floors: '',\r\n        buildingStructure: '',\r\n        decorationArea: null,\r\n        totalArea: null,\r\n        cost: null,\r\n        paymentTerms: '',\r\n        tenderMode: null,\r\n        tenderEndDate: '',\r\n        startDate: '',\r\n        finishDate: '',\r\n        currentStatus: '',\r\n        currentStatusDate: '',\r\n        dockPerson: null,\r\n        trackDepth: null,\r\n        marketingManager: null,\r\n        marketingMemberNames: '',\r\n        marketingMember: null,\r\n        trackPerson: this.$store.state.user.uid,\r\n        tenderSections: null,\r\n        competitors: '',\r\n        remark: '',\r\n        isComplete: false,\r\n        state: 0,\r\n        formState: 0,\r\n        billFlowId: 0,\r\n        organization: null,\r\n        zxdcbFileList: [],\r\n        dblcFileList: [],\r\n        zrsFileList: [],\r\n        chsFileList: [],\r\n        zzjgFileList: [],\r\n        qtFileList: []\r\n      },\r\n      keyOrg: 0,\r\n      orgList: null,\r\n      areaList: [],\r\n      cooperationModeList: [], // 合作模式\r\n      marketCategoryList: [],\r\n      professionalTypeList: [],\r\n      progressList: [],\r\n      tenderModeList: [],\r\n      trackDepthList: [],\r\n      informationSourceList: [],\r\n      housePropertyList: [],\r\n      developerList: [],\r\n      personList: [],\r\n      dockPersonList: [],\r\n\r\n      bussinessInfoId: null,\r\n      keyInformationSource: 0,\r\n      keyHouseProperty: 0,\r\n\r\n      trackPersonName: this.$store.state.user.name,\r\n      managerName: '',\r\n      developer: '',\r\n\r\n      buttonLoading: false,\r\n      refreshRouterName: '',\r\n      rules: {\r\n        projectName: [{ required: true, message: '不能为空', trigger: 'blur' }],\r\n        generalContractor: [{ required: true, message: '不能为空', trigger: 'blur' }],\r\n        developer: [{ required: true, message: '不能为空', trigger: ['blur', 'change'] }],\r\n        orgId: [{ required: true, message: '不能为空', trigger: 'blur' }],\r\n        tenderMode: [{ required: true, message: '不能为空', trigger: ['blur', 'change'] }],\r\n        progress: [{ required: true, message: '不能为空', trigger: ['blur', 'change'] }],\r\n        trackDepth: [{ required: true, message: '不能为空', trigger: ['blur', 'change'] }],\r\n        informationSource: [{ required: true, message: '不能为空', trigger: 'blur' }],\r\n        houseProperty: [{ required: true, message: '不能为空', trigger: 'blur' }],\r\n        cooperationMode: [{ required: true, message: '不能为空', trigger: ['blur', 'change'] }],\r\n        currentStatusDate: [{ required: true, message: '不能为空', trigger: ['blur', 'change'] }],\r\n        linkMan: [{ required: true, message: '不能为空', trigger: 'blur' }],\r\n        floors: [{ required: true, message: '不能为空', trigger: 'blur' }],\r\n        buildingStructure: [{ required: true, message: '不能为空', trigger: 'blur' }],\r\n        marketingManager: [{ required: true, message: '不能为空', trigger: ['blur', 'change'] }],\r\n        trackPerson: [{ required: true, message: '不能为空', trigger: ['blur', 'change'] }]\r\n        // decorationArea: [{ validator: validate.dbl, required: true, message: '可为空或数字类型', trigger: 'blur' }],\r\n        // totalArea: [{ validator: validate.dbl, required: false, message: '可为空或数字类型', trigger: 'blur' }],\r\n        // cost: [{ validator: validate.dbl, required: false, message: '可为空或数字类型', trigger: 'blur' }],\r\n        // intermediaryTel: [{ validator: validate.phone, required: false, message: '电话或手机号不正确', trigger: 'blur' }]\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n  },\r\n  activated() {\r\n    if (this.$route.query.id) {\r\n      this.bussinessInfoId = this.$route.query.id\r\n      this.refreshRouterName = this.$route.params.refreshRouterName\r\n    }\r\n    console.log()\r\n    this.initData()\r\n  },\r\n  methods: {\r\n    submitForm(state) {\r\n      this.$refs['ruleForm'].validate((valid) => {\r\n        if (valid) {\r\n          var postData = JSON.parse(JSON.stringify(this.ruleForm))\r\n          postData.dockPerson = postData.dockPerson ? postData.dockPerson.join() : ''\r\n          let tempIds = []\r\n          if (postData.zxdcbFileList.length > 0) {\r\n            tempIds = postData.zxdcbFileList.map(m => {\r\n              return { id: m.id, addFlag: m.addFlag }\r\n            })\r\n          }\r\n          postData.zxdcbFileList = tempIds\r\n          tempIds = []\r\n          if (postData.dblcFileList.length > 0) {\r\n            tempIds = postData.dblcFileList.map(m => {\r\n              return { id: m.id, addFlag: m.addFlag }\r\n            })\r\n          }\r\n          postData.dblcFileList = tempIds\r\n          tempIds = []\r\n          if (postData.zrsFileList.length > 0) {\r\n            tempIds = postData.zrsFileList.map(m => {\r\n              return { id: m.id, addFlag: m.addFlag }\r\n            })\r\n          }\r\n          postData.zrsFileList = tempIds\r\n          tempIds = []\r\n          if (postData.chsFileList.length > 0) {\r\n            tempIds = postData.chsFileList.map(m => {\r\n              return { id: m.id, addFlag: m.addFlag }\r\n            })\r\n          }\r\n          postData.chsFileList = tempIds\r\n          tempIds = []\r\n          if (postData.zzjgFileList.length > 0) {\r\n            tempIds = postData.zzjgFileList.map(m => {\r\n              return { id: m.id, addFlag: m.addFlag }\r\n            })\r\n          }\r\n          postData.zzjgFileList = tempIds\r\n          tempIds = []\r\n          if (postData.qtFileList.length > 0) {\r\n            tempIds = postData.qtFileList.map(m => {\r\n              return { id: m.id, addFlag: m.addFlag }\r\n            })\r\n          }\r\n          postData.qtFileList = tempIds\r\n          console.log(postData)\r\n          if (this.bussinessInfoId) {\r\n            this.buttonLoading = true\r\n            putBussinessInfo(postData)\r\n              .then((response) => {\r\n                if (response.errorMsg) {\r\n                // 验证错误\r\n                  this.$alert(`${response.errorMsg.replace(/；/g, '；<br />')}`,\r\n                    { dangerouslyUseHTMLString: true })\r\n                  return\r\n                }\r\n                this.$message(response.message)\r\n                this.buttonLoading = false\r\n                this.closeThePage()\r\n              }).catch(() => { this.buttonLoading = false })\r\n          } else {\r\n            this.buttonLoading = true\r\n            addBussinessInfo(postData)\r\n              .then((response) => {\r\n                if (response.errorMsg) {\r\n                // 验证错误\r\n                  this.$alert(`${response.errorMsg.replace(/；/g, '；<br />')}`,\r\n                    { dangerouslyUseHTMLString: true })\r\n                  return\r\n                }\r\n                this.$message(response.message)\r\n                this.buttonLoading = false\r\n                this.closeThePage()\r\n              })\r\n              .catch(() => {\r\n                this.buttonLoading = false\r\n              })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    initData() {\r\n      new Promise((resolve, reject) => {\r\n        getBussinessInfoEditInit().then(response => {\r\n          const { data, orgList, result1, result2, result3, result4, result5, result6, result7, result8, result9, result10, result11 } = response\r\n          this.orgList = orgList\r\n          this.cooperationModeList = result1\r\n          this.marketCategoryList = result2\r\n          this.professionalTypeList = result3\r\n          this.progressList = result4\r\n          this.tenderModeList = result5\r\n          this.trackDepthList = result6\r\n          result7.forEach(element => {\r\n            element.pid = element.pId\r\n            element.label = element.name\r\n          })\r\n          this.informationSourceList = getTree(0, result7)\r\n          result8.forEach(element => {\r\n            element.pid = element.pId\r\n            element.label = element.name\r\n          })\r\n          this.housePropertyList = getTree(0, result8)\r\n          this.developerList = result9\r\n          this.personList = result10\r\n          this.dockPersonList = result11\r\n\r\n          data.forEach(element => {\r\n            element.label = element.name\r\n          })\r\n          resolve(data)\r\n        })\r\n      }).then(treeData => {\r\n        if (this.bussinessInfoId) {\r\n          getBussinessInfoWithAttitudeById({ id: this.bussinessInfoId }).then(response => {\r\n            const { data } = response\r\n            data.dockPerson = data.dockPerson !== '' ? data.dockPerson.split(',').map(item => Number(item)) : null\r\n            // data.marketingMember = data.marketingMember.split(',').map(item => Number(item))\r\n            this.areaList = treeData\r\n            this.ruleForm = data\r\n            this.trackPersonName = data.person.name\r\n            this.managerName = data.manager.name\r\n            this.developer = data.customer.name\r\n            this.keyOrg += 1\r\n            this.ruleForm.zxdcbFileList = data.zxdcbUpFile\r\n            this.ruleForm.dblcFileList = data.dblcUpFile\r\n            this.ruleForm.zrsFileList = data.zrsUpFile\r\n            this.ruleForm.chsFileList = data.chsUpFile\r\n            this.ruleForm.zzjgFileList = data.zzjgUpFile\r\n            this.ruleForm.qtFileList = data.qtUpFile\r\n          })\r\n        } else {\r\n          this.areaList = treeData\r\n        }\r\n      }).catch(() => {\r\n        this.$message.error('信息错误')\r\n      })\r\n    },\r\n    cancel() {},\r\n    closeThePage() {\r\n      if (this.$route.query.refreshRouterName === 'BussinessInfoReply') {\r\n        this.$store.dispatch('tagsView/delView', this.$route)\r\n        this.$router.push({ name: 'BussinessInfoReply', query: { id: this.bussinessInfoId, refreshRouterName: 'BussinessInfo' }, params: { id: this.bussinessInfoId }})\r\n      } else {\r\n        this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n      }\r\n    },\r\n    getLinkMan() {\r\n      getCustomerById({ id: this.ruleForm.developer }).then((response) => {\r\n        const { data } = response\r\n        this.ruleForm.linkMan = data.linkMan\r\n      })\r\n    },\r\n    selectTrackPerson() {\r\n      this.$refs.trackPersonRef.openDialog()\r\n    },\r\n    getTrackPerson(persons) {\r\n      if (persons.length > 0) {\r\n        this.ruleForm.trackPerson = persons[0].id\r\n        this.trackPersonName = persons[0].name\r\n      }\r\n    },\r\n    selectMember() {\r\n      this.$refs.memberRef.openDialog()\r\n    },\r\n    getMember(persons) {\r\n      if (persons.length > 0) {\r\n        this.ruleForm.marketingMember = persons.map(m => m.id).join(',')\r\n        this.ruleForm.marketingMemberNames = persons.map(m => m.name).join(',')\r\n      }\r\n    },\r\n    selectManager() {\r\n      this.$refs.managerRef.openDialog()\r\n    },\r\n    getManager(persons) {\r\n      if (persons.length > 0) {\r\n        this.ruleForm.marketingManager = persons[0].id\r\n        this.managerName = persons[0].name\r\n      }\r\n    },\r\n    selectCustomer() {\r\n      this.$refs.customerRef.openDialog()\r\n    },\r\n    getCustomer(data) {\r\n      if (data.length > 0) {\r\n        this.ruleForm.developer = data[0].id\r\n        this.developer = data[0].name\r\n        this.ruleForm.linkMan = data[0].linkMan\r\n      }\r\n    }\r\n  }\r\n}\r\n",null]}