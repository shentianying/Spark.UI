{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\project\\projectEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\project\\projectEdit.vue","mtime":1632291857290},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getProjectById, addProject, putProject, getBillFlow, addProjectLX } from '@/api/xmgl/project'\r\nimport UpFile from '@/components/UpLoad/UpFile'\r\nimport { getDictionarysByTypes } from '@/api/xtgl/dictionary'\r\nimport { getAccountSetByOrgId } from '@/api/xtgl/accountSet'\r\nimport OrgSelect from '@/components/OrgSelect/index'\r\nimport OrgSelect2 from '@/components/OrgSelect/index2'\r\nimport SelectBussinessInfo from '@/components/Other/ywgl/selectBussinessInfo'\r\nimport SelectContract from '@/components/Other/ywgl/selectContract'\r\nimport FlowSelect from '@/components/Flow/flowSelect'\r\nimport { validate } from '@/utils/validate'\r\nexport default {\r\n  name: 'ProjectEdit',\r\n  components: {\r\n    OrgSelect,\r\n    OrgSelect2,\r\n    SelectBussinessInfo,\r\n    SelectContract,\r\n    FlowSelect,\r\n    UpFile\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        orgId: 0,\r\n        name: '',\r\n        accountId: null,\r\n        managementiState: null,\r\n        stateID: 0,\r\n        inUse: true,\r\n        isFictitious: false,\r\n        contractId: null,\r\n        bussinessInfoId: null,\r\n        warrantyDays1: 0,\r\n        warrantyRate1: 0,\r\n        warrantyDays2: 0,\r\n        warrantyRate2: 0,\r\n        warrantyDays3: 0,\r\n        warrantyRate3: 0,\r\n        warrantyDays4: 0,\r\n        warrantyRate4: 0,\r\n        zbFileList: [],\r\n        tbFileList: [],\r\n        sghtFileList: [],\r\n        bchtFileList: [],\r\n        psjlFileList: [],\r\n        zbtzsFileList: []\r\n      },\r\n      projectForm: {\r\n        companyId: this.$store.state.user.selectOrgId,\r\n        number: '',\r\n        projectId: 0,\r\n        state: 0,\r\n        billFlowId: 0\r\n      },\r\n      activeNames: ['info', 'warranty', 'file'],\r\n      type: 0, // 0:保存；1：提交审批\r\n      fileList: [],\r\n      accountList: [],\r\n      engPropertiesOptions: [],\r\n      managementiStateOptions: [],\r\n      structureTypeOptions: [],\r\n      informationSourceOptions: [],\r\n      taxTypeOptions: [],\r\n      projectPropertyOptions: [],\r\n      proPropertiesOptions: [],\r\n      stateTypeOptions: [],\r\n      projectCategoryOptions: [],\r\n      projectId: null,\r\n      buttonLoading: false,\r\n      isLoadFinish: false,\r\n      keyEngProperties: 0,\r\n      keyManagementiState: 0,\r\n      keyStructure: 0,\r\n      keyInformationSource: 0,\r\n      keyTaxType: 0,\r\n      keyProjectProperty: 0,\r\n      keyProProperties: 0,\r\n      keyState: 0,\r\n      keyOrg: 0,\r\n      disabled: true,\r\n\r\n      dialogTableVisible: false,\r\n      dialogTitle: '选择',\r\n      dialogWidth: '70%',\r\n      comName: 'SelectBussinessInfo',\r\n      selectValue: [],\r\n      multiple: false,\r\n\r\n      contractNumber: '',\r\n      bussinessInfoNumber: '',\r\n\r\n      billFlow: null,\r\n      active: 0,\r\n      loading: false,\r\n\r\n      rules: {\r\n        number: [{ required: true, message: '必填', trigger: 'blur' }],\r\n        name: [{ required: true, message: '必填', trigger: 'blur' }],\r\n        orgId: [{ required: true, message: '必填', trigger: 'blur' }],\r\n        categoryId: [{ required: true, message: '请选择', trigger: 'blur' }],\r\n        accountId: [{ required: true, message: '请选择', trigger: ['blur', 'change'] }],\r\n        proProperties: [{ required: true, message: '请选择', trigger: ['blur', 'change'] }],\r\n        contractDuration: [\r\n          { required: true, message: '请输入项目合同工期', trigger: 'change' },\r\n          { validator: validate.dbl, message: '必须为数字格式', trigger: 'change' },\r\n          { validator: validate.logic, logic: value => value >= 0, message: '必须大于0', trigger: 'change' }\r\n        ],\r\n        area: [\r\n          { required: true, message: '请输入建筑面积', trigger: 'change' },\r\n          { validator: validate.dbl, message: '必须为数字格式', trigger: 'change' },\r\n          { validator: validate.logic, logic: value => value >= 0, message: '必须大于0', trigger: 'change' }\r\n        ],\r\n        warrantyDays1: [\r\n          { required: true, message: '请输入一阶段质保期', trigger: 'change' },\r\n          { validator: validate.dbl, message: '必须为数字格式', trigger: 'change' },\r\n          { validator: validate.logic, logic: value => value >= 0, message: '必须大于0', trigger: 'change' }\r\n        ],\r\n        warrantyRate1: [\r\n          { required: true, message: '请输入一阶段质保金比例', trigger: 'change' },\r\n          { validator: validate.dbl, message: '必须为数字格式', trigger: 'change' },\r\n          { validator: validate.logic, logic: value => value >= 0, message: '必须大于0', trigger: 'change' }\r\n        ],\r\n        warrantyDays2: [\r\n          { required: true, message: '请输入二阶段质保期', trigger: 'change' },\r\n          { validator: validate.dbl, message: '必须为数字格式', trigger: 'change' },\r\n          { validator: validate.logic, logic: value => value >= 0, message: '必须大于0', trigger: 'change' }\r\n        ],\r\n        warrantyRate2: [\r\n          { required: true, message: '请输入二阶段质保金比例', trigger: 'change' },\r\n          { validator: validate.dbl, message: '必须为数字格式', trigger: 'change' },\r\n          { validator: validate.logic, logic: value => value >= 0, message: '必须大于0', trigger: 'change' }\r\n        ],\r\n        warrantyDays3: [\r\n          { required: true, message: '请输入三阶段质保期', trigger: 'change' },\r\n          { validator: validate.dbl, message: '必须为数字格式', trigger: 'change' },\r\n          { validator: validate.logic, logic: value => value >= 0, message: '必须大于0', trigger: 'change' }\r\n        ],\r\n        warrantyRate3: [\r\n          { required: true, message: '请输入三阶段质保金比例', trigger: 'change' },\r\n          { validator: validate.dbl, message: '必须为数字格式', trigger: 'change' },\r\n          { validator: validate.logic, logic: value => value >= 0, message: '必须大于0', trigger: 'change' }\r\n        ],\r\n        warrantyDays4: [\r\n          { required: true, message: '请输入四阶段质保期', trigger: 'change' },\r\n          { validator: validate.dbl, message: '必须为数字格式', trigger: 'change' },\r\n          { validator: validate.logic, logic: value => value >= 0, message: '必须大于0', trigger: 'change' }\r\n        ],\r\n        warrantyRate4: [\r\n          { required: true, message: '请输入四阶段质保金比例', trigger: 'change' },\r\n          { validator: validate.dbl, message: '必须为数字格式', trigger: 'change' },\r\n          { validator: validate.logic, logic: value => value >= 0, message: '必须大于0', trigger: 'change' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    'ruleForm.orgId': {\r\n      handler: function(value) {\r\n        // this.ruleForm.accountId = null\r\n        if (value && value !== 0) {\r\n          this.disabled = false\r\n        } else {\r\n          this.disabled = true\r\n        }\r\n      },\r\n      immediate: true\r\n    },\r\n    'ruleForm.proProperties': {\r\n      handler(val) {\r\n        const changeRules = {\r\n          area: [],\r\n          planAmount: [],\r\n          taxType: [],\r\n          taxRate: []\r\n        }\r\n        if (val === 1) {\r\n          changeRules.area = [\r\n            { required: true, message: '请输入', trigger: 'change' },\r\n            { validator: validate.dbl, message: '必须为数字格式', trigger: 'change' },\r\n            { validator: validate.logic, logic: value => value >= 0, message: '必须大于0', trigger: 'change' }\r\n          ]\r\n          changeRules.planAmount = [\r\n            { required: true, message: '请输入', trigger: 'change' },\r\n            { validator: validate.dbl, message: '必须为数字格式', trigger: 'change' },\r\n            { validator: validate.logic, logic: value => value >= 0, message: '必须大于0', trigger: 'change' }\r\n          ]\r\n          changeRules.taxRate = [\r\n            { required: true, message: '请输入', trigger: 'change' },\r\n            { validator: validate.dbl, message: '必须为数字格式', trigger: 'change' },\r\n            { validator: validate.logic, logic: value => value >= 0, message: '必须大于0', trigger: 'change' }\r\n          ]\r\n          changeRules.taxType = [\r\n            { required: true, message: '请选择', trigger: 'change' }\r\n          ]\r\n        }\r\n        Object.assign(this.rules, changeRules)\r\n        this.$nextTick(() => {\r\n          this.$refs.ruleForm.clearValidate()\r\n        })\r\n      },\r\n      immediate: true\r\n    }\r\n  },\r\n  created() {\r\n  },\r\n  mounted() {\r\n    this.optionInit()\r\n    this.initData()\r\n  },\r\n  activated() {\r\n  },\r\n  methods: {\r\n    submitForm(formName, state) {\r\n      this.type = state\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n          let tempIds = []\r\n          if (newObj.zbFileList.length > 0) {\r\n            tempIds = newObj.zbFileList.map(m => {\r\n              return { id: m.id, addFlag: m.addFlag }\r\n            })\r\n          }\r\n          newObj.zbFileList = tempIds\r\n          tempIds = []\r\n          if (newObj.tbFileList.length > 0) {\r\n            tempIds = newObj.tbFileList.map(m => {\r\n              return { id: m.id, addFlag: m.addFlag }\r\n            })\r\n          }\r\n          newObj.tbFileList = tempIds\r\n          tempIds = []\r\n          if (newObj.sghtFileList.length > 0) {\r\n            tempIds = newObj.sghtFileList.map(m => {\r\n              return { id: m.id, addFlag: m.addFlag }\r\n            })\r\n          }\r\n          newObj.sghtFileList = tempIds\r\n          tempIds = []\r\n          if (newObj.bchtFileList.length > 0) {\r\n            tempIds = newObj.bchtFileList.map(m => {\r\n              return { id: m.id, addFlag: m.addFlag }\r\n            })\r\n          }\r\n          newObj.bchtFileList = tempIds\r\n          tempIds = []\r\n          if (newObj.psjlFileList.length > 0) {\r\n            tempIds = newObj.psjlFileList.map(m => {\r\n              return { id: m.id, addFlag: m.addFlag }\r\n            })\r\n          }\r\n          newObj.psjlFileList = tempIds\r\n          tempIds = []\r\n          if (newObj.zbtzsFileList.length > 0) {\r\n            tempIds = newObj.zbtzsFileList.map(m => {\r\n              return { id: m.id, addFlag: m.addFlag }\r\n            })\r\n          }\r\n          newObj.zbtzsFileList = tempIds\r\n          console.log(newObj)\r\n          if (state === 1) {\r\n            var projectObj = JSON.parse(JSON.stringify(this.projectForm))\r\n            projectObj.orgId = newObj.orgId\r\n            projectObj.projectId = newObj.id\r\n            projectObj.state = state\r\n            console.log(projectObj)\r\n            if (this.billFlow) {\r\n            // 获取流程组件中的数据\r\n              const billFlow = this.$refs.flowSelect.getBillFlow()\r\n              if (!billFlow) {\r\n                return false\r\n              }\r\n              projectObj.billFlow = billFlow\r\n            } else {\r\n              this.$message('流程数据不能为空')\r\n              return\r\n            }\r\n          }\r\n          // var postData = { project: newObj, fileList: tempIds }\r\n          if (this.projectId) {\r\n            // 修改\r\n            this.buttonLoading = true\r\n            putProject(newObj)\r\n              .then((response) => {\r\n                this.$message(response.message)\r\n                if (state === 1) {\r\n                  addProjectLX(projectObj).then((response) => {\r\n                    this.$message(response.message)\r\n                  })\r\n                }\r\n                this.buttonLoading = false\r\n                this.closeThePage()\r\n                // this.$emit('dialogClose')\r\n              })\r\n              .catch(() => {\r\n                this.buttonLoading = false\r\n              })\r\n          } else {\r\n            // 添加\r\n            this.buttonLoading = true\r\n            addProject(newObj)\r\n              .then((response) => {\r\n                this.$message(response.message)\r\n                if (response.code === 200) {\r\n                  if (state === 1) {\r\n                    projectObj.projectId = this.response.data.id\r\n                    addProjectLX(projectObj).then((response) => {\r\n                      this.$message(response.message)\r\n                    })\r\n                  }\r\n                }\r\n                this.buttonLoading = false\r\n                this.closeThePage()\r\n                // this.$emit('dialogClose')\r\n              })\r\n              .catch(() => {\r\n                this.buttonLoading = false\r\n              })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    getDynamicFlow(formName, state) {\r\n      this.type = state\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          var newObj = JSON.parse(JSON.stringify(this.projectForm))\r\n          newObj.orgId = this.ruleForm.orgId\r\n          if (!this.ruleForm.contractId) {\r\n            this.$message.error('提交立项申请必须关联合同!')\r\n            return\r\n          }\r\n          getBillFlow(newObj).then(response => {\r\n            if (response.success) {\r\n              this.billFlow = response.data.billFlow\r\n              this.active = 1\r\n            } else {\r\n              this.$message(response.message)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    previous() {\r\n      // 上一步\r\n      this.active = 0\r\n      this.billFlow = null\r\n    },\r\n    initData() {\r\n      this.projectId = this.$route.query.id\r\n      if (this.projectId) {\r\n        getProjectById({ id: this.projectId }).then((response) => {\r\n          const { data, incomeContract, bussinessInfo } = response\r\n          // const { data } = response\r\n          this.orgChange(data.orgId)\r\n          this.ruleForm = data\r\n          this.ruleForm.zbFileList = data.zbUpFile\r\n          this.ruleForm.tbFileList = data.tbUpFile\r\n          this.ruleForm.sghtFileList = data.sghtUpFile\r\n          this.ruleForm.bchtFileList = data.bchtUpFile\r\n          this.ruleForm.psjlFileList = data.psjlUpFile\r\n          this.ruleForm.zbtzsFileList = data.zbtzsUpFile\r\n          if (incomeContract.length > 0) {\r\n            this.contractNumber = incomeContract[0].number\r\n          }\r\n          if (bussinessInfo.length > 0) {\r\n            this.bussinessInfoNumber = bussinessInfo[0].number\r\n          }\r\n          // this.fileList = files\r\n          // this.keyEngProperties += 1\r\n          // this.keyManagementiState += 1\r\n          // this.keyStructureType += 1\r\n          this.keyInformationSource += 1\r\n          // this.keyTaxType += 1\r\n          this.keyProjectProperty += 1\r\n          // this.keyProProperties += 1\r\n          // this.keyStateType += 1\r\n          this.keyOrg += 1\r\n        })\r\n      } else {\r\n        this.orgChange(0)\r\n      }\r\n    },\r\n    optionInit() {\r\n      getDictionarysByTypes({ types: 'engProperties,managementiState,structureType,informationSource,taxType,projectProperty,proProperties,projectState,postPoolCategory' })\r\n        .then((response) => {\r\n          const { data } = response\r\n          data.forEach(element => {\r\n            element.pid = element.pId\r\n            if (element.type === 'engProperties') {\r\n              this.engPropertiesOptions.push(element)\r\n            }\r\n            if (element.type === 'managementiState') {\r\n              this.managementiStateOptions.push(element)\r\n            }\r\n            if (element.type === 'structureType') {\r\n              this.structureTypeOptions.push(element)\r\n            }\r\n            if (element.type === 'informationSource') {\r\n              this.informationSourceOptions.push(element)\r\n            }\r\n            if (element.type === 'taxType') {\r\n              this.taxTypeOptions.push(element)\r\n            }\r\n            if (element.type === 'projectProperty') {\r\n              this.projectPropertyOptions.push(element)\r\n            }\r\n            if (element.type === 'proProperties') {\r\n              this.proPropertiesOptions.push(element)\r\n            }\r\n            if (element.type === 'projectState') {\r\n              this.stateTypeOptions.push(element)\r\n            }\r\n            if (element.type === 'postPoolCategory' && element.value > 3) {\r\n              this.projectCategoryOptions.push(element)\r\n            }\r\n          })\r\n          // this.keyEngProperties += 1\r\n          // this.keyManagementiState += 1\r\n          // this.keyStructureType += 1\r\n          this.keyInformationSource += 1\r\n          // this.keyTaxType += 1\r\n          this.keyProjectProperty += 1\r\n          // this.keyProProperties += 1\r\n          // this.keyStateType += 1\r\n        })\r\n    },\r\n    orgChange(data) {\r\n      getAccountSetByOrgId({ orgId: data }).then(response => {\r\n        this.accountList = response.data\r\n      })\r\n    },\r\n    closeThePage() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    },\r\n    fictitiousChange(data) {\r\n      if (data) {\r\n        this.ruleForm.name = '【虚拟】' + this.ruleForm.name\r\n      } else {\r\n        this.ruleForm.name = this.ruleForm.name.split('【虚拟】').join('')\r\n      }\r\n    },\r\n    selectBussinessInfo() {\r\n      this.$refs.bussinessInfoRef.openDialog()\r\n    },\r\n    getBussinessInfo(data) {\r\n      if (data.length > 0) {\r\n        this.ruleForm.bussinessInfoId = data[0].id\r\n        this.bussinessInfoNumber = data[0].number\r\n      }\r\n    },\r\n    selectContract() {\r\n      this.$refs.contractRef.openDialog()\r\n    },\r\n    getContract(data) {\r\n      if (data.length > 0) {\r\n        this.ruleForm.contractId = data[0].id\r\n        this.contractNumber = data[0].number\r\n      }\r\n    }\r\n  }\r\n}\r\n",null]}