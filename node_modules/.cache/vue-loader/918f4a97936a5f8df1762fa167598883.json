{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\components\\UpLoad\\UpFile.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\components\\UpLoad\\UpFile.vue","mtime":1635749455614},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getToken } from '@/utils/auth'\r\nimport { getFile, putFileName } from '@/api/xtgl/upfile'\r\nimport svgIcons from '@/utils/svg-icons'\r\n// import Rename from './Rename'\r\nimport pdf from 'vue-pdf'\r\n// 上传文件组件\r\nexport default {\r\n  name: 'UpFile',\r\n  components: {\r\n    pdf\r\n    // Rename\r\n  },\r\n  model: {\r\n    prop: 'fileList', // 指向props的参数名\r\n    event: 'change'// 事件名称\r\n  },\r\n  props: {\r\n    limit: { type: Number, default: null }, // 上传数量\r\n    fileSize: { type: Number, default: 10 }, // 上传大小\r\n    accept: { type: String, default: 'image/*,.doc, .docx, .xls, .xlsx, .ppt, .pptx, .zip, .rar, .pdf, .dwg, .txt' }, // 上传类型\r\n    postData: { type: Object, default: () => { return { } } }, // 上传参数{}\r\n    showFileList: { type: Boolean, default: false }, // 是否显示文件列表\r\n    fileList: { type: [String, Number, Array], default: null }, // 文件数据\r\n    mode: { type: Number, default: 0 }, // 0：查看，1：编辑\r\n    isPreview: { type: Boolean, default: true }, // 是否预览\r\n    isDownload: { type: Boolean, default: true }, // 是否下载\r\n    isDelete: { type: Boolean, default: false }, // 是否删除\r\n    isRename: { type: Boolean, default: false }, // 是否重命名\r\n    isUpfile: { type: Boolean, default: false } // 是否显示上传按钮\r\n  },\r\n  data() {\r\n    var path = process.env.VUE_APP_BASE_API\r\n    path = path + (path.slice(-1) === '/' ? '' : '/') + 'api/xtgl/upfile/upLoadFile'\r\n    return {\r\n      postUrl: path,\r\n      imageUrl: '',\r\n      dialogTitle: '信息',\r\n      dialogImageVisible: false,\r\n\r\n      showProgress: false,\r\n      percentage: 0,\r\n\r\n      // PDF预览\r\n      viewVisible: false,\r\n      pdfSrc: null,\r\n      pdfPage: 1,\r\n      pageCount: 0,\r\n\r\n      // viewVisible2: false,\r\n      newValue: '',\r\n      buttonLoading: false,\r\n      renameDialog: false,\r\n      extension: '',\r\n      renameObj: '',\r\n      svgIcons\r\n    }\r\n  },\r\n  computed: {\r\n    headers() {\r\n      return { Authorization: getToken() }\r\n    }\r\n  },\r\n  created() {\r\n    // console.log('输出fileList:', this.fileList)\r\n  },\r\n  methods: {\r\n    handleSuccess(response, file, fileList) {\r\n      // name:上传文件显示的名称 id:编号  addFlag:是否是新添加的\r\n      this.$emit('change', [...this.fileList, { fileName: file.name, id: response.data, fileSize: file.size, addFlag: true }])\r\n      // this.fileList.push({ fileName: file.name, id: response.data, fileSize: file.size, addFlag: true })\r\n      // console.log('handleSuccess：', response, file, fileList)\r\n    },\r\n    // handleExceed(files, fileList) {\r\n    //   console.log('handleExceed')\r\n    // },\r\n    beforeUpload(file) {\r\n      // console.log('beforeUpload:', file)\r\n      return new Promise((resolve, reject) => {\r\n        const isLt2M = file.size / 1024 / 1024 < this.fileSize // 判定图片大小是否小于10MB\r\n        if (!isLt2M) {\r\n          this.$message.error(`上传文件大小不能超过 ${this.fileSize}MB!`)\r\n          reject()\r\n        }\r\n        resolve()\r\n      })\r\n    },\r\n    // beforeRemove(file, fileList) {\r\n    //   // 加个判断，因为上传 判断文件大小 返回false 或者返回 reject 会触发当前的钩子，status为 ready\r\n    //   if (file && file.status === 'success') {\r\n    //     // 编辑模式才能删除\r\n    //     if (this.mode === 1) {\r\n    //       this.fileList.splice(this.fileList.findIndex(item => item.id === file.id), 1)\r\n    //     } else {\r\n    //       return false\r\n    //     }\r\n    //   }\r\n    //   console.log('触发beforeRemove：file:', file)\r\n    // },\r\n    handleProgress(event, file, fileList) {\r\n      // console.log('event:', event, file, fileList)\r\n      this.showProgress = true\r\n      this.percentage = event.percent\r\n      if (event.percent === 100) {\r\n        this.showProgress = false\r\n        this.percentage = 0\r\n      }\r\n    },\r\n    // handlePreview(file) {\r\n    // },\r\n    // handleError(err, file, fileList) {\r\n    //   console.log('handleError：', err, file, fileList)\r\n    // },\r\n    // handleChange(file, fileList) {\r\n    //   console.log('handleChange：', file, fileList)\r\n    // },\r\n    // PDF预览\r\n    closeDialog() {\r\n      this.pdfPage = 1\r\n    },\r\n\r\n    // PDF改变页数\r\n    previousPage() {\r\n      var p = this.pdfPage\r\n      p = p > 1 ? p - 1 : this.pageCount\r\n      this.pdfPage = p\r\n    },\r\n    nextPage() {\r\n      var p = this.pdfPage\r\n      p = p < this.pageCount ? p + 1 : 1\r\n      this.pdfPage = p\r\n    },\r\n    // 根据后台返回的数据流，创建文件url地址\r\n    GetObjectUrl(mime, res) {\r\n      var blob = null\r\n      if (mime === '.zip') {\r\n        blob = new Blob([res], { type: 'application/zip' })\r\n      } else if (mime === '.doc' || mime === '.docx') {\r\n        blob = new Blob([res], { type: 'application/msword' })\r\n      } else if (mime === '.ppt' || mime === '.pptx') {\r\n        blob = new Blob([res], { type: 'application/vnd.ms-powerpoint' })\r\n      } else if (mime === '.xls' || mime === '.xlsx') {\r\n        blob = new Blob([res], { type: 'application/vnd.ms-excel' })\r\n      } else {\r\n        blob = new Blob([res])\r\n      }\r\n      return window.URL.createObjectURL(blob)\r\n    },\r\n    // ShowRenameDialog() {\r\n    //   this.viewVisible2 = true\r\n    // },\r\n    getFile(file, type) {\r\n      // type :0 查看 ，1 下载\r\n      var imgPrefix = ['.jpg', '.jpeg', '.png', '.gif'] // 图片类型\r\n      const prefix = file.fileName.substring(file.fileName.lastIndexOf('.')).toLowerCase() // 获取文件后缀\r\n      // 根据文件类型选择不同的预览方式\r\n      getFile({ id: file.id, addFlag: file.addFlag }).then(response => {\r\n        // console.log('返回流类型：', response)\r\n        // 创建文件地址\r\n        var blobUrl = this.GetObjectUrl(prefix, response)\r\n        if (type === 0) {\r\n        // 图片的 接收方法\r\n          if (imgPrefix.includes(prefix)) {\r\n            this.imageUrl = blobUrl\r\n            this.dialogImageVisible = true\r\n          } else if (prefix === '.pdf') {\r\n            this.pdfSrc = pdf.createLoadingTask(blobUrl)\r\n            // this.pdfSrc.promise.then(pdf => {\r\n            //   console.log('pdf的属性:', pdf)\r\n            //   this.pageCount = pdf.numPages\r\n            // }).catch(err => {\r\n            //   console.error('pdf 加载失败', err)\r\n            // })\r\n            this.viewVisible = true\r\n          } else {\r\n            this.$message.info('只支持图片、pdf查看')\r\n            return false\r\n          }\r\n        } else if (type === 1) {\r\n          // excel ppt word 之类格式的文件，不支持显示，只提供下载\r\n          const eleLink = document.createElement('a')\r\n          eleLink.download = file.fileName\r\n          eleLink.style.display = 'none'\r\n          eleLink.href = blobUrl\r\n          // 触发点击\r\n          document.body.appendChild(eleLink)\r\n          eleLink.click()\r\n          // 然后移除\r\n          document.body.removeChild(eleLink)\r\n        } else {\r\n          this.$message.info('类型错误')\r\n        }\r\n      }).catch(() => {\r\n        this.$message.error('文件读取错误')\r\n      })\r\n    },\r\n    canPreview(file) {\r\n      var prefix = ['.jpg', '.jpeg', '.png', '.gif', '.pdf'] // 可预览类型\r\n      return prefix.includes(\r\n        file.fileName.substring(file.fileName.lastIndexOf('.')).toLowerCase())\r\n    },\r\n    filenameClick(file) {\r\n      if (this.canPreview(file)) {\r\n        if (this.isPreview) this.getFile(file, 0)\r\n        else if (this.isDownload) this.getFile(file, 1)\r\n      } else {\r\n        if (this.isDownload) this.getFile(file, 1)\r\n      }\r\n    },\r\n    preview(file) {\r\n      if (file.fileName.lastIndexOf('.') <= 0) {\r\n        this.$message.info('无效的文件')\r\n        return\r\n      }\r\n      this.getFile(file, 0)\r\n    },\r\n    download(file) {\r\n      this.getFile(file, 1)\r\n    },\r\n    deleteFile(file, index) {\r\n      this.fileList.splice(index, 1)\r\n    },\r\n    rename(file) {\r\n      this.renameDialog = true\r\n      const lastIndex = file.fileName.lastIndexOf('.')\r\n      if (lastIndex <= 0) {\r\n        this.$message.info('文件名格式错误')\r\n        return\r\n      }\r\n      this.newValue = file.fileName.substring(0, lastIndex)\r\n      this.extension = file.fileName.substring(lastIndex)\r\n      this.selectObj = file\r\n    },\r\n    renameSave() {\r\n      if (this.newValue === '') {\r\n        this.$message.info('不能为空')\r\n        return\r\n      }\r\n      const newName = this.newValue + this.extension\r\n      var postData = { id: this.selectObj.id, newName: newName, addFlag: this.selectObj.addFlag }\r\n      // 修改后端的文件名\r\n      this.buttonLoading = true\r\n      putFileName(postData).then(response => {\r\n        this.$message.info(response)\r\n        // 修改前端 的文件名\r\n        this.selectObj.name = newName\r\n        this.renameDialog = false // 关闭\r\n        this.buttonLoading = false\r\n        this.$message.info(response.message)\r\n      })\r\n    },\r\n    closeRenameDialog() {\r\n      this.renameDialog = false\r\n    },\r\n    getFileIcon(fileName) {\r\n      const prefix = fileName.substring(fileName.lastIndexOf('.')).toLowerCase() // 获取文件后缀\r\n      var svg = 'form'\r\n      switch (prefix) {\r\n        case '.jpg': case '.jpeg': case '.png': case '.gif': case '.bmp': // 图片类型\r\n          svg = 'image'\r\n          break\r\n        case '.pdf':\r\n          svg = 'pdf'\r\n          break\r\n        case '.txt':\r\n          svg = 'txt'\r\n          break\r\n        case '.doc': case '.docx':\r\n          svg = 'word'\r\n          break\r\n        case '.ppt': case '.pptx':\r\n          svg = 'ppt'\r\n          break\r\n        case '.xls': case '.xlsx':\r\n          svg = 'excel'\r\n          break\r\n        case '.rar': case '.zip': case '.7z':\r\n          svg = 'rar'\r\n          break\r\n        case '.dwg':\r\n          svg = 'cad'\r\n          break\r\n        default:\r\n          break\r\n      }\r\n      return svg\r\n    }\r\n\r\n  }\r\n}\r\n",null]}