{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\supplier\\supplierAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\supplier\\supplierAdd.vue","mtime":1634288659611},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getSupplierById, addSupplier, putSupplier, getSupplierEditInit } from '@/api/cggl/supplier'\r\nimport OrgSelect2 from '@/components/OrgSelect/index2'\r\nimport UpFile from '@/components/UpLoad/UpFile'\r\nexport default {\r\n  name: 'SupplierAdd',\r\n  components: {\r\n    UpFile,\r\n    OrgSelect2\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        number: '',\r\n        name: '',\r\n        oldName: '',\r\n        address: '',\r\n        city: null,\r\n        email: '',\r\n        url: '',\r\n        corporation: '',\r\n        capital: null,\r\n        companyPhone: '',\r\n        contacts: '',\r\n        contactsPhone: '',\r\n        bankName: '',\r\n        bankAccount: '',\r\n        rate: 0,\r\n        mainBusiness: '',\r\n        businessCity: null,\r\n        remark: '',\r\n        inUse: true,\r\n        state: 0\r\n      },\r\n      fileList: [],\r\n      supplierId: null,\r\n      buttonLoading: false,\r\n      treeData: null,\r\n      orgValue: null,\r\n      rules: {\r\n        name: [{ required: true, message: '必填', trigger: 'blur' }],\r\n        mainBusiness: [{ required: true, message: '必填', trigger: 'blur' }],\r\n        businessCity: [{ required: true, message: '必填', trigger: 'blur' }]\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n  },\r\n  activated() {\r\n    this.initData()\r\n    if (this.$route.params.id) {\r\n      this.refreshRouterName = this.$route.params.refreshRouterName\r\n    }\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n          newObj.businessCity = newObj.businessCity ? newObj.businessCity.join() : ''\r\n          let tempIds = []\r\n          if (this.fileList.length) {\r\n            tempIds = this.fileList.map(m => { return { id: m.id, addFlag: m.addFlag } })\r\n          }\r\n          var postData = { supplier: newObj, fileList: tempIds }\r\n          if (this.supplierId) {\r\n            // 修改\r\n            this.buttonLoading = true\r\n            putSupplier(postData).then(response => {\r\n              this.$message(response.message)\r\n              this.buttonLoading = false\r\n              this.closeThePage()\r\n              // this.$emit('dialogClose')\r\n            }).catch(() => { this.buttonLoading = false })\r\n          } else {\r\n            // 添加\r\n            this.buttonLoading = true\r\n            addSupplier(postData).then(response => {\r\n              this.$message(response.message)\r\n              this.buttonLoading = false\r\n              this.closeThePage()\r\n              // this.$emit('dialogClose')\r\n            }).catch(() => { this.buttonLoading = false })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    initData() {\r\n      new Promise((resolve, reject) => {\r\n        getSupplierEditInit().then(response => {\r\n          const { data } = response\r\n          data.forEach(element => {\r\n            element.label = element.name\r\n          })\r\n          resolve(data)\r\n        })\r\n      }).then(treeData => {\r\n        this.supplierId = this.$route.query.id\r\n        if (this.supplierId) {\r\n          getSupplierById({ id: this.supplierId }).then(response => {\r\n            const { data, files } = response\r\n            data.businessCity = data.businessCity.split(',').map(m => Number(m))\r\n            this.treeData = treeData\r\n            this.ruleForm = data\r\n\r\n            this.fileList = files // 附件\r\n          })\r\n        } else {\r\n          this.ruleForm.city = null\r\n          this.treeData = treeData\r\n        }\r\n      }).catch(() => {\r\n        this.$message.error('信息错误')\r\n      })\r\n    },\r\n    closeThePage() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    },\r\n    attitude(id, type) {\r\n      this.closeThePage()\r\n      this.$router.push({ name: 'SupplierAssesmentEdit', query: { id: id, refreshRouterName: this.$route.name }, params: { id: id, type: type }})\r\n    }\r\n  }\r\n}\r\n",null]}