{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\zjgl\\Expend\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\zjgl\\Expend\\edit.vue","mtime":1634781212981},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { GetExpendById, SaveExpend, InvalidExpend, GetExpendPaging } from '@/api/cwgl/zjgl/Expend.js'\r\nimport AcceptanceCheckList from '@/components/Other/AcceptanceCheckList' // 未支出承兑单弹窗\r\nimport MyForm from '@/components/MyForm'\r\nimport { validate } from '@/utils/validate'\r\nexport default {\r\n  // 组件名称\r\n  name: 'ZiJinZhiChuEdit',\r\n  // 局部注册的组件\r\n  components: {\r\n    MyForm,\r\n    AcceptanceCheckList\r\n  },\r\n  // 组件状态值\r\n  data() {\r\n    return {\r\n      type: 'add', // 编辑:edit  新增:add\r\n      size: 'mini', // 整体大小\r\n      dialogVisible: false, // 控制对话框显示\r\n      isCanUpdate: true, // 是否可编辑,备注银行除外\r\n      zcForm: {\r\n        id: 'new',\r\n        expendDate: '', // 支出日期\r\n        number: '', // 收款编号\r\n        orgId: '', // 部门\r\n        expendType: '', // 支出类型\r\n        capitalType: '', // 资金类型\r\n        date1: '', // 支出日期\r\n        personId: '', // 经手人ID\r\n        personName: '', // 经手人\r\n        amount: '', // 金额\r\n        summary: '', // 摘要\r\n        remark: '', // 备注\r\n        state: -1\r\n      },\r\n      zclxData: [], // 支出类型\r\n      zjlxData: [], // 资金类型\r\n\r\n      cdmxData: [], // 承兑明细列表\r\n      // 验证规则\r\n      rules: {\r\n        orgId: [{ required: true, message: '请选择部门', trigger: 'change' }],\r\n        expendType: [{ required: true, message: '请选择支出类型', trigger: 'change' }],\r\n        capitalType: [{ required: true, message: '请选择资金类型', trigger: 'change' }],\r\n        expendDate: [{ required: true, message: '请选择日期', trigger: 'change' }],\r\n        personId: [{ required: true, message: '请选择经手人', trigger: 'change' }],\r\n        amount: [\r\n          { required: true, message: '请输入金额', trigger: 'change' },\r\n          { validator: validate.money, message: '金额格式不正确' },\r\n          { validator: validate.max_amount, message: '超过所能存储的最大金额' }\r\n        ],\r\n        summary: [{ required: true, message: '请输入摘要', trigger: 'blur' }]\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    /**\r\n     * 是否是承兑\r\n     */\r\n    isChengDui() {\r\n      const { capitalType } = this.zcForm\r\n      return capitalType === 2 || capitalType === 3\r\n    },\r\n    /**\r\n     * 处理form表单的数据\r\n     */\r\n    formNodeData() {\r\n      const { isCanUpdate, zclxData, isChengDui, zcForm } = this\r\n      return [\r\n        { label: '支出编号:', keyword: 'number', props: { disabled: true, placeholder: '系统自动生成' }},\r\n        { label: '部门:', keyword: 'orgId', component: 'OrgSelect', props: { dataMode: 1, collapseTags: true, showAllLevels: false, filterable: true, expandTrigger: 'hover', placeholder: '请选择部门', checkStrictly: true, disabled: !isCanUpdate }},\r\n        { label: '支出类型:', keyword: 'expendType', component: 'Select', props: { disabled: !isCanUpdate, placeholder: '请选择', options: zclxData.map(v => { return { label: v.name, value: v.value } }) }},\r\n        { label: '资金类型:', keyword: 'capitalType', component: 'CapitalSelect', props: { disabled: !isCanUpdate, multiple: false, showAllLevels: false }},\r\n        { label: '支出日期:', keyword: 'expendDate', component: 'el-date-picker', props: { disabled: !isCanUpdate, type: 'date', placeholder: '选择日期', valueFormat: 'yyyy-MM-dd' }},\r\n        { label: '经手人:', keyword: 'personId', component: 'PersonSelect', props: { disabled: !isCanUpdate, multiple: false }},\r\n        { label: '金额:', keyword: 'amount',\r\n          render: h => (\r\n            <el-input v-model={zcForm.amount} disabled={isChengDui || !isCanUpdate}>\r\n              {\r\n                isChengDui ? <el-button slot='append' style='background-color:white;' disabled={!isCanUpdate} {...{ on: { 'click': this.showCd }}}>选择承兑</el-button> : ''\r\n              }\r\n            </el-input>\r\n          )\r\n        },\r\n        { label: '摘要:', keyword: 'summary' },\r\n        { label: '备注:', keyword: 'remark', monopolize: true, props: { type: 'textarea' }}\r\n      ]\r\n    }\r\n  },\r\n  beforeRouteEnter(to, from, next) {\r\n    next(vm => {\r\n      const newId = vm.$route.query.id\r\n      const oldId = vm.zcForm.id\r\n      if (newId && newId !== oldId) {\r\n      // 说明是打开另一个单子的编辑页面\r\n        vm.zcForm.id = newId\r\n        vm.getZcForm()\r\n      } else if (!newId && oldId) {\r\n        // 说明是打开一个新建页面\r\n        Object.assign(vm.zcForm, {\r\n          state: 0,\r\n          id: ''\r\n        })\r\n        vm.isCanUpdate = true\r\n        vm.$refs['ruleForm']?.resetFields()\r\n        vm.getOptions()\r\n      }\r\n    })\r\n  },\r\n  // 组件方法\r\n  methods: {\r\n    /**\r\n     * @description: 获取支出数据\r\n     */\r\n    getZcForm() {\r\n      GetExpendById(this.zcForm.id).then(\r\n        res => {\r\n          const {\r\n            code,\r\n            data,\r\n            expendTypeOptions,\r\n            capitalTypeOptions } = res\r\n          if (code === 200) {\r\n            data.expendDate = this.$moment(data.expendDate).format('YYYY-MM-DD')\r\n            this.isCanUpdate = data.isCanUpdate\r\n            for (const key in this.zcForm) {\r\n              if (Object.hasOwnProperty.call(data, key)) {\r\n                this.zcForm[key] = data[key]\r\n              }\r\n            }\r\n            if (Array.isArray(data.acceptanceList)) {\r\n              this.cdmxData = this.utils.easyDeepClone(data.acceptanceList)\r\n            }\r\n            this.zclxData = expendTypeOptions\r\n            this.zjlxData = capitalTypeOptions\r\n          }\r\n        }\r\n\r\n      )\r\n    },\r\n    /**\r\n     * @description: 获取支出 资金 类型下拉\r\n     */\r\n    async getOptions() {\r\n      const { expendTypOptions, capitalTypeOptions } = await GetExpendPaging({ currentPage: 1, pageSize: 1 })\r\n      this.zclxData = expendTypOptions\r\n      this.zjlxData = capitalTypeOptions\r\n    },\r\n    /**\r\n     * @description: 提交更新\r\n     */\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(async valid => {\r\n        if (valid) {\r\n          const data = {\r\n            ...this.zcForm,\r\n            acceptanceIDs: this.cdmxData.map(v => v.id)\r\n          }\r\n          if (!data.id) {\r\n            delete data.id\r\n          }\r\n          delete data.acceptanceList\r\n          const res = await SaveExpend(data)\r\n\r\n          this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n          this.$message.success(res.message)\r\n        } else {\r\n          console.log('error submit!!')\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    /**\r\n     * @description: 作废\r\n     */\r\n    async invalidGathering() {\r\n      InvalidExpend(this.zcForm.id).then((res) => {\r\n        this.$message.success(res.message)\r\n        this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n      }).catch(err => {\r\n        console.log(err)\r\n        // this.$message.error(err.errorMsg || '操作失败')\r\n      })\r\n    },\r\n    cancelForm(formName) {\r\n      // this.$router({name:\"\"})\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    },\r\n    /**\r\n     * 弹出承兑选择框\r\n     */\r\n    showCd() {\r\n      this.dialogVisible = true\r\n    },\r\n    /**\r\n     * 承兑票选择完成回调\r\n     */\r\n    cdCheck(newData) {\r\n      const { sum } = this.utils\r\n      this.cdmxData = newData\r\n      // this.zcForm.acceptanceIDs = Array.from(new Set(newData.map(item => item.id)))\r\n      this.zcForm.amount = sum(newData.map(v => v.amount)).toFixed(2)\r\n    },\r\n    /**\r\n     * 选择资金形式后的回调,\r\n     * 选择承兑时需要清空承兑明细列表和资金总额\r\n     */\r\n    capitalTypeChange(value) {\r\n      this.cdmxData = []\r\n      if (value === 2 || value === 3) {\r\n        this.zcForm.amount = 0\r\n      }\r\n    }\r\n  }\r\n}\r\n",null]}