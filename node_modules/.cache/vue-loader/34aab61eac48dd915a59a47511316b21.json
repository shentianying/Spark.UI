{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\material\\components\\addRangeMCP.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\material\\components\\addRangeMCP.vue","mtime":1626514528229},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getAllMaterialProperty, addMaterialCategoryProperty } from '@/api/cggl/material'\r\nimport AddMCPItem2 from './addMCPItem2'\r\nexport default {\r\n  name: 'AddRangeMCP',\r\n  components: {\r\n    AddMCPItem2\r\n  },\r\n  props: {\r\n    obj: {\r\n      type: Object,\r\n      default: null\r\n    },\r\n    organizationId: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    nodes: {\r\n      type: Array,\r\n      default: null\r\n    }\r\n\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {},\r\n      list: null,\r\n      listLoading: false,\r\n      buttonLoading: false,\r\n      selectionItem: [],\r\n      dialogTableVisible: false,\r\n      currentRow: null,\r\n      rules: {\r\n        propertyArray: [{ type: 'array', required: true, message: '请选择', trigger: 'change' }],\r\n        sort: [{ required: true, message: '请输入', trigger: 'blur' }]\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchData()\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          if (this.selectionItem.length <= 0) {\r\n            this.$message.error('请选择属性')\r\n            return false\r\n          }\r\n          const postData = []\r\n          var categoryIds = this.nodes.map(m => { return m.id })\r\n          categoryIds.forEach(ele1 => {\r\n            this.selectionItem.forEach(ele2 => {\r\n              const row = {}\r\n              row.categoryId = ele1\r\n              row.propertyId = ele2.propertyId\r\n              row.canInput = ele2.canInput\r\n              row.isRequired = ele2.isRequired2\r\n              row.MCPItem = ele2.MCPItem\r\n              row.isTargetRequired = ele2.isTargetRequired\r\n              postData.push(row)\r\n            })\r\n          })\r\n          this.buttonLoading = true\r\n          addMaterialCategoryProperty(postData).then(response => {\r\n            this.$message(response.message)\r\n            this.buttonLoading = false\r\n            this.$emit('addProClose')\r\n          }).catch(() => { this.buttonLoading = false })\r\n        }\r\n      })\r\n    },\r\n    fetchData() {\r\n      this.listLoading = true\r\n      var postData = {}\r\n      postData.organizationId = this.organizationId\r\n      getAllMaterialProperty(postData).then(response => {\r\n        const data = []\r\n        const selectionRow = []\r\n        response.data.forEach(ele => {\r\n          const row = {}\r\n          row.id = ele.id\r\n          row.name = ele.name\r\n          row.canInput = false\r\n          row.propertyId = ele.id\r\n          row.MCPItem = []\r\n          row.isRequired = ele.isRequired // 属性的必选\r\n          row.isRequired2 = true\r\n          row.isTargetRequired = true\r\n          if (ele.isRequired) { selectionRow.push(row) }\r\n          data.push(row)\r\n        })\r\n\r\n        this.list = data\r\n        this.$nextTick(() => {\r\n          selectionRow.forEach(row => {\r\n            this.$refs.selectTable.toggleRowSelection(row)\r\n          })\r\n        })\r\n\r\n        this.listLoading = false\r\n      })\r\n    },\r\n    handleSelectionChange(val) {\r\n      this.selectionItem = val\r\n    },\r\n    handleEdit(row) {\r\n      this.currentRow = row\r\n      this.comName = 'AddMCPItem2'\r\n      this.dialogTableVisible = true\r\n    },\r\n    addItemClose(data) {\r\n      // 查询出选中对象所在 list 中的对象\r\n      const list0 = this.list.find(f => f.id === this.currentRow.propertyId)\r\n      // list 对象中添加属性 值为传过来的对象\r\n      list0.MCPItem = data\r\n      // 可选项不为空时，设置该行为选中状态\r\n      if (data.length > 0) this.$refs.selectTable.toggleRowSelection(list0, true)\r\n\r\n      this.dialogTableVisible = false\r\n    },\r\n    checkboxT(row, index) {\r\n      // 必选的行，就 禁用\r\n      if (row.isRequired) { return false } else { return true }\r\n    }\r\n  }\r\n}\r\n",null]}