{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\ggzx\\grgl\\workerWhitelist\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\ggzx\\grgl\\workerWhitelist\\index.vue","mtime":1635749455689},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getWhitelistPaging, deleteData } from '@/api/ggzx/workerWhitelist'\r\nimport { getDictionaryList } from '@/api/xtgl/dictionary'\r\nimport { getDefaultOptions } from '@/api/ggzx/worker'\r\nimport Edit from './edit'\r\nimport SearchBar from '@/components/SearchBar'\r\nimport searchData from './searchData'\r\nexport default {\r\n  name: 'WorkerWhitelist',\r\n  components: {\r\n    Edit,\r\n    SearchBar\r\n  },\r\n  data() {\r\n    return {\r\n      list: null,\r\n      searchData: searchData,\r\n      listLoading: false,\r\n      dialogTableVisible: false,\r\n      dialogTitle: '工人白名单',\r\n      total: 0,\r\n      currentPage: 1,\r\n      pageSize: this.utils.getPersonalSettings().pageSize,\r\n      currentRow: null,\r\n      comName: 'Edit',\r\n      search: {\r\n        year: null,\r\n        workerName: '',\r\n        idNumber: ''\r\n      },\r\n      whitelistTypeList: null\r\n    }\r\n  },\r\n  activated() {\r\n    if (this.$route.params.refresh) {\r\n      this.fetchData()\r\n    }\r\n    getDictionaryList({ type: 'whitelistType' }).then(response => {\r\n      const { data } = response\r\n      this.whitelistTypeList = data\r\n    })\r\n    getDefaultOptions().then(op => {\r\n      const { yearOptions } = op\r\n      // 搜索栏数据初始化\r\n      this.searchData = this.searchData.map(item => {\r\n        item.options =\r\n          item.name === 'year' ? yearOptions : item.options\r\n        return item\r\n      })\r\n    })\r\n  },\r\n  mounted() {\r\n    this.fetchData()\r\n  },\r\n  methods: {\r\n    fetchData() {\r\n      this.listLoading = true\r\n      const postData = this.getSearchData()\r\n      const currentPage = this.currentPage\r\n      const pageSize = this.pageSize\r\n      getWhitelistPaging({\r\n        ...postData,\r\n        currentPage,\r\n        pageSize\r\n      }).then(response => {\r\n        const { data, count } = response\r\n        this.list = data\r\n        this.total = count\r\n        this.listLoading = false\r\n      })\r\n    },\r\n    /**\r\n     * @description: 搜索栏数据转换\r\n     * @return {Object} request数据\r\n     */\r\n    getSearchData() {\r\n      const lastSearch = {}\r\n      this.searchData.forEach(item => {\r\n        const { value, transformType, name } = item\r\n        if (transformType === 'property-serial') {\r\n          value.forEach((ele, index) => {\r\n            const serial = index + 1\r\n            lastSearch[name + serial] = ele\r\n          })\r\n        } else {\r\n          lastSearch[name] = value\r\n        }\r\n      })\r\n      return lastSearch\r\n    },\r\n    /**\r\n     * @description: 搜索回调\r\n     */\r\n    handelSearch() {\r\n      this.currentPage = 1 // 返回第一页\r\n      this.fetchData()\r\n    },\r\n    dialogClose() {\r\n      this.dialogTableVisible = false\r\n      this.fetchData()\r\n    },\r\n    handleAdd() {\r\n      this.currentRow = null\r\n      this.dialogTableVisible = true\r\n      // this.$router.push({ name: 'WorkerBlacklistEdit', query: { refreshRouterName: this.$route.name }})\r\n    },\r\n    handleEdit(row) {\r\n      this.currentRow = row\r\n      this.dialogTableVisible = true\r\n      // this.$router.push({ name: 'WorkerBlacklistEdit', query: { id: row.id, refreshRouterName: this.$route.name, tab: 'edit' }, params: { id: row.id }})\r\n    },\r\n    handleDelete(row) {\r\n      this.$confirm('确定要移除吗?', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.listLoading = true\r\n        deleteData({ id: row.id }).then(res => {\r\n          if (res.code === 200) {\r\n            this.$message.success(res.message)\r\n            this.listLoading = false\r\n          } else {\r\n            this.$message.error(res.message)\r\n            this.listLoading = false\r\n          }\r\n        }).finally(() => {\r\n          this.listLoading = false\r\n        })\r\n      })\r\n    },\r\n    // attitude(row) {\r\n    //   this.$router.push({ name: 'TargetCostAttitude', query: { id: row.id, refreshRouterName: this.$route.name }, params: { id: row.id }})\r\n    // },\r\n    sizeChange(val) {\r\n      this.pageSize = val\r\n      this.fetchData()\r\n    },\r\n    radioChange(value) {\r\n      // 清空条件\r\n      this.search = {\r\n        workerName: '',\r\n        idNumber: ''\r\n      }\r\n      // 填充数据\r\n      this.fetchData()\r\n    }\r\n  }\r\n}\r\n",null]}