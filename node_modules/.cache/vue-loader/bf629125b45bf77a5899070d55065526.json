{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\jcsj\\organizationAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\jcsj\\organizationAdd.vue","mtime":1630736284834},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { putOrganization, addOrganization } from '@/api/xtgl/organization'\r\nimport { getAccountSetByOrgId } from '@/api/xtgl/accountSet'\r\nimport OrgSelect2 from '@/components/OrgSelect/index2'\r\nimport { getDictionaryList } from '@/api/xtgl/dictionary'\r\nexport default {\r\n  name: 'AddOrganization',\r\n  components: {\r\n    OrgSelect2\r\n  },\r\n  props: {\r\n    obj: {\r\n      type: Object,\r\n      default: null\r\n    },\r\n    pid: {\r\n      type: Number,\r\n      default: 0\r\n    }\r\n\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        name: '',\r\n        shortName: '',\r\n        accountSetIds: [],\r\n        categoryId: '',\r\n        sort: '',\r\n        optional: true,\r\n        isProject: false,\r\n        isSum: false,\r\n        inUse: true,\r\n        pid: 0\r\n      },\r\n      options: [],\r\n      categoryList: [],\r\n      orgId: null,\r\n      buttonLoading: false,\r\n      rules: {\r\n        name: [{ required: true, message: '请输入组织机构名称', trigger: 'blur' }],\r\n        accountSetIds: [{ type: 'array', required: true, message: '请至少选择一个公司', trigger: 'blur' }],\r\n        categoryId: [{ required: true, message: '请选择类别', trigger: 'blur' }]\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initData()\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n          newObj.accountSetIds = newObj.accountSetIds.join()\r\n          delete newObj.label\r\n          // newObj.pid = this.orgId || 0\r\n          // console.log('要传出去的值：', newObj)\r\n          if (this.obj) {\r\n            this.buttonLoading = true\r\n            putOrganization(newObj).then(response => {\r\n              this.$message(response.message)\r\n              this.buttonLoading = false\r\n              this.$emit('dialogClose')\r\n            }).catch(() => { this.buttonLoading = false })\r\n          } else {\r\n            addOrganization(newObj).then(response => {\r\n              this.$message(response.message)\r\n              this.buttonLoading = false\r\n              this.$emit('dialogClose')\r\n            }).catch(() => { this.buttonLoading = false })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields()\r\n    },\r\n    initData() {\r\n      getDictionaryList({ type: 'postPoolCategory' }).then(response => {\r\n        const { data } = response\r\n        this.categoryList = data\r\n      })\r\n      if (this.obj) {\r\n        this.orgChange(this.obj.pid)\r\n        var newObj = JSON.parse(JSON.stringify(this.obj))\r\n        newObj.accountSetIds = newObj.accountSetIds.split(',').map(item => Number(item))\r\n        this.ruleForm = newObj\r\n      } else {\r\n        this.orgChange(0)\r\n      }\r\n    },\r\n    orgChange(data) {\r\n      getAccountSetByOrgId({ orgId: data }).then(response => {\r\n        this.options = response.data\r\n      })\r\n    }\r\n  }\r\n}\r\n",null]}