{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\quotation\\quotationSuppliersAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\quotation\\quotationSuppliersAdd.vue","mtime":1635216068745},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n// import OrgSelect2 from '@/components/OrgSelect/index2'\r\nimport { getSupplierPaging } from '@/api/cggl/supplier'\r\nimport { getDictionarysByTypes } from '@/api/xtgl/dictionary'\r\nexport default {\r\n  name: 'QuotationSuppliersAdd',\r\n  components: {\r\n    // OrgSelect2\r\n  },\r\n  props: {\r\n    obj: {\r\n      type: Array,\r\n      default: null\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n      },\r\n      // 星级\r\n      supplierRateOptions: [],\r\n      keySupplierRate: 0,\r\n      total: 0,\r\n      currentPage: 1,\r\n      pageSize: this.utils.getPersonalSettings().pageSize,\r\n      name: '',\r\n      loading: false,\r\n      list: [],\r\n      fileList: [],\r\n      listLoading: false,\r\n      multipleSelection: [],\r\n      columnShow: { unit2: true,\r\n        brand: true,\r\n        model: true,\r\n        spec: true,\r\n        thickness: true,\r\n        texture: true,\r\n        surfaceTreatment: true,\r\n        designNumber: true\r\n      },\r\n      rules: {\r\n        number: [{ required: true, message: '请输入', trigger: 'change' }]\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n  },\r\n  watch: {\r\n  },\r\n  activated() {\r\n  },\r\n  mounted() {\r\n    this.initData()\r\n  },\r\n  methods: {\r\n    async initData() {\r\n      this.listLoading = true\r\n      getSupplierPaging({ currentPage: this.currentPage, pageSize: this.pageSize, name: this.name }).then(response => {\r\n        const { data, count } = response\r\n        this.list = data\r\n        this.total = count\r\n        this.listLoading = false\r\n      })\r\n      getDictionarysByTypes({ types: 'supplierRate' })\r\n        .then((response) => {\r\n          const { data } = response\r\n          data.forEach(element => {\r\n            element.pid = element.pId\r\n            if (element.type === 'supplierRate') {\r\n              this.supplierRateOptions.push(element)\r\n            }\r\n          })\r\n          // this.keyImportType += 1\r\n        })\r\n    },\r\n    setColumnShow() { // 设置列的显示。列中，都没有值，就隐藏\r\n      var modelunit2 = false\r\n      var modelbrand = false\r\n      var modelmodel = false\r\n      var modelspec = false\r\n      var modelthickness = false\r\n      var modeltexture = false\r\n      var modelsurfaceTreatment = false\r\n      var modeldesignNumber = false\r\n      for (var row of this.list) {\r\n        if (row.unit2) { modelunit2 = true }\r\n        if (row.brand) { modelbrand = true }\r\n        if (row.model) { modelmodel = true }\r\n        if (row.spec) { modelspec = true }\r\n        if (row.thickness) { modelthickness = true }\r\n        if (row.texture) { modeltexture = true }\r\n        if (row.surfaceTreatment) { modelsurfaceTreatment = true }\r\n        if (row.designNumber) { modeldesignNumber = true }\r\n      }\r\n      this.columnShow['unit2'] = modelunit2\r\n      this.columnShow['brand'] = modelbrand\r\n      this.columnShow['model'] = modelmodel\r\n      this.columnShow['spec'] = modelspec\r\n      this.columnShow['thickness'] = modelthickness\r\n      this.columnShow['texture'] = modeltexture\r\n      this.columnShow['surfaceTreatment'] = modelsurfaceTreatment\r\n      this.columnShow['designNumber'] = modeldesignNumber\r\n    },\r\n    // 多选框选中数据\r\n    handleSelectionChange(selection) {\r\n      this.multipleSelection = selection\r\n    },\r\n    checkSuppliers() {\r\n      if (this.multipleSelection.length <= 0) {\r\n        this.$message.error('必须选择供应商')\r\n      } else {\r\n        var data = {\r\n          list: this.multipleSelection\r\n        }\r\n        this.$emit('dialogClose', data, 'addSuppliers')\r\n      }\r\n    },\r\n    sizeChange(val) {\r\n      this.pageSize = val\r\n      this.initData()\r\n    },\r\n    getSupplierRate(rate) {\r\n      var supplierRate = this.supplierRateOptions.find(f => f.value === rate)\r\n      return supplierRate.name\r\n    },\r\n    selectInit(row, index) {\r\n      if (this.obj && this.obj.length > 0) {\r\n        var supplier = this.obj.find(f => f.supplier.number === row.number)\r\n        if (supplier) {\r\n          return false // 不可选\r\n        } else {\r\n          return true\r\n        }\r\n      } else {\r\n        return true\r\n      }\r\n    }\r\n  }\r\n}\r\n",null]}