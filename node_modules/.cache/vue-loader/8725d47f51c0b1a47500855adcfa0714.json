{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\invoice\\invoiceAttitude.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\invoice\\invoiceAttitude.vue","mtime":1631871061481},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getInvoiceById, addAttitude } from '@/api/cggl/invoice'\r\nimport FlowDisplay from '@/components/Flow/flowDisplay'\r\nimport FlowAttitude from '@/components/Flow/flowAttitude'\r\nimport UpFile from '@/components/UpLoad/UpFile'\r\nexport default {\r\n  name: 'CGInvoiceAttitude',\r\n  components: {\r\n    FlowAttitude,\r\n    FlowDisplay,\r\n    UpFile\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        id: 0,\r\n        name: '',\r\n        type: null,\r\n        invoiceNumber: '', // 发票号码\r\n        invoicingDate: null, // 开票日期\r\n        amount: null,\r\n        remark: '',\r\n        fileList: []\r\n      },\r\n      loading: false,\r\n      activate: false,\r\n      list: [],\r\n      invoiceTypes: [], // 发票类型\r\n      total: 0,\r\n      billFlow: null,\r\n      attitudePara: null,\r\n      rules: {\r\n        // orgId: [{ required: true, message: '请输入', trigger: 'change' }],\r\n        // planType: [{ required: true, message: '请输入', trigger: 'blur' }]\r\n      }\r\n    }\r\n  },\r\n  activated() {\r\n    if (this.$route.params.id) {\r\n      this.initData()\r\n      this.refreshRouterName = this.$route.params.refreshRouterName\r\n    }\r\n  },\r\n  mounted() {\r\n    if (!this.$route.params.id) {\r\n      this.activate = true\r\n    }\r\n  },\r\n  methods: {\r\n    initData() {\r\n      if (this.$route.query.id) {\r\n        this.ruleForm.id = this.$route.query.id\r\n        this.loading = true\r\n        getInvoiceById({ id: this.ruleForm.id })\r\n          .then(response => this.setData(response))\r\n          .catch(() => { this.loading = false })\r\n      }\r\n    },\r\n    setData(response) {\r\n      // data 设计下单数据\r\n      const { data, orgStr, billFlowData, invoiceTypes } = response\r\n      this.orgStr = orgStr\r\n      this.ruleForm = data\r\n      this.ruleForm.fileList = data.upFile\r\n\r\n      this.invoiceTypes = invoiceTypes\r\n      this.list = data.invoiceDetail.map(m => m.storageInDetail)\r\n\r\n      this.billFlow = billFlowData\r\n\r\n      // 加载流程组件\r\n      this.attitudePara = { formId: billFlowData.formId, billFlowId: billFlowData.id, planId: billFlowData.billId }\r\n\r\n      this.sumStorage()\r\n      this.loading = false // loading 状态关闭\r\n      this.activate = true\r\n\r\n      // **********支付状态的话，要屏蔽子组件中的一些文本框***********\r\n      // if (this.showPayButton) {\r\n      //   console.log('set toContent')\r\n      // this.toContent = false\r\n      // }\r\n    },\r\n    updateFlow(state) {\r\n      this.closeThePage()\r\n    },\r\n    submitForm() {\r\n      // 保存审批步骤\r\n      // 1.调用组件中的验证\r\n      // 2.获取表单参数数据\r\n      // 3.请求 审批\r\n\r\n      const result = this.$refs.flowAttitude.checkValidate()\r\n      if (result) {\r\n        var postData = this.$refs.flowAttitude.getPostData()\r\n        this.loading = true\r\n        addAttitude(postData).then(res => {\r\n          if (res.success) {\r\n            this.$message.success(res.message)\r\n            // 如果只填写意见不转下一步 需要子组件更新流程审批信息\r\n            // if (this.type !== 2) {\r\n            //   this.list = attitudeList\r\n            // }\r\n            this.closeThePage() // 跳转\r\n          } else {\r\n            this.$message.error(res.message)\r\n          }\r\n          this.loading = false\r\n        }).catch(() => { this.loading = false })\r\n      }\r\n    },\r\n    closeThePage() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    },\r\n    sumStorage() {\r\n      // 计算金额\r\n      this.total = 0\r\n      this.list.map(m => m.taxInclusiveAmount).forEach(e => {\r\n        this.total += e\r\n      })\r\n    }\r\n  }\r\n}\r\n",null]}