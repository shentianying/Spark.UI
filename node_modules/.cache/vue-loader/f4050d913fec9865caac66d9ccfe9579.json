{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\htly\\ProjectCompleteManage\\details.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\htly\\ProjectCompleteManage\\details.vue","mtime":1635216068832},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { GetProjectCompleteManageAttitudeById, CheckProjectCompleteManage } from '@/api/xmgl/ProjectCompleteManage.js'\r\nimport FlowDisplay from '@/components/Flow/flowDisplay'\r\nimport FlowAttitude from '@/components/Flow/flowAttitude'\r\nimport Detailsedit from '@/components/Detailsedit'\r\nexport default {\r\n  name: 'ProjectCompleteManageDetails',\r\n  components: {\r\n    FlowDisplay,\r\n    FlowAttitude,\r\n    Detailsedit\r\n    // UpFile\r\n  },\r\n  data() {\r\n    return {\r\n      size: 'mini',\r\n      activeNames: ['0', '1', '2'], // 展开的折叠面板\r\n      loading: false, // 请求未完成\r\n      myDetails: null, // 详情数据\r\n      billFlowData: null, // 流程信息\r\n      attitudePara: null // 审批信息\r\n    }\r\n  },\r\n  computed: {\r\n    /**\r\n     * 详情各字段计算\r\n     */\r\n    infoList() {\r\n      const {\r\n        myDetails: {\r\n          projectName,\r\n          orgName,\r\n          data: {\r\n            number,\r\n            completDate,\r\n            remark,\r\n            upFile,\r\n            project: {\r\n              area,\r\n              contractDuration,\r\n              contractStartDate,\r\n              contractFinishDate,\r\n              realStartDate,\r\n              computeFinishDate,\r\n              warrantyDays\r\n            },\r\n            createUserName,\r\n            createDate,\r\n            lastEditUserName,\r\n            lastEditDate\r\n          },\r\n          orderType,\r\n          stateName\r\n        }\r\n      } = this\r\n      const d = (dataStr) => dataStr ? this.$moment(dataStr).format('YYYY-MM-DD') : dataStr\r\n      const addDate = (date, days) => date ? this.$moment(date).add(days, 'days').format('YYYY-MM-DD') : ''\r\n\r\n      return [\r\n        { label: '编号', value: number, monopolize: true },\r\n        { label: '项目', value: projectName },\r\n        { label: '组织机构', value: orgName },\r\n        { label: '竣工验收日期', value: d(completDate) },\r\n        { label: '指令类型', value: orderType.name },\r\n        { label: '建筑面积', value: `${area.toFixed(2)}㎡` },\r\n        { label: '合同工期', value: `${contractDuration}天` },\r\n        { label: '合同开工日期', value: d(contractStartDate) },\r\n        { label: '合同竣工日期', value: d(contractFinishDate) },\r\n        { label: '开工日期说明', value: d(contractStartDate), monopolize: true },\r\n        { label: '实际开工日期', value: d(realStartDate) },\r\n        { label: '计算竣工日期', value: d(computeFinishDate) },\r\n        { label: '质保完成日期', value: addDate(completDate, warrantyDays), monopolize: true },\r\n        { label: '质保期', value: `${warrantyDays ? warrantyDays + '天' : ''}`, monopolize: true },\r\n        { label: '备注', value: remark, monopolize: true },\r\n        { label: '附件', value: upFile || [], component: 'UpFile', monopolize: true },\r\n        { label: '制单人', value: createUserName },\r\n        { label: '制单时间', value: createDate },\r\n        { label: '更新人', value: lastEditUserName },\r\n        { label: '更新时间', value: lastEditDate },\r\n        { label: '状态', value: stateName }\r\n      ]\r\n    }\r\n  },\r\n  beforeRouteEnter(to, from, next) {\r\n    next(vm => {\r\n      vm.initDat()\r\n    })\r\n  },\r\n  methods: {\r\n    /**\r\n     * @description: 初始化数据\r\n     */\r\n    initDat() {\r\n      const { id } = this.$route.query\r\n      this.myId = id\r\n      this.fetchData()\r\n    },\r\n    /**\r\n     * 提交审批意见以后的回调函数\r\n     */\r\n    updateFlow() {\r\n      this.goBack()\r\n    },\r\n    /**\r\n     * 合同履约部分专有的提交审批\r\n     */\r\n    submitApproval() {\r\n      const result = this.$refs.flowAttitude.checkValidate()\r\n      if (result) {\r\n        var postData = this.$refs.flowAttitude.getPostData()\r\n        this.loading = true\r\n        CheckProjectCompleteManage({ attitude: postData, id: this.myId }).then(({ message }) => {\r\n          this.$message.success(message)\r\n          this.updateFlow() // 跳转\r\n        }).finally(() => { this.loading = false })\r\n      }\r\n    },\r\n    /**\r\n     * 获取详情信息\r\n     */\r\n    async fetchData() {\r\n      if (!this.myId) return\r\n      this.loading = true\r\n      GetProjectCompleteManageAttitudeById({ id: this.myId }).then(res => {\r\n        this.billFlowData = res.billFlowData\r\n        this.myDetails = res\r\n        this.attitudePara = { formId: res.billFlowData.formId, billFlowId: res.data.billFlowId, planId: res.data.id }\r\n      }).catch(e => {\r\n        console.log('fetchData:请求列表数据失败，错误信息：', e)\r\n      }).finally(() => {\r\n        this.loading = false\r\n      })\r\n    },\r\n    goBack() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    }\r\n  }\r\n}\r\n",null]}