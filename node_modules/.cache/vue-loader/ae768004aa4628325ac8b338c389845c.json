{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\zggl\\worker\\index.vue?vue&type=template&id=ef0d1118&scoped=true&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\zggl\\worker\\index.vue","mtime":1633917085234},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"app-container shouKuan\" },\n    [\n      _c(\"SearchBar\", {\n        ref: \"SearchBar\",\n        attrs: { size: _vm.size, search: _vm.handelSearch },\n        model: {\n          value: _vm.searchData,\n          callback: function($$v) {\n            _vm.searchData = $$v\n          },\n          expression: \"searchData\"\n        }\n      }),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"action\" },\n        [\n          _c(\n            \"div\",\n            [\n              _c(\n                \"el-button\",\n                {\n                  directives: [\n                    {\n                      name: \"has\",\n                      rawName: \"v-has\",\n                      value: \"WORKER_EXPORT\",\n                      expression: \"'WORKER_EXPORT'\"\n                    }\n                  ],\n                  attrs: {\n                    size: _vm.size,\n                    loading: _vm.exLoading || _vm.table.loading\n                  },\n                  on: { click: _vm.exportExcel }\n                },\n                [_vm._v(\"导出\")]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"excel-export\",\n                {\n                  ref: \"excelExport\",\n                  staticClass: \"excel-export\",\n                  staticStyle: { display: \"none\" },\n                  attrs: {\n                    size: _vm.size,\n                    \"book-type\": \"xlsx\",\n                    filename: _vm.filename,\n                    sheet: _vm.sheet,\n                    \"on-error\": _vm.onError\n                  }\n                },\n                [\n                  _c(\"el-button\", { attrs: { size: _vm.size } }, [\n                    _vm._v(\"导出\")\n                  ])\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-radio-group\",\n            {\n              staticClass: \"checkbox-group\",\n              attrs: { size: _vm.size },\n              on: { change: _vm.typeChange },\n              model: {\n                value: _vm.filter.type,\n                callback: function($$v) {\n                  _vm.$set(_vm.filter, \"type\", $$v)\n                },\n                expression: \"filter.type\"\n              }\n            },\n            _vm._l(_vm.filter.typeOptions, function(item) {\n              return _c(\n                \"el-radio-button\",\n                { key: item.value, attrs: { label: item.value } },\n                [_vm._v(_vm._s(item.name))]\n              )\n            }),\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-table\",\n        {\n          directives: [\n            {\n              name: \"loading\",\n              rawName: \"v-loading\",\n              value: _vm.table.loading,\n              expression: \"table.loading\"\n            }\n          ],\n          attrs: {\n            size: _vm.size,\n            data: _vm.table.list,\n            \"header-cell-class-name\": \"table-header\",\n            \"element-loading-text\": \"Loading\",\n            fit: \"\",\n            \"highlight-current-row\": \"\"\n          },\n          on: { \"row-dblclick\": _vm.handleDetails }\n        },\n        [\n          _c(\"el-table-column\", {\n            attrs: { align: \"center\", label: \"年度\", \"min-width\": \"10\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _vm._v(\"\\n        \" + _vm._s(scope.row.year) + \"\\n      \")\n                  ]\n                }\n              }\n            ])\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { align: \"center\", label: \"项目\", \"min-width\": \"10\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _vm._v(\n                      \"\\n        \" + _vm._s(scope.row.orgName) + \"\\n      \"\n                    )\n                  ]\n                }\n              }\n            ])\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: {\n              align: \"center\",\n              label: \"工号\",\n              \"show-overflow-tooltip\": true,\n              width: \"130\"\n            },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _c(\n                      \"a\",\n                      {\n                        staticClass: \"link-decoration\",\n                        attrs: { href: \"javascript:;\" },\n                        on: {\n                          click: function($event) {\n                            return _vm.handleDetails(scope.row)\n                          }\n                        }\n                      },\n                      [_vm._v(_vm._s(scope.row.number))]\n                    )\n                  ]\n                }\n              }\n            ])\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { align: \"center\", label: \"姓名\", \"min-width\": \"10\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _vm._v(\"\\n        \" + _vm._s(scope.row.name) + \"\\n      \")\n                  ]\n                }\n              }\n            ])\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { align: \"center\", label: \"身份证号\", \"min-width\": \"10\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _vm._v(\n                      \"\\n        \" + _vm._s(scope.row.idNumber) + \"\\n      \"\n                    )\n                  ]\n                }\n              }\n            ])\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { align: \"center\", label: \"年龄\", \"min-width\": \"10\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _vm._v(\"\\n        \" + _vm._s(scope.row.age) + \"\\n      \")\n                  ]\n                }\n              }\n            ])\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { align: \"center\", label: \"工种\", \"min-width\": \"10\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _vm._v(\n                      \"\\n        \" +\n                        _vm._s(scope.row.workerTypeName) +\n                        \"\\n      \"\n                    )\n                  ]\n                }\n              }\n            ])\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { align: \"center\", label: \"工长\", \"min-width\": \"10\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _vm._v(\n                      \"\\n        \" +\n                        _vm._s(scope.row.gongzhangName) +\n                        \"\\n      \"\n                    )\n                  ]\n                }\n              }\n            ])\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { align: \"center\", label: \"工龄\", \"min-width\": \"10\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _vm._v(\n                      \"\\n        \" + _vm._s(scope.row.workingAge) + \"\\n      \"\n                    )\n                  ]\n                }\n              }\n            ])\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { align: \"center\", label: \"备注\", \"min-width\": \"20\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _c(\n                      \"el-popover\",\n                      {\n                        attrs: {\n                          trigger: \"hover\",\n                          content: scope.row.remark,\n                          placement: \"top\"\n                        }\n                      },\n                      [\n                        _c(\n                          \"span\",\n                          {\n                            staticClass: \"ellipsis-2\",\n                            attrs: { slot: \"reference\" },\n                            slot: \"reference\"\n                          },\n                          [_vm._v(_vm._s(scope.row.remark))]\n                        )\n                      ]\n                    )\n                  ]\n                }\n              }\n            ])\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { align: \"center\", label: \"制单人\", \"min-width\": \"10\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _c(\n                      \"el-popover\",\n                      { attrs: { trigger: \"hover\", placement: \"top\" } },\n                      [\n                        _c(\"p\", [\n                          _vm._v(\n                            \"制单人: \" +\n                              _vm._s(scope.row.createUserName) +\n                              \"   制单时间: \" +\n                              _vm._s(scope.row.createDate)\n                          )\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"p\", [\n                          _vm._v(\n                            \"更新人: \" +\n                              _vm._s(scope.row.lastEditUserName) +\n                              \"   更新时间: \" +\n                              _vm._s(scope.row.lastEditDate)\n                          )\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"div\",\n                          {\n                            staticClass: \"name-wrapper\",\n                            attrs: { slot: \"reference\" },\n                            slot: \"reference\"\n                          },\n                          [\n                            _vm._v(\n                              \"\\n            \" +\n                                _vm._s(scope.row.createUserName) +\n                                \"\\n          \"\n                            )\n                          ]\n                        )\n                      ]\n                    )\n                  ]\n                }\n              }\n            ])\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { label: \"操作\", align: \"center\", width: \"120\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(ref) {\n                  var row = ref.row\n                  return [\n                    _c(\n                      \"el-button\",\n                      {\n                        directives: [\n                          {\n                            name: \"has\",\n                            rawName: \"v-has\",\n                            value: \"WORKER_EDIT\",\n                            expression: \"'WORKER_EDIT'\"\n                          }\n                        ],\n                        attrs: { size: _vm.size, type: \"text\" },\n                        on: {\n                          click: function($event) {\n                            return _vm.handleEdit(row.id)\n                          }\n                        }\n                      },\n                      [_vm._v(\"编辑\")]\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"page\" },\n        [\n          _c(\"el-pagination\", {\n            attrs: {\n              background: \"\",\n              \"hide-on-single-page\": false,\n              layout: \"prev, pager, next, sizes, jumper\",\n              total: _vm.table.total,\n              \"current-page\": _vm.table.currentPage,\n              \"page-size\": _vm.table.pageSize\n            },\n            on: {\n              \"update:currentPage\": function($event) {\n                return _vm.$set(_vm.table, \"currentPage\", $event)\n              },\n              \"update:current-page\": function($event) {\n                return _vm.$set(_vm.table, \"currentPage\", $event)\n              },\n              \"current-change\": _vm.fetchData,\n              \"size-change\": _vm.sizeChange\n            }\n          })\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}