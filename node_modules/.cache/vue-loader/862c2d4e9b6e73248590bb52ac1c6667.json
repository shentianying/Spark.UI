{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\invoice\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\invoice\\index.vue","mtime":1635216068732},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getInvoicePaging, initiInvoiceEdit } from '@/api/cggl/invoice'\r\nimport OrgSelect2 from '@/components/OrgSelect/index2'\r\nimport SearchForm from '@/components/Other/searchForm'\r\n// import { unique } from '@/utils/index'\r\n\r\nexport default {\r\n  name: 'CGInvoice',\r\n  components: {\r\n    OrgSelect2,\r\n    SearchForm\r\n  },\r\n  data() {\r\n    return {\r\n      list: null,\r\n      listLoading: false,\r\n      dialogTableVisible: false,\r\n      dialogTitle: '保存',\r\n      total: 0,\r\n      currentPage: 1,\r\n      pageSize: this.utils.getPersonalSettings().pageSize,\r\n\r\n      formState: [],\r\n      currentRow: null,\r\n      orgList: null,\r\n      supplierList: null,\r\n      invoiceTypes: null,\r\n      search: {\r\n        invoiceNumber: '',\r\n        orgIds: null,\r\n        supplierId: null,\r\n        projectId: null,\r\n        invoiceType: null,\r\n        states: [],\r\n        invoicingDateRange: []\r\n      },\r\n      tabPosition: 3 // 0:我发起，1：待审批 2:已审批 3.列表\r\n    }\r\n  },\r\n  activated() {\r\n    if (this.$route.params.refresh) {\r\n      this.fetchData()\r\n    }\r\n  },\r\n  mounted() {\r\n    initiInvoiceEdit().then(res => {\r\n      const { invoiceTypes, supplierList } = res\r\n      this.invoiceTypes = invoiceTypes\r\n      this.supplierList = supplierList\r\n    })\r\n    if (!this.$route.params.refresh) {\r\n      this.fetchData()\r\n    }\r\n  },\r\n  methods: {\r\n    searchData(currentPage) {\r\n      this.currentPage = currentPage\r\n      this.fetchData()\r\n    },\r\n    fetchData() {\r\n      this.listLoading = true\r\n      var postData = {}\r\n      postData.currentPage = this.currentPage\r\n      postData.pageSize = this.pageSize\r\n      postData.type = this.tabPosition\r\n      postData.invoiceNumber = this.search.invoiceNumber\r\n      postData.invoicingDate = this.search.invoicingDateRange || []\r\n      postData.supplierId = this.search.supplierId\r\n      postData.invoiceType = this.search.invoiceType\r\n      if (this.search.orgIds) {\r\n        postData.orgIds = this.search.orgIds || []\r\n      }\r\n      postData.states = this.search.states\r\n\r\n      getInvoicePaging(postData).then(response => {\r\n        const { data, count } = response\r\n        // data.forEach(row => {\r\n        //   this.formState = this.formState.concat(row.billFlow.form.formState)\r\n        // })\r\n        // this.formState = unique(this.formState)\r\n\r\n        this.list = data\r\n        this.total = count\r\n        this.listLoading = false\r\n      })\r\n    },\r\n    dialogClose() {\r\n      this.dialogTableVisible = false\r\n      this.fetchData()\r\n    },\r\n    handleAdd() {\r\n      this.$router.push({ name: 'CGInvoiceEdit', query: { refreshRouterName: this.$route.name }})\r\n    },\r\n    handleEdit(row) {\r\n      this.$router.push({ name: 'CGInvoiceEdit', query: { id: row.id, refreshRouterName: this.$route.name }, params: { id: row.id }})\r\n    },\r\n    attitude(row) {\r\n      this.$router.push({ name: 'CGInvoiceAttitude', query: { id: row.id, refreshRouterName: this.$route.name }, params: { id: row.id }})\r\n    },\r\n    getFormState(row) {\r\n      if (!row.billFlow) { return '流程空' }\r\n      const formState = row.billFlow.form.formState\r\n      this.formState = formState\r\n      const state = row.state\r\n      if (state === -1) return '作废'\r\n      const obj = formState.find(f => f.value === state)\r\n      if (obj) { return obj.name } else { return '状态不详' }\r\n    },\r\n    sizeChange(val) {\r\n      this.pageSize = val\r\n      this.fetchData()\r\n    },\r\n    radioChange(value) {\r\n      // 清空条件\r\n      this.search = {\r\n        invoiceNumber: '',\r\n        orgIds: null,\r\n        supplierId: null,\r\n        projectId: null,\r\n        invoiceType: null,\r\n        states: [],\r\n        invoicingDateRange: []\r\n      }\r\n      // 填充数据\r\n      this.fetchData()\r\n    },\r\n    getPerson(bf) {\r\n      if (bf) {\r\n        var arr = bf.billFlowNode.filter(f => f.isCurrentState && !f.isChecked)\r\n        if ((arr || []).length > 0) { return arr.map(m => m.person.name).join('、') } else { return '-' }\r\n      }\r\n      return '-'\r\n    }\r\n  }\r\n}\r\n",null]}