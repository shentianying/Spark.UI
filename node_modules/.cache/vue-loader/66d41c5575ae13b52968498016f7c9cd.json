{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\paid\\paidEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\paid\\paidEdit.vue","mtime":1631857142954},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getCGPaidById, addCGPaid, putCGPaid, getBillFlow, deleteCGPaid, getContractDetail } from '@/api/cggl/paid'\r\nimport OrgSelect2 from '@/components/OrgSelect/index2'\r\nimport UpFile from '@/components/UpLoad/UpFile'\r\nimport FlowSelect from '@/components/Flow/flowSelect'\r\nimport FlowDisplay from '@/components/Flow/flowDisplay'\r\nimport FlowAttitude from '@/components/Flow/flowAttitude'\r\nimport QuotationSuppliersCheck from '@/views/cggl/quotation/quotationSuppliersCheck'\r\nimport ContractCheck from '@/views/cggl/contract/contractCheck'\r\nimport { getDictionarysByTypes } from '@/api/xtgl/dictionary'\r\nexport default {\r\n  name: 'PaidEdit',\r\n  components: {\r\n    OrgSelect2,\r\n    UpFile,\r\n    FlowSelect,\r\n    FlowDisplay,\r\n    FlowAttitude,\r\n    QuotationSuppliersCheck,\r\n    ContractCheck\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        id: 0,\r\n        number: '',\r\n        contractNumber: null,\r\n        orgId: null,\r\n        fileList: [],\r\n        contract: {},\r\n        dues: 0,\r\n        paid: 0,\r\n        invoice: 0,\r\n        applyAmount: 0,\r\n        attitudeAmount: 0,\r\n        storageAmount: 0\r\n      },\r\n      loading: false,\r\n      activate: true,\r\n      active: 0,\r\n      dialogTableVisible: false,\r\n      dialogTitle: '保存',\r\n      dialogWidth: '70%',\r\n      comName: 'PlanDetailAdd',\r\n      currentRow: null,\r\n      list: [],\r\n      payModes: [],\r\n      payModeOptions: [],\r\n      keyPayMode: 0,\r\n      billFlow: null,\r\n      attitudePara: null,\r\n      loadFlow: false,\r\n      orgKey: 0,\r\n      fileListKey: 0,\r\n      disabled: false,\r\n      rules: {\r\n        orgId: [{ required: true, message: '请选择', trigger: 'blur' }],\r\n        contractNumber: [{ required: true, message: '请选择', trigger: 'blur' }]\r\n        // applyAmount: [{ required: true, message: '请输入', trigger: 'blur' }],\r\n        // breachDuty: [{ required: true, message: '请输入', trigger: 'blur' }],\r\n        // attitudeAmount: [{ required: true, message: '请输入', trigger: 'blur' }]\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    'ruleForm.applyAmount': {\r\n      handler: function(value, oldvalue) {\r\n        if (value > this.ruleForm.dues - this.ruleForm.paid) {\r\n          this.$message.error('超出可申请金额范围！')\r\n        }\r\n      }, deep: true\r\n    }\r\n  },\r\n  activated() {\r\n    this.initData()\r\n  },\r\n  mounted() {\r\n  },\r\n  methods: {\r\n    // 根据表单获取流程\r\n    getDynamicFlow() {\r\n      this.$refs['ruleForm'].validate(valid => {\r\n        if (valid) {\r\n          this.loading = true\r\n          var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n          var postData = {}\r\n          postData.number = newObj.number\r\n          postData.contractId = newObj.contract.id\r\n          postData.orgId = newObj.orgId\r\n          postData.dues = newObj.dues\r\n          postData.paid = newObj.paid\r\n          postData.invoice = newObj.invoice\r\n          postData.applyAmount = newObj.applyAmount\r\n          postData.attitudeAmount = newObj.attitudeAmount\r\n          postData.storageAmount = newObj.storageAmount\r\n          postData.billFlowId = newObj.billFlowId\r\n          postData.capitalType = newObj.capitalType\r\n          postData.fileList = newObj.fileList\r\n          if (this.id) {\r\n            postData.id = this.id\r\n          }\r\n          if (newObj.applyAmount > newObj.dues - newObj.paid) {\r\n            this.$message.error('超出可申请金额范围！')\r\n            this.loading = false\r\n          } else {\r\n            getBillFlow(postData).then(response => {\r\n              this.loading = false\r\n              if (response.success) {\r\n                this.billFlow = response.data.billFlow\r\n                this.active = 1\r\n              } else {\r\n                this.$message(response.message)\r\n              }\r\n            }).catch(() => { this.loading = false })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    submitForm(state) {\r\n      this.$refs['ruleForm'].validate(valid => {\r\n        if (valid) {\r\n          this.ruleForm.state = state\r\n          this.loading = true\r\n          var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n          var postData = {}\r\n          postData.number = newObj.number\r\n          postData.contractId = newObj.contract.id\r\n          postData.orgId = newObj.orgId\r\n          postData.dues = newObj.dues\r\n          postData.paid = newObj.paid\r\n          postData.invoice = newObj.invoice\r\n          postData.applyAmount = newObj.applyAmount\r\n          postData.attitudeAmount = newObj.attitudeAmount\r\n          postData.storageAmount = newObj.storageAmount\r\n          postData.billFlowId = newObj.billFlowId\r\n          postData.capitalType = newObj.capitalType\r\n          postData.fileList = newObj.fileList\r\n          postData.state = newObj.state\r\n\r\n          // 获取流程组件中的数据\r\n          if (state === 1) {\r\n            // 如果是提交，验证流程人员的完整信息\r\n            const checkBillFlow = this.$refs.flowSelect.checkBillFlow()\r\n            if (!checkBillFlow) {\r\n              this.$message('流程错误，流程中审批人员不能为空')\r\n              return false\r\n            }\r\n          }\r\n\r\n          const billFlow = this.$refs.flowSelect.getBillFlow()\r\n          console.log('获取的billFlow:', billFlow)\r\n          this.ruleForm.billFlow = billFlow\r\n          postData.billFlow = billFlow\r\n\r\n          if (this.id) {\r\n            postData.id = this.id\r\n            putCGPaid(postData).then(response => {\r\n              this.closeThePage()\r\n            })\r\n          } else {\r\n            postData.id = 0\r\n            addCGPaid(postData).then(response => {\r\n              this.closeThePage()\r\n            })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    previous() {\r\n      // 上一步\r\n      this.active = 0\r\n      this.billFlow = null\r\n    },\r\n    async initData() {\r\n      getDictionarysByTypes({ types: 'CapitalType' })\r\n        .then((response) => {\r\n          var payModesOptions = []\r\n          const { data } = response\r\n          data.forEach(element => {\r\n            element.pid = element.pId\r\n            payModesOptions.push(element)\r\n          })\r\n          this.keyPayMode += 1\r\n          this.payModeOptions = payModesOptions\r\n        })\r\n      // 有参数id 就是编辑\r\n      if (this.$route.query.id) {\r\n        this.id = this.$route.query.id\r\n      }\r\n      if (this.id) {\r\n        this.loading = true\r\n        this.activate = false // 销毁部门组件\r\n        await getCGPaidById({ id: this.id }).then(response => this.setData(response))\r\n      }\r\n    },\r\n    setData(response) {\r\n      const { data } = response\r\n      this.ruleForm = data\r\n      this.ruleForm.fileList = data.upFile\r\n      this.ruleForm.contractNumber = data.contract.number\r\n      this.orgKey++ // 重新加载项目组件\r\n      this.fileListKey++ // 重新加载文件组件\r\n      // 填充 明细列表\r\n      this.payModes = data.cgPaidDetails\r\n      this.keyPayMode++ // 重新加载付款方式组件\r\n      this.loading = false // loading 状态关闭\r\n      this.activate = true // 加载部门组件\r\n    },\r\n    closeThePage() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    },\r\n    dialogClose(data, state) {\r\n      if (state === 'checkContract') {\r\n        this.ruleForm.contract = data\r\n        this.ruleForm.contractNumber = data.number\r\n        getContractDetail({ contractId: data.id }).then(response => {\r\n          const { dues, paid, invoice, storageAmount, supplierName } = response.data\r\n          this.ruleForm.dues = dues\r\n          this.ruleForm.paid = paid\r\n          this.ruleForm.invoice = invoice\r\n          this.ruleForm.storageAmount = storageAmount\r\n          this.ruleForm.supplierName = supplierName\r\n        })\r\n      }\r\n      this.dialogTableVisible = false\r\n    },\r\n    cancel() { // 作废\r\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.loading = true\r\n        deleteCGPaid({ id: this.ruleForm.id }).then(response => {\r\n          this.$message(response.message)\r\n          this.loading = false\r\n          this.closeThePage()\r\n        })\r\n      }).catch(() => {})\r\n    },\r\n    openContract(id) {\r\n      this.$router.push({ name: 'ContractAttitude', query: { id: id, refreshRouterName: this.$route.name }, params: { id: id }})\r\n    },\r\n    // openSupplier(id) {\r\n    //   this.$router.push({ name: 'SupplierDetail', query: { id: id, refreshRouterName: this.$route.name }, params: { id: id }})\r\n    // },\r\n    handleChange() {\r\n      //\r\n    },\r\n    add() {\r\n      var pom = {\r\n        payMode: null,\r\n        applyAmount: null,\r\n        remark: ''\r\n      }\r\n      this.payModes.push(pom)\r\n    },\r\n    del(d) {\r\n      // 列表删除\r\n      this.payModes.splice(d.$index, 1)\r\n    },\r\n    checkContract() {\r\n      this.dialogTitle = '选择合同'\r\n      this.comName = 'ContractCheck'\r\n      this.currentRow = null\r\n      this.dialogWidth = '100%'\r\n      this.fileList = []\r\n      this.dialogTableVisible = true\r\n    },\r\n    getSummaries(param) {\r\n      const { columns, data } = param\r\n      const sums = []\r\n      columns.forEach((column, index) => {\r\n        if (index === 0) {\r\n          sums[index] = '合计'\r\n          return\r\n        }\r\n        const values = data.map(item => Number(item[column.property]))\r\n        if (!values.every(value => isNaN(value))) {\r\n          sums[index] = values.reduce((prev, curr) => {\r\n            const value = curr\r\n            if (!isNaN(value)) {\r\n              return prev + curr\r\n            } else {\r\n              return prev\r\n            }\r\n          }, 0)\r\n          // sums[index] += ' 元'\r\n        } else {\r\n          sums[index] = ''\r\n        }\r\n      })\r\n      sums[1] = Number(sums[1]).toFixed(4)\r\n      this.ruleForm.applyAmount = sums[1]\r\n      this.ruleForm.attitudeAmount = sums[1]\r\n      return sums\r\n    }\r\n  }\r\n}\r\n",null]}