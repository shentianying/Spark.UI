{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\zjgl\\shouKuan\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\zjgl\\shouKuan\\index.vue","mtime":1629874990611},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n// import { getBussinessInfoPaging, getBussinessInfoEditInit } from '@/api/ywgl/bussinessInfo'\r\n\r\nimport { GetGatheringPaging } from '@/api/cwgl/zjgl/zjsk.js'\r\nimport SearchBar from '@/components/SearchBar'\r\nimport searchData from './searchData'\r\nimport { ExcelExport } from 'pikaz-excel-js'\r\nimport { getPersonList } from '@/api/rsgl/person'\r\nexport default {\r\n  name: 'ZiJinShouKuan',\r\n  components: {\r\n    SearchBar,\r\n    ExcelExport\r\n  },\r\n  filters: {\r\n    date(val) {\r\n      return new Date(val).toLocaleDateString().replaceAll('/', '-')\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      size: 'small', // 整体大小 medium / small / mini\r\n      searchData: searchData, // 渲染搜索栏数据\r\n      amount: 0, // 统计金额\r\n\r\n      sheet: [\r\n        {\r\n          // title: '材料计划导入模板', //表格标题\r\n          tHeader: [], // 表头\r\n          keys: [], // 数据键名，需与表头内容顺序对应\r\n          table: [], // 表格数据，如果无数据，设置为空字符\"\"，避免使用null或undefined\r\n          sheetName: '资金收款列表' // 表格名称\r\n        }\r\n      ],\r\n\r\n      /* 列表数据相关 */\r\n      table: {\r\n        list: [],\r\n        loading: false,\r\n        total: 0,\r\n        currentPage: 1,\r\n        pageSize: 10\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchData()\r\n  },\r\n  methods: {\r\n    /**\r\n     * @description: 获取列表数据、搜索数据\r\n     * @return {*}\r\n     */\r\n    async fetchData() {\r\n      this.table.loading = true\r\n      try {\r\n        // 获取请求参数\r\n        const postData = this.getSearchData()\r\n        postData.currentPage = this.table.currentPage\r\n        postData.pageSize = this.table.pageSize\r\n        console.log('fetchData:请求数据', postData)\r\n        getPersonList().then(response => {\r\n          const person = this.searchData.find(item => item.name === 'person')\r\n          if (person !== undefined) {\r\n            const tmp = response.data.map(item => {\r\n              return { label: item.name, value: item.id }\r\n            })\r\n            this.$set(person, 'options', tmp)\r\n          }\r\n        })\r\n        // 请求开始\r\n        const response = await GetGatheringPaging(postData)\r\n        const {\r\n          data,\r\n          count,\r\n          capitalTypeOptions,\r\n          gatheringTypeOptions,\r\n          amount\r\n        } = response\r\n\r\n        this.amount = amount\r\n        // 搜索栏数据初始化\r\n        capitalTypeOptions.forEach(ele => {\r\n          // 资金形式选项数据转换\r\n          ele.label = ele.name\r\n        })\r\n\r\n        gatheringTypeOptions.forEach(ele => {\r\n          // 收款类型选项数据转换\r\n          ele.label = ele.name\r\n        })\r\n\r\n        this.searchData = this.searchData.map(item => {\r\n          item.options =\r\n            item.name === 'gatheringTyps' ? gatheringTypeOptions : item.options\r\n          item.options =\r\n            item.name === 'capitalTypes' ? capitalTypeOptions : item.options\r\n          return item\r\n        })\r\n\r\n        // 列表数据初始化\r\n        console.log(data)\r\n        this.table.list = data\r\n        this.table.total = count\r\n      } catch (e) {\r\n        console.log('fetchData:请求列表数据失败，错误信息：', e)\r\n      } finally {\r\n        this.table.loading = false\r\n      }\r\n    },\r\n    beforeStart(bookType, filename, sheet) {\r\n      sheet.length = 0\r\n      sheet.push({\r\n        keys: [\r\n          'number',\r\n          'orgName',\r\n          'capitalType',\r\n          'gatheringType',\r\n          'bank',\r\n          'personName',\r\n          'gatheringDate'\r\n        ],\r\n        tHeader: [\r\n          '编号',\r\n          '部门名称',\r\n          '资金形式',\r\n          '收款类型',\r\n          '收款银行',\r\n          '经手人',\r\n          '收款日期'\r\n        ],\r\n        table: this.table.list\r\n      })\r\n      /* this.sheet[0].keys =\r\n      this.sheet[0].tHeader =\r\n      this.sheet[0].table = this.table.list */\r\n    },\r\n    /**\r\n     * @description: excel导出错误处理\r\n     */\r\n    onError(err) {\r\n      this.$message.info('导出失败：' + err)\r\n    },\r\n    /**\r\n     * @description: 搜索栏数据转换\r\n     * @return {Object} request数据\r\n     */\r\n    getSearchData() {\r\n      const data = {}\r\n      this.searchData.forEach(item => {\r\n        if (item.name === 'dateRange') {\r\n          data.date1 = item.value[0]\r\n          data.date2 = item.value[1]\r\n        } else if (item.name === 'moneySection') {\r\n          data.amount1 = item.value[0]\r\n          data.amount2 = item.value[1]\r\n        } else if (item.name === 'year') {\r\n          data.year = new Date(item.value).getFullYear()\r\n        } else {\r\n          data[item.name] = item.value\r\n        }\r\n      })\r\n      return data\r\n    },\r\n    /**\r\n     * @description: 设置分页大小\r\n     * @param {Number} val\r\n     */\r\n    sizeChange(val) {\r\n      this.table.pageSize = val\r\n      this.fetchData()\r\n    },\r\n    /**\r\n     * @description: 搜索回调\r\n     */\r\n    async HandelSearch() {\r\n      await this.fetchData()\r\n    },\r\n    /**\r\n     * @description: 路由到详情页\r\n     * @param {*} row\r\n     */\r\n    handleDetails(row) {\r\n      this.$router.push({ name: 'ShouKuanDetails', params: { id: row.id }})\r\n    },\r\n    /**\r\n     * @description: table编辑\r\n     * @param {Object} row\r\n     */\r\n    handleEdit(id = '') {\r\n      this.$router.push({ name: 'ShouKuanEdit', params: { id }})\r\n    }\r\n  }\r\n}\r\n",null]}