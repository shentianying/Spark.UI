{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\quotation\\quotationSubmit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\quotation\\quotationSubmit.vue","mtime":1627292107402},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getQuotationAttitudeById, getBillFlow, quotationAttitude, getBillFlowById } from '@/api/cggl/quotation'\r\nimport { getDictionarysByTypes } from '@/api/xtgl/dictionary'\r\nimport OrgSelect2 from '@/components/OrgSelect/index2'\r\nimport FlowAttitude from '@/components/Flow/flowAttitude'\r\nimport FlowSelect from '@/components/Flow/flowSelect'\r\nimport FlowDisplay from '@/components/Flow/flowDisplay'\r\nexport default {\r\n  name: 'QuotationSubmit',\r\n  components: {\r\n    OrgSelect2,\r\n    FlowAttitude,\r\n    FlowSelect,\r\n    FlowDisplay\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        orgId: null\r\n      },\r\n      loading: false,\r\n      activate: false,\r\n      dialogTableVisible: false,\r\n      dialogTitle: '保存',\r\n      dialogWidth: '70%',\r\n      currentRow: [],\r\n      list: [],\r\n      list2: [],\r\n      disabled: false,\r\n      // 发票种类\r\n      receiptTypes: [],\r\n      // 卸车费归属\r\n      otherPricePays: [],\r\n      fileList: [],\r\n      // 供应商\r\n      suppliers: [],\r\n      planTypeList: null,\r\n      columnShow: { unit2: true,\r\n        brand: true,\r\n        model: true,\r\n        spec: true,\r\n        thickness: true,\r\n        texture: true,\r\n        surfaceTreatment: true,\r\n        designNumber: true\r\n      },\r\n      tableHeader: [],\r\n      // 流程\r\n      loadFlow: false,\r\n      billFlow: null,\r\n      attitudePara: null,\r\n      active: 0,\r\n      rules: {\r\n        // orgId: [{ required: true, message: '请选择', trigger: 'change' }],\r\n        // recommendSupplierIds: [{ required: true, message: '请选择', trigger: 'blur' }]\r\n      },\r\n      isLoad: false\r\n    }\r\n  },\r\n  computed: {\r\n    getOrgList() {\r\n      return this.$store.state.user.info.orgList\r\n    }\r\n  },\r\n  watch: {\r\n  },\r\n  activated() {\r\n  },\r\n  mounted() {\r\n    this.initData()\r\n  },\r\n  methods: {\r\n    async initData() {\r\n      getQuotationAttitudeById({ id: this.$route.query.id }).then((response) => {\r\n        this.setData(response)\r\n      })\r\n      this.setColumnShow()\r\n      getDictionarysByTypes({ types: 'receiptTypes,otherPricePays' }).then((response) => {\r\n        const { data } = response\r\n        data.forEach(element => {\r\n          element.pid = element.pId\r\n          if (element.type === 'receiptTypes') {\r\n            this.receiptTypes.push(element)\r\n          }\r\n          if (element.type === 'otherPricePays') {\r\n            this.otherPricePays.push(element)\r\n          }\r\n        })\r\n        this.keyreceiptType += 1\r\n        this.keyotherPricePay += 1\r\n      })\r\n    },\r\n    setData(response) {\r\n      const { data } = response\r\n      // 填充参数\r\n      this.ruleForm = data.ruleForm\r\n      this.ruleForm.orgStr = data.orgStr\r\n      this.ruleForm.supplierCheckNames = data.supplierCheckNames\r\n      this.ruleForm.executeUserName = data.executeUserName\r\n      this.ruleForm.recommendSupplierIds = data.recommendSupplierIds\r\n      this.suppliers = data.recommendSupplier\r\n      this.ruleForm.taskNumber = data.ruleForm.cgTask.number\r\n      // 填充 明细列表\r\n      this.list = data.tableData\r\n      this.setColumnShow()\r\n      this.loading = false // loading 状态关闭\r\n      this.activate = true // 加载部门组件\r\n      if (data.ruleForm.state > 0) {\r\n        // 获取审批流程\r\n        this.disabled = true\r\n        getBillFlowById({ billFlowId: data.ruleForm.billFlowId }).then((response2) => {\r\n          const { billFlowData } = response2\r\n          // 检查当前 状态 是否有特殊操作，有就跳转\r\n          var filterOption = billFlowData.billFlowNode.filter(f => f.isCurrentState)\r\n          if ((filterOption || []).length) {\r\n            if (filterOption[0].option > 0) {\r\n              // alert('当前节点有特殊操作')\r\n              this.disabled = false\r\n            } else {\r\n              this.disabled = true\r\n            }\r\n          }\r\n          this.billFlow = billFlowData\r\n          this.attitudePara = { formId: billFlowData.formId, billFlowId: data.ruleForm.billFlowId, planId: data.ruleForm.id }\r\n          this.active = 3 // 审批\r\n          this.isLoad = true\r\n        })\r\n      }\r\n    },\r\n    setColumnShow() { // 设置列的显示。列中，都没有值，就隐藏\r\n      var modelunit2 = false\r\n      var modelbrand = false\r\n      var modelmodel = false\r\n      var modelspec = false\r\n      var modelthickness = false\r\n      var modeltexture = false\r\n      var modelsurfaceTreatment = false\r\n      var modeldesignNumber = false\r\n      for (var row of this.list) {\r\n        if (row.unit2) { modelunit2 = true }\r\n        if (row.brand) { modelbrand = true }\r\n        if (row.model) { modelmodel = true }\r\n        if (row.spec) { modelspec = true }\r\n        if (row.thickness) { modelthickness = true }\r\n        if (row.texture) { modeltexture = true }\r\n        if (row.surfaceTreatment) { modelsurfaceTreatment = true }\r\n        if (row.designNumber) { modeldesignNumber = true }\r\n      }\r\n      this.columnShow['unit2'] = modelunit2\r\n      this.columnShow['brand'] = modelbrand\r\n      this.columnShow['model'] = modelmodel\r\n      this.columnShow['spec'] = modelspec\r\n      this.columnShow['thickness'] = modelthickness\r\n      this.columnShow['texture'] = modeltexture\r\n      this.columnShow['surfaceTreatment'] = modelsurfaceTreatment\r\n      this.columnShow['designNumber'] = modeldesignNumber\r\n    },\r\n    getPrice(detail, materialId) {\r\n      const pri = detail.find(f => f.materialId === materialId)\r\n      return pri.price\r\n    },\r\n    getAmount(detail, materialId) {\r\n      const pri = detail.find(f => f.materialId === materialId)\r\n      return pri.amount\r\n    },\r\n    getSupplierSum(detail) {\r\n      var result = {\r\n        taxInclusiveAmountSum: 0,\r\n        taxExclusiveAmountSum: 0\r\n      }\r\n      detail.forEach(e => {\r\n        result.taxInclusiveAmountSum += e.taxInclusiveAmount\r\n        result.taxInclusiveAmountSum += e.taxInclusiveAmount\r\n      })\r\n      return result\r\n    },\r\n    // getSummaries(param) {\r\n    //   const { columns } = param\r\n    //   const sums = []\r\n    //   columns.forEach((index) => {\r\n    //     if (index === 0) {\r\n    //       sums[index] = '合计'\r\n    //       return\r\n    //     }\r\n    //     var i = 4\r\n    //     this.ruleForm.suppliers.forEach(e => {\r\n    //       i = i + 2\r\n    //       var sumAmount = 0\r\n    //       e.priceSupplierDetails.forEach(p => {\r\n    //         sumAmount += p.amount\r\n    //       })\r\n    //       if (index === i) {\r\n    //         sums[index] = sumAmount\r\n    //       }\r\n    //     })\r\n    //   })\r\n    //   return sums\r\n    // },\r\n    getreceiptType(id) {\r\n      const type = this.receiptTypes.find(f => f.id === id)\r\n      if (type) {\r\n        return type.name\r\n      } else {\r\n        return ''\r\n      }\r\n    },\r\n    getotherPricePay(id) {\r\n      const type = this.otherPricePays.find(f => f.id === id)\r\n      if (type) {\r\n        return type.name\r\n      } else {\r\n        return ''\r\n      }\r\n    },\r\n    // 根据表单获取流程\r\n    getDynamicFlow() {\r\n      if (this.ruleForm.recommendSupplierIds.length > 0) {\r\n        this.loading = true\r\n        var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n        var postData = {\r\n          id: newObj.id,\r\n          recommendSupplier: newObj.recommendSupplierIds.join(','),\r\n          orgId: newObj.orgId,\r\n          billFlowId: newObj.billFlowId\r\n        }\r\n        getBillFlow(postData).then(response => {\r\n          this.loading = false\r\n          if (response.success) {\r\n            this.billFlow = response.data.billFlow\r\n            this.active = 1\r\n          } else {\r\n            this.$message(response.message)\r\n          }\r\n        }).catch(() => { this.loading = false })\r\n      } else {\r\n        this.$message.error('请选择建议中标单位')\r\n      }\r\n    },\r\n    submitForm(state) {\r\n      this.$refs['ruleForm'].validate(valid => {\r\n        if (valid) {\r\n          this.loading = true\r\n          var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n          var postData = {\r\n            id: newObj.id,\r\n            recommendSupplier: newObj.recommendSupplierIds.join(','),\r\n            state: state\r\n          }\r\n          const billFlow = this.$refs.flowSelect.getBillFlow()\r\n          console.log('获取的billFlow:', billFlow)\r\n          postData.billFlow = billFlow\r\n\r\n          quotationAttitude(postData).then(response => {\r\n            if (response.errorMsg) {\r\n              // 验证错误\r\n              this.$alert(`${response.errorMsg.replace(/；/g, '；<br />')}`,\r\n                { dangerouslyUseHTMLString: true })\r\n            } else {\r\n              this.$message(response.message)\r\n              this.loading = false\r\n              this.closeThePage()\r\n            }\r\n          }).catch(() => { this.loading = false })\r\n        }\r\n      })\r\n    },\r\n    closeThePage() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    },\r\n    updateFlow() {\r\n      // 修改计划单据state状态\r\n      // this.loading = true\r\n      // this.billFlow = null\r\n      this.closeThePage()\r\n      // putQuotationState({ id: data.billId, state: data.state }).then()\r\n    },\r\n    openTask(taskId) {\r\n      this.$router.push({ name: 'TaskDetail', query: { id: taskId, refreshRouterName: this.$route.name, tab: 'detail' }, params: { id: taskId, isCheck: false }})\r\n    },\r\n    arraySpanMethod({ row, column, rowIndex, columnIndex }) {\r\n      if (row.tax === '') {\r\n        if (columnIndex === 0) {\r\n          return [1, 4]\r\n        } else if (columnIndex === 1) {\r\n          return [0, 0]\r\n        } else if (columnIndex === 2) {\r\n          return [0, 0]\r\n        } else if (columnIndex === 3) {\r\n          return [0, 0]\r\n        }\r\n        if (column.label === '含税单价' && row.taxInclusiveAmount === '') {\r\n          return {\r\n            rowspan: 1,\r\n            colspan: 3\r\n          }\r\n        } else if (column.label === '税率' && row.taxInclusiveAmount === '') {\r\n          return {\r\n            rowspan: 1,\r\n            colspan: 0\r\n          }\r\n        // } else if (column.label === '不含税单价' && row.taxInclusiveAmount === '') {\r\n        //   return {\r\n        //     rowspan: 1,\r\n        //     colspan: 0\r\n        //   }\r\n        } else if (column.label === '含税金额' && row.taxInclusiveAmount === '') {\r\n          return {\r\n            rowspan: 1,\r\n            colspan: 0\r\n          }\r\n        } else if (column.label === '税额' && row.taxInclusiveAmount === '') {\r\n          return {\r\n            rowspan: 1,\r\n            colspan: 0\r\n          }\r\n        // } else if (column.label === '不含税金额' && row.taxInclusiveAmount === '') {\r\n        //   return {\r\n        //     rowspan: 1,\r\n        //     colspan: 0\r\n        //   }\r\n        }\r\n      }\r\n    },\r\n    previous() {\r\n      // 上一步\r\n      this.active = 0\r\n      this.billFlow = null\r\n    },\r\n    supplierChange() {\r\n      this.$forceUpdate()\r\n    }\r\n  }\r\n}\r\n",null]}