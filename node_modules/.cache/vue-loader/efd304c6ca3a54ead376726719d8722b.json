{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\components\\Flow\\billFlowNodeReviewerAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\components\\Flow\\billFlowNodeReviewerAdd.vue","mtime":1624495919571},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n// 查看流程进度\r\nimport { getPersonList } from '@/api/rsgl/person'\r\nimport { findPNode } from '@/utils/index'\r\n\r\nexport default {\r\n  name: 'BillFlowNodeReviewerAdd',\r\n  components: {\r\n  },\r\n  props: {\r\n  },\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      personId: null,\r\n      personList: null,\r\n      orgList: null\r\n    }\r\n  },\r\n  created() {\r\n    this.orgList = this.$store.state.user.info.orgList\r\n  },\r\n  mounted() {\r\n    this.fetchData()\r\n  },\r\n  methods: {\r\n    fetchData() {\r\n    },\r\n    getRemotePerson(query) {\r\n      query = query.trim()\r\n      if (query !== '') {\r\n        this.loading = true\r\n        setTimeout(() => {\r\n          getPersonList({ name: query }).then(response => {\r\n            this.personList = response.data\r\n            this.loading = false\r\n          })\r\n        }, 200)\r\n      } else {\r\n        this.personList = []\r\n      }\r\n    },\r\n    addFlowNode() {\r\n      if (!this.personId) {\r\n        this.$message('审核人不能为空')\r\n        return\r\n      }\r\n      const p = this.personList.find(f => f.id === this.personId)\r\n      this.$emit('dialogClose1', { id: p.id, name: p.name })\r\n    },\r\n    getName(orgId) {\r\n      const arr = findPNode(this.orgList, orgId).map(m => { return m.name }).reverse()\r\n      return arr.join('/')\r\n    }\r\n  }\r\n}\r\n",null]}