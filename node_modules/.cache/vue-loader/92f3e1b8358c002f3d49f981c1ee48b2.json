{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\components\\Other\\xmgl\\selectProject.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\components\\Other\\xmgl\\selectProject.vue","mtime":1631843891256},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getOrgWithProject } from '@/api/xtgl/organization'\r\nimport { getProjectList } from '@/api/xmgl/project'\r\nimport OrgSelect2 from '@/components/OrgSelect/index2'\r\n\r\nexport default {\r\n  name: 'SelectProject',\r\n  components: {\r\n    OrgSelect2\r\n  },\r\n  props: {\r\n    dialogWidth: { type: String, default: '70%' }, // 弹出层的宽度\r\n    multiple: { type: Boolean, default: true }, // 默认多选\r\n    maxItem: { type: Number, default: 3 }, // 多选最大个数\r\n    projectState: { type: [Array, Number], default() { return [] } }, // 项目状态\r\n    isShow: { type: Number, default: 1 }, // 是否立项（1：表示只选已立项，0:只选未立项,null都选择）\r\n    fields: { type: String, default: '' }, // 需要带出的参数 （eg:ContractDuration,Area），不写返回id,name,number,orgid,companyId,projectState,orgStr,仅限返回project里字段\r\n    orgId: { type: Number, default: null }, // 组织机构\r\n    isAuth: { type: Boolean, default: false } // 是否只显示当前用户数据范围内的数据\r\n  },\r\n  data() {\r\n    return {\r\n      open: false,\r\n      tableList: null,\r\n      projectStateList: null,\r\n      tableLoading: null,\r\n      buttonLoading: false,\r\n      selectionItem: [], // 选中的项目数组\r\n      searchText: '',\r\n      searchOrg: 0,\r\n      orgList: [],\r\n      keyOrg: 0,\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'name'\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    getStr() {\r\n      if (this.multiple) {\r\n        return '多选限' + this.maxItem\r\n      } else { return '单选' }\r\n    }\r\n  },\r\n  methods: {\r\n    openDialog() {\r\n      // 清空数据\r\n      // this.tableList = []\r\n      this.searchOrg = this.orgId\r\n      // console.log('1fetchData', this.searchOrg)\r\n      this.searchText = ''\r\n      this.fetchData()\r\n      this.keyOrg += 1\r\n      this.open = true\r\n    },\r\n    fetchData() {\r\n      this.buttonLoading = true\r\n      // console.log('2fetchData', this.searchOrg)\r\n      getOrgWithProject().then(res => {\r\n        const { data } = res\r\n        this.orgList = data\r\n        // console.log('3fetchData', this.searchOrg)\r\n        this.getProjectList()\r\n        this.buttonLoading = false\r\n      }).catch(() => { this.buttonLoading = false })\r\n    },\r\n    add(row) {\r\n      if (!this.selectionItem) {\r\n        this.selectionItem.push(row)\r\n      } else {\r\n        // 单选模式，判断提示不能 多选\r\n        if (!this.multiple) {\r\n          if (this.selectionItem.length > 0) {\r\n            this.$alert('单选只能选一个哦')\r\n            return\r\n          }\r\n        } else {\r\n          if (this.maxItem < 2) {\r\n            this.$alert(`多选模式，maxItem参数必须大于2`)\r\n            return\r\n          }\r\n          if (this.selectionItem.length >= this.maxItem) {\r\n            this.$alert(`多选最多只能选${this.maxItem}个哦`)\r\n            return\r\n          }\r\n        }\r\n        const isRepeat = this.selectionItem.find(f => f.id === row.id)\r\n        if (isRepeat) {\r\n          this.$alert('不能重复添加！')\r\n        } else { this.selectionItem.push(row) }\r\n      }\r\n    },\r\n    getProjectList() {\r\n      const postData = {}\r\n      postData.name = this.searchText\r\n      postData.orgId = this.searchOrg\r\n      postData.isShow = this.isShow\r\n      postData.isAuth = this.isAuth\r\n      postData.fields = this.fields\r\n      postData.stateIds = []\r\n      if (typeof this.projectState === 'number') {\r\n        postData.stateIds = [this.projectState]\r\n      } else if (this.projectState instanceof Array) {\r\n        postData.stateIds = this.projectState\r\n      }\r\n      // console.log('这里', postData, this.projectState, this.projectState instanceof Number)\r\n      getProjectList(postData).then(res => {\r\n        this.projectStateList = res.projectStateList\r\n        this.tableList = res.data\r\n        this.buttonLoading = false\r\n      }).catch(() => { this.buttonLoading = false })\r\n    },\r\n    search() {\r\n      this.buttonLoading = true\r\n      setTimeout(() => {\r\n        this.getProjectList()\r\n      }, 700)\r\n    },\r\n    save() {\r\n      this.buttonLoading = true\r\n      // 触发父组件的事件\r\n      setTimeout(() => {\r\n        this.$emit('getProject', this.selectionItem)\r\n        this.buttonLoading = false\r\n        this.open = false\r\n      }, 700)\r\n    }\r\n  }\r\n}\r\n",null]}