{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\ywgl\\swb\\bussinessBidEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\ywgl\\swb\\bussinessBidEdit.vue","mtime":1635988408093},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { putBussinessBid, addBussinessBid, getBussinessBidEditInit, getBussinessBidById, getBillFlow, deleteBussinessBid, getBussinessInfoById } from '@/api/ywgl/bussinessBid'\r\nimport UpFile from '@/components/UpLoad/UpFile'\r\nimport FlowSelect from '@/components/Flow/flowSelect'\r\nimport OrgSelect2 from '@/components/OrgSelect/index2'\r\n// import { validate } from '@/utils/validate'\r\nimport BussinessBidDetailAdd from './bussinessBidDetailAdd'\r\nimport SelectBussinessInfo from '@/components/Other/ywgl/selectBussinessInfo'\r\nexport default {\r\n  name: 'BussinessBidEdit',\r\n  components: {\r\n    FlowSelect,\r\n    UpFile,\r\n    OrgSelect2,\r\n    BussinessBidDetailAdd,\r\n    SelectBussinessInfo\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        id: 0,\r\n        number: '',\r\n        orgId: null,\r\n        companyId: this.$store.state.user.selectOrgId,\r\n        bussinessInfoId: null,\r\n        controlPrice: 0,\r\n        offerType: null,\r\n        professionalType: null,\r\n        marketSegment: null,\r\n        planForeignQuotation: 0,\r\n        estimatedCost: 0,\r\n        estimatedProfit: 0,\r\n        costOfFlatMeter: 0,\r\n        quotationDeadline: null,\r\n        quotationTimes: 0,\r\n        totalTimes: 0,\r\n        remark: '',\r\n        state: 0,\r\n        billFlowId: 0,\r\n        fileList: []\r\n      },\r\n      infoForm: {\r\n        tenderMode: '',\r\n        reliableLevel: '',\r\n        decorationArea: '',\r\n        floors: '',\r\n        professionalType: '',\r\n        competitors: '',\r\n        bidEvaluationMethod: ''\r\n      },\r\n      bussinessBidId: null,\r\n      area: 0, // 用于计算每平米造价 infoForm里的格式化了\r\n      bussinessInfoName: '',\r\n\r\n      keyOrg: 0,\r\n      orgList: null,\r\n\r\n      marketSegmentList: [],\r\n      professionalTypeList: [],\r\n      offerTypeList: [],\r\n\r\n      dialogTableVisible: false,\r\n      dialogTitle: '添加评分细则及估值',\r\n      dialogWidth: '50%',\r\n      comName: 'CreditBidDetailAdd',\r\n      currentRow: null,\r\n      listIndex: 0,\r\n      list: [],\r\n      count: 0,\r\n\r\n      attitudePara: null,\r\n      loadFlow: false,\r\n      billFlow: null,\r\n\r\n      active: 0,\r\n      loading: false,\r\n      rules: {\r\n        bussinessInfoId: [{ required: true, message: '请输入', trigger: 'change' }],\r\n        offerType: [{ required: true, message: '请输入', trigger: 'blur' }],\r\n        professionalType: [{ required: true, message: '请输入', trigger: 'blur' }],\r\n        marketSegment: [{ required: true, message: '请输入', trigger: 'blur' }],\r\n        quotationDeadline: [{ required: true, message: '请输入', trigger: 'blur' }],\r\n        quotationTimes: [{ required: true, message: '请输入', trigger: 'blur' }]\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    'ruleForm.planForeignQuotation': {\r\n      handler: function(value, oldvalue) {\r\n        if (value !== oldvalue) {\r\n          this.ruleForm.estimatedProfit = ((this.ruleForm.planForeignQuotation - this.ruleForm.estimatedCost) * 100 / this.ruleForm.planForeignQuotation).toFixed(2)\r\n          this.ruleForm.costOfFlatMeter = (this.ruleForm.planForeignQuotation * 10000 / this.area).toFixed(2)\r\n          if (isNaN(this.ruleForm.estimatedProfit)) {\r\n            this.ruleForm.estimatedProfit = 0\r\n          }\r\n          if (isNaN(this.ruleForm.costOfFlatMeter)) {\r\n            this.ruleForm.costOfFlatMeter = 0\r\n          }\r\n        }\r\n      }, deep: true\r\n    },\r\n    'ruleForm.estimatedCost': {\r\n      handler: function(value, oldvalue) {\r\n        if (value !== oldvalue) {\r\n          this.ruleForm.estimatedProfit = ((this.ruleForm.planForeignQuotation - this.ruleForm.estimatedCost) * 100 / this.ruleForm.planForeignQuotation).toFixed(2)\r\n          if (isNaN(this.ruleForm.estimatedProfit)) {\r\n            this.ruleForm.estimatedProfit = 0\r\n          }\r\n        }\r\n      }, deep: true\r\n    },\r\n    'area': {\r\n      handler: function(value, oldvalue) {\r\n        if (value !== oldvalue) {\r\n          this.ruleForm.costOfFlatMeter = (this.ruleForm.planForeignQuotation * 10000 / this.area).toFixed(2)\r\n        }\r\n      }, deep: true\r\n    }\r\n  },\r\n  activated() {\r\n    if (this.$route.params.id) {\r\n      this.ruleForm.orgId = null // 刷新 org 列表\r\n      this.initData()\r\n      this.refreshRouterName = this.$route.params.refreshRouterName\r\n    }\r\n  },\r\n  mounted() {\r\n    if (!this.$route.params.id) {\r\n      this.initData()\r\n      this.activate = true\r\n    }\r\n  },\r\n  methods: {\r\n    submitForm(formName, state) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n          newObj.state = state\r\n\r\n          let tempIds = []\r\n          if (newObj.fileList.length > 0) {\r\n            tempIds = newObj.fileList.map(m => {\r\n              return { id: m.id, addFlag: m.addFlag }\r\n            })\r\n          } else {\r\n            if (state === 1) {\r\n              this.$message('必须上传附件!')\r\n              return\r\n            }\r\n          }\r\n          newObj.fileList = tempIds\r\n\r\n          var arr1 = []\r\n          this.list.forEach(e => {\r\n            var item = {}\r\n            if (e.planQuote !== 0) {\r\n              item.id = e.id\r\n              item.name = e.name\r\n              item.planQuote = e.planQuote\r\n              item.estimatedCost = e.estimatedCost\r\n              item.estimatedProfitMargin = e.estimatedProfitMargin\r\n              item.estimatedConsultancyFee = e.estimatedConsultancyFee\r\n              item.estimatedNetProfitMargin = e.estimatedNetProfitMargin\r\n              arr1.push(item)\r\n            }\r\n          })\r\n          newObj.bussinessBidDetails = arr1\r\n          if (this.billFlow) {\r\n            // 获取流程组件中的数据\r\n            const billFlow = this.$refs.flowSelect.getBillFlow()\r\n            if (!billFlow) {\r\n              return false\r\n            }\r\n            newObj.billFlow = billFlow\r\n          } else {\r\n            this.$message('流程数据不能为空')\r\n            return\r\n          }\r\n          this.buttonLoading = true\r\n\r\n          if (this.bussinessBidId) {\r\n            putBussinessBid(newObj).then(response => {\r\n              if (response.errorMsg) {\r\n              // 验证错误\r\n                this.$alert(`${response.errorMsg.replace(/；/g, '；<br />')}`,\r\n                  { dangerouslyUseHTMLString: true })\r\n                return\r\n              }\r\n              this.$message(response.message)\r\n              this.buttonLoading = false\r\n              this.closeThePage()\r\n            }).catch(() => {\r\n              this.buttonLoading = false\r\n              this.active = 0\r\n            })\r\n          } else {\r\n            addBussinessBid(newObj).then(response => {\r\n              if (response.errorMsg) {\r\n                // 验证错误\r\n                this.$alert(`${response.errorMsg.replace(/；/g, '；<br />')}`,\r\n                  { dangerouslyUseHTMLString: true })\r\n                return\r\n              }\r\n              this.$message(response.message)\r\n              this.buttonLoading = false\r\n              this.closeThePage()\r\n              // this.setData(response)\r\n            }).catch(() => {\r\n              this.buttonLoading = false\r\n              this.active = 0\r\n            })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    initData() {\r\n      // 有参数id 就是编辑\r\n      if (this.$route.query.id) {\r\n        this.bussinessBidId = this.$route.query.id\r\n      }\r\n      new Promise((resolve, reject) => {\r\n        getBussinessBidEditInit().then(response => {\r\n          const { orgList, result1, result2, result3, result4, result5, result6 } = response\r\n          this.orgList = orgList\r\n          this.tenderModeList = result1\r\n          this.reliableLevelList = result2\r\n          this.informationSourceList = result3\r\n          this.marketSegmentList = result4\r\n          this.offerTypeList = result5\r\n          this.professionalTypeList = result6\r\n          resolve(orgList)\r\n        })\r\n      }).then(orgList => {\r\n        if (this.bussinessBidId) {\r\n          getBussinessBidById({ id: this.bussinessBidId }).then(response => {\r\n            const { data, detailList, bidEvaluationMethod } = response\r\n            this.area = data.bussinessInfo.decorationArea\r\n            this.ruleForm = data\r\n            this.keyOrg += 1\r\n            this.ruleForm.fileList = data.upFile\r\n            this.bussinessInfoName = data.bussinessInfo.projectName\r\n            this.infoForm.tenderMode = (data.bussinessInfo.tenderMode && this.tenderModeList) ? this.tenderModeList.find(f => f.value === data.bussinessInfo.tenderMode).name : ''\r\n            this.infoForm.decorationArea = data.bussinessInfo.decorationArea ? this.utils.formatMoney(data.bussinessInfo.decorationArea, 2, 0) : null\r\n            this.infoForm.floors = data.bussinessInfo.floors\r\n            this.infoForm.informationSource = (data.bussinessInfo.informationSource && this.informationSourceList) ? this.informationSourceList.find(f => f.value === data.bussinessInfo.informationSource).name : ''\r\n            this.infoForm.competitors = data.bussinessInfo.competitors\r\n            this.infoForm.bidEvaluationMethod = bidEvaluationMethod\r\n            this.list = detailList\r\n            this.count = data.quotationTimes - 1\r\n          })\r\n        }\r\n      }).catch(() => {\r\n        this.$message.error('信息错误')\r\n      })\r\n    },\r\n    getDynamicFlow(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n          var arr1 = []\r\n          this.list.forEach(e => {\r\n            var item = {}\r\n            if (e.planQuote !== 0) {\r\n              item.id = e.id\r\n              item.name = e.name\r\n              item.planQuote = e.planQuote\r\n              item.estimatedCost = e.estimatedCost\r\n              item.estimatedProfitMargin = e.estimatedProfitMargin\r\n              item.estimatedConsultancyFee = e.estimatedConsultancyFee\r\n              item.estimatedNetProfitMargin = e.estimatedNetProfitMargin\r\n              arr1.push(item)\r\n            }\r\n          })\r\n          if (arr1.length === 0) {\r\n            this.$message.warning('请添加本次报价！')\r\n            return\r\n          }\r\n          newObj.bussinessBidDetails = arr1\r\n          getBillFlow(newObj).then(response => {\r\n            if (response.success) {\r\n              this.billFlow = response.data.billFlow\r\n              this.active = 1\r\n            } else {\r\n              this.$message(response.message)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    previous() {\r\n      // 上一步\r\n      this.active--\r\n      this.billFlow = null\r\n    },\r\n    cancel() {\r\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.active = 2\r\n        this.buttonloading = true\r\n        deleteBussinessBid({ id: this.ruleForm.id }).then(response => {\r\n          this.$message(response.message)\r\n          this.buttonloading = false\r\n          this.closeThePage()\r\n        })\r\n      }).catch(() => {})\r\n    },\r\n    closeThePage() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    },\r\n    dialogClose(data, state) {\r\n      this.addDetail(data, state)\r\n      this.dialogTableVisible = false\r\n    },\r\n    addDetail(data, state) {\r\n      if (data) {\r\n        if (state === 'add') {\r\n          // 在此判断新增标段是否已经存在\r\n          this.list.push(data)\r\n        } else if (state === 'update') {\r\n          this.list.splice(this.listIndex, 1, data)\r\n        }\r\n      }\r\n    },\r\n    edit(d) {\r\n      this.currentRow = d.row\r\n      this.listIndex = d.$index\r\n      this.dialogTitle = '编辑本次报价'\r\n      this.comName = 'BussinessBidDetailAdd'\r\n      this.dialogWidth = '50%'\r\n      this.dialogTableVisible = true\r\n    },\r\n    add() {\r\n      this.currentRow = null\r\n      this.dialogTitle = '添加新标段和报价'\r\n      this.comName = 'BussinessBidDetailAdd'\r\n      this.dialogWidth = '50%'\r\n      this.dialogTableVisible = true\r\n    },\r\n    del(d) {\r\n      // 判断是新增标段还是原有标段(新标段不含原始报价字段)\r\n      if (Object.prototype.hasOwnProperty.call(d.row, 'quotation1')) {\r\n        this.list[d.$index].planQuote = 0\r\n        this.list[d.$index].estimatedCost = 0\r\n        this.list[d.$index].estimatedProfitMargin = 0\r\n        this.list[d.$index].estimatedConsultancyFee = 0\r\n        this.list[d.$index].estimatedNetProfitMargin = 0\r\n      } else {\r\n        this.list.splice(d.$index, 1)\r\n      }\r\n    },\r\n    getSummaries(param) {\r\n      const { columns, data } = param\r\n      const sums = []\r\n      columns.forEach((column, index) => {\r\n        if (index === 0) {\r\n          sums[index] = '合计'\r\n          return\r\n        }\r\n        var columnArr = []\r\n        const values = data.map(item => {\r\n          var arr = []\r\n          if (column.property) {\r\n            arr = column.property.toString().split('.')\r\n          }\r\n          if (arr.length > 1) {\r\n            columnArr.push(column.property)\r\n            if (item[arr[0]]) {\r\n              return Number(item[arr[0]][arr[1]])\r\n            } else {\r\n              return Number(0)\r\n            }\r\n          }\r\n          if (arr.length === 1) {\r\n            return Number(item[column.property])\r\n          }\r\n        })\r\n\r\n        if (columnArr.includes(column.property)) {\r\n          if (column.property.toString().indexOf('estimatedProfitMargin') > -1) {\r\n            sums[index] = ((sums[index - 2] - sums[index - 1]) * 100 / sums[index - 2]).toFixed(2)\r\n          } else {\r\n            sums[index] = values.reduce((prev, curr) => {\r\n              const value = Number(curr)\r\n              if (!isNaN(value)) {\r\n                return prev + curr\r\n              } else {\r\n                return prev\r\n              }\r\n            }, 0).toFixed(2)\r\n            sums[index]\r\n          }\r\n        }\r\n\r\n        if (column.property === 'planQuote') {\r\n          this.ruleForm.planForeignQuotation = values.reduce((prev, curr) => {\r\n            const value = Number(curr)\r\n            if (!isNaN(value)) {\r\n              return prev + curr\r\n            } else {\r\n              return prev\r\n            }\r\n          }, 0).toFixed(2)\r\n          // this.ruleForm.planForeignQuotation\r\n        }\r\n\r\n        if (column.property === 'estimatedCost') {\r\n          this.ruleForm.estimatedCost = values.reduce((prev, curr) => {\r\n            const value = Number(curr)\r\n            if (!isNaN(value)) {\r\n              return prev + curr\r\n            } else {\r\n              return prev\r\n            }\r\n          }, 0).toFixed(2)\r\n          // sums[index]\r\n        }\r\n      })\r\n\r\n      return sums\r\n    },\r\n    selectBussinessInfo() {\r\n      this.$refs.bussinessInfoRef.openDialog()\r\n    },\r\n    getBussinessInfo(data) {\r\n      if (data.length > 0) {\r\n        this.ruleForm.bussinessInfoId = data[0].id\r\n        this.bussinessInfoName = data[0].projectName\r\n        getBussinessInfoById({ id: this.ruleForm.bussinessInfoId }).then((response) => {\r\n          const { data, detailList, totalTimes, quotationTimes, bidEvaluationMethod } = response\r\n          this.ruleForm.orgId = data.orgId\r\n          this.keyOrg += 1\r\n          this.ruleForm.companyId = data.companyId\r\n          this.ruleForm.professionalType = data.professionalType\r\n          this.infoForm.tenderMode = (data.tenderMode && this.tenderModeList) ? this.tenderModeList.find(f => f.value === data.tenderMode).name : ''\r\n          this.infoForm.decorationArea = data.decorationArea ? this.utils.formatMoney(data.decorationArea, 2, 0) : null\r\n          this.area = data.decorationArea\r\n          this.infoForm.floors = data.floors\r\n          this.infoForm.informationSource = (data.informationSource && this.informationSourceList) ? this.informationSourceList.find(f => f.value === data.informationSource).name : ''\r\n          this.infoForm.competitors = data.competitors\r\n          this.infoForm.bidEvaluationMethod = bidEvaluationMethod\r\n          this.ruleForm.totalTimes = totalTimes\r\n          this.ruleForm.quotationTimes = quotationTimes + 1\r\n          this.list = detailList\r\n          this.count = quotationTimes\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n",null]}