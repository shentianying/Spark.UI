{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\components\\SearchBar\\form\\SubcontractPeopleSelect.vue?vue&type=template&id=2da3f1e6&scoped=true&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\components\\SearchBar\\form\\SubcontractPeopleSelect.vue","mtime":1635749455608},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"PersonSelect2\" },\n    [\n      _c(\"selectSubcontractPeople\", {\n        ref: \"personRef\",\n        attrs: { multiple: _vm.multiple },\n        on: {\n          getCheckedItem: _vm.getCheckedItem,\n          getAllOptions: _vm.getAllOptions\n        },\n        model: {\n          value: _vm.inputVal,\n          callback: function($$v) {\n            _vm.inputVal = $$v\n          },\n          expression: \"inputVal\"\n        }\n      }),\n      _vm._v(\" \"),\n      _c(\n        \"el-select\",\n        {\n          ref: \"elSelect\",\n          attrs: {\n            disabled: _vm.disabled,\n            size: _vm.size,\n            multiple: _vm.multiple,\n            \"collapse-tags\": \"\",\n            clearable: \"\",\n            placeholder: _vm.placeholder,\n            loading: _vm.loading\n          },\n          on: { focus: _vm.selectSocialResource },\n          model: {\n            value: _vm.inputVal,\n            callback: function($$v) {\n              _vm.inputVal = $$v\n            },\n            expression: \"inputVal\"\n          }\n        },\n        _vm._l(_vm.list, function(item, index) {\n          return _c(\"el-option\", {\n            key: index,\n            attrs: { label: item[_vm.opLabel], value: item[_vm.opValue] }\n          })\n        }),\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}