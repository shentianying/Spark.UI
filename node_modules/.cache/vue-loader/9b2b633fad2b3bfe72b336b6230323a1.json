{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\components\\Other\\ggzx\\selectWorker.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\components\\Other\\ggzx\\selectWorker.vue","mtime":1635749455603},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getWorkerList } from '@/api/ggzx/worker'\r\nimport SearchBar from '@/components/SearchBar'\r\nimport searchData from './searchData'\r\nexport default {\r\n  name: 'WorkerSelect',\r\n  components: {\r\n    SearchBar\r\n  },\r\n  props: {\r\n    dialogWidth: { type: String, default: '70%' }, // 弹出层的宽度\r\n    type: { type: Number, default: null },\r\n    orgIds: { type: Array, default: () => [] }, // 默认选中项目组\r\n    worker: { type: Object, default: null }, // 默认已选择工人\r\n    year: { type: Number, default: new Date().getFullYear() }, // 年份-默认当年\r\n    bdState: { type: Boolean, default: null }, // 是否报到\r\n    ispause: { type: Boolean, default: null }, // 是否暂退\r\n    isexit: { type: Boolean, default: null } // 是否退场\r\n  },\r\n  data() {\r\n    return {\r\n      open: false,\r\n      disabled: false,\r\n      buttonLoading: false,\r\n      tableList: [],\r\n      tableLoading: null,\r\n      searchData: searchData,\r\n      refresh: false\r\n    }\r\n  },\r\n  activated() {\r\n    this.fetchData()\r\n  },\r\n  mounted() {\r\n    this.fetchData()\r\n  },\r\n  methods: {\r\n    openDialog() {\r\n      // 清空数据\r\n      this.tableList = []\r\n      this.searchData = this.searchData.map(item => {\r\n        item.value =\r\n            item.name === 'year' ? this.year : item.value\r\n        item.value =\r\n            item.name === 'orgIds' ? this.orgIds : item.value\r\n        item.value =\r\n            item.name === 'number' ? '' : item.value\r\n        item.value =\r\n            item.name === 'name' ? '' : item.value\r\n        return item\r\n      })\r\n      this.open = true\r\n      this.refresh = true\r\n      this.goSearch()\r\n    },\r\n    fetchData() {\r\n      this.goSearch()\r\n    },\r\n    goSearch() {\r\n      const postData = this.getSearchData()\r\n      this.buttonLoading = true\r\n      setTimeout(() => {\r\n        this.getPersonList(postData)\r\n      }, 700)\r\n    },\r\n    /**\r\n     * @description: 搜索栏数据转换\r\n     * @return {Object} request数据\r\n     */\r\n    getSearchData() {\r\n      const lastSearch = {}\r\n      this.searchData.forEach(item => {\r\n        const { value, transformType, name } = item\r\n        if (transformType === 'property-serial') {\r\n          value.forEach((ele, index) => {\r\n            const serial = index + 1\r\n            lastSearch[name + serial] = ele\r\n          })\r\n        } else {\r\n          lastSearch[name] = value\r\n        }\r\n      })\r\n      return lastSearch\r\n    },\r\n    getPersonList(postData) {\r\n      getWorkerList({\r\n        ...postData,\r\n        year: this.year,\r\n        bdState: this.bdState,\r\n        ispause: this.ispause,\r\n        isexit: this.isexit,\r\n        isRefresh: this.refresh\r\n      }).then(res => {\r\n        const { data, yearOptions } = res\r\n        this.tableList = data\r\n        this.buttonLoading = false\r\n        this.searchData = this.searchData.map(item => {\r\n          item.options =\r\n              item.name === 'year' ? yearOptions : item.options\r\n          return item\r\n        })\r\n      }).catch(() => { this.buttonLoading = false })\r\n    },\r\n    save(row) {\r\n      this.buttonLoading = true\r\n      // 触发父组件的事件\r\n      setTimeout(() => {\r\n        this.$emit('getPersons', row)\r\n        this.buttonLoading = false\r\n        this.open = false\r\n      }, 300)\r\n    }\r\n  }\r\n}\r\n",null]}