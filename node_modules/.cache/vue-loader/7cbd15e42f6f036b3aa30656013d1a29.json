{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\htly\\ProjectSettle\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\htly\\ProjectSettle\\edit.vue","mtime":1633684104561},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport FlowSelect from '@/components/Flow/flowSelect'\r\nimport { validate } from '@/utils/validate'\r\nimport { GetBillFlow, GetProjectSettleById, AddProjectSettle, PutProjectSettle, DeleteProjectSettle } from '@/api/xmgl/ProjectSettle.js'\r\nimport { getProjectById } from '@/api/xmgl/project.js'\r\nimport { GetProjectOutputSumById } from '@/api/xmgl/projectOutput.js'\r\nimport MyForm from '@/components/MyForm'\r\n\r\nexport default {\r\n  name: 'ProjectSettleEdit',\r\n  components: {\r\n    FlowSelect,\r\n    MyForm\r\n  },\r\n  data() {\r\n    return {\r\n      size: 'mini',\r\n      inputPlaceholder: '请输入',\r\n      selectPlaceholder: '请选择',\r\n      active: 1, // 提交进度 1: 编辑信息 2: 编辑审批流程\r\n      firstForm: {\r\n        projectId: null, // 项目id\r\n        companyId: 2, // 中南装饰的\r\n        id: 0, // 新增为0\r\n        number: '', // 新增时,编号后端生成\r\n        orgId: '', // 部门id\r\n        orgName: '', // 部门名称\r\n        settleDate: '', // 审定日期\r\n        settleAmount: '', // 审定值\r\n        firstSupplyAmount: '', // 甲供材\r\n        isReport: false, // 有无报告\r\n        remark: '', // 备注\r\n        fileList: [], // 附件\r\n        state: 0, // 状态\r\n        billFlow: [] // 单据流程\r\n      },\r\n      firstRules: {\r\n        projectId: [\r\n          { required: true, message: '请选择项目' }\r\n        ],\r\n        settleDate: [\r\n          { required: true, message: '请选择审定日期' }\r\n        ],\r\n        settleAmount: [\r\n          { required: true, message: '请输入审定值金额' }\r\n        ],\r\n        firstSupplyAmount: [\r\n          { required: true, message: '请输入甲供材金额', trigger: 'change' },\r\n          { validator: validate.money, message: '金额格式不正确' },\r\n          { validator: validate.max_amount, message: '超过所能存储的最大金额' }\r\n        ]\r\n      },\r\n      project: {}, // 项目数据\r\n      output: {} // 外部产值\r\n    }\r\n  },\r\n  computed: {\r\n    title() {\r\n      const { active } = this\r\n      return active === 2 ? '审批流程' : '项目结算'\r\n    },\r\n    /**\r\n     * 处理form表单的数据\r\n     */\r\n    formNodeData() {\r\n      const {\r\n        project: {\r\n          area,\r\n          contractDuration,\r\n          orgName\r\n        },\r\n        output: {\r\n          externalOutputs,\r\n          internalOutputs\r\n        },\r\n        receivableAccounts,\r\n        externalOutputAdjust,\r\n        internalOutputAdjust\r\n      } = this\r\n      return [\r\n        { label: '编码:', monopolize: true, keyword: 'number', props: { disabled: true, placeholder: '系统自动生成' }},\r\n        { label: '项目:', keyword: 'projectId', component: 'ProjectSelect', props: { projectState: [2] }},\r\n        { label: '组织机构:', value: orgName, props: { disabled: true, placeholder: '请选择有项目的部门' }},\r\n        { label: '审定日期:', keyword: 'settleDate', component: 'el-date-picker', props: { type: 'date', placeholder: '请选择', valueFormat: 'yyyy-MM-dd' }},\r\n        { label: '审定值:', keyword: 'settleAmount', component: 'Input', props: { unit: '元' }},\r\n        { label: '建筑面积:', value: area, component: 'Input', props: { disabled: true, placeholder: '自动带出', unit: '㎡' }},\r\n        { label: '合同工期:', value: contractDuration, props: { disabled: true, placeholder: '自动带出' }},\r\n        { label: '甲供材:', keyword: 'firstSupplyAmount', props: { placeholder: '甲供材金额未计入结算额的应填0' }},\r\n        { label: '开累应收款:', value: receivableAccounts, props: { disabled: true, placeholder: '自动计算' }},\r\n        { label: '开累外部产值:', value: externalOutputs, props: { disabled: true, placeholder: '自动带出' }},\r\n        { label: '外部产值调整:', value: externalOutputAdjust, props: { disabled: true, placeholder: '自动计算' }},\r\n        { label: '开累内部产值:', value: internalOutputs, props: { disabled: true, placeholder: '自动带出' }},\r\n        { label: '内部产值调整:', value: internalOutputAdjust, props: { disabled: true, placeholder: '自动带出' }},\r\n        { label: '报告:', monopolize: true, render: h => (<el-checkbox v-model={this.firstForm.isReport}>无报告</el-checkbox>) },\r\n        { label: '备注:', keyword: 'remark', monopolize: true, props: { type: 'textarea' }},\r\n        { label: '附件:', monopolize: true, keyword: 'fileList', component: 'UpFile', width: '100%', props: { isUpfile: true, isDelete: true }}\r\n      ]\r\n    },\r\n    /**\r\n     * 计算质保数组\r\n     */\r\n    warrantyList() {\r\n      return ['一', '二', '三', '四'].map((v, i) => {\r\n        return {\r\n          label: `${v}阶段`,\r\n          rate: this.project[`warrantyRate${i + 1}`],\r\n          days: this.project[`warrantyDays${i + 1}`]\r\n        }\r\n      })\r\n    },\r\n    /**\r\n     * 开累应收款 = 审定值 - 甲供材 - 质保金\r\n     * 质保金 = 审定值*（四个阶段的质保比例）/100\r\n     */\r\n    receivableAccounts() {\r\n      const { settleAmount, firstSupplyAmount = 0 } = this.firstForm\r\n      const { warrantyRate1, warrantyRate2, warrantyRate3, warrantyRate4 } = this.project\r\n      const warrantyAmount = settleAmount * (warrantyRate1 + warrantyRate2 + warrantyRate3 + warrantyRate4) / 100\r\n      if (settleAmount) return settleAmount - firstSupplyAmount - warrantyAmount\r\n      return ''\r\n    },\r\n    /**\r\n     * 外部产值调整 = 审定值 - 开累外部产值\r\n     */\r\n    externalOutputAdjust() {\r\n      const { settleAmount } = this.firstForm\r\n      const { externalOutputs = 0 } = this.output\r\n      if (settleAmount) return settleAmount - externalOutputs\r\n      else return ''\r\n    },\r\n    /**\r\n     * 内部产值调整 = 审定值 - 开累内部产值\r\n     */\r\n    internalOutputAdjust() {\r\n      const { settleAmount } = this.firstForm\r\n      const { internalOutputs = 0 } = this.output\r\n      if (settleAmount) return settleAmount - internalOutputs\r\n      else return ''\r\n    }\r\n  },\r\n  beforeRouteEnter(to, from, next) {\r\n    next(vm => {\r\n      const newId = vm.$route.query.id\r\n      const oldId = vm.firstForm.id\r\n      if (newId && newId !== oldId) {\r\n      // 说明是打开另一个单子的编辑页面\r\n        vm.firstForm.id = newId\r\n        vm.initDataById(newId)\r\n        vm.active = 1\r\n      } else if (!newId && oldId) {\r\n        // 说明是打开一个新建页面\r\n        // 将data数据初始成定义时的状态\r\n        Object.assign(vm.$data, vm.$options.data())\r\n        vm.$nextTick(() => {\r\n          vm.$refs.firstForm.resetFields()\r\n        })\r\n      }\r\n    })\r\n  },\r\n  methods: {\r\n    /**\r\n     * 处理项目选择器选择事件\r\n     */\r\n    handelProjectSelect(val) {\r\n      Object.assign(this.firstForm, {\r\n        orgId: val.orgId,\r\n        companyId: val.companyId\r\n      })\r\n      this.getProjectMessage()\r\n      this.getOutput()\r\n    },\r\n    /**\r\n     * @description: 根据id获取数据\r\n     */\r\n    initDataById(id) {\r\n      GetProjectSettleById({ id }).then(({ data, billFlowData }) => {\r\n        Object.keys(this.firstForm).forEach(key => {\r\n          if (Object.hasOwnProperty.call(data, key)) {\r\n            this.firstForm[key] = data[key] || this.firstForm[key]\r\n          }\r\n        })\r\n        Object.assign(this.firstForm, {\r\n          fileList: data.upFile,\r\n          billFlow: billFlowData,\r\n          completDate: this.$moment(data.completDate).format('YYYY-MM-DD')\r\n        })\r\n        this.getProjectMessage()\r\n      })\r\n    },\r\n    /**\r\n     * 根据id获取项目信息\r\n     */\r\n    getProjectMessage() {\r\n      const req = {\r\n        id: this.firstForm.projectId\r\n      }\r\n      const formatDate = date => date ? this.$moment(date).format('YYYY-MM-DD') : ''\r\n      getProjectById(req).then(({ data }) => {\r\n        this.project = {\r\n          ...data,\r\n          orgName: data.organization.name,\r\n          contractStartDate: formatDate(data.contractStartDate),\r\n          contractFinishDate: formatDate(data.contractFinishDate),\r\n          realStartDate: formatDate(data.realStartDate),\r\n          computeFinishDate: formatDate(data.computeFinishDate)\r\n        }\r\n      })\r\n    },\r\n    /**\r\n     * 获取外部产值\r\n     */\r\n    getOutput() {\r\n      const req = {\r\n        id: this.firstForm.projectId\r\n      }\r\n      GetProjectOutputSumById(req).then(({ externalOutputs, internalOutputs }) => {\r\n        this.output = {\r\n          externalOutputs,\r\n          internalOutputs\r\n        }\r\n      })\r\n    },\r\n    getBillFlow() {\r\n      // 获取流程数据\r\n      const { state, billFlow } = this.firstForm\r\n      const req = {\r\n        ...this.firstForm,\r\n        state: state || 0\r\n      }\r\n      if (billFlow) req.billFlowId = billFlow.id\r\n      delete req.billFlow\r\n      GetBillFlow(req).then(({ data, success, message }) => {\r\n        if (success) {\r\n          this.firstForm.billFlow = data.billFlow\r\n          this.setActive(2)\r\n        } else {\r\n          this.$message.error(message)\r\n        }\r\n      })\r\n    },\r\n    /**\r\n     * 修改填报进度\r\n     */\r\n    setActive(active) {\r\n      this.active = active\r\n    },\r\n    /**\r\n     * 下一步\r\n     */\r\n    nextStep(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          this.getBillFlow()\r\n        }\r\n      })\r\n    },\r\n    // 作废\r\n    invalidForm() {\r\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        return DeleteProjectSettle({ id: this.firstForm.id })\r\n      }).then(() => {\r\n        this.$message.success('操作成功')\r\n        this.back()\r\n      })\r\n    },\r\n    /**\r\n     * 提交表单\r\n     * @param {Number} state 提交类型，0：保存；1：提交\r\n     */\r\n    submitForm(state) {\r\n      const { receivableAccounts, output: { externalOutputs, internalOutputs }, externalOutputAdjust, internalOutputAdjust } = this\r\n      const req = {\r\n        ...this.firstForm,\r\n        isReport: !this.firstForm.isReport,\r\n        receivableAccounts,\r\n        externalOutputs,\r\n        internalOutputs,\r\n        externalOutputAdjust,\r\n        internalOutputAdjust,\r\n        state\r\n      }\r\n      delete req.number\r\n      delete req.orgName\r\n      if (this.firstForm.billFlow) {\r\n        // 获取流程组件中的数据\r\n        const billFlow = this.$refs.flowSelect.getBillFlow()\r\n        if (!billFlow) {\r\n          return false\r\n        }\r\n        req.billFlow = billFlow\r\n      } else {\r\n        this.$message.error('流程数据不能为空')\r\n        return\r\n      }\r\n      if (req.id) {\r\n        PutProjectSettle(req).then(() => {\r\n          this.$message.success('保存成功')\r\n          this.back()\r\n        })\r\n      } else {\r\n        AddProjectSettle(req).then(() => {\r\n          this.$message.success('提交成功')\r\n          this.back()\r\n        })\r\n      }\r\n    },\r\n    /**\r\n     * 返回上一页，并关闭当前页\r\n     */\r\n    back() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    }\r\n  }\r\n}\r\n",null]}