{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\rsgl\\rygl\\personEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\rsgl\\rygl\\personEdit.vue","mtime":1634202153942},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getPersonById, getPersonEditInit, addPerson, putPerson } from '@/api/rsgl/person'\r\nimport { getPostListByOrgId } from '@/api/rsgl/postPool'\r\nimport OrgSelect2 from '@/components/OrgSelect/index2'\r\n// import { getTree } from '@/utils/index'\r\n\r\nexport default {\r\n  name: 'UserInfo',\r\n  components: {\r\n    OrgSelect2\r\n  },\r\n  props: {\r\n    id: {\r\n      type: Number,\r\n      default: null\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        name: '',\r\n        number: '',\r\n        companyId: this.$store.state.user.selectOrgId,\r\n        organizationId: null,\r\n        postId: null,\r\n        personTypeID: null,\r\n        inUse: true,\r\n        isUser: true,\r\n        isConfirmAccount: false,\r\n        idType: '',\r\n        idNumber: '',\r\n        phoneNumber: '',\r\n        idAddress: '',\r\n        homeAddres: '',\r\n        gender: '',\r\n        nation: '',\r\n        birthDate: null,\r\n        expirationDate: '2099-12-31',\r\n        remark: ''\r\n      },\r\n      postForm: {\r\n        personId: null,\r\n        postId: 0,\r\n        orgId: null,\r\n        postPoolDetailId: null,\r\n        roleId: null,\r\n        positionId: null,\r\n        isMain: true,\r\n        inUse: true\r\n      },\r\n      personId: 0,\r\n      orgList: [], // 所有的组织机构数据\r\n      companyList: [], // 过滤出的公司信息数据\r\n      postList: [],\r\n      idTypeList: [], // 证件类型列表\r\n      personTypeList: [], // 员工类型列表\r\n      bankList: [], // 开户行列表\r\n      changeFlag: false,\r\n      buttonLoading: false,\r\n      refreshRouterName: '',\r\n      loadOrg: false,\r\n      rules: {\r\n        name: [{ required: true, message: '不能为空', trigger: 'blur' }],\r\n        number: [{ required: true, message: '不能为空', trigger: 'blur' }],\r\n        companyId: [{ required: true, message: '不能为空', trigger: 'blur' }],\r\n        idType: [{ required: true, message: '不能为空', trigger: 'change' }],\r\n        personTypeID: [{ required: true, message: '不能为空', trigger: 'change' }],\r\n        organizationId: [{ required: true, message: '不能为空', trigger: ['blur', 'change'] }],\r\n        postId: [{ required: true, message: '不能为空', trigger: ['blur', 'change'] }],\r\n        expirationDate: [{ required: true, type: 'string', message: '不能为空', trigger: ['blur', 'change'] }]\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    // this.fetchData()\r\n    this.initData()\r\n    if (this.$route.query.id) {\r\n      this.personId = this.$route.query.id\r\n      this.fetchData()\r\n      this.refreshRouterName = this.$route.params.refreshRouterName\r\n    } else {\r\n      this.$refs['ruleForm'].resetFields()\r\n      this.loadOrg = true\r\n    }\r\n  },\r\n  activated() {\r\n    // this.initData()\r\n    // if (this.$route.query.id) {\r\n    //   this.personId = this.$route.query.id\r\n    //   this.fetchData()\r\n    //   this.refreshRouterName = this.$route.params.refreshRouterName\r\n    // } else {\r\n    //   this.$refs['ruleForm'].resetFields()\r\n    //   this.loadOrg = true\r\n    //   // this.userOrg = []\r\n    // }\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          var postData = JSON.parse(JSON.stringify(this.ruleForm))\r\n          postData.personTypeID = Number(postData.personTypeID)\r\n          postData.idType = postData.idType + ''\r\n          // const uo = []\r\n          // this.userOrg.forEach(ele => {\r\n          //   const pNodes = findPNode(this.orgList, ele)\r\n          //   // 取最大父节点\r\n          //   const pNode = pNodes.find(f => f.pid === 0)\r\n          //   uo.push({ userId: this.$route.query.id, companyId: pNode.id, organizationId: ele })\r\n          // })\r\n          // postData.userOrgList = uo\r\n          if (this.$route.query.id !== 0) {\r\n            this.buttonLoading = true\r\n            putPerson(postData)\r\n            // putPerson({ person: postData, userOrgList: uo })\r\n              .then((response) => {\r\n                this.$message(response.message)\r\n                this.buttonLoading = false\r\n                this.$emit('dialogClose')\r\n              }).catch(() => { this.buttonLoading = false })\r\n          }\r\n\r\n          if (this.$route.query.id === 0) {\r\n            this.buttonLoading = true\r\n            console.log(postData)\r\n            // postData.passWord = this.ruleForm.passWord\r\n            addPerson(postData)\r\n              .then((response) => {\r\n                this.$message(response.message)\r\n                this.personId = response.data\r\n                this.buttonLoading = false\r\n                this.$emit('dialogClose')\r\n              })\r\n              .catch(() => {\r\n                this.buttonLoading = false\r\n              })\r\n          }\r\n        }\r\n      })\r\n      // this.$refs.child.submitForm()\r\n    },\r\n    async fetchData() {\r\n      if (this.$route.query.id !== 0) {\r\n        await getPersonById({ id: this.$route.query.id }).then((response) => {\r\n          const { data, data1, data6 } = response\r\n          this.postList = data6\r\n          this.ruleForm = data\r\n          this.userOrg = data1\r\n          this.ruleForm.idType = Number(this.ruleForm.idType)\r\n        })\r\n      }\r\n    },\r\n    async initData() {\r\n      await getPersonEditInit({ companyId: this.ruleForm.companyId }).then(response => {\r\n        const { data3, data4, data5 } = response\r\n        // 1.岗位数据列表\r\n        // this.postList = data1\r\n        // 2.组织机构列表\r\n        // data2.forEach((ele) => {\r\n        //   ele.label = ele.name\r\n        //   // ele.isDisabled = !ele.optional\r\n        // })\r\n        // this.orgList = data2\r\n\r\n        // const treedata1 = getTree(0, this.orgList)\r\n        // this.treeList = treedata1.filter(f => f.id === this.ruleForm.companyId)\r\n        // 3.员工类型下拉数据\r\n        this.personTypeList = data3\r\n        // 4.证件类型下拉数据\r\n        this.idTypeList = data4\r\n        this.bankList = data5\r\n        this.loadOrg = true\r\n      })\r\n    },\r\n    closeThePage() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    },\r\n    getPostList(setVal) {\r\n      getPostListByOrgId({ id: setVal }).then(response => {\r\n        const { data } = response\r\n        this.postList = data\r\n      })\r\n    },\r\n    orgChange(val) {\r\n      if (this.changeFlag) {\r\n        if (val) {\r\n          this.ruleForm.postId = null\r\n          this.getPostList(val)\r\n        }\r\n      } else {\r\n        this.changeFlag = true\r\n      }\r\n    },\r\n    editPersonPost() {\r\n      this.$router.push({ name: 'PersonPostEdit', query: { id: this.personId, refreshRouterName: 'PersonPost' }, params: { id: this.personId }})\r\n    },\r\n    editRange() {\r\n      this.$router.push({ name: 'UserFrame', query: { id: this.personId, refreshRouterName: 'Person', tab: 'userOrg', showTag: 0 }, params: { id: this.personId }})\r\n    }\r\n  }\r\n}\r\n",null]}