{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\components\\Echarts\\pieEcharts.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\components\\Echarts\\pieEcharts.vue","mtime":1628661590251},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n\r\nimport * as echarts from 'echarts/core'\r\nimport { PieChart } from 'echarts/charts'\r\nimport {\r\n  TitleComponent,\r\n  TooltipComponent,\r\n  LegendComponent\r\n} from 'echarts/components'\r\nimport { CanvasRenderer } from 'echarts/renderers'\r\necharts.use(\r\n  [TitleComponent, TooltipComponent, LegendComponent, PieChart, CanvasRenderer]\r\n)\r\n// var echarts = require('echarts')\r\nexport default {\r\n  model: {\r\n    prop: 'selectValue', // 指向props的参数名\r\n    event: 'change'// 事件名称\r\n  },\r\n  props: {\r\n    height: { type: String, default: '200px' },\r\n    width: { type: String, default: '300px' },\r\n    title: { type: String, default: '' },\r\n    stitle: { type: String, default: '' },\r\n    titleAlign: { type: String, default: 'left' },\r\n    isEvent: { type: Boolean, default: false },\r\n    eventType: { type: String, default: 'click' }, // 'click'、'dblclick'、'mousedown'、'mousemove'、'mouseup'、'mouseover'、'mouseout'、'globalout'、'contextmenu'\r\n    data: { type: Array, default: () => { return [{ value: 1000, name: '测试1' }, { value: 2000, name: '测试2' }] } }\r\n  },\r\n  data() {\r\n    return {\r\n      list: null,\r\n      modelValue: null,\r\n      chart: null\r\n    }\r\n  },\r\n  watch: {\r\n  },\r\n  mounted() {\r\n    this.initCharts()\r\n  },\r\n  methods: {\r\n    initCharts() {\r\n      const _that = this\r\n      this.chart = echarts.init(this.$refs.pie)\r\n      this.setOptions()\r\n      if (this.isEvent) {\r\n        this.chart.on(this.eventType, function(params) {\r\n          if (params.componentType === 'series') {\r\n            _that.$emit('callMethod', params.data)\r\n          }\r\n        })\r\n      }\r\n    },\r\n    setOptions() {\r\n      this.chart.setOption({\r\n        title: {\r\n          text: this.title,\r\n          subtext: this.stitle,\r\n          left: this.titleAlign\r\n        },\r\n        tooltip: { trigger: 'item' },\r\n        legend: {\r\n          orient: 'vertical',\r\n          left: 'left'\r\n        },\r\n        series: [{\r\n          name: '数据',\r\n          type: 'pie',\r\n          data: this.data,\r\n          emphasis: {\r\n            itemStyle: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          }\r\n        }]\r\n      })\r\n    }\r\n  }\r\n}\r\n",null]}