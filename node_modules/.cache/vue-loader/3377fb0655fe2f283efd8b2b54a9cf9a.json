{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\byj\\Imprest\\WriteOffEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\byj\\Imprest\\WriteOffEdit.vue","mtime":1635216068765},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport MyForm from '@/components/MyForm'\r\nimport { validate } from '@/utils/validate'\r\nimport { InitImprestWriteOff, GetImprestWriteOffById, AddImprestWriteOff, PutImprestWriteOff, DeleteImprestWriteOff } from '@/api/cwgl/Impresst'\r\nexport default {\r\n  name: 'ImprestWriteOffEdit',\r\n  components: {\r\n    MyForm\r\n  },\r\n  data() {\r\n    return {\r\n      state: 0,\r\n      size: 'mini',\r\n      selectPlaceholder: '输入选择',\r\n      inputPlaceholder: '请输入',\r\n      firstForm: {\r\n        id: 0, // 新增id为0\r\n        companyId: '', // 公司id\r\n        number: '', // 新增编号自动生成\r\n        personId: '', // 冲销人工号\r\n        orgId: '', // 部门id\r\n        imprestType: 2, // 冲销方式: 1：网银冲销；2：发票冲销\r\n        personName: '',\r\n        amount: '', // 冲销金额\r\n        remark: '', // 备注\r\n        type: 1 // 备用金冲销 固定值为1\r\n      },\r\n      firstRules: {\r\n        orgId: [\r\n          { required: true, message: '请选择部门', trigger: 'change' }\r\n        ],\r\n        personId: [\r\n          { required: true, message: '请输入冲销人工号', trigger: 'change' }\r\n        ],\r\n        personName: [\r\n          { required: true, trigger: 'change', message: '请选择冲销人' }\r\n        ],\r\n        amount: [\r\n          { required: true, message: '请输入金额', trigger: 'change' },\r\n          { validator: validate.money, message: '金额格式不正确', trigger: 'change' },\r\n          { validator: validate.max_amount, message: '超过所能存储的最大金额', trigger: 'change' }\r\n        ],\r\n        imprestType: [\r\n          { required: true, message: '请选择冲销方式', trigger: 'change' }\r\n        ]\r\n      },\r\n      filter: {\r\n        imprestTypeList: [] // 冲销方式列表数据\r\n      },\r\n      project: {}\r\n    }\r\n  },\r\n  computed: {\r\n    disabled() {\r\n      return this.firstForm.state === 10000\r\n    },\r\n    formNodeData() {\r\n      const {\r\n        inputPlaceholder,\r\n        selectPlaceholder,\r\n        firstForm,\r\n        filter\r\n      } = this\r\n      return [\r\n        { label: '编号:', keyword: 'number', props: { disabled: true, placeholder: '系统自动生成' }},\r\n        { label: '部门:', keyword: 'orgId', component: 'OrgSelect', props: { placeholder: selectPlaceholder }},\r\n        { label: '冲销人工号:', keyword: 'personId', component: 'PersonSelect', props: { propsLabel: 'number', multiple: false, placeholder: selectPlaceholder }},\r\n        { label: '姓名:', keyword: 'personName', props: { disabled: true, placeholder: '自动带出' }},\r\n        { label: '冲销金额:', keyword: 'amount', props: { placeholder: inputPlaceholder }},\r\n        { label: '冲销方式:', keyword: 'imprestType', render: h => (\r\n          <el-radio-group vModel={firstForm.imprestType}>\r\n            {\r\n              filter.imprestTypeList.map((e) => <el-radio key={e.id} label={e.value}>{e.name}</el-radio>)\r\n            }\r\n          </el-radio-group>)\r\n        },\r\n        { label: '备注:', monopolize: true, keyword: 'remark', props: { placeholder: inputPlaceholder, type: 'textarea' }}\r\n      ]\r\n    }\r\n  },\r\n  beforeRouteEnter(to, from, next) {\r\n    next(vm => {\r\n      vm.InitImprestWriteOffType()\r\n      const newId = vm.$route.query.id\r\n      const oldId = vm.firstForm.id\r\n      const type = vm.$route.query.type\r\n      const form = vm.firstForm\r\n      const { selectOrgId } = vm.$store.state.user\r\n      form.companyId = selectOrgId\r\n      if (newId && newId !== oldId) {\r\n      // 说明是打开另一个单子的编辑页面\r\n        vm.firstForm.id = newId\r\n        vm.initDataById(newId)\r\n        vm.state = 1\r\n      } else {\r\n        if (type === 'add' && oldId) {\r\n          Object.assign(vm.$data.firstForm, vm.$options.data().firstForm)\r\n          vm.$nextTick(() => {\r\n            vm.$refs.firstForm.resetFields()\r\n          })\r\n        }\r\n      }\r\n    })\r\n  },\r\n  methods: {\r\n    /**\r\n     * 处理项目选择器选择事件\r\n     */\r\n    selectPerson(val) {\r\n      Object.assign(this.firstForm, {\r\n        personName: val ? val.name : ''\r\n      })\r\n    },\r\n    /**\r\n     * @description: 根据id获取数据并且初始化选项框数据\r\n     */\r\n    initDataById(id) {\r\n      GetImprestWriteOffById({ id }).then(res => {\r\n        this.user = res.data.person\r\n        const form = this.firstForm\r\n        for (const key in form) {\r\n          if (Object.hasOwnProperty.call(form, key)) {\r\n            form[key] = res.data[key] || form[key]\r\n          }\r\n        }\r\n        if (form.amount < 0) {\r\n          form.amount = Math.abs(form.amount)\r\n        }\r\n      })\r\n    },\r\n    /**\r\n     * @description: 初始化冲销方式单选\r\n     */\r\n    InitImprestWriteOffType() {\r\n      InitImprestWriteOff().then(res => {\r\n        this.filter.imprestTypeList = res.typeList\r\n      })\r\n    },\r\n    /**\r\n     * 提交表单\r\n     * @param {Number} state 提交类型，0：保存；1：提交; 10000: 修改\r\n     */\r\n    submitForm(state, formName) {\r\n      this.$refs[formName].validate(async valid => {\r\n        if (valid) {\r\n          const req = {\r\n            ...this.firstForm,\r\n            state\r\n          }\r\n          delete req.personName\r\n          if (req.id) {\r\n            PutImprestWriteOff(req).then(res => {\r\n            // 更新\r\n              this.$message.success('保存成功')\r\n              this.back()\r\n            })\r\n          } else {\r\n            AddImprestWriteOff(req).then(() => {\r\n            // 添加\r\n              this.$message.success('提交成功')\r\n              this.back()\r\n            })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    /**\r\n     * 作废\r\n     */\r\n    invalidForm() {\r\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        return DeleteImprestWriteOff({ id: this.firstForm.id })\r\n      }).then(() => {\r\n        this.$message.success('操作成功')\r\n        this.back()\r\n      })\r\n    },\r\n    back() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    }\r\n  }\r\n}\r\n",null]}