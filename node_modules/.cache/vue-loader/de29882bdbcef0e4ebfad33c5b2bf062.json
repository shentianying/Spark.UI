{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\rsgl\\rygl\\personOrganization.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\rsgl\\rygl\\personOrganization.vue","mtime":1627280558884},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport OrgSelect2 from '@/components/OrgSelect/index2'\r\nimport { getTree } from '@/utils/index'\r\nimport { getComOrganizationAndPersonList } from '@/api/xtgl/organization'\r\nexport default {\r\n  name: 'PersonOrganization',\r\n  components: {\r\n    OrgSelect2\r\n  },\r\n  data() {\r\n    return {\r\n      list: [],\r\n      postList: [],\r\n      listLoading: false,\r\n      searchText: '',\r\n      orgValue: [],\r\n      postId: null\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchData()\r\n  },\r\n  activated() {\r\n    if (this.$route.params.refresh) {\r\n      this.fetchData()\r\n    }\r\n  },\r\n  methods: {\r\n    fetchData() {\r\n      this.listLoading = true\r\n      var postData = {}\r\n      postData.orgIds = this.orgValue\r\n      if (this.postId === null || this.postId === '') {\r\n        postData.postId = 0\r\n      } else {\r\n        postData.postId = this.postId\r\n      }\r\n\r\n      postData.name = this.searchText\r\n\r\n      getComOrganizationAndPersonList(postData).then(response => {\r\n        response.data.forEach(ele => {\r\n          ele.label = ele.name\r\n        })\r\n        this.list = getTree(0, response.data)\r\n        this.postList = response.data1\r\n        this.listLoading = false\r\n      })\r\n    },\r\n    handleDetail(row) {\r\n      this.$router.push({ name: 'PersonDetail', query: { id: row.personId, refreshRouterName: this.$route.name }, params: { id: row.personId }})\r\n    },\r\n    goSearch() {\r\n      this.fetchData()\r\n    }\r\n  }\r\n}\r\n",null]}