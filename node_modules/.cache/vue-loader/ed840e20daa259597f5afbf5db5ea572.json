{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\byj\\Imprest\\WriteOffDetails.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\byj\\Imprest\\WriteOffDetails.vue","mtime":1633684104551},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Detailsedit from '@/components/Detailsedit'\r\nimport { GetImprestWriteOffById, InitImprestWriteOff } from '@/api/cwgl/Impresst'\r\nexport default {\r\n  name: 'ImprestWriteOffDetails',\r\n  components: {\r\n    Detailsedit\r\n  },\r\n  data() {\r\n    return {\r\n      size: 'mini',\r\n      loading: false, // 请求未完成\r\n      myDetails: {}, // 详情数据\r\n      imprestTypeList: [], // 冲销方式数据\r\n      stateList: [] // 状态列表\r\n    }\r\n  },\r\n  computed: {\r\n    /**\r\n     * 详情各字段计算\r\n     */\r\n    infoList() {\r\n      if (!this.myDetails.data) return\r\n      const {\r\n        myDetails: {\r\n          data: {\r\n            number,\r\n            amount,\r\n            remark,\r\n            personNumber,\r\n            personName,\r\n            createDate,\r\n            createUserName,\r\n            lastEditUserName,\r\n            lastEditDate,\r\n            pageName,\r\n            pageId,\r\n            stateName,\r\n            writeOffMode,\r\n            capitalTypeName,\r\n            orgStr\r\n          }\r\n        }\r\n      } = this\r\n      const { goDeal } = this\r\n      return [\r\n        { label: '编号', value: number },\r\n        { label: '部门', value: orgStr },\r\n        { label: '摘要', value: `${personName}${writeOffMode}备用金` },\r\n        { label: '支付方式', value: capitalTypeName },\r\n        { label: '冲销工人号', value: personNumber },\r\n        { label: '姓名', value: personName },\r\n        { label: '冲销金额', value: `${Math.abs(amount)}` },\r\n        { label: '冲销方式', value: writeOffMode },\r\n        { label: '备注', value: remark, monopolize: true },\r\n        { label: '制单人', value: createUserName },\r\n        { label: '制单时间', value: createDate },\r\n        { label: '更新人', value: lastEditUserName },\r\n        { label: '更新时间', value: lastEditDate },\r\n        { label: '状态', value: stateName },\r\n        { label: '源头', value: pageName, click: goDeal, params: [pageId] }\r\n      ]\r\n    }\r\n  },\r\n  beforeRouteEnter(to, from, next) {\r\n    next(vm => {\r\n      vm.initData()\r\n    })\r\n  },\r\n  methods: {\r\n    /**\r\n     * @description: 初始化数据\r\n     */\r\n    initData() {\r\n      const { id } = this.$route.query\r\n      this.myId = id\r\n      this.fetchData()\r\n      this.InitImprestWriteOffType()\r\n    },\r\n    /**\r\n     * @description: 初始化冲销方式单选\r\n     */\r\n    InitImprestWriteOffType() {\r\n      InitImprestWriteOff().then(res => {\r\n        this.imprestTypeList = res.typeList\r\n      })\r\n    },\r\n    /**\r\n     * 获取详情信息\r\n     */\r\n    async fetchData() {\r\n      if (!this.myId) return\r\n      this.loading = true\r\n      const res = await GetImprestWriteOffById({ id: this.myId })\r\n      this.myDetails = res\r\n      this.loading = false\r\n    },\r\n    /**\r\n     * 前往源头\r\n     * @param {*} pageId 路由id\r\n     * @param {*} billId 单据id\r\n     */\r\n    goDeal(pageId, billId) {\r\n      if (!pageId) return\r\n      const { routerName } = this.getRoute(pageId)\r\n      this.$router.replace({ name: routerName, query: { id: billId, refreshRouterName: this.$route.name }, params: { id: billId, type: 1 }})\r\n    },\r\n    getRoute(pageId) {\r\n      // 获取菜单列表\r\n      const getIsMenu = this.$store.getters.menus\r\n      return getIsMenu.find(f => f.id === pageId)\r\n    }\r\n  }\r\n}\r\n",null]}