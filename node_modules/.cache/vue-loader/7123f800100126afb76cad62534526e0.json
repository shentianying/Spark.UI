{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\gckgl\\invoice\\projectInvoiceDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\gckgl\\invoice\\projectInvoiceDetail.vue","mtime":1635749455697},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getProjectInvoiceById } from '@/api/xmgl/projectInvoice'\r\nimport UpFile from '@/components/UpLoad/UpFile'\r\nexport default {\r\n  name: 'ProjectInvoiceDetail',\r\n  components: {\r\n    UpFile\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        id: 0,\r\n        number: '',\r\n        orgId: null,\r\n        companyId: this.$store.state.user.selectOrgId,\r\n        projectId: null,\r\n        date: null,\r\n        amount: '',\r\n        remark: '',\r\n        state: 0,\r\n        fileList: []\r\n      },\r\n      applyFileList: [],\r\n      cwFileList: [],\r\n      projectInvoiceId: null,\r\n      orgName: '',\r\n\r\n      loading: false,\r\n      rules: {\r\n      }\r\n    }\r\n  },\r\n  activated() {\r\n    if (this.$route.params.id) {\r\n      this.initData()\r\n      this.refreshRouterName = this.$route.params.refreshRouterName\r\n    }\r\n  },\r\n  mounted() {\r\n    if (!this.$route.params.id) {\r\n      this.initData()\r\n    }\r\n  },\r\n  methods: {\r\n    initData() {\r\n      if (this.$route.query.id) {\r\n        this.projectInvoiceId = this.$route.query.id\r\n      }\r\n      if (this.projectInvoiceId) {\r\n        getProjectInvoiceById({ id: this.projectInvoiceId }).then(response => {\r\n          const { data, orgName } = response\r\n          this.ruleForm = data\r\n          this.orgName = orgName\r\n          this.ruleForm.fileList = data.upFile\r\n        })\r\n      }\r\n    },\r\n    closeThePage() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    }\r\n  }\r\n}\r\n",null]}