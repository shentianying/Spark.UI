{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\byj\\Deposit\\details.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\byj\\Deposit\\details.vue","mtime":1635749455618},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { GetDepositAttitudeById, PayFor, CheckDeposit, GetDepositDetailById, ReturnDeposit, DeleteDeposit } from '@/api/cwgl/Deposit.js'\r\nimport TableEx from '@/components/TableEx'\r\nimport FlowDisplay from '@/components/Flow/flowDisplay'\r\nimport { validate } from '@/utils/validate'\r\nimport Alteration from './Alteration'\r\nimport FlowAttitude from '@/components/Flow/flowAttitude'\r\nimport Detailsedit from '@/components/Detailsedit'\r\n// import CapitalSelect from '@/components/SearchBar/form/CapitalSelect'\r\nexport default {\r\n  name: 'DepositDetails',\r\n  components: {\r\n    FlowDisplay,\r\n    FlowAttitude,\r\n    Detailsedit,\r\n    TableEx,\r\n    Alteration\r\n    // CapitalSelect\r\n  },\r\n  data() {\r\n    return {\r\n      type: 'details', // 审核:approval 详情:details 支付:pay 变更:alteration 回收:recycle\r\n      amount: '',\r\n      size: 'mini',\r\n      capitalType: 1,\r\n\r\n      // 过滤器\r\n      filter: {\r\n        stateOptions: []\r\n      },\r\n\r\n      currTab: 'details', // 当前标签页\r\n\r\n      /* 列表数据相关 */\r\n      alterationTable: { // 变更列表\r\n        columns: [\r\n          {\r\n            label: '序号', // 表头\r\n            minWidth: '80', // 最小宽度\r\n            type: 'index'\r\n          },\r\n          {\r\n            label: '变更前经手人', // 表头\r\n            prop: 'formerPerson.name', // 渲染的属性\r\n            minWidth: '120' // 最小宽度\r\n          },\r\n          {\r\n            label: '变更前回收日期',\r\n            format: 'date',\r\n            prop: 'formerReturnDate',\r\n            minWidth: '120'\r\n          },\r\n          {\r\n            label: '变更后经手人',\r\n            prop: 'person.name',\r\n            minWidth: '120'\r\n          },\r\n          {\r\n            label: '变更后回收日期',\r\n            format: 'date',\r\n            prop: 'returnDate',\r\n            minWidth: '120'\r\n          },\r\n          {\r\n            label: '变更原因',\r\n            prop: 'reason',\r\n            minWidth: '120'\r\n          },\r\n          {\r\n            label: '状态', // 表头\r\n            prop: 'state', // 渲染的属性\r\n            format: (val, format, row) => {\r\n              return row?.billFlow?.form?.formState?.find(e => e.value === val)?.name\r\n            },\r\n            minWidth: '85' // 最小宽度\r\n          },\r\n          {\r\n            label: '待处理',\r\n            prop: 'billFlow',\r\n            format: (val, format, row) => row.state !== -1 ? this.utils.getPerson(val) : null,\r\n            width: '100'\r\n          },\r\n          {\r\n            business: 'createUser' // 业务部分的快捷使用参考 src\\components\\TableEx\\Column\\businessList.js\r\n          }\r\n        ],\r\n        list: [],\r\n        loading: false\r\n      },\r\n      // 回收相关\r\n      recycleTable: {\r\n        columns: [\r\n          {\r\n            label: '序号', // 表头\r\n            minWidth: '80', // 最小宽度\r\n            type: 'index'\r\n          },\r\n          {\r\n            align: 'right',\r\n            label: '回收金额',\r\n            format: 'money',\r\n            prop: 'amount',\r\n            minWidth: '150'\r\n          },\r\n          {\r\n            label: '回收日期',\r\n            format: 'date',\r\n            prop: 'returnDate',\r\n            minWidth: '120'\r\n          },\r\n          {\r\n            label: '备注',\r\n            prop: 'remark',\r\n            minWidth: '120'\r\n          },\r\n          {\r\n            label: '回收人',\r\n            prop: 'createUserName',\r\n            width: '100'\r\n          }\r\n        ],\r\n        list: [],\r\n        loading: false\r\n      },\r\n      recycleForm: {\r\n        id: 0,\r\n        returnDate: '',\r\n        amount: '',\r\n        remark: ''\r\n      },\r\n      recycleRules: {\r\n        returnDate: [{ required: true, message: '请输入日期', trigger: 'change' }],\r\n        amount: [\r\n          { required: true, message: '请输入金额', trigger: 'change' },\r\n          { validator: validate.money, message: '金额格式不正确', trigger: 'change' },\r\n          { validator: validate.max_amount, message: '超过所能存储的最大金额', trigger: 'change' }\r\n        ]\r\n      },\r\n\r\n      saveLoading: false,\r\n      payLoading: false,\r\n      myDetails: null, // 详情数据\r\n      billFlowData: null, // 流程信息\r\n      attitudePara: null, // 审批信息\r\n      showPayButton: false\r\n    }\r\n  },\r\n  computed: {\r\n    /**\r\n     * 详情各字段计算\r\n     */\r\n    infoList() {\r\n      const {\r\n        myDetails: {\r\n          orgStr,\r\n          depositType,\r\n          data: {\r\n            person,\r\n            number,\r\n            bussinessMan,\r\n            planReturnDate,\r\n            amount,\r\n            summary,\r\n            applicationAmount,\r\n            payoutUserName,\r\n            payoutDate,\r\n            returnUserName,\r\n            returnDate,\r\n            remark,\r\n            upFile,\r\n            createUserName,\r\n            createDate,\r\n            lastEditUserName,\r\n            lastEditDate,\r\n            submitUserName,\r\n            submitDate,\r\n            state\r\n          }\r\n\r\n        }\r\n      } = this\r\n\r\n      // 数据格式化\r\n      const m = (val) => this.utils.formatMoney(val, 2, 0)\r\n      const d = (dataStr) => dataStr ? this.$moment(dataStr).format('YYYY-MM-DD') : dataStr\r\n      const a = this.utils.amountInWords\r\n\r\n      // 制单部分信息\r\n      const info = [\r\n        { label: '制单人', value: createUserName },\r\n        { label: '制单时间', value: createDate },\r\n        { label: '提交人', value: submitUserName },\r\n        { label: '提交时间', value: submitDate },\r\n        { label: '支付人', value: payoutUserName },\r\n        { label: '支付时间', value: payoutDate },\r\n        { label: '回收人', value: returnUserName },\r\n        { label: '回收时间', value: returnDate },\r\n        { label: '更新人', value: lastEditUserName },\r\n        { label: '更新时间', value: lastEditDate },\r\n        { label: '状态', value: this.filter.stateOptions.find(item => item.value === state).name }\r\n      ]\r\n\r\n      const amountArr = [\r\n        { label: '批准金额', value: m(amount) },\r\n        { label: '金额大写', value: a(amount) }\r\n      ]\r\n      return [\r\n        { label: '编号', value: number },\r\n        { label: '部门', value: orgStr },\r\n        { label: '保证金类型', value: depositType },\r\n        { label: '回收日期', value: d(planReturnDate) },\r\n        { label: '工号', value: person.number },\r\n        { label: '姓名', value: person.name },\r\n        { label: '申请金额', value: m(applicationAmount) },\r\n        { label: '金额大写', value: a(applicationAmount) },\r\n        ...(amount ? amountArr : []),\r\n        { label: '客商', value: bussinessMan },\r\n        { label: '用途', value: summary },\r\n        { label: '备注', value: remark, monopolize: true },\r\n        { label: '附件', value: upFile || [], component: 'UpFile', monopolize: true },\r\n        ...((state === 10000) || (state === 1001) ? info : [])\r\n      ]\r\n    },\r\n    alterationInfo() {\r\n      let data = this.myDetails.data\r\n      // console.log(this.alterationTable.list[this.currTab])\r\n      const row = this.alterationTable.list.find(item => item.id.toString() === this.currTab)\r\n      // console.log(row, this.currTab, 222222)\r\n      if (row) {\r\n        const { formerPerson: person, formerReturnDate: planReturnDate } = row\r\n        data = { person, planReturnDate }\r\n      }\r\n      const {\r\n        orgStr,\r\n        depositType,\r\n        data: {\r\n          number,\r\n          bussinessMan,\r\n          amount,\r\n          summary,\r\n          applicationAmount,\r\n          remark,\r\n          upFile\r\n        }\r\n      } = this.myDetails\r\n      // person planReturnDate\r\n      const { person, planReturnDate } = data\r\n      // 数据格式化\r\n      const m = (val) => this.utils.formatMoney(val, 2, 0)\r\n      const d = (dataStr) => dataStr ? this.$moment(dataStr).format('YYYY-MM-DD') : dataStr\r\n      const a = this.utils.amountInWords\r\n\r\n      return [\r\n        { label: '编号', value: number },\r\n        { label: '部门', value: orgStr },\r\n        { label: '保证金类型', value: depositType },\r\n        { label: '回收日期', value: d(planReturnDate) },\r\n        { label: '工号', value: person.number },\r\n        { label: '姓名', value: person.name },\r\n        { label: '申请金额', value: m(applicationAmount) },\r\n        { label: '金额大写', value: a(applicationAmount) },\r\n        { label: '批准金额', value: m(amount) },\r\n        { label: '金额大写', value: a(amount) },\r\n        { label: '客商', value: bussinessMan },\r\n        { label: '用途', value: summary },\r\n        { label: '备注', value: remark, monopolize: true },\r\n        { label: '附件', value: upFile || [], component: 'UpFile', monopolize: true }\r\n      ]\r\n    },\r\n    state() {\r\n      return this.myDetails?.data?.state\r\n    }\r\n  },\r\n  // watch: {\r\n  //   '$route.query.type'(val) {\r\n  //     this.type = val\r\n  //   }\r\n  // },\r\n  beforeRouteEnter(to, from, next) {\r\n    next(vm => {\r\n      vm.initData()\r\n    })\r\n  },\r\n  methods: {\r\n    // 作废\r\n    invalidForm() {\r\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        return DeleteDeposit({ id: this.myId })\r\n      }).then(() => {\r\n        this.$message.success('操作成功')\r\n        this.goback()\r\n      })\r\n    },\r\n    addRecycle() {\r\n      this.$refs['recycleForm'].validate((valid) => {\r\n        if (valid) {\r\n          const req = {\r\n            ...this.recycleForm,\r\n            depositId: this.myId\r\n          }\r\n          this.$confirm('是否添加回收？', '提示', {\r\n            type: 'warning'\r\n          }).then(() => {\r\n            ReturnDeposit(req).then(res => {\r\n              if (res.code === 200) {\r\n                this.$message.success(res.message)\r\n                this.goBack() // 跳转\r\n              } else {\r\n                this.$message.error(res.message)\r\n              }\r\n            })\r\n          })\r\n        }\r\n      })\r\n    },\r\n    saveFlow() {\r\n      this.$confirm('是否确定保存？', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        const attitude = this.$refs.flowAttitude.getPostData()\r\n        if (attitude.attitudeType === 1 || attitude.attitudeType === 2) {\r\n          if (!this.amount) {\r\n            return this.$message.error('请填写批准金额')\r\n          }\r\n          if (Number(this.amount) > this.myDetails.data.applicationAmount) {\r\n            return this.$message.error('批准金额不能大于申请金额')\r\n          }\r\n        }\r\n        this.saveLoading = true\r\n\r\n        CheckDeposit({ attitude, id: this.myDetails.data.id, amount: this.amount }).then(res => {\r\n          if (res.code === 200) {\r\n            this.$message.success(res.message)\r\n            this.goBack() // 跳转\r\n          } else {\r\n            this.$message.error(res.message)\r\n          }\r\n        }).finally(() => {\r\n          this.saveLoading = false\r\n        })\r\n      })\r\n    },\r\n    wantToPay2() {\r\n      this.$confirm('确定要支付吗?', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.payLoading = true\r\n        const { data: { id }} = this.myDetails\r\n        const attitudeData = this.$refs.flowAttitude.getPostData()\r\n        PayFor({ attitude: attitudeData, id }).then(res => {\r\n          if (res.code === 200) {\r\n            this.$message.success(res.message)\r\n            this.goBack() // 跳转\r\n          } else {\r\n            this.$message.error(res.message)\r\n          }\r\n        }).finally(() => {\r\n          this.payLoading = false\r\n        })\r\n      })\r\n    },\r\n    /**\r\n     * @description: 变更列表点击跳转至相应tab\r\n     */\r\n    alterationClick(row) {\r\n      this.currTab = row.id.toString()\r\n    },\r\n    /**\r\n     * @description: 初始化数据\r\n     */\r\n    initData() {\r\n      const { id, type } = this.$route.query\r\n      this.type = type\r\n      this.myId = id\r\n      if (type === 'alteration') {\r\n        this.currTab = 'addAlteration'\r\n      } else {\r\n        this.currTab = 'details'\r\n      }\r\n      this.fetchData()\r\n    },\r\n    /**\r\n     * 提交审批意见以后的回调函数\r\n     */\r\n    updateFlow() {\r\n      // 直接返回\r\n      this.goBack()\r\n    },\r\n    /**\r\n     * 获取详情信息\r\n     */\r\n    async fetchData() {\r\n      if (!this.myId) return\r\n      GetDepositDetailById({ id: this.myId }).then(res => {\r\n        this.alterationTable.list = res.depositModifyList\r\n        this.recycleTable.list = res.depositReturnList\r\n      })\r\n      GetDepositAttitudeById({ id: this.myId }).then(res => {\r\n        this.billFlowData = res.billFlowData\r\n        this.filter.stateOptions = res.billFlowData?.form?.formState || []\r\n        if (res.data.state === 1) {\r\n          this.amount = res?.data?.amount || ''\r\n        }\r\n        this.myDetails = res\r\n        this.capitalType = res.capitalType || this.capitalType\r\n        this.showPayButton = res.showPayButton\r\n        this.attitudePara = { formId: res.billFlowData.formId, billFlowId: res.data.billFlowId, planId: res.data.id }\r\n        if (this.attitudePara && this.state !== 1001) {\r\n          this.$nextTick(() => {\r\n            this.$refs['flowAttitude'].ruleForm.content = res.showPayButton ? '已支付' : ''\r\n          })\r\n        }\r\n      }).catch(e => {\r\n        console.log('fetchData:请求列表数据失败，错误信息：', e)\r\n      })\r\n    },\r\n    /**\r\n     * 作废\r\n     */\r\n    // deleteIt() {\r\n    //   this.$confirm('作废以后将无法编辑和审批，是否确定作废？', '提示', {\r\n    //     type: 'warning'\r\n    //   }).then(() => {\r\n    //     return DeleteImprestAppliaction({ id: this.myId })\r\n    //   }).then((res) => {\r\n    //     this.$message.success(res.message)\r\n\r\n    //     this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    //   }).catch(err => {\r\n    //     console.log(err)\r\n    //     // this.$message.error(err.errorMsg || '操作失败')\r\n    //   })\r\n    // },\r\n    goBack() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    }\r\n  }\r\n}\r\n",null]}