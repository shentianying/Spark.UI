{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\fbgl\\fbht\\SubcontractSignSet\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\fbgl\\fbht\\SubcontractSignSet\\edit.vue","mtime":1635844823971},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport FlowSelect from '@/components/Flow/flowSelect'\r\nimport MyForm from '@/components/MyForm'\r\nimport { validate } from '@/utils/validate'\r\nimport { GetBillFlow, GetSubcontractSignSetById, InitSubcontractSignSet, AddSubcontractSignSet, PutSubcontractSignSet, DeleteSubcontractSignSet } from '@/api/fbgl/subcontractSignSet.js'\r\n\r\nexport default {\r\n  name: 'SubcontractSignSetEdit',\r\n  components: {\r\n    MyForm,\r\n    FlowSelect\r\n  },\r\n  data() {\r\n    return {\r\n      size: 'mini',\r\n      inputPlaceholder: '请输入',\r\n      selectPlaceholder: '请选择',\r\n      active: 1, // 提交进度 1: 编辑信息 2: 编辑审批流程\r\n      subcontract: {},\r\n      firstForm: {\r\n        id: 0, // 新增为0\r\n        companyId: '', // 公司id\r\n        number: '', // 新增时,编号后端生成\r\n        orgId: '', // 部门id\r\n        subcontractId: '', // 分包合同Id\r\n        projectId: '', // 项目id\r\n        orderPeople: '', // 指令人\r\n        signType: '', // 签证类型（如果为外部指令，指令下达方式默认书面通知）\r\n        subReferee: '', // 分包人代表\r\n        orderMode: '', // 指令下达方式\r\n        siteSignId: '', // 对外签证id\r\n        orderDate: '', // 指令下达日期\r\n        amount: '', // 预估金额\r\n        summary: '', // 用途\r\n        remark: '', // 备注\r\n        workPart: '', // 施工部位\r\n        content: '', // 工作内容\r\n        fileList: [], // 附件\r\n        state: 0, // 状态\r\n        billFlow: null // 单据流程\r\n      },\r\n      firstRules: {\r\n        subcontractId: [\r\n          { required: true, message: '请选择合同', trigger: 'change' }\r\n        ],\r\n        amount: [\r\n          { required: true, message: '请输入金额', trigger: 'change' },\r\n          { validator: validate.money, message: '金额格式不正确', trigger: 'change' },\r\n          { validator: validate.max_amount, message: '超过所能存储的最大金额', trigger: 'change' }\r\n        ],\r\n        siteSignId: [\r\n          { required: true, message: '请输入外部签证号', trigger: 'change' }\r\n        ],\r\n        orderPeople: [\r\n          { required: true, message: '请输入指令人', trigger: 'change' }\r\n        ],\r\n        signType: [\r\n          { required: true, message: '请选择签证类型', trigger: 'change' }\r\n        ],\r\n        subReferee: [\r\n          { required: true, message: '请输入分包代表人', trigger: 'change' }\r\n        ],\r\n        orderMode: [\r\n          { required: true, message: '请选择指令下达方式', trigger: 'change' }\r\n        ],\r\n        orderDate: [\r\n          { required: true, message: '请选择指令下达日期', trigger: 'change' }\r\n        ],\r\n        summary: [\r\n          { required: true, message: '请输入事由', trigger: 'change' }\r\n        ]\r\n      },\r\n      filter: {\r\n        signTypeList: [],\r\n        orderModeList: []\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n\r\n    disabled() {\r\n      return false\r\n    },\r\n    title() {\r\n      const { active } = this\r\n      return active === 2 ? '审批流程' : '分包签证立项'\r\n    },\r\n    formNodeData() {\r\n      const {\r\n        inputPlaceholder,\r\n        selectPlaceholder,\r\n        subcontract,\r\n        firstForm,\r\n        filter: { signTypeList, orderModeList },\r\n        disabled\r\n      } = this\r\n      return [\r\n        { label: '编号:', keyword: 'number', props: { disabled: true, placeholder: '系统自动生成' }},\r\n        { label: '合同号:', keyword: 'subcontractId', component: 'SubcontractSelect', props: { placeholder: inputPlaceholder }},\r\n        { label: '项目:', value: subcontract.projectName, props: { disabled: true, placeholder: inputPlaceholder }},\r\n        { label: '组织机构:', value: subcontract.orgName, props: { disabled: true, placeholder: inputPlaceholder }},\r\n        { label: '合同名称:', value: subcontract.name, props: { disabled: true, placeholder: inputPlaceholder }},\r\n        { label: '分包单位:', value: subcontract.subcontractor, props: { disabled: true, placeholder: inputPlaceholder }},\r\n        { label: '分包人:', value: subcontract.corporation, props: { disabled: true, placeholder: inputPlaceholder }},\r\n        { label: '指令人:', keyword: 'orderPeople', props: { disabled, placeholder: inputPlaceholder }},\r\n\r\n        { label: '签证类型:', keyword: 'signType', component: 'Select', props: { disabled, propsLabel: 'name', placeholder: selectPlaceholder, options: signTypeList }},\r\n        { label: '分包人代表:', keyword: 'subReferee', props: { disabled, placeholder: inputPlaceholder }},\r\n        { label: '外部签证号:', if: firstForm.signType === 2, keyword: 'siteSignId', component: 'ProjectSiteSignSelect', props: { disabled, placeholder: selectPlaceholder }},\r\n        { label: '指令下达方式:', if: firstForm.signType !== 2, keyword: 'orderMode', component: 'Select', props: { disabled, propsLabel: 'name', placeholder: selectPlaceholder, options: orderModeList }},\r\n        { label: '指令下达日期:', keyword: 'orderDate', component: 'el-date-picker', props: { type: 'date', placeholder: '选择日期', valueFormat: 'yyyy-MM-dd' }},\r\n        { label: '预估金额:', monopolize: true, keyword: 'amount', props: { disabled, placeholder: inputPlaceholder }},\r\n        { label: '事由:', keyword: 'summary', props: { disabled, placeholder: inputPlaceholder, type: 'textarea' }},\r\n        { label: '备注:', keyword: 'remark', props: { disabled, placeholder: inputPlaceholder, type: 'textarea' }},\r\n        { label: '施工部位:', keyword: 'workPart', props: { disabled, placeholder: inputPlaceholder, type: 'textarea' }},\r\n        { label: '工作内容:', keyword: 'content', props: { disabled, placeholder: inputPlaceholder, type: 'textarea' }},\r\n        { label: '附件:', monopolize: true, keyword: 'fileList', component: 'UpFile', width: '100%', props: { isUpfile: !disabled, isDelete: !disabled, fileSize: 100, isPreview: true }}\r\n      ]\r\n    }\r\n  },\r\n  beforeRouteEnter(to, from, next) {\r\n    next(vm => {\r\n      vm.initSelect()\r\n      const newId = vm.$route.query.id\r\n      const oldId = vm.firstForm.id\r\n      const type = vm.$route.query.type\r\n      if (type === 'edit' && newId !== oldId) {\r\n      // 说明是打开另一个单子的编辑页面\r\n        vm.firstForm.id = newId\r\n        vm.initForm()\r\n        vm.initDataById(newId)\r\n        vm.active = 1\r\n      } else {\r\n        const form = vm.firstForm\r\n        const { selectOrgId } = vm.$store.state.user\r\n        form.companyId = selectOrgId\r\n        if (type === 'add' && oldId) {\r\n          vm.initForm()\r\n          vm.active = 1\r\n        }\r\n      }\r\n    })\r\n  },\r\n  methods: {\r\n    selectSubcontract(subcontract) {\r\n      this.subcontract = subcontract\r\n      this.firstForm.orgId = subcontract.orgId\r\n      this.firstForm.projectId = subcontract.projectId\r\n    },\r\n    initForm() {\r\n      Object.assign(this.$data.firstForm, this.$options.data().firstForm)\r\n      this.$nextTick(() => {\r\n        this.$refs.firstForm.clearValidate()\r\n      })\r\n    },\r\n    /**\r\n     * @description: 初始化选项框数据\r\n     */\r\n    initSelect() {\r\n      InitSubcontractSignSet().then(res => {\r\n        this.filter.signTypeList = res.signTypeList\r\n        this.filter.orderModeList = res.orderModeList\r\n      })\r\n    },\r\n    /**\r\n     * @description: 根据id获取数据并且初始化选项框数据\r\n     */\r\n    initDataById(id) {\r\n      GetSubcontractSignSetById({ id }).then(res => {\r\n        const form = this.firstForm\r\n        for (const key in form) {\r\n          if (Object.hasOwnProperty.call(form, key)) {\r\n            form[key] = res.data[key] || form[key]\r\n          }\r\n        }\r\n        this.user = res.data.person\r\n        form.billFlow = res.billFlowData\r\n        form.fileList = res.data.upFile\r\n      })\r\n    },\r\n    getBillFlow() {\r\n      // 获取流程数据\r\n      const { state, billFlow } = this.firstForm\r\n      const req = {\r\n        ...this.firstForm,\r\n        state: state || 0\r\n      }\r\n      if (billFlow) req.billFlowId = billFlow.id\r\n      delete req.billFlow\r\n      delete req.number\r\n      GetBillFlow(req).then(({ data, success, message }) => {\r\n        if (success) {\r\n          this.firstForm.billFlow = data.billFlow\r\n          this.setActive(2)\r\n        } else {\r\n          this.$message.error(message)\r\n        }\r\n      })\r\n    },\r\n    /**\r\n     * 修改填报进度\r\n     */\r\n    setActive(active) {\r\n      this.active = active\r\n    },\r\n    /**\r\n     * 下一步\r\n     */\r\n    nextStep(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          this.getBillFlow()\r\n        }\r\n      })\r\n    },\r\n    // 作废\r\n    invalidForm() {\r\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        return DeleteSubcontractSignSet({ id: this.firstForm.id })\r\n      }).then(() => {\r\n        this.$message.success('操作成功')\r\n        this.back()\r\n      })\r\n    },\r\n    /**\r\n     * 提交表单\r\n     * @param {Number} state 提交类型，0：保存；1：提交; 10000: 修改\r\n     */\r\n    submitForm(state) {\r\n      const req = {\r\n        ...this.firstForm,\r\n        state\r\n      }\r\n      delete req.number\r\n      if (this.firstForm.billFlow) {\r\n        // 获取流程组件中的数据\r\n        const billFlow = this.$refs.flowSelect.getBillFlow()\r\n        if (!billFlow) {\r\n          return false\r\n        }\r\n        req.billFlow = billFlow\r\n      } else {\r\n        this.$message.error('流程数据不能为空')\r\n        return\r\n      }\r\n      if (req.id) {\r\n        PutSubcontractSignSet(req).then(res => {\r\n          // 更新\r\n          this.$message.success('保存成功')\r\n          this.back()\r\n        })\r\n      } else {\r\n        AddSubcontractSignSet(req).then(() => {\r\n          // 添加\r\n          this.$message.success('提交成功')\r\n          this.back()\r\n        })\r\n      }\r\n    },\r\n    /**\r\n     * 返回上一页，并关闭当前页\r\n     */\r\n    back() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    }\r\n  }\r\n}\r\n",null]}