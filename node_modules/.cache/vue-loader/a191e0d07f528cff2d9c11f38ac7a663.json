{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\storage\\storageIn\\storageInDetailCheck.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\storage\\storageIn\\storageInDetailCheck.vue","mtime":1635216068750},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getStorageInDetailPaging } from '@/api/cggl/storageIn'\r\nimport { getSupplierInfo } from '@/api/cggl/supplier'\r\n// import OrgSelect2 from '@/components/OrgSelect/index2'\r\nexport default {\r\n  name: 'StorageInDetailCheck',\r\n  components: {\r\n    // OrgSelect2\r\n  },\r\n  props: {\r\n    obj: {\r\n      type: Object,\r\n      default: null\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n      },\r\n      search: {\r\n        number: '',\r\n        orgIds: [],\r\n        states: [],\r\n        supplierIds: [],\r\n        categoryName: ''\r\n      },\r\n      total: 0,\r\n      currentPage: 1,\r\n      pageSize: this.utils.getPersonalSettings().pageSize,\r\n      loading: false,\r\n      list: [],\r\n      fileList: [],\r\n      multipleSelection: [],\r\n      suppliers: [],\r\n      columnShow: { unit2: true,\r\n        brand: true,\r\n        model: true,\r\n        spec: true,\r\n        thickness: true,\r\n        texture: true,\r\n        surfaceTreatment: true,\r\n        designNumber: true\r\n      },\r\n      rules: {\r\n        // number: [{ required: true, message: '请输入', trigger: 'change' }]\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n  },\r\n  watch: {\r\n  },\r\n  activated() {\r\n  },\r\n  mounted() {\r\n    this.fetchData()\r\n  },\r\n  methods: {\r\n    async fetchData() {\r\n      this.loading = true\r\n      var postData = {}\r\n      postData.currentPage = this.currentPage\r\n      postData.pageSize = this.pageSize\r\n      postData.number = this.search.number\r\n      postData.orgIds = this.search.orgIds\r\n      if (this.obj && this.obj.orgId) {\r\n        postData.orgIds.push(this.obj.orgId)\r\n      }\r\n      postData.states = this.search.states\r\n      postData.states.push(10000) // 已入库的材料\r\n      postData.supplierIds = this.search.supplierIds\r\n      postData.categoryName = this.search.categoryName\r\n      getStorageInDetailPaging(postData).then(response => {\r\n        const { data, count } = response\r\n        this.list = data\r\n        var rows = this.obj.datalist\r\n        this.$refs.multipleTable.clearSelection()\r\n        if (rows) {\r\n          this.$nextTick(function() {\r\n            this.list.forEach(e => {\r\n              var row = rows.find(f => f.storageInDetail.id === e.id)\r\n              if (row) {\r\n                this.$refs.multipleTable.toggleRowSelection(e, true)\r\n              } else {\r\n                this.$refs.multipleTable.toggleRowSelection(e, false)\r\n              }\r\n            })\r\n          })\r\n        }\r\n        this.setColumnShow()\r\n        this.total = count\r\n        this.loading = false\r\n      })\r\n      getSupplierInfo().then(response => {\r\n        this.supplier = response.data\r\n      })\r\n    },\r\n    setColumnShow() { // 设置列的显示。列中，都没有值，就隐藏\r\n      var modelunit2 = false\r\n      var modelbrand = false\r\n      var modelmodel = false\r\n      var modelspec = false\r\n      var modelthickness = false\r\n      var modeltexture = false\r\n      var modelsurfaceTreatment = false\r\n      var modeldesignNumber = false\r\n      for (var row of this.list) {\r\n        if (row.material.unit2) { modelunit2 = true }\r\n        if (row.material.brand) { modelbrand = true }\r\n        if (row.material.model) { modelmodel = true }\r\n        if (row.material.spec) { modelspec = true }\r\n        if (row.material.thickness) { modelthickness = true }\r\n        if (row.material.texture) { modeltexture = true }\r\n        if (row.material.surfaceTreatment) { modelsurfaceTreatment = true }\r\n        if (row.material.designNumber) { modeldesignNumber = true }\r\n      }\r\n      this.columnShow['unit2'] = modelunit2\r\n      this.columnShow['brand'] = modelbrand\r\n      this.columnShow['model'] = modelmodel\r\n      this.columnShow['spec'] = modelspec\r\n      this.columnShow['thickness'] = modelthickness\r\n      this.columnShow['texture'] = modeltexture\r\n      this.columnShow['surfaceTreatment'] = modelsurfaceTreatment\r\n      this.columnShow['designNumber'] = modeldesignNumber\r\n    },\r\n    // 多选框选中数据\r\n    handleSelectionChange(selection) {\r\n      this.multipleSelection = selection\r\n    },\r\n    check() {\r\n      if (this.multipleSelection.length <= 0) {\r\n        this.$message.error('请选择材料')\r\n      } else {\r\n        var data = {\r\n          list: this.multipleSelection\r\n        }\r\n        this.$emit('dialogClose', data, 'check')\r\n      }\r\n    },\r\n    // handleCurrentChange(val) {\r\n    //   this.loading = true\r\n    //   this.ruleForm = val\r\n    //   getContractDetailsById({ contractId: val.id }).then(response => {\r\n    //     const { data } = response\r\n    //     this.list = data\r\n    //     this.setColumnShow()\r\n    //     this.loading = false\r\n    //   })\r\n    // },\r\n    sizeChange(val) {\r\n      this.pageSize = val\r\n      this.fetchData()\r\n    }\r\n  }\r\n}\r\n",null]}