{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\components\\SearchBar\\ProjectSelect.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\components\\SearchBar\\ProjectSelect.vue","mtime":1631664443458},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport SelectProject from '@/components/Other/xmgl/selectProject'\r\nimport { getProjectList } from '@/api/xmgl/project'\r\n\r\n/**\r\n * 对@/components/Other/xmgl/selectProject组件的再一层封装\r\n * 原组件只有一个弹窗选择器,其余的需要额外写\r\n * 本组件在此基础上加上了输入框,还有根据项目id找到项目名称和组织名称的方法\r\n * input(v-model)返回项目id或其数组\r\n * change返回项目全部字段或其数组\r\n */\r\nexport default {\r\n  name: 'ProjectSelect',\r\n  components: {\r\n    SelectProject\r\n  },\r\n  props: {\r\n    value: {\r\n      type: [Number, String, Array],\r\n      default: ''\r\n    },\r\n    disabled: { // 禁用\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    multiple: { // 多选\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    placeholder: { // 提示语\r\n      type: String,\r\n      default: '请选择项目'\r\n    },\r\n    size: { // 组件尺寸\r\n      type: String,\r\n      default: 'small'\r\n    },\r\n    /**\r\n     * 下面是原组件参数\r\n     */\r\n    dialogWidth: { type: String, default: '70%' }, // 弹出层的宽度\r\n    maxItem: { type: Number, default: 3 }, // 多选最大个数\r\n    projectState: { type: [Array, Number], default: () => [] }, // 项目状态,接受数组或数字\r\n    isShow: { type: Number, default: 1 }, // 是否立项（1：表示只选已立项，0:只选未立项,null都选择）\r\n    fields: { type: String, default: '' }, // 需要带出的参数 （eg:ContractDuration,Area），不写返回id,name,number,orgid,companyId,projectState,orgStr,仅限返回project里字段\r\n    orgId: { type: Number, default: null }, // 组织机构\r\n    isAuth: { type: Boolean, default: false } // 是否只显示当前用户数据范围内的数据\r\n  },\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      ProjectList: []\r\n    }\r\n  },\r\n  created() {\r\n    this.getProjectList()\r\n  },\r\n  methods: {\r\n    /**\r\n     * 弹出选择框\r\n     */\r\n    selectProject() {\r\n      this.$refs.elSelect.blur()\r\n      this.$refs['projectRef'].openDialog()\r\n    },\r\n    /**\r\n     * 选择完成回调\r\n     */\r\n    getProjectId(list) {\r\n      list = list || []\r\n      if (this.multiple) {\r\n        const newList = [...this.value, ...list]\r\n        this.$emit('input', newList.map(v => v.id))\r\n        this.$emit('change', newList)\r\n      } else {\r\n        this.$emit('input', list[0]?.id)\r\n        this.$emit('change', list[0])\r\n      }\r\n    },\r\n    /**\r\n     * 获取所有项目\r\n     */\r\n    getProjectList() {\r\n      getProjectList({\r\n        fields: '',\r\n        isAuth: false,\r\n        isShow: null,\r\n        name: '',\r\n        orgId: 0,\r\n        stateIds: []\r\n      }).then(res => {\r\n        this.ProjectList = res.data\r\n        this.buttonLoading = false\r\n      }).catch(() => { this.buttonLoading = false })\r\n    }\r\n  }\r\n\r\n}\r\n",null]}