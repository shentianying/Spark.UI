{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\storage\\allocation\\allocationEdit.vue?vue&type=template&id=1db26059&scoped=true&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\storage\\allocation\\allocationEdit.vue","mtime":1631670623793},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"app-container\" }, [\n    _c(\n      \"div\",\n      {\n        directives: [\n          {\n            name: \"show\",\n            rawName: \"v-show\",\n            value: _vm.active === 0,\n            expression: \"active===0\"\n          }\n        ]\n      },\n      [\n        _c(\n          \"el-form\",\n          {\n            ref: \"ruleForm\",\n            attrs: {\n              \"status-icon\": \"\",\n              model: _vm.ruleForm,\n              rules: _vm.rules,\n              \"label-width\": \"120px\",\n              size: \"mini\"\n            }\n          },\n          [\n            _c(\n              \"el-row\",\n              { attrs: { gutter: 10 } },\n              [\n                _c(\n                  \"el-col\",\n                  { attrs: { sm: 12, xs: 24 } },\n                  [\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"调拨单号\" } },\n                      [\n                        _c(\"el-input\", {\n                          attrs: {\n                            readonly: \"readonly\",\n                            placeholder: \"自动生成\",\n                            size: \"mini\",\n                            maxlength: \"50\"\n                          },\n                          model: {\n                            value: _vm.ruleForm.number,\n                            callback: function($$v) {\n                              _vm.$set(_vm.ruleForm, \"number\", $$v)\n                            },\n                            expression: \"ruleForm.number\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _vm.activate\n                      ? _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"调出项目\", prop: \"orgIdOut\" } },\n                          [\n                            _c(\"org-select2\", {\n                              key: _vm.orgKey,\n                              attrs: {\n                                \"data-mode\": 0,\n                                size: \"mini\",\n                                \"collapse-tags\": false,\n                                \"show-all-levels\": true,\n                                multiple: false,\n                                filterable: true,\n                                \"check-strictly\": false,\n                                \"select-data\": _vm.ruleForm.orgIdOut,\n                                \"select-style\": \"width:100%;\"\n                              },\n                              model: {\n                                value: _vm.ruleForm.orgIdOut,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.ruleForm, \"orgIdOut\", $$v)\n                                },\n                                expression: \"ruleForm.orgIdOut\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _vm.activate\n                      ? _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"调入项目\", prop: \"orgIdIn\" } },\n                          [\n                            _c(\"org-select2\", {\n                              key: _vm.orgKey,\n                              attrs: {\n                                \"data-mode\": 0,\n                                size: \"mini\",\n                                \"collapse-tags\": false,\n                                \"show-all-levels\": true,\n                                multiple: false,\n                                filterable: true,\n                                \"check-strictly\": false,\n                                \"select-data\": _vm.ruleForm.orgIdIn,\n                                \"select-style\": \"width:100%;\"\n                              },\n                              model: {\n                                value: _vm.ruleForm.orgIdIn,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.ruleForm, \"orgIdIn\", $$v)\n                                },\n                                expression: \"ruleForm.orgIdIn\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"经办人\", prop: \"personId\" } },\n                      [\n                        _c(\n                          \"el-select\",\n                          {\n                            staticStyle: { width: \"120px\" },\n                            attrs: {\n                              size: \"mini\",\n                              filterable: \"\",\n                              remote: \"\",\n                              \"reserve-keyword\": \"\",\n                              clearable: \"\",\n                              \"remote-method\": function(query) {\n                                _vm.getRemotePerson(query)\n                              },\n                              placeholder: \"请选择\",\n                              loading: _vm.loading\n                            },\n                            nativeOn: {\n                              click: function($event) {\n                                return _vm.selectPerson()\n                              }\n                            },\n                            model: {\n                              value: _vm.ruleForm.personId,\n                              callback: function($$v) {\n                                _vm.$set(_vm.ruleForm, \"personId\", $$v)\n                              },\n                              expression: \"ruleForm.personId\"\n                            }\n                          },\n                          _vm._l(_vm.personList, function(item, index) {\n                            return _c(\n                              \"el-option\",\n                              {\n                                key: index,\n                                attrs: { label: item.name, value: item.id }\n                              },\n                              [_c(\"span\", [_vm._v(_vm._s(item.name))])]\n                            )\n                          }),\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-col\",\n                  { attrs: { sm: 12, xs: 24 } },\n                  [\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"备注\", prop: \"remark\" } },\n                      [\n                        _c(\"el-input\", {\n                          attrs: {\n                            type: \"textarea\",\n                            rows: 3,\n                            size: \"mini\",\n                            maxlength: \"500\"\n                          },\n                          model: {\n                            value: _vm.ruleForm.remark,\n                            callback: function($$v) {\n                              _vm.$set(_vm.ruleForm, \"remark\", $$v)\n                            },\n                            expression: \"ruleForm.remark\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"附件\" } },\n                      [\n                        _c(\"up-file\", {\n                          key: \"fileListKey\",\n                          attrs: {\n                            \"is-preview\": true,\n                            \"is-upfile\": true,\n                            \"is-delete\": true,\n                            \"file-list\": _vm.ruleForm.fileList\n                          },\n                          model: {\n                            value: _vm.ruleForm.fileList,\n                            callback: function($$v) {\n                              _vm.$set(_vm.ruleForm, \"fileList\", $$v)\n                            },\n                            expression: \"ruleForm.fileList\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            )\n          ],\n          1\n        ),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"flex_div\" },\n          [\n            _c(\n              \"el-button\",\n              {\n                attrs: { loading: _vm.loading, size: \"mini\" },\n                on: {\n                  click: function($event) {\n                    return _vm.add()\n                  }\n                }\n              },\n              [_vm._v(\"选择材料\")]\n            )\n          ],\n          1\n        ),\n        _vm._v(\" \"),\n        _c(\n          \"el-table\",\n          {\n            directives: [\n              {\n                name: \"loading\",\n                rawName: \"v-loading\",\n                value: _vm.loading,\n                expression: \"loading\"\n              }\n            ],\n            attrs: {\n              data: _vm.list,\n              \"element-loading-text\": \"Loading\",\n              border: \"\",\n              fit: \"\",\n              \"highlight-current-row\": \"\",\n              size: \"mini\"\n            }\n          },\n          [\n            _c(\"el-table-column\", {\n              attrs: {\n                label: \"材料名称\",\n                fixed: \"left\",\n                align: \"center\",\n                \"min-width\": \"100\"\n              },\n              scopedSlots: _vm._u([\n                {\n                  key: \"default\",\n                  fn: function(scope) {\n                    return [\n                      _vm._v(\n                        \"\\n          \" +\n                          _vm._s(scope.row.material.materialCategory.name) +\n                          \"\\n        \"\n                      )\n                    ]\n                  }\n                }\n              ])\n            }),\n            _vm._v(\" \"),\n            _vm.columnShow.brand\n              ? _c(\"el-table-column\", {\n                  attrs: { label: \"品牌/产地\", align: \"center\", width: \"80\" },\n                  scopedSlots: _vm._u(\n                    [\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _vm._v(\n                              \"\\n          \" +\n                                _vm._s(scope.row.material.brand) +\n                                \"\\n        \"\n                            )\n                          ]\n                        }\n                      }\n                    ],\n                    null,\n                    false,\n                    2431931939\n                  )\n                })\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.columnShow.model\n              ? _c(\"el-table-column\", {\n                  attrs: { label: \"型号\", align: \"center\", width: \"80\" },\n                  scopedSlots: _vm._u(\n                    [\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _vm._v(\n                              \"\\n          \" +\n                                _vm._s(scope.row.material.model) +\n                                \"\\n        \"\n                            )\n                          ]\n                        }\n                      }\n                    ],\n                    null,\n                    false,\n                    1168672119\n                  )\n                })\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.columnShow.spec\n              ? _c(\"el-table-column\", {\n                  attrs: { label: \"规格/尺寸\", align: \"center\", width: \"100\" },\n                  scopedSlots: _vm._u(\n                    [\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _vm._v(\n                              \"\\n          \" +\n                                _vm._s(scope.row.material.spec) +\n                                \"\\n        \"\n                            )\n                          ]\n                        }\n                      }\n                    ],\n                    null,\n                    false,\n                    2123171101\n                  )\n                })\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.columnShow.thickness\n              ? _c(\"el-table-column\", {\n                  attrs: { label: \"厚度\", align: \"center\", width: \"80\" },\n                  scopedSlots: _vm._u(\n                    [\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _vm._v(\n                              \"\\n          \" +\n                                _vm._s(scope.row.material.thickness) +\n                                \"\\n        \"\n                            )\n                          ]\n                        }\n                      }\n                    ],\n                    null,\n                    false,\n                    176905262\n                  )\n                })\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.columnShow.texture\n              ? _c(\"el-table-column\", {\n                  attrs: { label: \"材质\", align: \"center\", width: \"100\" },\n                  scopedSlots: _vm._u(\n                    [\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _vm._v(\n                              \"\\n          \" +\n                                _vm._s(scope.row.material.texture) +\n                                \"\\n        \"\n                            )\n                          ]\n                        }\n                      }\n                    ],\n                    null,\n                    false,\n                    1172573831\n                  )\n                })\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.columnShow.surfaceTreatment\n              ? _c(\"el-table-column\", {\n                  attrs: {\n                    label: \"表面处理/工艺、色号\",\n                    align: \"center\",\n                    width: \"200\"\n                  },\n                  scopedSlots: _vm._u(\n                    [\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _vm._v(\n                              \"\\n          \" +\n                                _vm._s(scope.row.material.surfaceTreatment) +\n                                \"\\n        \"\n                            )\n                          ]\n                        }\n                      }\n                    ],\n                    null,\n                    false,\n                    2648267401\n                  )\n                })\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.columnShow.designNumber\n              ? _c(\"el-table-column\", {\n                  attrs: { label: \"设计编号\", align: \"center\", width: \"100\" },\n                  scopedSlots: _vm._u(\n                    [\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _vm._v(\n                              \"\\n          \" +\n                                _vm._s(scope.row.material.designNumber) +\n                                \"\\n        \"\n                            )\n                          ]\n                        }\n                      }\n                    ],\n                    null,\n                    false,\n                    3184330857\n                  )\n                })\n              : _vm._e(),\n            _vm._v(\" \"),\n            _c(\"el-table-column\", {\n              attrs: { label: \"主单位\", align: \"center\", width: \"60\" },\n              scopedSlots: _vm._u([\n                {\n                  key: \"default\",\n                  fn: function(scope) {\n                    return [\n                      _vm._v(\n                        \"\\n          \" +\n                          _vm._s(scope.row.material.materialCategory.unit) +\n                          \"\\n        \"\n                      )\n                    ]\n                  }\n                }\n              ])\n            }),\n            _vm._v(\" \"),\n            _c(\"el-table-column\", {\n              attrs: { label: \"库存主数量\", align: \"center\", width: \"150\" },\n              scopedSlots: _vm._u([\n                {\n                  key: \"default\",\n                  fn: function(scope) {\n                    return [\n                      _vm._v(\n                        \"\\n          \" +\n                          _vm._s(scope.row.storageInDetail.quantity) +\n                          \"\\n        \"\n                      )\n                    ]\n                  }\n                }\n              ])\n            }),\n            _vm._v(\" \"),\n            _c(\"el-table-column\", {\n              attrs: { label: \"调拨主数量\", align: \"center\", width: \"200\" },\n              scopedSlots: _vm._u([\n                {\n                  key: \"default\",\n                  fn: function(scope) {\n                    return [\n                      _c(\"el-input-number\", {\n                        attrs: {\n                          \"controls-position\": \"right\",\n                          size: \"mini\",\n                          step: 0.0001,\n                          min: 0,\n                          max: scope.row.storageInDetail.quantity\n                        },\n                        on: { change: _vm.handleChange },\n                        model: {\n                          value: scope.row.quantity,\n                          callback: function($$v) {\n                            _vm.$set(scope.row, \"quantity\", $$v)\n                          },\n                          expression: \"scope.row.quantity\"\n                        }\n                      })\n                    ]\n                  }\n                }\n              ])\n            }),\n            _vm._v(\" \"),\n            _vm.columnShow.unit2\n              ? _c(\"el-table-column\", {\n                  attrs: { label: \"辅单位\", align: \"center\", width: \"60\" },\n                  scopedSlots: _vm._u(\n                    [\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _vm._v(\n                              \"\\n          \" +\n                                _vm._s(scope.row.material.unit2) +\n                                \"\\n        \"\n                            )\n                          ]\n                        }\n                      }\n                    ],\n                    null,\n                    false,\n                    161164524\n                  )\n                })\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.columnShow.unit2\n              ? _c(\"el-table-column\", {\n                  attrs: { label: \"库存辅数量\", align: \"center\", width: \"150\" },\n                  scopedSlots: _vm._u(\n                    [\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _vm._v(\n                              \"\\n          \" +\n                                _vm._s(scope.row.storageInDetail.quantity2) +\n                                \"\\n        \"\n                            )\n                          ]\n                        }\n                      }\n                    ],\n                    null,\n                    false,\n                    3000705845\n                  )\n                })\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.columnShow.unit2\n              ? _c(\"el-table-column\", {\n                  attrs: { label: \"调拨辅数量\", align: \"center\", width: \"200\" },\n                  scopedSlots: _vm._u(\n                    [\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _c(\"el-input-number\", {\n                              attrs: {\n                                \"controls-position\": \"right\",\n                                size: \"mini\",\n                                step: 0.0001,\n                                min: 0,\n                                max: scope.row.storageInDetail.quantity2\n                              },\n                              on: { change: _vm.handleChange },\n                              model: {\n                                value: scope.row.quantity2,\n                                callback: function($$v) {\n                                  _vm.$set(scope.row, \"quantity2\", $$v)\n                                },\n                                expression: \"scope.row.quantity2\"\n                              }\n                            })\n                          ]\n                        }\n                      }\n                    ],\n                    null,\n                    false,\n                    2870157640\n                  )\n                })\n              : _vm._e(),\n            _vm._v(\" \"),\n            _c(\"el-table-column\", {\n              attrs: { label: \"备注\", align: \"center\", \"min-width\": \"200\" },\n              scopedSlots: _vm._u([\n                {\n                  key: \"default\",\n                  fn: function(scope) {\n                    return [\n                      _c(\"el-input\", {\n                        attrs: {\n                          placeholder: \"请输入\",\n                          size: \"mini\",\n                          maxlength: \"200\"\n                        },\n                        model: {\n                          value: scope.row.remark,\n                          callback: function($$v) {\n                            _vm.$set(scope.row, \"remark\", $$v)\n                          },\n                          expression: \"scope.row.remark\"\n                        }\n                      })\n                    ]\n                  }\n                }\n              ])\n            })\n          ],\n          1\n        ),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticStyle: { \"text-align\": \"center\", \"margin-top\": \"15px\" } },\n          [\n            _c(\n              \"el-button\",\n              {\n                attrs: { size: \"mini\", type: \"success\", loading: _vm.loading },\n                on: {\n                  click: function($event) {\n                    return _vm.getDynamicFlow()\n                  }\n                }\n              },\n              [_vm._v(\"下一步➜\")]\n            )\n          ],\n          1\n        )\n      ],\n      1\n    ),\n    _vm._v(\" \"),\n    _c(\n      \"div\",\n      {\n        directives: [\n          {\n            name: \"show\",\n            rawName: \"v-show\",\n            value: _vm.active === 1,\n            expression: \"active===1\"\n          }\n        ]\n      },\n      [\n        _vm.billFlow\n          ? _c(\"flow-select\", {\n              ref: \"flowSelect\",\n              attrs: { \"bill-flow\": _vm.billFlow }\n            })\n          : _vm._e(),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticStyle: { \"text-align\": \"center\", \"margin-top\": \"10px\" } },\n          [\n            _vm.ruleForm.id > 0\n              ? _c(\n                  \"el-button\",\n                  {\n                    attrs: {\n                      size: \"mini\",\n                      type: \"warning\",\n                      loading: _vm.loading\n                    },\n                    on: {\n                      click: function($event) {\n                        return _vm.cancel()\n                      }\n                    }\n                  },\n                  [_vm._v(\"作废\")]\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _c(\n              \"el-button\",\n              {\n                attrs: { size: \"mini\", type: \"primary\", loading: _vm.loading },\n                on: {\n                  click: function($event) {\n                    return _vm.submitForm(1)\n                  }\n                }\n              },\n              [_vm._v(\"提交\")]\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"el-button\",\n              {\n                attrs: { size: \"mini\", type: \"success\", loading: _vm.loading },\n                on: {\n                  click: function($event) {\n                    return _vm.submitForm(0)\n                  }\n                }\n              },\n              [_vm._v(\"保存\")]\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"el-button\",\n              {\n                attrs: { size: \"mini\", type: \"success\", loading: _vm.loading },\n                on: {\n                  click: function($event) {\n                    return _vm.previous()\n                  }\n                }\n              },\n              [_vm._v(\"上一步\")]\n            )\n          ],\n          1\n        )\n      ],\n      1\n    ),\n    _vm._v(\" \"),\n    _vm.dialogTableVisible\n      ? _c(\n          \"div\",\n          [\n            _c(\n              \"el-dialog\",\n              {\n                attrs: {\n                  title: _vm.dialogTitle,\n                  \"destroy-on-close\": true,\n                  visible: _vm.dialogTableVisible,\n                  width: _vm.dialogWidth,\n                  \"append-to-body\": false\n                },\n                on: {\n                  \"update:visible\": function($event) {\n                    _vm.dialogTableVisible = $event\n                  }\n                }\n              },\n              [\n                _c(_vm.comName, {\n                  tag: \"component\",\n                  attrs: { obj: _vm.currentRow, \"is-preview\": true },\n                  on: { dialogClose: _vm.dialogClose }\n                })\n              ],\n              1\n            )\n          ],\n          1\n        )\n      : _vm._e(),\n    _vm._v(\" \"),\n    _c(\n      \"div\",\n      [\n        _vm.loadFlow\n          ? _c(\"flow-attitude\", {\n              ref: \"flowAttitude\",\n              attrs: { show: false, para: _vm.attitudePara }\n            })\n          : _vm._e()\n      ],\n      1\n    ),\n    _vm._v(\" \"),\n    _c(\n      \"div\",\n      [\n        _c(\"select-person\", {\n          ref: \"personRef\",\n          attrs: { multiple: false },\n          on: { getPersons: _vm.getPersons }\n        })\n      ],\n      1\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}