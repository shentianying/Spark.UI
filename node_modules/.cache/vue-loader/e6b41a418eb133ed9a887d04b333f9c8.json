{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\qxgl\\pageAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\qxgl\\pageAdd.vue","mtime":1634781213006},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { GetAllList, add, update } from '@/api/xtgl/page'\r\nimport { getTree } from '@/utils/index'\r\n// import OrgSelect2 from '@/components/OrgSelect/index2'\r\n// import the component\r\nimport Treeselect from '@riophae/vue-treeselect'\r\n// import the styles\r\nimport '@riophae/vue-treeselect/dist/vue-treeselect.css'\r\nimport svgIcons from '@/utils/svg-icons'\r\nexport default {\r\n  name: 'AddPage',\r\n  components: {\r\n    // OrgSelect2\r\n    Treeselect\r\n  },\r\n  props: {\r\n    obj: {\r\n      type: Object,\r\n      default: null\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        pid: 0,\r\n        sort: 1,\r\n        routerName: '',\r\n        routerRedirect: 'noRedirect',\r\n        routerPath: '',\r\n        routerComponent: 'Layout',\r\n        routerIcon: '',\r\n        routerTitle: '',\r\n        routerHidden: 'false', // 默认显示\r\n        isPage: true\r\n      },\r\n      svgIcons,\r\n      treeList: null,\r\n      buttonLoading: false,\r\n      isLoad: false,\r\n      rules: {\r\n        routerTitle: [{ required: true, message: '必填', trigger: 'blur' }]\r\n        // routerName: [{ required: true, message: '必填', trigger: 'blur' }],\r\n        // routerPath: [{ required: true, message: '必填', trigger: 'blur' }],\r\n        // routerComponent: [{ required: true, message: '必填', trigger: 'blur' }]\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    // getPid() {\r\n    //   return this.ruleForm.pid\r\n    // }\r\n  },\r\n  watch: {\r\n    'ruleForm.pid'(newValue, oldValue) {\r\n      // 如果是添加有页面，就监控\r\n      if (!this.obj) {\r\n        if (newValue === 0) {\r\n          this.ruleForm.routerRedirect = 'noRedirect'\r\n          this.ruleForm.routerComponent = 'Layout'\r\n        } else {\r\n          this.ruleForm.routerRedirect = ''\r\n          this.ruleForm.routerComponent = ''\r\n        }\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initData()\r\n    this.initTree()\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n          newObj.routerHidden = newObj.routerHidden === 'true'\r\n          // newObj.isPage = newObj.isPage === 'true'\r\n          this.buttonLoading = true\r\n          if (this.obj) {\r\n            newObj.id = this.obj.id\r\n            update(newObj).then(response => {\r\n              this.$message(response.message)\r\n              this.buttonLoading = true\r\n              this.$emit('dialogClose')\r\n            }).catch(() => { this.buttonLoading = false })\r\n          } else {\r\n            add(newObj).then(response => {\r\n              this.$message(response.message)\r\n              this.buttonLoading = true\r\n              this.$emit('dialogClose')\r\n            }).catch(() => { this.buttonLoading = false })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields()\r\n    },\r\n    initData() {\r\n      if (this.obj) {\r\n        var newObj = JSON.parse(JSON.stringify(this.obj))\r\n        newObj.routerHidden = newObj.routerHidden ? 'true' : 'false'\r\n        this.ruleForm = newObj\r\n        // console.log('传过来的数据：', newObj)\r\n      }\r\n    },\r\n    initTree() {\r\n      this.listLoading = true\r\n      GetAllList().then(response => {\r\n        response.data.forEach(ele => {\r\n          ele.label = ele.routerTitle\r\n        })\r\n        // this.treeList = response.data\r\n        this.isLoad = true\r\n        // console.log('树形结构：', this.treeList)\r\n        const result = getTree(0, response.data)\r\n        this.treeList = [{ id: 0, pid: 0, label: '一级根目录', children: result }]\r\n        this.listLoading = false\r\n      })\r\n    }\r\n  }\r\n}\r\n",null]}