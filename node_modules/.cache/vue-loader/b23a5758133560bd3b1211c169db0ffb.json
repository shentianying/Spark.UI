{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\ywgl\\zbwj\\bidDocumentEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\ywgl\\zbwj\\bidDocumentEdit.vue","mtime":1635988585026},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { putBidDocument, addBidDocument, getBidDocumentEditInit, getBidDocumentById, getBillFlow, deleteBidDocument } from '@/api/ywgl/bidDocument'\r\nimport { getBussinessInfoById } from '@/api/ywgl/bussinessInfo'\r\nimport UpFile from '@/components/UpLoad/UpFile'\r\nimport OrgSelect2 from '@/components/OrgSelect/index2'\r\nimport FlowSelect from '@/components/Flow/flowSelect'\r\nimport { validate } from '@/utils/validate'\r\nimport SelectBussinessInfo from '@/components/Other/ywgl/selectBussinessInfo'\r\nexport default {\r\n  name: 'BidDocumentEdit',\r\n  components: {\r\n    UpFile,\r\n    OrgSelect2,\r\n    FlowSelect,\r\n    SelectBussinessInfo\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        id: 0,\r\n        number: '',\r\n        orgId: null,\r\n        companyId: this.$store.state.user.selectOrgId,\r\n        bussinessInfoId: null,\r\n        tenderStartDate: null,\r\n        bidDeposit: null,\r\n        depositPayEndDate: null,\r\n        qualityGoal: '',\r\n        qaEndDate: null,\r\n        contractContent: '',\r\n        feeStandard: '',\r\n        paymentTerms: '',\r\n        materialSupplyWay: '',\r\n        breachLiability: '',\r\n        bidEvaluationMethod: '',\r\n        performanceGuaranteeWay: '',\r\n        state: 0,\r\n        billFlowId: 0,\r\n        fileList: []\r\n      },\r\n      infoForm: {\r\n        startFinishDate: null,\r\n        tenderMode: '',\r\n        reliableLevel: '',\r\n        area: '',\r\n        decorationArea: '',\r\n        floors: '',\r\n        developer: '',\r\n        houseProperty: '',\r\n        informationSource: '',\r\n        cost: null,\r\n        tenderEndDate: null,\r\n        competitors: ''\r\n      },\r\n      keyOrg: 0,\r\n      orgList: null,\r\n      tenderModeList: [],\r\n      informationSourceList: [],\r\n      housePropertyList: [],\r\n      reliableLevelList: [],\r\n      billFlow: null,\r\n\r\n      bidDocumentId: null,\r\n      bussinessInfoName: '',\r\n\r\n      active: 0,\r\n      buttonLoading: false,\r\n      rules: {\r\n        bussinessInfoId: [{ required: true, message: '请输入', trigger: 'change' }],\r\n        bidDeposit: [{ validator: validate.dbl, required: true, message: '必须为数字格式', trigger: 'blur' }],\r\n        tenderStartDate: [{ required: true, message: '不能为空', trigger: ['blur', 'change'] }],\r\n        depositPayEndDate: [{ required: true, message: '不能为空', trigger: ['blur', 'change'] }],\r\n        qaEndDate: [{ required: true, message: '不能为空', trigger: ['blur', 'change'] }],\r\n        qualityGoal: [{ required: true, message: '请输入', trigger: 'blur' }],\r\n        contractContent: [{ required: true, message: '请输入', trigger: 'blur' }],\r\n        feeStandard: [{ required: true, message: '请输入', trigger: 'blur' }],\r\n        paymentTerms: [{ required: true, message: '请输入', trigger: 'blur' }],\r\n        materialSupplyWay: [{ required: true, message: '请输入', trigger: 'blur' }],\r\n        breachLiability: [{ required: true, message: '请输入', trigger: 'blur' }],\r\n        bidEvaluationMethod: [{ required: true, message: '请输入', trigger: 'blur' }],\r\n        performanceGuaranteeWay: [{ required: true, message: '请输入', trigger: 'blur' }]\r\n      }\r\n    }\r\n  },\r\n  activated() {\r\n    if (this.$route.params.id) {\r\n      this.ruleForm.orgId = null // 刷新 org 列表\r\n      this.initData()\r\n      this.refreshRouterName = this.$route.params.refreshRouterName\r\n    }\r\n  },\r\n  mounted() {\r\n    if (!this.$route.params.id) {\r\n      this.initData()\r\n      this.activate = true\r\n    }\r\n  },\r\n  methods: {\r\n    submitForm(formName, state) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n          let tempIds = []\r\n          if (newObj.fileList.length > 0) {\r\n            tempIds = newObj.fileList.map(m => {\r\n              return { id: m.id, addFlag: m.addFlag }\r\n            })\r\n          } else {\r\n            if (state === 1) {\r\n              this.$message('必须上传附件')\r\n              return\r\n            }\r\n          }\r\n\r\n          if (!this.infoForm.tenderEndDate) {\r\n            this.$message('请完善经营信息中投标截止日期!')\r\n            return\r\n          }\r\n\r\n          if (state === 1 && (!this.infoForm.reliableLevel || !this.infoForm.floors || !this.infoForm.houseProperty || !this.infoForm.informationSource || !this.infoForm.developer || !this.infoForm.decorationArea)) {\r\n            this.$message('经营信息不全，无法提交!')\r\n            return\r\n          }\r\n          newObj.fileList = tempIds\r\n          newObj.state = state\r\n\r\n          if (this.billFlow) {\r\n            // 获取流程组件中的数据\r\n            const billFlow = this.$refs.flowSelect.getBillFlow()\r\n            if (!billFlow) {\r\n              return false\r\n            }\r\n            newObj.billFlow = billFlow\r\n          } else {\r\n            this.$message('流程数据不能为空')\r\n            return\r\n          }\r\n          this.buttonLoading = true\r\n\r\n          if (this.bidDocumentId) {\r\n            putBidDocument(newObj).then(response => {\r\n              if (response.errorMsg) {\r\n              // 验证错误\r\n                this.$alert(`${response.errorMsg.replace(/；/g, '；<br />')}`,\r\n                  { dangerouslyUseHTMLString: true })\r\n                return\r\n              }\r\n              this.$message(response.message)\r\n              this.buttonLoading = false\r\n              this.closeThePage()\r\n            }).catch(() => {\r\n              this.buttonLoading = false\r\n              this.active = 0\r\n            })\r\n          } else {\r\n            addBidDocument(newObj).then(response => {\r\n              if (response.errorMsg) {\r\n                // 验证错误\r\n                this.$alert(`${response.errorMsg.replace(/；/g, '；<br />')}`,\r\n                  { dangerouslyUseHTMLString: true })\r\n                return\r\n              }\r\n              this.$message(response.message)\r\n              this.buttonLoading = false\r\n              this.closeThePage()\r\n              // this.setData(response)\r\n            }).catch(() => {\r\n              this.buttonLoading = false\r\n              this.active = 0\r\n            })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    initData() {\r\n      // 有参数id 就是编辑\r\n      if (this.$route.query.id) {\r\n        this.bidDocumentId = this.$route.query.id\r\n      }\r\n      new Promise((resolve, reject) => {\r\n        getBidDocumentEditInit().then(response => {\r\n          const { orgList, result1, result2, result3, result4 } = response\r\n          this.orgList = orgList\r\n          this.tenderModeList = result1\r\n          this.reliableLevelList = result2\r\n          this.informationSourceList = result3\r\n          this.housePropertyList = result4\r\n          resolve(orgList)\r\n        })\r\n      }).then(orgList => {\r\n        if (this.bidDocumentId) {\r\n          getBidDocumentById({ id: this.bidDocumentId }).then(response => {\r\n            const { data } = response\r\n            this.ruleForm = data\r\n            this.keyOrg += 1\r\n            this.ruleForm.fileList = data.upFile\r\n            this.bussinessInfoName = data.bussinessInfo.projectName\r\n            const startDate = data.bussinessInfo.startDate ? (data.bussinessInfo.startDate || '').split(' ')[0] : ''\r\n            const finishDate = data.bussinessInfo.finishDate ? (data.bussinessInfo.finishDate || '').split(' ')[0] : ''\r\n            this.infoForm.startFinishDate = startDate + '/' + finishDate\r\n            this.infoForm.tenderMode = (data.bussinessInfo.tenderMode && this.tenderModeList) ? this.tenderModeList.find(f => f.value === data.bussinessInfo.tenderMode).name : ''\r\n            this.infoForm.reliableLevel = (data.bussinessInfo.reliableLevel && this.reliableLevelList) ? this.reliableLevelList.find(f => f.value === data.bussinessInfo.reliableLevel).name : ''\r\n            this.infoForm.area = data.address\r\n            this.infoForm.decorationArea = data.bussinessInfo.decorationArea ? this.utils.formatMoney(data.bussinessInfo.decorationArea, 2, 0) : null\r\n            this.infoForm.floors = data.bussinessInfo.floors\r\n            this.infoForm.developer = data.bussinessInfo.customer.name\r\n            this.infoForm.houseProperty = (data.bussinessInfo.houseProperty && this.housePropertyList) ? this.housePropertyList.find(f => f.value === data.bussinessInfo.houseProperty).name : ''\r\n            this.infoForm.informationSource = (data.bussinessInfo.informationSource && this.informationSourceList) ? this.informationSourceList.find(f => f.value === data.bussinessInfo.informationSource).name : ''\r\n            this.infoForm.cost = data.cost ? this.utils.formatMoney(data.cost, 2, 0) : null\r\n            this.infoForm.tenderEndDate = data.bussinessInfo.tenderEndDate ? (data.bussinessInfo.tenderEndDate || '').split(' ')[0] : ''\r\n            this.infoForm.competitors = data.bussinessInfo.competitors\r\n          })\r\n        }\r\n      }).catch(() => {\r\n        this.$message.error('信息错误')\r\n      })\r\n    },\r\n    getDynamicFlow(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n\r\n          getBillFlow(newObj).then(response => {\r\n            if (response.success) {\r\n              this.billFlow = response.data.billFlow\r\n              this.active = 1\r\n            } else {\r\n              this.$message(response.message)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    previous() {\r\n      // 上一步\r\n      this.active--\r\n      this.billFlow = null\r\n    },\r\n    cancel() {\r\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.active = 2\r\n        this.buttonloading = true\r\n        deleteBidDocument({ id: this.ruleForm.id }).then(response => {\r\n          this.$message(response.message)\r\n          this.buttonloading = false\r\n          this.closeThePage()\r\n        })\r\n      }).catch(() => {})\r\n    },\r\n    closeThePage() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    },\r\n    selectBussinessInfo() {\r\n      this.$refs.bussinessInfoRef.openDialog()\r\n    },\r\n    getBussinessInfo(data) {\r\n      if (data.length > 0) {\r\n        this.ruleForm.bussinessInfoId = data[0].id\r\n        this.bussinessInfoName = data[0].projectName\r\n        getBussinessInfoById({ id: this.ruleForm.bussinessInfoId }).then((response) => {\r\n          const { data } = response\r\n          this.ruleForm.orgId = data.orgId\r\n          this.keyOrg += 1\r\n          this.ruleForm.companyId = data.companyId\r\n\r\n          const startDate = data.startDate ? (data.startDate || '').split(' ')[0] : ''\r\n          const finishDate = data.finishDate ? (data.finishDate || '').split(' ')[0] : ''\r\n          this.infoForm.startFinishDate = startDate + '/' + finishDate\r\n          this.infoForm.tenderMode = (data.tenderMode && this.tenderModeList) ? this.tenderModeList.find(f => f.value === data.tenderMode).name : ''\r\n          this.infoForm.reliableLevel = (data.reliableLevel && this.reliableLevelList) ? this.reliableLevelList.find(f => f.value === data.reliableLevel).name : ''\r\n          this.infoForm.area = data.address\r\n          this.infoForm.decorationArea = data.decorationArea ? this.utils.formatMoney(data.decorationArea, 2, 0) : null\r\n          this.infoForm.floors = data.floors\r\n          this.infoForm.developer = data.customer.name\r\n          this.infoForm.houseProperty = (data.houseProperty && this.housePropertyList) ? this.housePropertyList.find(f => f.value === data.houseProperty).name : ''\r\n          this.infoForm.informationSource = (data.informationSource && this.informationSourceList) ? this.informationSourceList.find(f => f.value === data.informationSource).name : ''\r\n          this.infoForm.cost = data.cost ? this.utils.formatMoney(data.cost, 2, 0) : null\r\n          this.infoForm.tenderEndDate = data.tenderEndDate ? (data.tenderEndDate || '').split(' ')[0] : ''\r\n          this.infoForm.competitors = data.competitors\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n",null]}