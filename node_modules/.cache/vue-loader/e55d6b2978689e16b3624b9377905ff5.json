{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\material\\components\\addRangeMCP.vue?vue&type=template&id=3d3c1921&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\material\\components\\addRangeMCP.vue","mtime":1626514528229},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"el-form\",\n        {\n          ref: \"ruleForm\",\n          attrs: {\n            \"status-icon\": \"\",\n            model: _vm.ruleForm,\n            rules: _vm.rules,\n            \"label-width\": \"60px\",\n            size: \"mini\"\n          }\n        },\n        [\n          _c(\"el-form-item\", [\n            _c(\"span\", { staticClass: \"notes\" }, [\n              _c(\"i\", { staticClass: \"el-icon-info\" }),\n              _vm._v(\n                \"为所选类别批量添加属性（只针对复选框选中的属性有效，所有属性只添加不删除）\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"类别\" } },\n            _vm._l(_vm.nodes, function(item, index) {\n              return _c(\"el-tag\", { key: index }, [_vm._v(_vm._s(item.label))])\n            }),\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"属性\" } },\n            [\n              _c(\n                \"el-table\",\n                {\n                  directives: [\n                    {\n                      name: \"loading\",\n                      rawName: \"v-loading\",\n                      value: _vm.listLoading,\n                      expression: \"listLoading\"\n                    }\n                  ],\n                  ref: \"selectTable\",\n                  attrs: {\n                    data: _vm.list,\n                    \"element-loading-text\": \"Loading\",\n                    border: \"\",\n                    fit: \"\",\n                    \"highlight-current-row\": \"\",\n                    size: \"mini\",\n                    \"tooltip-effect\": \"dark\"\n                  },\n                  on: { \"selection-change\": _vm.handleSelectionChange }\n                },\n                [\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      type: \"selection\",\n                      align: \"center\",\n                      selectable: _vm.checkboxT,\n                      width: \"40\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: { align: \"center\", label: \"属性名称\", width: \"120\" },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _vm._v(\n                              \"\\n            \" +\n                                _vm._s(scope.row.name) +\n                                \"\\n          \"\n                            )\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"允许手动输入\",\n                      width: \"70\"\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _c(\"el-switch\", {\n                              attrs: {\n                                \"active-color\": \"#13ce66\",\n                                \"inactive-color\": \"#ff4949\"\n                              },\n                              model: {\n                                value: scope.row.canInput,\n                                callback: function($$v) {\n                                  _vm.$set(scope.row, \"canInput\", $$v)\n                                },\n                                expression: \"scope.row.canInput\"\n                              }\n                            })\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: { align: \"center\", label: \"是否必输\", width: \"70\" },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _c(\"el-switch\", {\n                              attrs: {\n                                \"active-color\": \"#13ce66\",\n                                \"inactive-color\": \"#ff4949\"\n                              },\n                              model: {\n                                value: scope.row.isRequired2,\n                                callback: function($$v) {\n                                  _vm.$set(scope.row, \"isRequired2\", $$v)\n                                },\n                                expression: \"scope.row.isRequired2\"\n                              }\n                            })\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      align: \"center\",\n                      label: \"是否目标成本必输\",\n                      width: \"70\"\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _c(\"el-switch\", {\n                              attrs: {\n                                \"active-color\": \"#13ce66\",\n                                \"inactive-color\": \"#ff4949\"\n                              },\n                              model: {\n                                value: scope.row.isTargetRequired,\n                                callback: function($$v) {\n                                  _vm.$set(scope.row, \"isTargetRequired\", $$v)\n                                },\n                                expression: \"scope.row.isTargetRequired\"\n                              }\n                            })\n                          ]\n                        }\n                      }\n                    ])\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: { align: \"center\", label: \"可选项\" },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return _vm._l(scope.row.MCPItem, function(\n                            item,\n                            index\n                          ) {\n                            return _c(\n                              \"el-tag\",\n                              { key: index, attrs: { type: \"primary\" } },\n                              [_vm._v(_vm._s(item.name) + \" \")]\n                            )\n                          })\n                        }\n                      }\n                    ])\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"el-table-column\", {\n                    attrs: { align: \"center\", label: \"操作\", width: \"80\" },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function(scope) {\n                          return [\n                            _c(\n                              \"el-button\",\n                              {\n                                attrs: {\n                                  type: \"primary\",\n                                  size: \"mini\",\n                                  title: \"添加可选项\"\n                                },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.handleEdit(scope.row)\n                                  }\n                                }\n                              },\n                              [_vm._v(\"添加\")]\n                            )\n                          ]\n                        }\n                      }\n                    ])\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-form-item\",\n            [\n              _c(\n                \"el-button\",\n                {\n                  attrs: {\n                    type: \"primary\",\n                    size: \"mini\",\n                    loading: _vm.buttonLoading\n                  },\n                  on: {\n                    click: function($event) {\n                      return _vm.submitForm(\"ruleForm\")\n                    }\n                  }\n                },\n                [_vm._v(\"保存\")]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _vm.dialogTableVisible\n        ? _c(\n            \"div\",\n            [\n              _c(\n                \"el-dialog\",\n                {\n                  attrs: {\n                    title: \"添加可选项\",\n                    \"destroy-on-close\": true,\n                    fullscreen: false,\n                    visible: _vm.dialogTableVisible,\n                    \"append-to-body\": \"\"\n                  },\n                  on: {\n                    \"update:visible\": function($event) {\n                      _vm.dialogTableVisible = $event\n                    }\n                  }\n                },\n                [\n                  _c(_vm.comName, {\n                    tag: \"component\",\n                    attrs: { obj: _vm.currentRow },\n                    on: { addItemClose: _vm.addItemClose }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          )\n        : _vm._e()\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}