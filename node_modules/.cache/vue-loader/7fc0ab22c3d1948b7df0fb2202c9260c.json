{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\quotation\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\quotation\\index.vue","mtime":1635216068743},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getQuotationPaging } from '@/api/cggl/quotation'\r\nimport OrgSelect2 from '@/components/OrgSelect/index2'\r\n// import PlanFrame from './PlanFrame'\r\nimport SearchForm from '@/components/Other/searchForm'\r\nexport default {\r\n  name: 'Quotation',\r\n  components: {\r\n    // PlanFrame\r\n    OrgSelect2,\r\n    SearchForm\r\n  },\r\n  data() {\r\n    return {\r\n      list: null,\r\n      listLoading: false,\r\n      dialogTableVisible: false,\r\n      dialogTitle: '保存',\r\n      comName: 'QuotationEdit',\r\n      total: 0,\r\n      currentPage: 1,\r\n      pageSize: this.utils.getPersonalSettings().pageSize,\r\n      planStateList: null,\r\n      planTypeList: null,\r\n      formState: [{\r\n        value: 0,\r\n        name: '制单'\r\n      }, {\r\n        value: 1,\r\n        name: '已提交'\r\n      }, {\r\n        value: 10000,\r\n        name: '完成'\r\n      }],\r\n      currentRow: null,\r\n      search: {\r\n        number: '',\r\n        orgIds: [],\r\n        states: [],\r\n        // deadlineStartDate: null,\r\n        // deadlineEndDate: null,\r\n        deadlineRange: [],\r\n        times: null,\r\n        taskNumber: '',\r\n        categoryName: ''\r\n      },\r\n      rules: {\r\n\r\n      },\r\n      tabPosition: 3 // 0:我发起，1：待审批 2:已审批\r\n    }\r\n  },\r\n  activated() {\r\n    if (this.$route.params.refresh) {\r\n      this.fetchData()\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchData()\r\n  },\r\n  methods: {\r\n    searchData(currentPage) {\r\n      this.currentPage = currentPage\r\n      this.fetchData()\r\n    },\r\n    fetchData() {\r\n      this.listLoading = true\r\n\r\n      var postData = {}\r\n      postData.currentPage = this.currentPage\r\n      postData.pageSize = this.pageSize\r\n      postData.type = this.tabPosition\r\n      postData.number = this.search.number\r\n      postData.orgIds = this.search.orgIds\r\n      postData.states = this.search.states\r\n      // postData.deadlineStartDate = this.search.deadlineStartDate\r\n      // postData.deadlineEndDate = this.search.deadlineEndDate\r\n      postData.deadlineRange = this.search.deadlineRange\r\n      postData.times = this.search.times\r\n      postData.taskNumber = this.search.taskNumber\r\n      postData.categoryName = this.search.categoryName\r\n      // postData.companyId = this.$store.state.user.selectOrgId\r\n\r\n      getQuotationPaging(postData).then(response => {\r\n        const { data, count } = response\r\n        this.list = data\r\n        this.total = count\r\n        this.listLoading = false\r\n      })\r\n    },\r\n    dialogClose() {\r\n      this.dialogTableVisible = false\r\n      this.fetchData()\r\n    },\r\n    handleAdd(row) {\r\n      this.$router.push({ name: 'QuotationEdit', query: { refreshRouterName: this.$route.name }})\r\n    },\r\n    handleSupplierImport(row) {\r\n      // console.log('this.$route.name:', this.$route.name)\r\n      this.$router.push({ name: 'PriceListSupplier', query: { id: row.id, refreshRouterName: this.$route.name, tab: 'edit' }, params: { id: row.id }})\r\n    },\r\n    getFormState(row) {\r\n      // if (!row.billFlow) { return '制单' }\r\n      // const formState = row.billFlow.form.formState\r\n      // this.formState = formState\r\n      // const state = row.state\r\n      // if (state === -1) return '作废'\r\n      // const obj = formState.find(f => f.value === state)\r\n      // if (obj) { return obj.name } else { return '状态不详' }\r\n      const state = row.state\r\n      if (state === 0) {\r\n        return '制单'\r\n      } else if (state === 1) {\r\n        return '已提交'\r\n      } else if (state === 10000) {\r\n        return '完成'\r\n      }\r\n    },\r\n    radioChange(value) {\r\n      // 清空条件\r\n      this.search = {\r\n        number: '',\r\n        orgIds: [],\r\n        states: [],\r\n        // deadlineStartDate: null,\r\n        // deadlineEndDate: null,\r\n        deadlineRange: [],\r\n        times: null,\r\n        taskNumber: '',\r\n        categoryName: ''\r\n      }\r\n      // 填充数据\r\n      this.fetchData()\r\n    },\r\n    sizeChange(val) {\r\n      this.pageSize = val\r\n      this.fetchData()\r\n    },\r\n    getPerson(bf) {\r\n      if (bf) {\r\n        var arr = bf.billFlowNode.filter(f => f.isCurrentState && !f.isChecked)\r\n        return arr.map(m => m.person.name).join('、')\r\n      }\r\n    },\r\n    handleEdit(row) {\r\n      // console.log('this.$route.name:', this.$route.name)\r\n      this.$router.push({ name: 'QuotationEdit', query: { id: row.id, refreshRouterName: this.$route.name, tab: 'edit' }, params: { id: row.id }})\r\n    },\r\n    handleImport(row) {\r\n      this.$router.push({ name: 'QuotationSupplier', query: { id: row.id, refreshRouterName: this.$route.name, tab: 'edit' }, params: { id: row.id }})\r\n    },\r\n    attitude(row) {\r\n      this.$router.push({ name: 'QuotationAttitude', query: { id: row.id, refreshRouterName: this.$route.name }, params: { id: row.id }})\r\n    }\r\n  }\r\n}\r\n",null]}