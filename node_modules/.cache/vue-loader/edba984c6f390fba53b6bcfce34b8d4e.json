{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\ywgl\\khgl\\customerSurveyAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\ywgl\\khgl\\customerSurveyAdd.vue","mtime":1628919666181},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { putCustomerSurvey, addCustomerSurvey } from '@/api/ywgl/customer'\r\nimport UpFile from '@/components/UpLoad/UpFile'\r\nexport default {\r\n  name: 'CustomerSurveyAdd',\r\n  components: {\r\n    UpFile\r\n  },\r\n  props: {\r\n    obj: {\r\n      type: Object,\r\n      default: null\r\n    },\r\n    customer: {\r\n      type: Number,\r\n      default: 0\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        id: 0,\r\n        formId: 0,\r\n        billId: 0,\r\n        title: '客户调研',\r\n        content: '',\r\n        operation: '调研',\r\n        fileList: [],\r\n        attitudeType: 2,\r\n        backGroup: 0, // 0 制单\r\n        type: 6\r\n      },\r\n      buttonLoading: false,\r\n      refreshRouterName: '',\r\n      rules: {\r\n        content: [{ required: true, message: '不能为空', trigger: 'blur' }]\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchData()\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          var postData = JSON.parse(JSON.stringify(this.ruleForm))\r\n          postData.formId = this.customer\r\n          postData.billId = this.customer\r\n          let tempIds = []\r\n          if (postData.fileList.length > 0) {\r\n            tempIds = postData.fileList.map(m => {\r\n              return { id: m.id, addFlag: m.addFlag }\r\n            })\r\n          }\r\n          postData.fileList = tempIds\r\n          if (this.obj) {\r\n            this.buttonLoading = true\r\n            putCustomerSurvey(postData)\r\n              .then((response) => {\r\n                this.$message(response.message)\r\n                this.buttonLoading = false\r\n                this.$emit('dialogClose')\r\n              }).catch(() => { this.buttonLoading = false })\r\n          } else {\r\n            this.buttonLoading = true\r\n            addCustomerSurvey(postData)\r\n              .then((response) => {\r\n                this.$message(response.message)\r\n                this.buttonLoading = false\r\n                this.$emit('dialogClose')\r\n              })\r\n              .catch(() => {\r\n                this.buttonLoading = false\r\n              })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    fetchData() {\r\n      if (this.obj) {\r\n        var newObj = JSON.parse(JSON.stringify(this.obj))\r\n        this.ruleForm = newObj\r\n        this.ruleForm.fileList = newObj.upFiles\r\n      }\r\n    }\r\n  }\r\n}\r\n",null]}