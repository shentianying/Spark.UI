{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\components\\sendmsg.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\components\\sendmsg.vue","mtime":1625532149331},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { sendRemind } from '@/api/xtgl/message'\r\n\r\nexport default {\r\n  name: '',\r\n  components: {\r\n  },\r\n  props: {\r\n    personArray: { type: Array, default: null }, // 传过来的指定的用户数组 必须包含字段 id,name\r\n    billId: { type: Number, default: 0 },\r\n    billFlowId: { type: Number, default: 0 },\r\n    pageId: { type: Number, default: 0 }\r\n  },\r\n  data() {\r\n    return {\r\n      state: 1,\r\n      content: '',\r\n      dialogTableVisible: false,\r\n      loading: false\r\n    }\r\n  },\r\n  watch: {\r\n    content(value) {\r\n      // if () {\r\n      //   this.popoverVisible = true\r\n      //   console.log('存在@符号')\r\n      // }\r\n    }\r\n  },\r\n  created() {\r\n\r\n  },\r\n  mounted() {},\r\n  methods: {\r\n\r\n    addReminder() {\r\n      this.dialogTableVisible = true\r\n    },\r\n    chooseUser(text) {\r\n      this.content += `@${text} `\r\n      this.dialogTableVisible = false\r\n    },\r\n    goSend() {\r\n      if (this.content.trim() === '') {\r\n        this.$alert('内容不能为空')\r\n        return false\r\n      }\r\n\r\n      const reg = /@[\\u4e00-\\u9fa5]{0,}\\s/g // 匹配@符号后面带中文加空格 的字符串\r\n      var arr = this.content.match(reg) // 获取匹配后的结果 数组\r\n      console.log('匹配的结果arr:', arr)\r\n\r\n      if (arr) {\r\n        // 根据姓名 找到 相对应的 Id 数组\r\n        const idArr = arr.map(m => this.personArray.find(f => f.name === m.substring(1).trim()).id)\r\n        console.log('根据@姓名 找到的 id数组:', idArr)\r\n\r\n        var postData = []\r\n        if (this.state === 1) {\r\n          // 公开,发送给全部人员\r\n          this.personArray.forEach(e => {\r\n            const item = {}\r\n            if (idArr.includes(e)) {\r\n              item.title = '有人公开@你了'\r\n            } else {\r\n              item.title = '公开信息'\r\n            }\r\n            item.content = this.content\r\n            item.receiverId = e.id\r\n            item.type = 3\r\n            item.billId = this.billId\r\n            item.billFlowId = this.billFlowId\r\n            item.pageId = this.pageId\r\n            postData.push(item)\r\n          })\r\n        }\r\n        if (this.state === 0) {\r\n          // 私密，发送给特定人员\r\n          idArr.forEach(e => {\r\n            const item = {}\r\n            item.title = '有人私密@你了'\r\n            item.content = this.content\r\n            item.type = 4\r\n            item.receiverId = e\r\n            item.billId = this.billId\r\n            item.billFlowId = this.billFlowId\r\n            item.pageId = this.pageId\r\n            postData.push(item)\r\n          })\r\n        }\r\n\r\n        this.loading = true\r\n        sendRemind(postData).then(res => {\r\n          this.$message(res.message)\r\n          this.loading = false\r\n        }).catch(() => { this.loading = false })\r\n      }\r\n    }\r\n  }\r\n}\r\n",null]}