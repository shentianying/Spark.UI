{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\jcsj\\components\\addCity.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\jcsj\\components\\addCity.vue","mtime":1624071363345},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { putCity, addCity } from '@/api/xtgl/city'\r\nexport default {\r\n  name: 'AddCity',\r\n  props: {\r\n    obj: {\r\n      type: Object,\r\n      default: null\r\n    },\r\n    pid: {\r\n      type: Number,\r\n      default: 0\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        name: '',\r\n        sort: 1,\r\n        inUse: true\r\n      },\r\n      buttonLoading: false,\r\n      rules: {\r\n        name: [{ required: true, message: '请输入', trigger: 'blur' }],\r\n        sort: [{ required: true, message: '请输入', trigger: 'blur' }]\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initData()\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n          var postData = {}\r\n          postData.sort = this.ruleForm.sort\r\n          postData.name = this.ruleForm.name\r\n          postData.inUse = this.ruleForm.inUse\r\n          if (this.obj) {\r\n            this.buttonLoading = true\r\n            postData.id = this.ruleForm.id\r\n            putCity(postData).then(response => {\r\n              this.$message(response.message)\r\n              this.buttonLoading = false\r\n              this.$emit('dialogClose')\r\n            }).catch(() => { this.buttonLoading = false })\r\n          } else {\r\n            this.buttonLoading = true\r\n            newObj.pid = this.pid\r\n            addCity(newObj).then(response => {\r\n              this.$message(response.message)\r\n              this.buttonLoading = false\r\n              this.$emit('dialogClose')\r\n            }).catch(() => { this.buttonLoading = false })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields()\r\n    },\r\n    initData() {\r\n      if (this.obj) {\r\n        var newObj = JSON.parse(JSON.stringify(this.obj))\r\n        this.ruleForm = newObj\r\n      }\r\n    }\r\n  }\r\n}\r\n",null]}