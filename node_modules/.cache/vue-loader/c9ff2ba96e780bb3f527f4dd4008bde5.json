{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\ywgl\\SocialResource\\relationGraph.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\ywgl\\SocialResource\\relationGraph.vue","mtime":1634280404538},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport RelationGraph from 'relation-graph'\r\nexport default {\r\n  name: 'RelationGraph',\r\n  components: { RelationGraph },\r\n  data() {\r\n    return {\r\n      graphOptions: {\r\n        allowSwitchLineShape: true,\r\n        allowSwitchJunctionPoint: true,\r\n        defaultJunctionPoint: 'border'\r\n        // 这里可以参考\"Graph 图谱\"中的参数进行设置\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.showSeeksGraph()\r\n  },\r\n  methods: {\r\n    showSeeksGraph(query) {\r\n      var __graph_json_data = {\r\n        rootId: 'a',\r\n        nodes: [\r\n          { id: 'a', text: 'A', borderColor: 'yellow' },\r\n          { id: 'b', text: 'B', color: '#43a2f1', fontColor: 'yellow' },\r\n          { id: 'c', text: 'C', nodeShape: 1, width: 80, height: 60 },\r\n          { id: 'e', text: 'E', nodeShape: 0, width: 150, height: 150 }\r\n        ],\r\n        links: [\r\n          { from: 'a', to: 'b', text: '关系1', color: '#43a2f1' },\r\n          { from: 'a', to: 'c', text: '关系2' },\r\n          { from: 'a', to: 'e', text: '关系3' },\r\n          { from: 'b', to: 'e', color: '#67C23A' }\r\n        ]\r\n      }\r\n      // 以上数据中的node和link可以参考\"Node节点\"和\"Link关系\"中的参数进行配置\r\n      this.$refs.seeksRelationGraph.setJsonData(__graph_json_data, (seeksRGGraph) => {\r\n        // Called when the relation-graph is completed\r\n      })\r\n    },\r\n    onNodeClick(nodeObject, $event) {\r\n      console.log('onNodeClick:', nodeObject)\r\n    },\r\n    onLineClick(lineObject, $event) {\r\n      console.log('onLineClick:', lineObject)\r\n    }\r\n  }\r\n}\r\n",null]}