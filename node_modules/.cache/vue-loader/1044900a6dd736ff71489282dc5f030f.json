{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\zjgl\\FundAllocation\\details.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\zjgl\\FundAllocation\\details.vue","mtime":1635749455636},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { GetFundAllocationById, InitiFundAllocation, PayFor } from '@/api/cwgl/zjgl/FundAllocation.js'\r\nimport FlowDisplay from '@/components/Flow/flowDisplay'\r\nimport FlowAttitude from '@/components/Flow/flowAttitude'\r\nimport AcceptanceCheckList from '@/components/Other/AcceptanceCheckList' // 未支出承兑单弹窗\r\nimport Detailsedit from '@/components/Detailsedit'\r\n\r\nexport default {\r\n  name: 'ZiJinDiaoBoDetails',\r\n  components: {\r\n    // UpFile,\r\n    FlowDisplay,\r\n    FlowAttitude,\r\n    AcceptanceCheckList,\r\n    Detailsedit\r\n  },\r\n  data() {\r\n    return {\r\n      size: 'mini',\r\n      activeNames: ['0', '1', '2'], // 展开的折叠面板\r\n      dialogVisible: false, // 显示未支出承兑选择框\r\n      loading: false, // 请求未完成\r\n      myDetails: null, // 详情数据\r\n      showPayButton: false, // 是否显示支付按钮\r\n      billFlowData: null, // 流程信息\r\n      attitudePara: null, // 审批信息\r\n      // _或$开头的变量不会被代理,访问方式this.$data._value\r\n      // eslint-disable-next-line vue/no-reserved-keys\r\n      _capitalTypeList: null // 资金形式列表\r\n    }\r\n  },\r\n  computed: {\r\n    /**\r\n     * 详情各字段计算\r\n     */\r\n    infoList() {\r\n      const {\r\n        myDetails: {\r\n          number,\r\n          amount,\r\n          remark,\r\n          capitalType,\r\n          orgStr,\r\n          orgInStr,\r\n          createUserName,\r\n          createDate,\r\n          payer,\r\n          payDate,\r\n          lastEditUserName,\r\n          lastEditDate,\r\n          state\r\n        },\r\n        billFlowData: {\r\n          form: {\r\n            formState\r\n          }\r\n        },\r\n        $data: {\r\n          _capitalTypeList\r\n        }\r\n      } = this\r\n      const stateArr = formState.filter((item) => { return item.value === state })\r\n      return [\r\n        { label: '编号', value: number, monopolize: true },\r\n        { label: '调出部门', value: orgStr },\r\n        { label: '调入部门', value: orgInStr },\r\n        { label: '资金形式', value: _capitalTypeList && _capitalTypeList.find(v => v.value === capitalType).name },\r\n        { label: '金额', value: this.utils.formatMoney(amount, 2, 0) },\r\n        { label: '备注', value: remark, monopolize: true },\r\n        { label: '制单人', value: createUserName },\r\n        { label: '制单日期', value: createDate },\r\n        { label: '支付人', value: payer?.name },\r\n        { label: '支付日期', value: payDate },\r\n        { label: '更新人', value: lastEditUserName },\r\n        { label: '更新日期', value: lastEditDate },\r\n        { label: '状态', value: stateArr[0]?.name }\r\n      ]\r\n    },\r\n    /**\r\n     * 判断是否是承兑\r\n     */\r\n    isChengdui() {\r\n      const { capitalType } = this.myDetails\r\n      return capitalType === 2 || capitalType === 3\r\n    },\r\n    /**\r\n     * 计算是否显示审批表单\r\n     */\r\n    showForm() {\r\n      const { state } = this.myDetails\r\n      return state === 1 || state === 1000\r\n    }\r\n  },\r\n  beforeRouteEnter(to, from, next) {\r\n    next(vm => {\r\n      vm.initDat()\r\n    })\r\n  },\r\n  methods: {\r\n    /**\r\n     * @description: 初始化数据\r\n     */\r\n    initDat() {\r\n      const { id } = this.$route.query\r\n      this.myId = id\r\n      this.fetchData()\r\n      this.getCapitalList()\r\n    },\r\n    /**\r\n     * 提交审批意见以后的回调函数\r\n     */\r\n    updateFlow() {\r\n      // 直接返回\r\n      this.goBack()\r\n    },\r\n    /**\r\n     * 获取调拨详情信息\r\n     */\r\n    async fetchData() {\r\n      if (!this.myId) return\r\n      this.loading = true\r\n      try {\r\n        // To do\r\n        const { billFlowData, data, orgInStr, orgStr, showPayButton } = await GetFundAllocationById(this.myId)\r\n        this.billFlowData = billFlowData\r\n        this.myDetails = { ...data, orgInStr, orgStr }\r\n        this.showPayButton = showPayButton\r\n        this.attitudePara = { formId: billFlowData.formId, billFlowId: data.billFlowId, planId: data.id }\r\n        this.$nextTick(() => {\r\n          if (showPayButton) { this.$refs.flowAttitude.ruleForm.content = '支付' }\r\n        })\r\n      } catch (e) {\r\n        console.log('fetchData:请求列表数据失败，错误信息：', e)\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    /**\r\n     * 获取资金形式列表\r\n     */\r\n    getCapitalList() {\r\n      InitiFundAllocation()\r\n        .then(({ capitalTypeList }) => {\r\n          this.$data._capitalTypeList = capitalTypeList\r\n        })\r\n    },\r\n    /**\r\n     * 点确定支付按钮\r\n     */\r\n    wantToPay() {\r\n      if (this.isChengdui) {\r\n        this.$refs['acceptanceLIst'].params.orgids = [this.myDetails.orgId]\r\n        this.dialogVisible = true\r\n      } else {\r\n        this.$confirm('确定要支付吗?', '提示', {\r\n          type: 'warning'\r\n        }).then(() => {\r\n          this.payIt()\r\n        })\r\n      }\r\n    },\r\n    /**\r\n     * 支付\r\n     * @param {Array} list 非必填,当是承兑类型的时候传过来的\r\n     */\r\n    payIt(list) {\r\n      const { id, orgId, orgIdIn, capitalType, amount, remark, billFlowId, state } = this.myDetails\r\n      const req = { id, orgId, orgIdIn, capitalType, amount, remark, BillFlowId: billFlowId, state }\r\n      if (list) req.acceptance = list.map(v => { return { id: v.id } })\r\n\r\n      const attitudeData = this.$refs.flowAttitude.getPostData()\r\n      attitudeData.content = '审批支付'\r\n      this.loading = true\r\n      PayFor({ attitude: attitudeData, fundAllocation: req }).then(res => {\r\n        if (res.success) {\r\n          this.$message.success(res.message)\r\n          this.goBack() // 跳转\r\n        } else {\r\n          this.$message.error(res.message)\r\n        }\r\n        this.loading = false\r\n      }).catch(() => { this.loading = false })\r\n    },\r\n    /**\r\n     * 确认选取承兑\r\n     */\r\n    cdCheck(list) {\r\n      const { orgId } = this.myDetails\r\n      const sum = this.utils.sum(list.map(v => v.amount)).toFixed(2)\r\n      const amount = this.myDetails.amount.toFixed(2)\r\n      if (sum !== amount) {\r\n        this.$message.error('选择承兑票金额与调拨单金额不一致')\r\n      } else if (list.find(v => v.orgId !== orgId)) {\r\n        this.$message.error('承兑部门与调出部门不一致')\r\n      } else {\r\n        this.payIt(list)\r\n      }\r\n    },\r\n    goBack() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    }\r\n  }\r\n}\r\n",null]}