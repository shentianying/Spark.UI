{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\zggl\\worker\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\zggl\\worker\\index.vue","mtime":1633917085234},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getWorkerPaging, getDefaultOptions } from '@/api/zggl/worker'\r\nimport SearchBar from '@/components/SearchBar'\r\nimport searchData from './searchData'\r\nimport { ExcelExport } from 'pikaz-excel-js'\r\nexport default {\r\n  name: 'Worker',\r\n  components: {\r\n    SearchBar,\r\n    ExcelExport\r\n  },\r\n  data() {\r\n    return {\r\n      size: 'mini',\r\n      searchData: searchData, // 渲染搜索栏数据\r\n\r\n      filename: '工人列表',\r\n      exLoading: false, // 导出\r\n      sheet: [],\r\n      filter: { // 过滤数据\r\n        type: '6', // 类型\r\n        typeOptions: [ // 类型数组\r\n          {\r\n            value: '6',\r\n            name: '列表'\r\n          },\r\n          {\r\n            value: '5',\r\n            name: '有保险'\r\n          },\r\n          {\r\n            value: '4',\r\n            name: '无保险'\r\n          },\r\n          {\r\n            value: '3',\r\n            name: '已退场'\r\n          },\r\n          {\r\n            value: '1',\r\n            name: '暂退'\r\n          },\r\n          {\r\n            value: '2',\r\n            name: '已报到'\r\n          },\r\n          {\r\n            value: '0',\r\n            name: '未报到'\r\n          }\r\n        ]\r\n      },\r\n      /* 列表数据相关 */\r\n      table: {\r\n        list: [],\r\n        loading: false,\r\n        total: 0,\r\n        currentPage: 1,\r\n        pageSize: 10\r\n      }\r\n    }\r\n  },\r\n  beforeRouteEnter(to, from, next) {\r\n    next(vm => {\r\n      vm.fetchData()\r\n    })\r\n  },\r\n  methods: {\r\n    /**\r\n     * 类型重新选择的事件\r\n     */\r\n    typeChange() {\r\n      this.fetchData()\r\n    },\r\n    /**\r\n     * @description: 获取列表数据、搜索数据\r\n     * @return {*}\r\n     */\r\n    async fetchData() {\r\n      this.table.loading = true\r\n      try {\r\n        // 获取请求参数\r\n        const postData = this.getSearchData()\r\n        const { currentPage, pageSize } = this.table\r\n        // 请求开始\r\n        const response = await getWorkerPaging({\r\n          ...postData,\r\n          currentPage,\r\n          pageSize,\r\n          type: this.filter.type\r\n        })\r\n        const { data, count, yearOptions } = response\r\n        // 初始化数据获取\r\n        const default_options = await getDefaultOptions()\r\n        const { workOptions, workerOptions, bankOptions } = default_options\r\n        workOptions.forEach(ele => {\r\n          // 资金形式选项数据转换\r\n          ele.label = ele.name\r\n        })\r\n        workerOptions.forEach(ele => {\r\n          // 资金形式选项数据转换\r\n          ele.label = ele.name\r\n        })\r\n        bankOptions.forEach(ele => {\r\n          // 资金形式选项数据转换\r\n          ele.label = ele.name\r\n        })\r\n\r\n        // 搜索栏数据初始化\r\n        this.searchData = this.searchData.map(item => {\r\n          item.options =\r\n            item.name === 'year' ? yearOptions : item.options\r\n          item.options =\r\n            item.name === 'workTypes' ? workOptions : item.options\r\n          item.options =\r\n            item.name === 'bank' ? bankOptions : item.options\r\n          item.options =\r\n            item.name === 'workerType' ? workerOptions : item.options\r\n          return item\r\n        })\r\n\r\n        // 列表数据初始化\r\n        this.table.list = data\r\n        this.table.total = count\r\n      } catch (e) {\r\n        console.log('fetchData:请求列表数据失败，错误信息：', e)\r\n      } finally {\r\n        this.table.loading = false\r\n      }\r\n    },\r\n    /**\r\n     * @description: 设置表格名字\r\n     */\r\n    setFname() {\r\n      let date = this.utils.parseTime(new Date())\r\n      date = date.replace(' ', '_')\r\n      date = date.replace(':', '_')\r\n      this.filename = this.filename + date\r\n    },\r\n    /**\r\n     * @description:表格导出功能\r\n     */\r\n    async exportExcel() {\r\n      try {\r\n        this.exLoading = true\r\n        const postData = this.getSearchData()\r\n        postData.currentPage = 1\r\n        postData.pageSize = this.table.total\r\n        const { data } = await getWorkerPaging(postData)\r\n        const table = data.map(item => {\r\n          return {\r\n            ...item\r\n          }\r\n        })\r\n        this.sheet = [{\r\n          sheetName: '工人列表',\r\n          keys: [\r\n            'year',\r\n            'orgName',\r\n            'number',\r\n            'name',\r\n            'idNumber',\r\n            'age',\r\n            'workerTypeName',\r\n            'gongzhangName',\r\n            'workingAge',\r\n            'remark',\r\n            'createUserName'\r\n          ],\r\n          tHeader: [\r\n            '年度',\r\n            '项目',\r\n            '工号',\r\n            '姓名',\r\n            '身份证号',\r\n            '年龄',\r\n            '工种',\r\n            '工长',\r\n            '工龄',\r\n            '备注',\r\n            '制单人'\r\n          ],\r\n          table\r\n        }]\r\n        this.setFname()\r\n        this.$refs.excelExport.pikaExportExcel()\r\n      } catch (e) {\r\n        console.log(e)\r\n        this.onError('获取表格数据失败！')\r\n      } finally {\r\n        this.exLoading = false\r\n      }\r\n    },\r\n    /**\r\n     * @description: excel导出错误处理\r\n     */\r\n    onError(err) {\r\n      this.$message.info('导出失败：' + err)\r\n    },\r\n    /**\r\n     * @description: 搜索栏数据转换\r\n     * @return {Object} request数据\r\n     */\r\n    getSearchData() {\r\n      const data = {}\r\n      this.searchData.forEach(item => {\r\n        // if (item.name === 'year') {\r\n        //   data['year'] = new Date(item.value).getFullYear()\r\n        // } else {\r\n        //   data[item.name] = item.value\r\n        // }\r\n        data[item.name] = item.value\r\n      })\r\n      return data\r\n    },\r\n    /**\r\n     * @description: 设置分页大小\r\n     * @param {Number} val\r\n     */\r\n    sizeChange(val) {\r\n      this.table.pageSize = val\r\n      this.fetchData()\r\n    },\r\n    /**\r\n     * @description: 搜索回调\r\n     */\r\n    handelSearch() {\r\n      this.table.currentPage = 1 // 返回第一页\r\n      this.fetchData()\r\n    },\r\n    /**\r\n     * @description: 路由到详情页\r\n     * @param {*} row\r\n     */\r\n    handleDetails(row) {\r\n      this.$router.push({ name: 'WorkerDetails', query: { id: row.id, refreshRouterName: this.$route.name }})\r\n    },\r\n    /**\r\n     * @description: table编辑\r\n     * @param {Object} id\r\n     */\r\n    handleEdit(id) {\r\n      this.$router.push({ name: 'WorkerEdit', query: { id, refreshRouterName: this.$route.name }})\r\n    }\r\n  }\r\n}\r\n",null]}