{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\price\\priceListEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\price\\priceListEdit.vue","mtime":1624494301508},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { addPriceList, getBillFlow, getPriceById, putPriceList } from '@/api/cggl/priceList'\r\nimport OrgSelect2 from '@/components/OrgSelect/index2'\r\nimport { getPersonList } from '@/api/rsgl/person'\r\nimport { getSupplierInfo } from '@/api/cggl/supplier'\r\nimport FlowAttitude from '@/components/Flow/flowAttitude'\r\nimport CheckTask from '@/views/cggl/task/taskCheck'\r\nimport FlowSelect from '@/components/Flow/flowSelect'\r\nimport { getDictionarysByTypes } from '@/api/xtgl/dictionary'\r\nexport default {\r\n  name: 'PriceListEdit',\r\n  components: {\r\n    OrgSelect2,\r\n    FlowAttitude,\r\n    CheckTask,\r\n    FlowSelect\r\n  },\r\n  data() {\r\n    return {\r\n      id: null,\r\n      ruleForm: {\r\n        orgId: null,\r\n        supplier_id: [],\r\n        state: 0,\r\n        taskId: null\r\n      },\r\n      loading: false,\r\n      showbuttons: false,\r\n      activate: false,\r\n      dialogTableVisible: false,\r\n      dialogTitle: '保存',\r\n      dialogWidth: '70%',\r\n      currentRow: null,\r\n      listIndex: 0,\r\n      list: [],\r\n      fileList: [],\r\n      planTypeList: null,\r\n      billFlow: false,\r\n      orgKey: 0,\r\n      supplierKey: 0,\r\n      columnShow: { unit2: true,\r\n        brand: true,\r\n        model: true,\r\n        spec: true,\r\n        thickness: true,\r\n        texture: true,\r\n        surfaceTreatment: true,\r\n        designNumber: true\r\n      },\r\n      personList: [],\r\n      multipleSelection: [],\r\n      // 全选供应商\r\n      checkedSite: false,\r\n      currentValsite: '',\r\n      // 供应商\r\n      suppliers: [],\r\n      suppliersCopy: [],\r\n      // 流程\r\n      loadFlow: false,\r\n      attitudePara: null,\r\n      active: 0,\r\n      keyImportType: 0,\r\n      importTypeOptions: [],\r\n      formData: {\r\n        supplier_id: [],\r\n        supplier_check: []\r\n      },\r\n      rules: {\r\n        // orgId: [{ required: true, message: '请选择', trigger: 'change' }],\r\n        supplierId: [{ required: true, message: '请选择', trigger: 'change' }],\r\n        importType: [{ required: true, message: '请选择', trigger: 'blur' }],\r\n        supplier_id: [{ required: true, message: '请选择', trigger: 'blur' }],\r\n        taskNumber: [{ required: true, message: '请选择', trigger: 'blur' }]\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    getOrgList() {\r\n      return this.$store.state.user.info.orgList\r\n    }\r\n  },\r\n  watch: {\r\n    // 'ruleForm.orgId': {\r\n    //   handler: function(value, oldvalue) {\r\n    //     if (!oldvalue) {\r\n    //       this.$refs['ruleForm'].validateField('orgId', (valid) => {})\r\n    //     }\r\n    //   }, deep: true\r\n    // }\r\n  },\r\n  activated() {\r\n  },\r\n  mounted() {\r\n    this.initData()\r\n  },\r\n  methods: {\r\n    saveForm() {\r\n    },\r\n    submitForm(formName, state) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          var postData = {}\r\n          var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n          // 拼接材料明细参数\r\n          var arr1 = []\r\n          this.list.forEach(e => {\r\n            var item = {}\r\n            item.materialId = e.materialId\r\n            item.planDetailId = e.planDetailId\r\n            item.quantity = e.quantity\r\n            arr1.push(item)\r\n          })\r\n          postData.orgId = newObj.orgId\r\n          postData.taskId = newObj.taskId\r\n          postData.planDate = newObj.planDate\r\n          postData.importType = newObj.importType\r\n          // postData.supplierIds = newObj.supplierId.join(',')\r\n          postData.suppliers = this.ruleForm.supplier_id.join(',')\r\n          postData.useSpace = newObj.useSpace\r\n          postData.executeUserId = newObj.buyerId\r\n          postData.priceExecuteDate = newObj.priceExecuteDate\r\n          postData.planId = newObj.id\r\n          postData.state = state\r\n          postData.pricelistDetails = arr1\r\n\r\n          // 获取流程组件中的数据\r\n          // if (state === 1) {\r\n          //   // 如果是提交，验证流程人员的完整信息\r\n          //   const checkBillFlow = this.$refs.flowSelect.checkBillFlow()\r\n          //   if (!checkBillFlow) {\r\n          //     this.$message('流程错误，流程中审批人员不能为空')\r\n          //     return false\r\n          //   }\r\n          // }\r\n          // const billFlow = this.$refs.flowSelect.getBillFlow()\r\n          // postData.billFlow = billFlow\r\n\r\n          this.loading = true\r\n          if (this.id) {\r\n            postData.id = this.id\r\n            putPriceList(postData).then(response => {\r\n              this.$message(response.message)\r\n              this.loading = false\r\n              // this.setData(response)\r\n              this.closeThePage()\r\n            }).catch(() => { this.loading = false })\r\n          } else {\r\n            addPriceList(postData).then(response => {\r\n              this.$message(response.message)\r\n              this.loading = false\r\n              // this.setData(response)\r\n              this.closeThePage()\r\n            }).catch(() => { this.loading = false })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    async initData() {\r\n      // 用户\r\n      getPersonList().then(response => {\r\n        this.personList = response.data\r\n      })\r\n      // 供应商  name id\r\n      getSupplierInfo().then((response) => {\r\n        this.suppliers = response.data\r\n        this.suppliersCopy = response.data\r\n      })\r\n      // 数据初始化\r\n      if (this.$route.query.id) {\r\n        this.id = this.$route.query.id\r\n      }\r\n      getDictionarysByTypes({ types: 'priceListImportType' })\r\n        .then((response) => {\r\n          const { data } = response\r\n          data.forEach(element => {\r\n            element.pid = element.pId\r\n            if (element.type === 'priceListImportType') {\r\n              this.importTypeOptions.push(element)\r\n            }\r\n          })\r\n          this.keyImportType += 1\r\n        })\r\n      if (this.id) {\r\n        getPriceById({ id: this.id }).then(response => { this.setData(response) })\r\n      }\r\n    },\r\n    setData(response) {\r\n      const { data } = response\r\n      var pom = []\r\n      data.priceListDetails.forEach(e => {\r\n        pom.push({\r\n          id: e.id,\r\n          categoryId: e.material.categoryId,\r\n          category: { id: e.material.categoryId, name: e.material.materialCategory.name, unit: e.material.materialCategory.unit },\r\n          unit2: e.material.unit2,\r\n          brand: e.material.brand,\r\n          model: e.material.model,\r\n          spec: e.material.spec,\r\n          thickness: e.material.thickness,\r\n          texture: e.material.texture,\r\n          surfaceTreatment: e.material.surfaceTreatment,\r\n          designNumber: e.material.designNumber,\r\n          applicationQuantity: e.planDetail.applicationQuantity,\r\n          applicationQuantity2: e.planDetail.applicationQuantity2,\r\n          quantity: e.planDetail.quantity,\r\n          quantity2: e.planDetail.quantity2,\r\n          entryDate: e.planDetail.entryDate,\r\n          remark: e.remark,\r\n          materialId: e.materialId,\r\n          planDetailId: e.planDetailId,\r\n          fileList: data.upFile.filter(f => f.tableId === e.id)\r\n        })\r\n      })\r\n      // 填充参数\r\n      this.ruleForm = data\r\n      this.ruleForm.state = 0\r\n      this.supplierKey++\r\n      this.keyImportType += 1\r\n      // 填充 明细列表\r\n      this.list = pom\r\n      this.loading = false // loading 状态关闭\r\n      this.showbuttons = true // 初始化完成，显示上面的按钮\r\n      this.activate = true // 加载部门组件\r\n      this.setColumnShow()\r\n    },\r\n    setColumnShow() { // 设置列的显示。列中，都没有值，就隐藏\r\n      var modelunit2 = false\r\n      var modelbrand = false\r\n      var modelmodel = false\r\n      var modelspec = false\r\n      var modelthickness = false\r\n      var modeltexture = false\r\n      var modelsurfaceTreatment = false\r\n      var modeldesignNumber = false\r\n      for (var row of this.list) {\r\n        if (row.unit2) { modelunit2 = true }\r\n        if (row.brand) { modelbrand = true }\r\n        if (row.model) { modelmodel = true }\r\n        if (row.spec) { modelspec = true }\r\n        if (row.thickness) { modelthickness = true }\r\n        if (row.texture) { modeltexture = true }\r\n        if (row.surfaceTreatment) { modelsurfaceTreatment = true }\r\n        if (row.designNumber) { modeldesignNumber = true }\r\n      }\r\n      this.columnShow['unit2'] = modelunit2\r\n      this.columnShow['brand'] = modelbrand\r\n      this.columnShow['model'] = modelmodel\r\n      this.columnShow['spec'] = modelspec\r\n      this.columnShow['thickness'] = modelthickness\r\n      this.columnShow['texture'] = modeltexture\r\n      this.columnShow['surfaceTreatment'] = modelsurfaceTreatment\r\n      this.columnShow['designNumber'] = modeldesignNumber\r\n    },\r\n    closeThePage() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    },\r\n    dialogClose(data, state) {\r\n      this.addMaterial(data, state)\r\n      this.setColumnShow()\r\n      this.dialogTableVisible = false\r\n    },\r\n    // showFileList(fileList) {\r\n    //   this.dialogTitle = '附件列表'\r\n    //   this.comName = 'UpFile'\r\n    //   this.dialogWidth = '50%'\r\n    //   this.fileList = fileList\r\n    //   this.dialogTableVisible = true\r\n    // },\r\n    // getRemotePerson(query) {\r\n    //   query = query.trim()\r\n    //   if (query !== '') {\r\n    //     this.loading = true\r\n    //     setTimeout(() => {\r\n    //       getPersonList().then(response => {\r\n    //         this.personList = response.data\r\n    //         this.loading = false\r\n    //       })\r\n    //     }, 200)\r\n    //   } else {\r\n    //     this.personList = []\r\n    //   }\r\n    // },\r\n    checkTask() {\r\n      this.dialogTitle = '选择任务单'\r\n      this.comName = 'CheckTask'\r\n      this.dialogWidth = '100%'\r\n      this.fileList = []\r\n      this.dialogTableVisible = true\r\n    },\r\n    getRemotePerson(query) {\r\n      if (query.length > 0) {\r\n        query = query.trim()\r\n        setTimeout(() => {\r\n          getPersonList({ name: query }).then(response => {\r\n            this.personList = response.data\r\n          })\r\n        }, 200)\r\n      } else {\r\n        getPersonList().then(response => {\r\n          this.personList = response.data\r\n        })\r\n      }\r\n    },\r\n    // 材料列表多选选中数据\r\n    handleSelectionChange(selection) {\r\n      this.multipleSelection = selection\r\n    },\r\n    // 选择供应商\r\n    changeSelectsite(val) {\r\n      if (val.length === 0) {\r\n        this.suppliers = this.suppliersCopy\r\n      }\r\n      if (val.length === this.suppliers.length) {\r\n        this.checkedSite = true\r\n      } else {\r\n        this.checkedSite = false\r\n      }\r\n\r\n      // 建议中标单位数据源\r\n      var arr = []\r\n      val.forEach(e => {\r\n        arr.push(this.suppliersCopy.filter(f => f.id === e))\r\n      })\r\n      var arr_da = []\r\n      arr.forEach(e => {\r\n        arr_da.push(e[0])\r\n      })\r\n      this.formData.supplier_check = arr_da\r\n    },\r\n    // 模糊搜索-供应商\r\n    filterChecksite(currentValsite) {\r\n      if (currentValsite.length > 0) {\r\n        const arr = []\r\n        this.ruleForm.supplier_id.map((row) => {\r\n          arr.push(...this.suppliersCopy.filter((item) => item.id === row))\r\n        })\r\n        this.suppliers = this.suppliersCopy.filter((item) => {\r\n          if (item.name.includes(currentValsite)) {\r\n            return true\r\n          }\r\n        })\r\n        this.suppliers.push(...arr)\r\n        this.suppliers = Array.from(new Set(this.suppliers))\r\n        this.currentValsite = currentValsite\r\n      } else {\r\n        this.suppliers = this.suppliersCopy\r\n        this.currentValsite = ''\r\n      }\r\n    },\r\n    // 全选供应商\r\n    selectAllsite() {\r\n      this.ruleForm.supplier_id = []\r\n      if (this.checkedSite === true) {\r\n        this.suppliers.map((item) => {\r\n          this.ruleForm.supplier_id.push(item.id)\r\n        })\r\n      } else {\r\n        this.ruleForm.supplier_id = []\r\n      }\r\n    },\r\n    getDynamicFlow() {\r\n      this.$refs['ruleForm'].validate(valid => {\r\n        if (valid) {\r\n          // 下一步获取流程\r\n          var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n          // 拼接材料明细参数\r\n          var arr1 = []\r\n          this.list.forEach(e => {\r\n            var m = {}\r\n            m.categoryId = e.categoryId\r\n            m.categoryName = e.category.name\r\n            // m.unit = e.unit\r\n            m.unit2 = e.unit2\r\n            m.brand = e.brand\r\n            m.model = e.model\r\n            m.spec = e.spec\r\n            m.thickness = e.thickness\r\n            m.texture = e.texture\r\n            m.surfaceTreatment = e.surfaceTreatment\r\n            m.designNumber = e.designNumber\r\n            var item = {}\r\n            item.material = m\r\n            // item.fileList = []\r\n            // if (e.fileList.length) {\r\n            //   item.fileList = e.fileList.map(m => { return { id: m.id, addFlag: m.addFlag } })\r\n            // }\r\n            item.id = e.id\r\n            item.isMain = e.category.isMain\r\n            item.applicationQuantity = e.applicationQuantity\r\n            item.applicationQuantity2 = e.applicationQuantity2 || 0\r\n            item.quantity = e.quantity\r\n            item.quantity2 = e.quantity2\r\n            item.entryDate = e.entryDate\r\n            item.remark = e.remark\r\n            item.planDetailId = e.planDetailId\r\n            arr1.push(item)\r\n          })\r\n          if (arr1.length === 0) {\r\n            this.$message('明细不能为空！')\r\n            return\r\n          }\r\n\r\n          newObj.priceListDetails = arr1\r\n          this.loading = true\r\n\r\n          getBillFlow(newObj).then(response => {\r\n            this.loading = false\r\n            if (response.success) {\r\n              this.billFlow = response.data.billFlow\r\n              this.active = 1\r\n            } else {\r\n              this.$message(response.message)\r\n            }\r\n          }).catch(() => { this.loading = false })\r\n        }\r\n      })\r\n    },\r\n    addMaterial(data, state) {\r\n      if (state === 'add') {\r\n        this.ruleForm = {\r\n          orgId: data.form.orgId,\r\n          taskNumber: data.form.number,\r\n          taskId: data.form.id,\r\n          buyerId: data.form.buyerId,\r\n          importType: null,\r\n          state: 0\r\n        }\r\n        this.orgKey++\r\n        var pom = []\r\n        data.list.forEach(e => {\r\n          pom.push({\r\n            categoryId: e.categoryId,\r\n            category: e.category,\r\n            unit2: e.unit2,\r\n            brand: e.brand,\r\n            model: e.model,\r\n            spec: e.spec,\r\n            thickness: e.thickness,\r\n            texture: e.texture,\r\n            surfaceTreatment: e.surfaceTreatment,\r\n            designNumber: e.designNumber,\r\n            applicationQuantity: e.applicationQuantity,\r\n            applicationQuantity2: e.applicationQuantity2,\r\n            quantity: e.quantity,\r\n            quantity2: e.quantity2,\r\n            entryDate: e.entryDate,\r\n            remark: e.remark,\r\n            materialId: e.materialId,\r\n            planDetailId: e.id\r\n          })\r\n        })\r\n        this.list = pom\r\n      }\r\n    },\r\n    openTask(taskId) {\r\n      this.$router.push({ name: 'TaskDetail', query: { id: taskId, refreshRouterName: this.$route.name, tab: 'detail' }, params: { id: taskId, isCheck: false }})\r\n    },\r\n    previous() {\r\n      // 上一步\r\n      this.active = 0\r\n      this.billFlow = null\r\n    }\r\n  }\r\n}\r\n",null]}