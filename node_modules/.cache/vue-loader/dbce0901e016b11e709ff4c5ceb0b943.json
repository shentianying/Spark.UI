{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\rsgl\\rygw\\personPostEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\rsgl\\rygw\\personPostEdit.vue","mtime":1627280659692},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getPostPoolDetailById, getPostListByOrgId } from '@/api/rsgl/postPool'\r\nimport { getAllPersonPostById, addPersonPost, putPersonPost, deletePersonPost, getPersonPostEditInit } from '@/api/rsgl/personPost'\r\nimport { getPersonById } from '@/api/rsgl/person'\r\nimport PersonPostDetailEdit from './personPostDetailEdit'\r\nimport OrgSelect2 from '@/components/OrgSelect/index2'\r\nexport default {\r\n  name: 'PersonPostEdit',\r\n  components: {\r\n    PersonPostDetailEdit,\r\n    OrgSelect2\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        personId: null,\r\n        postId: 0,\r\n        orgId: null,\r\n        postPoolDetailId: null,\r\n        roleId: null,\r\n        positionId: null,\r\n        isMain: true,\r\n        inUse: true\r\n      },\r\n      changeFlag: false,\r\n      number: '',\r\n      name: '',\r\n      listLoading: false,\r\n      loading: false,\r\n\r\n      dialogTableVisible: false,\r\n      dialogTitle: '保存',\r\n      dialogWidth: '70%',\r\n      comName: 'PersonPostDetailEdit',\r\n      currentRow: null,\r\n      userVal: null,\r\n\r\n      postList: [],\r\n      roleList: [],\r\n      positionList: null,\r\n      PersonPostList: [],\r\n      mainPersonPostId: null,\r\n      rules: {\r\n        postPoolDetailId: [{ required: true, message: '必填', trigger: 'blur' }],\r\n        positionId: [{ required: true, message: '必填', trigger: 'blur' }],\r\n        roleId: [{ required: true, message: '必填', trigger: 'blur' }],\r\n        orgId: [{ required: true, message: '必填', trigger: 'blur' }]\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n\r\n  },\r\n  activated() {\r\n    if (this.$route.params.id) {\r\n      getPersonById({ id: this.$route.query.id }).then((response) => {\r\n        const { data } = response\r\n        this.number = data.number\r\n        this.name = data.name\r\n        this.ruleForm.orgId = data.organizationId\r\n        this.initData(data.organizationId)\r\n      })\r\n\r\n      this.refreshRouterName = this.$route.params.refreshRouterName\r\n    }\r\n  },\r\n  methods: {\r\n    submitForm() {\r\n      this.$refs['ruleForm'].validate(valid => {\r\n        if (valid) {\r\n          var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n          newObj.personId = this.$route.query.id\r\n          // 保存数据\r\n          if (this.mainPersonPostId) {\r\n            this.loading = true\r\n            putPersonPost(newObj).then(response => {\r\n              if (response.errorMsg) {\r\n                // 验证错误\r\n                this.$alert(`${response.errorMsg.replace(/；/g, '；<br />')}`,\r\n                  { dangerouslyUseHTMLString: true })\r\n                return\r\n              }\r\n              this.$message(response.message)\r\n              this.loading = false\r\n              this.closeThePage()\r\n            }).catch(() => { this.loading = false })\r\n          } else {\r\n            addPersonPost(newObj).then(response => {\r\n              if (response.errorMsg) {\r\n                // 验证错误\r\n                this.$alert(`${response.errorMsg.replace(/；/g, '；<br />')}`,\r\n                  { dangerouslyUseHTMLString: true })\r\n                return\r\n              }\r\n              this.$message(response.message)\r\n              this.loading = false\r\n              this.closeThePage()\r\n            }).catch(() => { this.loading = false })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    fetchData() {\r\n      if (this.$route.query.id !== 0) {\r\n        this.listLoading = true\r\n        getAllPersonPostById({ id: this.$route.query.id }).then((response) => {\r\n          const { data, data2 } = response\r\n          if (data === null) {\r\n            this.ruleForm.personId = this.$route.query.id\r\n            this.$message({ message: '主岗位为空请填写！', type: 'warning' })\r\n          } else {\r\n            this.ruleForm.id = data.id\r\n            this.ruleForm.personId = data.personId\r\n            if (data.positionId !== 0) {\r\n              this.ruleForm.positionId = data.positionId\r\n            }\r\n            this.ruleForm.isMain = data.isMain\r\n            this.ruleForm.inUse = data.inUse\r\n            this.mainPersonPostId = data.id\r\n            if (data.orgId === this.ruleForm.orgId) {\r\n              this.ruleForm.postPoolDetailId = data.postPoolDetailId\r\n              this.ruleForm.postId = data.postId\r\n              this.ruleForm.roleId = data.roleId\r\n            }\r\n          }\r\n          this.PersonPostList = data2\r\n          this.listLoading = false\r\n        })\r\n      }\r\n    },\r\n    initData(val) {\r\n      getPersonPostEditInit({ orgId: val }).then(response => {\r\n        const { data1, data2, data3 } = response\r\n        this.postList = data1\r\n        this.roleList = data2\r\n        this.positionList = data3\r\n        this.fetchData()\r\n      })\r\n    },\r\n    getPostList(setVal) {\r\n      getPostListByOrgId({ id: setVal }).then(response => {\r\n        const { data } = response\r\n        this.postList = data\r\n      })\r\n    },\r\n    closeThePage() {\r\n      this.$store.dispatch('tagsView/delView', this.$route)\r\n      // this.$router.go(-1)\r\n      this.$router.push({ name: 'PersonEdit', query: { id: this.ruleForm.personId, refreshRouterName: 'Person' }, params: { id: this.ruleForm.personId }})\r\n    },\r\n    dialogClose() {\r\n      this.dialogTableVisible = false\r\n      this.fetchData()\r\n    },\r\n    editPersonPost(d) {\r\n      this.userVal = this.$route.params.id\r\n      this.currentRow = d.row\r\n      this.dialogTitle = '编辑岗位信息'\r\n      this.comName = 'PersonPostDetailEdit'\r\n      this.dialogTableVisible = true\r\n    },\r\n    addPersonPost() {\r\n      this.userVal = this.$route.params.id\r\n      this.currentRow = null\r\n      this.dialogTitle = '添加岗位信息'\r\n      this.comName = 'PersonPostDetailEdit'\r\n      this.dialogTableVisible = true\r\n    },\r\n    delPersonPost(d) {\r\n      // 页面删除\r\n      this.$confirm('此操作将永久删除该岗位信息, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        deletePersonPost({ id: d.row.id }).then(response => {\r\n          if (response.errorMsg) {\r\n            // 验证错误\r\n            this.$alert(`${response.errorMsg.replace(/；/g, '；<br />')}`,\r\n              { dangerouslyUseHTMLString: true })\r\n            return\r\n          }\r\n          this.$message(response.message)\r\n          this.loading = false\r\n          this.fetchData()\r\n        }).catch(() => { this.loading = false })\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消删除'\r\n        })\r\n      })\r\n    },\r\n    postChange(val) {\r\n      getPostPoolDetailById({ id: val }).then(response => {\r\n        const { data } = response\r\n        this.ruleForm.postId = data.postId\r\n        this.ruleForm.roleId = data.roleId\r\n      })\r\n    },\r\n    orgChange(val) {\r\n      if (this.changeFlag) {\r\n        if (val) {\r\n          this.ruleForm.postPoolDetailId = null\r\n          this.ruleForm.roleId = null\r\n          this.getPostList(val)\r\n        }\r\n      } else {\r\n        this.changeFlag = true\r\n      }\r\n    },\r\n    editRange() {\r\n      this.$router.push({ name: 'UserFrame', query: { id: this.$route.query.id, refreshRouterName: 'Person', tab: 'userOrg', showTag: 0 }, params: { id: this.$route.query.id }})\r\n    }\r\n  }\r\n}\r\n",null]}