{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\lcgl\\flowDesign\\component\\conditionItemAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\lcgl\\flowDesign\\component\\conditionItemAdd.vue","mtime":1624071363336},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n// import OrgSelect from '@/components/OrgSelect/index'\r\nimport OrgSelect2 from '@/components/OrgSelect/index2'\r\nexport default {\r\n  name: 'ConditionItemAdd',\r\n  components: {\r\n    // OrgSelect,\r\n    OrgSelect2\r\n  },\r\n  props: {\r\n    cdata: { type: Array, default: null },\r\n    dropDownData: { type: Object, default: null }\r\n  },\r\n  data() {\r\n    return {\r\n      buttonLoading: false,\r\n      modelValue: null,\r\n      data: [],\r\n      rules: {\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n  },\r\n  methods: {\r\n    loadOperator(value, item) {\r\n      item.isload = false\r\n      // 查找类型 'int'||'string || dictionary' ...\r\n      var formfield = this.dropDownData.formfieldList.find(f => f.id === value)\r\n      // 根据类型 找到 运算符号 下拉列表\r\n      item.operatorList = this.dropDownData.fieldTypeList.find(f => f.type === formfield.fieldType).operator\r\n      item.formFlowField = formfield\r\n      item.operator = null\r\n      item.value = null\r\n      item.dicList = null\r\n      if (formfield.fieldType === 'dictionary') {\r\n        const dicList = this.dropDownData.dictionary.filter(f => f.type === formfield.dicType)\r\n        dicList.forEach(e => {\r\n          e.label = e.name\r\n          e.pid = e.pId\r\n          e.id = e.value\r\n        })\r\n        item.dicList = dicList\r\n      }\r\n      if (formfield.fieldType === 'organization') {\r\n        const dicList = this.dropDownData.organization\r\n        item.dicList = dicList\r\n      }\r\n      this.$nextTick(() => {\r\n        item.isload = true\r\n      })\r\n    },\r\n    addGroup(item) {\r\n      item.children.push(\r\n        {\r\n          header: { flowId: 0,\r\n            code: item.header.code + 1,\r\n            pCode: item.header.code,\r\n            formFlowFieldId: 0,\r\n            formFlowField: { field: '', fieldName: '', fieldType: '', dicType: '' },\r\n            operator: '&&',\r\n            operatorList: null,\r\n            dicList: null,\r\n            isload: true,\r\n            value: '',\r\n            isLeaf: false },\r\n          item: [\r\n            { flowId: 0,\r\n              code: item.header.code + 2,\r\n              pCode: item.header.code + 1,\r\n              formFlowFieldId: null,\r\n              formFlowField: { field: '', fieldName: '', fieldType: '', dicType: '' },\r\n              operator: '',\r\n              operatorList: null,\r\n              dicList: null,\r\n              isload: true,\r\n              value: '',\r\n              isLeaf: true }\r\n          ],\r\n          children: []\r\n        }\r\n      )\r\n    },\r\n    delGroup(cdata, index) {\r\n      cdata.splice(index, 1)\r\n    },\r\n    addItem(items) {\r\n      items.push(\r\n        { flowId: 0,\r\n          // code: item.code + 1,\r\n          // pCode: item.code,\r\n          code: 0,\r\n          pCode: 0,\r\n          formFlowFieldId: null,\r\n          formFlowField: { field: '', fieldName: '', fieldType: '', dicType: '' },\r\n          operator: '',\r\n          operatorList: null,\r\n          isload: true,\r\n          value: '',\r\n          isLeaf: true })\r\n    },\r\n    delItem(items, index) {\r\n      items.splice(index, 1)\r\n    }\r\n\r\n  }\r\n}\r\n",null]}