{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\ywgl\\swb\\bussinessBidDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\ywgl\\swb\\bussinessBidDetail.vue","mtime":1635985349653},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getBussinessBidAttitudeById } from '@/api/ywgl/bussinessBid'\r\nimport FlowDisplay from '@/components/Flow/flowDisplay'\r\nimport FlowAttitude from '@/components/Flow/flowAttitude'\r\nimport UpFile from '@/components/UpLoad/UpFile'\r\nexport default {\r\n  name: 'BussinessBidDetail',\r\n  components: {\r\n    FlowAttitude,\r\n    FlowDisplay,\r\n    UpFile\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        id: 0,\r\n        number: '',\r\n        orgId: null,\r\n        bussinessInfoId: null,\r\n        controlPrice: null,\r\n        offerType: null,\r\n        professionalType: null,\r\n        marketSegment: null,\r\n        planForeignQuotation: 0,\r\n        estimatedCost: 0,\r\n        estimatedProfit: 0,\r\n        costOfFlatMeter: 0,\r\n        quotationDeadline: null,\r\n        quotationTimes: 0,\r\n        totalTimes: 0,\r\n        remark: '',\r\n        state: 0,\r\n        billFlowId: 0,\r\n        bussinessInfo: {\r\n          projectName: ''\r\n        },\r\n        fileList: []\r\n      },\r\n      infoForm: {\r\n        orgStr: '',\r\n        tenderMode: '',\r\n        reliableLevel: '',\r\n        decorationArea: '',\r\n        floors: '',\r\n        professionalType: '',\r\n        competitors: '',\r\n        bidEvaluationMethod: ''\r\n      },\r\n      tenderModeList: [],\r\n      informationSourceList: [],\r\n      marketSegmentList: [],\r\n      professionalTypeList: [],\r\n      offerTypeList: [],\r\n\r\n      count: 0,\r\n      list: [],\r\n      loading: false,\r\n      bussinessBidId: null,\r\n      isLoad: false,\r\n      billFlow: null,\r\n      attitudePara: {}\r\n    }\r\n  },\r\n  activated() {\r\n    if (this.$route.params.id) {\r\n      this.ruleForm.orgId = null // 刷新 org 列表\r\n      this.initData()\r\n      this.refreshRouterName = this.$route.params.refreshRouterName\r\n    }\r\n  },\r\n  mounted() {\r\n\r\n  },\r\n  methods: {\r\n    async initData() {\r\n      // 有参数id 就是编辑\r\n      if (this.$route.query.id) {\r\n        this.bussinessBidId = this.$route.query.id\r\n      }\r\n      if (this.bussinessBidId) {\r\n        this.loading = true\r\n        await getBussinessBidAttitudeById({ id: this.bussinessBidId }).then(response => this.setData(response))\r\n      }\r\n    },\r\n    setData(response) {\r\n      // 验证\r\n      if (!response.success) {\r\n        this.$alert(response.message, {\r\n          callback: action => {\r\n            this.closeThePage()\r\n          }\r\n        })\r\n      }\r\n      const { data, billFlowData, orgStr, result1, result3, result4, result5, result6, detailList, bidEvaluationMethod } = response\r\n      this.infoForm.orgStr = orgStr\r\n      this.tenderModeList = result1\r\n      this.informationSourceList = result3\r\n      this.marketSegmentList = result4\r\n      this.offerTypeList = result5\r\n      this.professionalTypeList = result6\r\n\r\n      this.ruleForm = data\r\n      this.ruleForm.fileList = data.upFile\r\n\r\n      this.infoForm.tenderMode = (data.bussinessInfo.tenderMode && this.tenderModeList) ? this.tenderModeList.find(f => f.value === data.bussinessInfo.tenderMode).name : ''\r\n      this.infoForm.decorationArea = data.bussinessInfo.decorationArea ? this.utils.formatMoney(data.bussinessInfo.decorationArea, 2, 0) : null\r\n      this.infoForm.floors = data.bussinessInfo.floors\r\n      this.infoForm.informationSource = (data.bussinessInfo.informationSource && this.informationSourceList) ? this.informationSourceList.find(f => f.value === data.bussinessInfo.informationSource).name : ''\r\n      this.infoForm.competitors = data.bussinessInfo.competitors\r\n      this.infoForm.bidEvaluationMethod = bidEvaluationMethod\r\n\r\n      this.list = detailList\r\n      this.count = this.ruleForm.quotationTimes - 1\r\n\r\n      this.billFlow = billFlowData\r\n      this.attitudePara = { formId: billFlowData.formId, billFlowId: data.billFlowId, planId: data.id }\r\n      this.loading = false // loading 状态关闭\r\n      this.isLoad = true // 加载审批组件\r\n    },\r\n    updateFlow() {\r\n      this.closeThePage()\r\n    },\r\n    closeThePage() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    },\r\n    viewBussinessInfo(bussinessInfoId) {\r\n      this.$router.push({ name: 'BussinessInfoDetail', query: { id: bussinessInfoId, refreshRouterName: this.$route.name }, params: { id: bussinessInfoId }})\r\n    },\r\n    getSummaries(param) {\r\n      const { columns, data } = param\r\n      const sums = []\r\n      columns.forEach((column, index) => {\r\n        if (index === 0) {\r\n          sums[index] = '合计'\r\n          return\r\n        }\r\n        var columnArr = []\r\n        const values = data.map(item => {\r\n          var arr = []\r\n          if (column.property) {\r\n            arr = column.property.toString().split('.')\r\n          }\r\n          if (arr.length > 1) {\r\n            columnArr.push(column.property)\r\n            if (item[arr[0]]) {\r\n              return Number(item[arr[0]][arr[1]])\r\n            } else {\r\n              return Number(0)\r\n            }\r\n          }\r\n        })\r\n\r\n        if (columnArr.includes(column.property)) {\r\n          if (column.property.toString().indexOf('estimatedProfitMargin') > -1) {\r\n            sums[index] = ((sums[index - 2] - sums[index - 1]) * 100 / sums[index - 2]).toFixed(2)\r\n          } else {\r\n            sums[index] = values.reduce((prev, curr) => {\r\n              const value = Number(curr)\r\n              if (!isNaN(value)) {\r\n                return prev + curr\r\n              } else {\r\n                return prev\r\n              }\r\n            }, 0).toFixed(2)\r\n            sums[index]\r\n          }\r\n        }\r\n      })\r\n\r\n      return sums\r\n    }\r\n  }\r\n\r\n}\r\n",null]}