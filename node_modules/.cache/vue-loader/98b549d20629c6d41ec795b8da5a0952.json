{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\contract\\contractDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\contract\\contractDetail.vue","mtime":1631525282208},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getContractDetailById } from '@/api/cggl/contract'\r\nimport UpFile from '@/components/UpLoad/UpFile'\r\nimport { getDictionarysByTypes } from '@/api/xtgl/dictionary'\r\nimport PaidAttitude from '@/views/cggl/paid/paidAttitude.vue'\r\nexport default {\r\n  name: 'ContractDetail',\r\n  components: {\r\n    UpFile,\r\n    PaidAttitude\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        id: 0,\r\n        number: '',\r\n        orgId: null,\r\n        fileList: [],\r\n        quotation: {},\r\n        supplier: {}\r\n      },\r\n      loading: false,\r\n      activate: true,\r\n      orgStr: '',\r\n      active: 0,\r\n      dialogTableVisible: false,\r\n      dialogTitle: '保存',\r\n      dialogWidth: '70%',\r\n      comName: 'PlanDetailAdd',\r\n      currentRow: null,\r\n      list: [],\r\n      payModes: [],\r\n      storageIns: [],\r\n      invoices: [],\r\n      cgPaids: [],\r\n      receiptTypesOptions: [],\r\n      keyReceiptTypes: 0,\r\n      billFlow: null,\r\n      isLoad: false,\r\n      attitudePara: {},\r\n      loadFlow: false,\r\n      columnShow: { unit2: true,\r\n        brand: true,\r\n        model: true,\r\n        spec: true,\r\n        thickness: true,\r\n        texture: true,\r\n        surfaceTreatment: true,\r\n        designNumber: true },\r\n      rules: {},\r\n      activeNames: ['1', '2', '3', '4']\r\n    }\r\n  },\r\n  watch: {\r\n  },\r\n  activated() {\r\n  },\r\n  mounted() {\r\n    this.initData()\r\n  },\r\n  methods: {\r\n    async initData() {\r\n      getDictionarysByTypes({ types: 'receiptTypes' })\r\n        .then((response) => {\r\n          const { data } = response\r\n          data.forEach(element => {\r\n            element.pid = element.pId\r\n            this.receiptTypesOptions.push(element)\r\n          })\r\n          this.keyReceiptTypes += 1\r\n        })\r\n      // 有参数id 就是编辑\r\n      if (this.$route.query.id) {\r\n        this.id = this.$route.query.id\r\n      }\r\n      if (this.id) {\r\n        this.loading = true\r\n        this.activate = false // 销毁部门组件\r\n        await getContractDetailById({ id: this.id }).then(response => this.setData(response))\r\n      }\r\n    },\r\n    setData(response) {\r\n      const { data, orgStr } = response\r\n      this.ruleForm = data\r\n      this.ruleForm.fileList = data.upFile\r\n      this.orgStr = orgStr\r\n      this.isLoad = true\r\n      // 填充 明细列表\r\n      this.list = data.contractDetails\r\n      this.payModes = data.contractPayModes\r\n      this.setColumnShow()\r\n      this.storageIns = data.storageIns\r\n      this.invoices = data.invoices\r\n      this.cgPaids = data.cgPaids\r\n      this.loading = false // loading 状态关闭\r\n      this.activate = true // 加载部门组件\r\n    },\r\n    closeThePage() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    },\r\n    updateFlow() {\r\n      this.closeThePage()\r\n    },\r\n    setColumnShow() { // 设置列的显示。列中，都没有值，就隐藏\r\n      var modelunit2 = false\r\n      var modelbrand = false\r\n      var modelmodel = false\r\n      var modelspec = false\r\n      var modelthickness = false\r\n      var modeltexture = false\r\n      var modelsurfaceTreatment = false\r\n      var modeldesignNumber = false\r\n      for (var row of this.list) {\r\n        if (row.material.unit2) { modelunit2 = true }\r\n        if (row.material.brand) { modelbrand = true }\r\n        if (row.material.model) { modelmodel = true }\r\n        if (row.material.spec) { modelspec = true }\r\n        if (row.material.thickness) { modelthickness = true }\r\n        if (row.material.texture) { modeltexture = true }\r\n        if (row.material.surfaceTreatment) { modelsurfaceTreatment = true }\r\n        if (row.material.designNumber) { modeldesignNumber = true }\r\n      }\r\n      this.columnShow['unit2'] = modelunit2\r\n      this.columnShow['brand'] = modelbrand\r\n      this.columnShow['model'] = modelmodel\r\n      this.columnShow['spec'] = modelspec\r\n      this.columnShow['thickness'] = modelthickness\r\n      this.columnShow['texture'] = modeltexture\r\n      this.columnShow['surfaceTreatment'] = modelsurfaceTreatment\r\n      this.columnShow['designNumber'] = modeldesignNumber\r\n    },\r\n    openQuotation(id) {\r\n      this.$router.push({ name: 'QuotationAttitude', query: { id: id, refreshRouterName: this.$route.name }, params: { id: id }})\r\n    },\r\n    openSupplier(id) {\r\n      this.$router.push({ name: 'SupplierDetail', query: { id: id, refreshRouterName: this.$route.name }, params: { id: id }})\r\n    },\r\n    cellStyle({ row, column, rowIndex, columnIndex }) {\r\n      if (column.label === '含税单价' || column.label === '税率' || column.label === '不含税单价' ||\r\n        column.label === '含税金额' || column.label === '税额' || column.label === '不含税金额') {\r\n        row.taxInclusivePrice = (Math.round(row.taxInclusivePrice * 100) / 100).toFixed(2)\r\n        row.taxRate = (Math.round(row.taxRate * 100) / 100).toFixed(2)\r\n        row.taxExclusivePrice = (Math.round(row.taxExclusivePrice * 100) / 100).toFixed(2)\r\n        row.taxInclusiveAmount = (Math.round(row.taxInclusiveAmount * 100) / 100).toFixed(2)\r\n        row.tax = (Math.round(row.tax * 100) / 100).toFixed(2)\r\n        row.taxExclusiveAmount = (Math.round(row.taxExclusiveAmount * 100) / 100).toFixed(2)\r\n        return 'text-align: right;padding: 0px;line-height: 4px;'\r\n      } else {\r\n        return 'text-align: center;padding: 0px;line-height: 4px;'\r\n      }\r\n    },\r\n    getReceiptType(type) {\r\n      if (type !== null) {\r\n        var receiptType = this.receiptTypesOptions.find(f => f.value === type)\r\n        if (receiptType !== undefined) {\r\n          return receiptType.name\r\n        } else {\r\n          return ''\r\n        }\r\n      } else {\r\n        return ''\r\n      }\r\n    },\r\n    openInvoice(row) {\r\n      this.$router.push({ name: 'CGInvoiceAttitude', query: { id: row.id, refreshRouterName: this.$route.name }, params: { id: row.id }})\r\n    },\r\n    openStorageIn(row) {\r\n      this.$router.push({ name: 'StorageInAttitude', query: { id: row.id, refreshRouterName: this.$route.name }, params: { id: row.id, type: row.type }})\r\n    },\r\n    dialogClose(data, state) {\r\n    },\r\n    openPaidDetail(row) {\r\n      var data = {\r\n        id: row.id\r\n      }\r\n      this.currentRow = data\r\n      this.dialogTitle = row.number + '付款详情'\r\n      this.comName = 'PaidAttitude'\r\n      this.dialogWidth = '100%'\r\n      this.dialogTableVisible = true\r\n    }\r\n  }\r\n}\r\n",null]}