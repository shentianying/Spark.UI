{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\zjgl\\Acceptance\\shouZhi.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\zjgl\\Acceptance\\shouZhi.vue","mtime":1635749455632},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n// monopolize\r\nimport { GetPaymentById } from '@/api/cwgl/zjgl/Gathering.js'\r\nimport { GetExpendById } from '@/api/cwgl/zjgl/Expend.js'\r\nexport default {\r\n  name: 'ShouZhiMessage',\r\n  data() {\r\n    return {\r\n      type: 'shou', // shou:收款 zhi:支出\r\n      id: '',\r\n      size: 'mini',\r\n      table: {\r\n        list: [],\r\n        loading: false\r\n      },\r\n      details: {}\r\n    }\r\n  },\r\n  computed: {\r\n    infoList() {\r\n      let tmp1 = []\r\n      let tmp2 = []\r\n      const {\r\n        orgName,\r\n        gatheringDate,\r\n        gatheringTypeName,\r\n        bank,\r\n        summary,\r\n        expendDate,\r\n        expendTypeName,\r\n        number,\r\n        pageName,\r\n        pageId,\r\n        billId,\r\n        amount,\r\n        personName,\r\n        capitalTypeName,\r\n        remark,\r\n        createUserName,\r\n        createDate,\r\n        lastEditUserName,\r\n        lastEditDate\r\n      } = this.details\r\n      const formatDate = date => this.$moment(date).format('YYYY-MM-DD')\r\n      if (this.type === 'shou') {\r\n        // 支出 摘要 summary\r\n        tmp1 = [{ label: '部门', value: orgName, monopolize: true }]\r\n        tmp2 = [\r\n          { label: '收款日期', value: formatDate(gatheringDate) },\r\n          { label: '收款类型', value: gatheringTypeName },\r\n          { label: '收款银行', value: bank }\r\n        ]\r\n      } else {\r\n        tmp1 = [\r\n          { label: '部门', value: orgName },\r\n          { label: '摘要', value: summary }\r\n        ]\r\n        tmp2 = [\r\n          { label: '支出日期', value: formatDate(expendDate) },\r\n          { label: '支出类型', value: expendTypeName, monopolize: true }\r\n        ]\r\n      }\r\n      return [\r\n        { label: '编号', value: number },\r\n        { label: '源头', value: pageName, click: this.goDeal, params: [pageId, billId] },\r\n        ...tmp1,\r\n        { label: '金额', value: amount },\r\n        { label: '经手人', value: personName },\r\n        { label: '资金形式', value: capitalTypeName },\r\n        ...tmp2,\r\n        { label: '备注', value: remark, monopolize: true },\r\n        { label: '制单人', value: createUserName },\r\n        { label: '制单时间', value: createDate },\r\n        { label: '更新人', value: lastEditUserName },\r\n        { label: '更新时间', value: lastEditDate }\r\n      ]\r\n    }\r\n  },\r\n  beforeRouteEnter(to, from, next) {\r\n    next(vm => {\r\n      vm.initData()\r\n    })\r\n  },\r\n  methods: {\r\n    /**\r\n     * @description: 初始化数据\r\n     */\r\n    initData() {\r\n      // 获取路由信息 shou:收款 zhi:支出\r\n      const { type, id } = this.$route.query\r\n      if (!type) {\r\n        return\r\n      }\r\n      this.type = type\r\n      this.id = id\r\n      this.fetchData()\r\n    },\r\n    /**\r\n     * @description: 数据获取\r\n     */\r\n    async fetchData() {\r\n      this.table.loading = true\r\n      try {\r\n        // To do\r\n        const func = this.type === 'shou' ? GetPaymentById : GetExpendById\r\n        const res = await func(this.id)\r\n        this.table.list = res.data.acceptanceList\r\n        res.data.amount = this.utils.formatMoney(res.data.amount, 2, 0)\r\n        this.details = res.data\r\n      } catch (e) {\r\n        console.log('fetchData:请求列表数据失败，错误信息：', e)\r\n      } finally {\r\n        this.table.loading = false\r\n      }\r\n    },\r\n    /**\r\n     * 前往源头\r\n     * @param {*} pageId 路由id\r\n     * @param {*} billId 单据id\r\n     */\r\n    goDeal(pageId, billId) {\r\n      if (!pageId) return\r\n      const { routerName } = this.getRoute(pageId)\r\n      this.$router.replace({ name: routerName, query: { id: billId, refreshRouterName: this.$route.name }, params: { id: billId, type: 1 }})\r\n    },\r\n    /**\r\n     * 获取源头路由\r\n     * @param {*} pageId 路由ID\r\n     * @returns 对应路由\r\n     */\r\n    getRoute(pageId) {\r\n      // 获取菜单列表\r\n      const getIsMenu = this.$store.getters.menus\r\n      return getIsMenu.find(f => f.id === pageId)\r\n    }\r\n  }\r\n}\r\n",null]}