{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\quotation\\quotationSupplier.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\quotation\\quotationSupplier.vue","mtime":1628756195069},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getQuotationSupplierInfo, fillQuotationSupplier } from '@/api/cggl/quotation'\r\nimport { getDictionarysByTypes } from '@/api/xtgl/dictionary'\r\nimport OrgSelect2 from '@/components/OrgSelect/index2'\r\nimport { validate } from '@/utils/validate'\r\nexport default {\r\n  name: 'QuotationSupplier',\r\n  components: {\r\n    OrgSelect2\r\n  },\r\n  props: {\r\n    obj: {\r\n      type: Object,\r\n      default: null\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      supplierForm: {\r\n        supplierId: null\r\n      },\r\n      priceListSuppliers: [],\r\n      ruleForm: {},\r\n      loading: false,\r\n      showbuttons: false,\r\n      // 附件页面\r\n      dialogTableVisible: false,\r\n      dialogTitle: '保存',\r\n      dialogWidth: '70%',\r\n      currentRow: null,\r\n      // 材料明细\r\n      list: [],\r\n      // 付款方式明细\r\n      paymodel: {\r\n        rules: {\r\n          requirement: [{ required: true, message: '请输入', trigger: 'blur' }],\r\n          days: [{ validator: validate.logic, logic: value => value > 0, required: true, trigger: 'blur' }],\r\n          scale: [{ validator: validate.logic, logic: value => value > 0, required: true, trigger: 'blur' }]\r\n        },\r\n        list: []\r\n      },\r\n      materialModel: {\r\n        rules: {\r\n          taxExclusivePrice: [{ validator: validate.logic, logic: value => value > 0, required: true, trigger: 'blur' }],\r\n          taxRate: [{ validator: validate.logic, logic: value => value > 0 && value < 1, required: true, trigger: 'blur' }],\r\n          taxInclusivePrice: [{ validator: validate.logic, logic: value => value > 0, required: true, trigger: 'blur' }],\r\n          taxExclusiveAmount: [{ validator: validate.logic, logic: value => value > 0, required: true, trigger: 'blur' }],\r\n          tax: [{ validator: validate.logic, logic: value => value > 0, required: true, trigger: 'blur' }],\r\n          taxInclusiveAmount: [{ validator: validate.logic, logic: value => value > 0, required: true, trigger: 'blur' }]\r\n        },\r\n        list: []\r\n      },\r\n      fileList: [],\r\n      // 供应商\r\n      suppliers: [],\r\n      // 发票种类\r\n      receiptTypes: [],\r\n      keyreceiptType: 0,\r\n      // 卸车费归属\r\n      otherPricePays: [],\r\n      keyotherPricePay: 0,\r\n      rules: {\r\n        brand: [{ required: true, message: '请输入', trigger: 'blur' }],\r\n        standardData: [{ required: true, message: '请输入', trigger: 'blur' }],\r\n        receiptType: [{ required: true, message: '请选择', trigger: 'blur' }],\r\n        otherPricePay: [{ required: true, message: '请选择', trigger: 'blur' }],\r\n        amountContain: [{ required: true, message: '请输入', trigger: 'blur' }],\r\n        supplyData: [{ required: true, message: '请输入', trigger: 'blur' }],\r\n        explain: [{ required: true, message: '请输入', trigger: 'blur' }],\r\n        contacts: [{ required: true, message: '请输入', trigger: 'blur' }],\r\n        contactsPhone: [{ required: true, message: '请输入', trigger: 'blur' }],\r\n        remark: [{ required: true, message: '请输入', trigger: 'blur' }]\r\n      },\r\n      supplierRule: {},\r\n      active: 0,\r\n      disabled: false,\r\n      columnShow: { unit2: true,\r\n        brand: true,\r\n        model: true,\r\n        spec: true,\r\n        thickness: true,\r\n        texture: true,\r\n        surfaceTreatment: true,\r\n        designNumber: true\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    getOrgList() {\r\n      return this.$store.state.user.info.orgList\r\n    }\r\n  },\r\n  watch: {},\r\n  activated() {\r\n    // this.initData()\r\n  },\r\n  mounted() {\r\n    this.initData()\r\n  },\r\n  methods: {\r\n    saveForm() {\r\n    },\r\n    submitForm(state) {\r\n      this.$refs['ruleForm'].validate(valid => {\r\n        if (valid) {\r\n          this.$refs['paymodel'].validate(val => {\r\n            if (val) {\r\n              this.$refs['materialModel'].validate(val2 => {\r\n                if (val2) {\r\n                  var postData = {}\r\n                  var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n                  // 拼接材料明细参数\r\n                  var arr1 = []\r\n                  this.materialModel.list.forEach(e => {\r\n                    var item = {}\r\n                    item = e\r\n                    item.quotationSupplierId = this.obj.id\r\n                    item.state = 0\r\n                    arr1.push(item)\r\n                  })\r\n                  // 拼接付款方式参数\r\n                  var arr2 = []\r\n                  this.paymodel.list.forEach(e => {\r\n                    var item2 = {}\r\n                    item2 = e\r\n                    item2.quotationId = newObj.quotationId\r\n                    item2.quotationSupplierId = this.obj.id\r\n                    arr2.push(item2)\r\n                  })\r\n\r\n                  postData.id = newObj.id\r\n                  postData.brand = newObj.brand\r\n                  postData.standardData = newObj.standardData\r\n                  postData.receiptType = newObj.receiptType\r\n                  postData.payStatus = newObj.payStatus\r\n                  postData.otherPricePay = newObj.otherPricePay\r\n                  postData.amountContain = newObj.amountContain\r\n                  postData.supplyData = newObj.supplyData\r\n                  postData.explain = newObj.explain\r\n                  postData.contacts = newObj.contacts\r\n                  postData.contactsPhone = newObj.contactsPhone\r\n                  postData.remark = newObj.remark\r\n                  postData.state = state\r\n                  postData.quotationId = newObj.quotationId\r\n                  postData.supplierId = newObj.supplierId\r\n                  postData.fillMode = newObj.fillMode\r\n                  postData.createUserId = newObj.createUserId\r\n                  postData.createUserName = newObj.createUserName\r\n                  postData.quotationSupplierDetails = arr1 // 材料\r\n                  postData.quotationSupplierPayModes = arr2 // 付款方式\r\n\r\n                  this.loading = true\r\n                  fillQuotationSupplier(postData).then(response => {\r\n                    this.$message(response.message)\r\n                    this.loading = false\r\n                    this.$emit('dialogClose', response, '')\r\n                    // this.closeThePage()\r\n                  }).catch(() => { this.loading = false })\r\n                }\r\n              })\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    async initData() {\r\n      getDictionarysByTypes({ types: 'receiptTypes,otherPricePays' }).then((response) => {\r\n        const { data } = response\r\n        data.forEach(element => {\r\n          element.pid = element.pId\r\n          if (element.type === 'receiptTypes') {\r\n            this.receiptTypes.push(element)\r\n          }\r\n          if (element.type === 'otherPricePays') {\r\n            this.otherPricePays.push(element)\r\n          }\r\n        })\r\n        this.keyreceiptType += 1\r\n        this.keyotherPricePay += 1\r\n      })\r\n      if (this.obj) {\r\n        getQuotationSupplierInfo({ id: this.obj.id }).then((response) => {\r\n          this.ruleForm = response.data\r\n          // this.list = response.detailList\r\n          this.setData(response)\r\n          this.activsetData = 1\r\n          this.keyreceiptType += 1\r\n          this.keyotherPricePay += 1\r\n        })\r\n        this.disabled = true\r\n      }\r\n    },\r\n    closeThePage() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    },\r\n    dialogClose(data, state) {\r\n      this.dialogTableVisible = false\r\n    },\r\n    showFileList(fileList) {\r\n      this.dialogTitle = '附件列表'\r\n      this.comName = 'UpFile'\r\n      this.dialogWidth = '50%'\r\n      this.fileList = fileList\r\n      this.dialogTableVisible = true\r\n    },\r\n    previous() {\r\n      this.active = 0\r\n      this.disabled = false\r\n    },\r\n    setData(response) {\r\n      const { data } = response\r\n      var pom = []\r\n      data.quotationSupplierDetails.forEach(e => {\r\n        pom.push({\r\n          id: e.id,\r\n          categoryId: e.material.categoryId,\r\n          category: { id: e.material.categoryId, name: e.material.materialCategory.name, unit: e.material.materialCategory.unit },\r\n          unit2: e.material.unit2,\r\n          brand: e.material.brand,\r\n          model: e.material.model,\r\n          spec: e.material.spec,\r\n          thickness: e.material.thickness,\r\n          texture: e.material.texture,\r\n          surfaceTreatment: e.material.surfaceTreatment,\r\n          designNumber: e.material.designNumber,\r\n          applicationQuantity: e.quotationDetail.planDetail.applicationQuantity,\r\n          applicationQuantity2: e.quotationDetail.planDetail.applicationQuantity2,\r\n          quantity: e.quotationDetail.planDetail.quantity,\r\n          quantity2: e.quotationDetail.planDetail.quantity2,\r\n          entryDate: e.quotationDetail.planDetail.entryDate,\r\n          remark: e.remark,\r\n          materialId: e.materialId,\r\n          quotationDetailId: e.quotationDetailId,\r\n          taxExclusivePrice: e.taxExclusivePrice,\r\n          taxRate: e.taxRate,\r\n          taxInclusivePrice: e.taxInclusivePrice,\r\n          taxExclusiveAmount: e.taxExclusiveAmount,\r\n          tax: e.tax,\r\n          taxInclusiveAmount: e.taxInclusiveAmount\r\n          // fileList: detailList.upFile.filter(f => f.tableId === e.id)\r\n        })\r\n      })\r\n      // 填充 明细列表\r\n      this.materialModel.list = pom\r\n      var pom2 = []\r\n      data.quotationSupplierPayModes.forEach(e => {\r\n        pom2.push({\r\n          id: e.id,\r\n          requirement: e.requirement,\r\n          days: e.days,\r\n          scale: e.scale,\r\n          remark: e.remark\r\n        })\r\n      })\r\n      if (pom2.length === 0) {\r\n        pom2.push({\r\n          id: 0,\r\n          requirement: '',\r\n          days: '',\r\n          scale: '',\r\n          remark: ''\r\n        })\r\n      }\r\n      this.paymodel.list = pom2\r\n      this.setColumnShow()\r\n    },\r\n    setColumnShow() { // 设置列的显示。列中，都没有值，就隐藏\r\n      var modelunit2 = false\r\n      var modelbrand = false\r\n      var modelmodel = false\r\n      var modelspec = false\r\n      var modelthickness = false\r\n      var modeltexture = false\r\n      var modelsurfaceTreatment = false\r\n      var modeldesignNumber = false\r\n      for (var row of this.materialModel.list) {\r\n        if (row.unit2) { modelunit2 = true }\r\n        if (row.brand) { modelbrand = true }\r\n        if (row.model) { modelmodel = true }\r\n        if (row.spec) { modelspec = true }\r\n        if (row.thickness) { modelthickness = true }\r\n        if (row.texture) { modeltexture = true }\r\n        if (row.surfaceTreatment) { modelsurfaceTreatment = true }\r\n        if (row.designNumber) { modeldesignNumber = true }\r\n      }\r\n      this.columnShow['unit2'] = modelunit2\r\n      this.columnShow['brand'] = modelbrand\r\n      this.columnShow['model'] = modelmodel\r\n      this.columnShow['spec'] = modelspec\r\n      this.columnShow['thickness'] = modelthickness\r\n      this.columnShow['texture'] = modeltexture\r\n      this.columnShow['surfaceTreatment'] = modelsurfaceTreatment\r\n      this.columnShow['designNumber'] = modeldesignNumber\r\n    },\r\n    add() {\r\n      var data = {\r\n        requirement: '',\r\n        days: '',\r\n        scale: '',\r\n        remark: ''\r\n      }\r\n      this.paymodel.list.push(data)\r\n    },\r\n    del(d) {\r\n      // 列表删除\r\n      this.paymodel.list.splice(d.$index, 1)\r\n    },\r\n    handleChangeMoney(row) {\r\n      if (row.taxInclusivePrice && row.taxRate) {\r\n        row.taxInclusiveAmount = Number(row.taxInclusivePrice) * Number(row.applicationQuantity)\r\n        row.taxExclusiveAmount = (Number(row.taxInclusiveAmount) / (1 + Number(row.taxRate))).toFixed(2)\r\n        row.tax = (Number(row.taxInclusiveAmount) - Number(row.taxExclusiveAmount)).toFixed(2)\r\n        row.taxExclusivePrice = (Number(row.taxInclusivePrice) / (1 + Number(row.taxRate))).toFixed(10)\r\n      }\r\n      this.$set(row)\r\n    }\r\n  }\r\n}\r\n",null]}