{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\ggzx\\grgl\\workerWhitelist\\edit.vue?vue&type=template&id=24519e78&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\ggzx\\grgl\\workerWhitelist\\edit.vue","mtime":1635749455688},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"el-form\",\n    {\n      ref: \"ruleForm\",\n      attrs: {\n        \"status-icon\": \"\",\n        model: _vm.ruleForm,\n        rules: _vm.rules,\n        \"label-width\": \"120px\",\n        size: \"mini\"\n      }\n    },\n    [\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"年度\", prop: \"year\" } },\n        [\n          _c(\n            \"el-select\",\n            {\n              staticStyle: { width: \"100%\" },\n              attrs: { size: \"mini\", placeholder: \"请选择\" },\n              model: {\n                value: _vm.ruleForm.year,\n                callback: function($$v) {\n                  _vm.$set(_vm.ruleForm, \"year\", $$v)\n                },\n                expression: \"ruleForm.year\"\n              }\n            },\n            _vm._l(_vm.yearList, function(item, index) {\n              return _c(\"el-option\", {\n                key: index,\n                attrs: { label: item.name, value: item.value }\n              })\n            }),\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"工人工号\", prop: \"number\" } },\n        [\n          _c(\"el-input\", {\n            attrs: { placeholder: \"请输入\", size: \"mini\", maxlength: \"50\" },\n            model: {\n              value: _vm.ruleForm.number,\n              callback: function($$v) {\n                _vm.$set(_vm.ruleForm, \"number\", $$v)\n              },\n              expression: \"ruleForm.number\"\n            }\n          })\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"工人名称\", prop: \"name\" } },\n        [\n          _c(\"el-input\", {\n            attrs: { placeholder: \"请输入\", size: \"mini\", maxlength: \"50\" },\n            model: {\n              value: _vm.ruleForm.name,\n              callback: function($$v) {\n                _vm.$set(_vm.ruleForm, \"name\", $$v)\n              },\n              expression: \"ruleForm.name\"\n            }\n          })\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"证件号\", prop: \"idNumber\" } },\n        [\n          _c(\"el-input\", {\n            attrs: { placeholder: \"请输入\", size: \"mini\", maxlength: \"50\" },\n            model: {\n              value: _vm.ruleForm.idNumber,\n              callback: function($$v) {\n                _vm.$set(_vm.ruleForm, \"idNumber\", $$v)\n              },\n              expression: \"ruleForm.idNumber\"\n            }\n          })\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"类型\", prop: \"type\" } },\n        [\n          _c(\n            \"el-select\",\n            {\n              staticStyle: { width: \"100%\" },\n              model: {\n                value: _vm.ruleForm.type,\n                callback: function($$v) {\n                  _vm.$set(_vm.ruleForm, \"type\", $$v)\n                },\n                expression: \"ruleForm.type\"\n              }\n            },\n            _vm._l(_vm.whitelistTypeList, function(item, index) {\n              return _c(\"el-option\", {\n                key: index,\n                attrs: { label: item.name, value: item.value }\n              })\n            }),\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"原因\", prop: \"reason\" } },\n        [\n          _c(\"el-input\", {\n            attrs: { type: \"textarea\", rows: 4, maxlength: \"500\" },\n            model: {\n              value: _vm.ruleForm.reason,\n              callback: function($$v) {\n                _vm.$set(_vm.ruleForm, \"reason\", $$v)\n              },\n              expression: \"ruleForm.reason\"\n            }\n          })\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"附件\", prop: \"fileList\" } },\n        [\n          _c(\"up-file\", {\n            key: \"fileListKey\",\n            attrs: {\n              \"is-preview\": true,\n              \"is-upfile\": true,\n              \"is-delete\": true,\n              \"file-list\": _vm.ruleForm.fileList\n            },\n            model: {\n              value: _vm.ruleForm.fileList,\n              callback: function($$v) {\n                _vm.$set(_vm.ruleForm, \"fileList\", $$v)\n              },\n              expression: \"ruleForm.fileList\"\n            }\n          })\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"备注\", prop: \"remark\" } },\n        [\n          _c(\"el-input\", {\n            attrs: { type: \"textarea\", rows: 4, maxlength: \"500\" },\n            model: {\n              value: _vm.ruleForm.remark,\n              callback: function($$v) {\n                _vm.$set(_vm.ruleForm, \"remark\", $$v)\n              },\n              expression: \"ruleForm.remark\"\n            }\n          })\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-form-item\",\n        [\n          _c(\n            \"el-button\",\n            {\n              attrs: {\n                type: \"primary\",\n                size: \"mini\",\n                loading: _vm.buttonLoading\n              },\n              on: {\n                click: function($event) {\n                  return _vm.submitForm(\"ruleForm\")\n                }\n              }\n            },\n            [_vm._v(\"更新保存\")]\n          ),\n          _vm._v(\" \"),\n          _vm.ruleForm.id !== 0\n            ? _c(\n                \"el-button\",\n                {\n                  directives: [\n                    {\n                      name: \"has\",\n                      rawName: \"v-has\",\n                      value: _vm.WHITELIST_DELETE,\n                      expression: \"WHITELIST_DELETE\"\n                    }\n                  ],\n                  attrs: {\n                    type: \"danger\",\n                    size: \"mini\",\n                    loading: _vm.buttonLoading\n                  },\n                  on: {\n                    click: function($event) {\n                      return _vm.handleDelete(_vm.ruleForm.id)\n                    }\n                  }\n                },\n                [_vm._v(\"移除\")]\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\n            \"el-button\",\n            {\n              attrs: { size: \"mini\" },\n              on: {\n                click: function($event) {\n                  return _vm.resetForm(\"ruleForm\")\n                }\n              }\n            },\n            [_vm._v(\"重置\")]\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}