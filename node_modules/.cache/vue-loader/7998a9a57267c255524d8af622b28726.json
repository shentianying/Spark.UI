{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\swcb\\businessCostEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\swcb\\businessCostEdit.vue","mtime":1628756195078},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { putBusinessCost, addBusinessCost, getBusinessCostById, checkBusinessCostDetail, getBillFlow, deleteBusinessCost } from '@/api/cggl/businessCost'\r\nimport BusinessCostDetailAdd from './businessCostDetailAdd'\r\nimport OrgSelect2 from '@/components/OrgSelect/index2'\r\nimport FlowSelect from '@/components/Flow/flowSelect'\r\nimport FlowDisplay from '@/components/Flow/flowDisplay'\r\nimport FlowAttitude from '@/components/Flow/flowAttitude'\r\nimport { ExcelExport, ExcelImport } from 'pikaz-excel-js'\r\nimport { validateData } from '@/utils/validate'\r\nimport { cleanText } from '@/utils/index'\r\nexport default {\r\n  name: 'BusinessCostEdit',\r\n  components: {\r\n    BusinessCostDetailAdd,\r\n    OrgSelect2,\r\n    ExcelExport,\r\n    ExcelImport,\r\n    FlowSelect,\r\n    FlowDisplay,\r\n    FlowAttitude\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        id: 0,\r\n        number: '',\r\n        orgId: null,\r\n        remark: '',\r\n        state: 0,\r\n        billFlowId: 0\r\n      },\r\n      loading: false,\r\n      showbuttons: false,\r\n      activate: false,\r\n      dialogTableVisible: false,\r\n      dialogTitle: '保存',\r\n      dialogWidth: '70%',\r\n      comName: 'BusinessCostDetailAdd',\r\n      currentRow: null,\r\n      listIndex: 0,\r\n      list: [],\r\n      attitudePara: null,\r\n      loadFlow: false,\r\n      active: 0,\r\n      billFlow: null,\r\n      columnShow: { unit2: true,\r\n        brand: true,\r\n        model: true,\r\n        spec: true,\r\n        thickness: true,\r\n        texture: true,\r\n        surfaceTreatment: true,\r\n        designNumber: true },\r\n      sheet: [{\r\n        // title: '材料导入模板',\r\n        tHeader: ['材料名称', '数量', '单价', '总金额', '备注'],\r\n        table: [],\r\n        keys: ['CategoryName', 'Quantity', 'Price', 'Amount', 'Remark'],\r\n        sheetName: '商务成本材料明细'\r\n      }],\r\n      rules: {\r\n        orgId: [{ required: true, message: '请输入', trigger: 'change' }]\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    'ruleForm.orgId': {\r\n      handler: function(value, oldvalue) {\r\n        if (!oldvalue) {\r\n          this.$refs['ruleForm'].validateField('orgId', (valid) => {})\r\n        }\r\n      }, deep: true\r\n    }\r\n  },\r\n  activated() {\r\n    if (this.$route.params.id) {\r\n      this.ruleForm.orgId = null // 刷新 org 列表\r\n      this.initData()\r\n      this.refreshRouterName = this.$route.params.refreshRouterName\r\n    }\r\n  },\r\n  mounted() {\r\n    if (!this.$route.params.id) {\r\n      this.showbuttons = true\r\n      this.activate = true\r\n    }\r\n  },\r\n  methods: {\r\n    // 根据表单获取流程\r\n    getDynamicFlow(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n          // 拼接材料明细参数\r\n          var arr1 = []\r\n          this.list.forEach(e => {\r\n            var item = {}\r\n            item.id = e.id\r\n            item.quantity = e.quantity\r\n            item.price = e.price\r\n            item.amount = e.amount\r\n            item.remark = e.remark\r\n            arr1.push(item)\r\n          })\r\n          newObj.businessCostDetails = arr1\r\n\r\n          // console.log('添加计划的数据：', newObj)\r\n          getBillFlow(newObj).then(response => {\r\n            if (response.success) {\r\n              this.billFlow = response.data.billFlow\r\n              this.active = 1\r\n            } else {\r\n              this.$message(response.message)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    submitForm(formName, state) {\r\n      this.active = 2\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n          // 计划状态\r\n          newObj.state = state\r\n          // 拼接材料明细参数\r\n          var arr1 = []\r\n          this.list.forEach(e => {\r\n            var item = {}\r\n            item.id = e.id\r\n            item.materialCategoryId = e.materialCategoryId\r\n            item.quantity = e.quantity\r\n            item.price = e.price\r\n            item.amount = e.amount\r\n            item.remark = e.remark\r\n            arr1.push(item)\r\n          })\r\n          newObj.businessCostDetails = arr1\r\n\r\n          if (this.billFlow) {\r\n            // 获取流程组件中的数据\r\n            const billFlow = this.$refs.flowSelect.getBillFlow()\r\n            if (!billFlow) {\r\n              return false\r\n            }\r\n            newObj.billFlow = billFlow\r\n          } else {\r\n            this.$message('流程数据不能为空')\r\n            return\r\n          }\r\n          this.loading = true\r\n\r\n          if (this.id) {\r\n            putBusinessCost(newObj).then(response => {\r\n              if (response.errorMsg) {\r\n              // 验证错误\r\n                this.$alert(`${response.errorMsg.replace(/；/g, '；<br />')}`,\r\n                  { dangerouslyUseHTMLString: true })\r\n                return\r\n              }\r\n              this.$message(response.message)\r\n              this.loading = false\r\n              this.closeThePage()\r\n              // this.setData(response)\r\n            }).catch(() => {\r\n              this.loading = false\r\n              this.active = 0\r\n            })\r\n          } else {\r\n            console.log(newObj)\r\n            addBusinessCost(newObj).then(response => {\r\n              if (response.errorMsg) {\r\n                // 验证错误\r\n                this.$alert(`${response.errorMsg.replace(/；/g, '；<br />')}`,\r\n                  { dangerouslyUseHTMLString: true })\r\n                return\r\n              }\r\n              this.$message(response.message)\r\n              this.loading = false\r\n              this.closeThePage()\r\n              // this.setData(response)\r\n            }).catch(() => {\r\n              this.loading = false\r\n              this.active = 0\r\n            })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    async initData() {\r\n      // 有参数id 就是编辑\r\n      if (this.$route.query.id) {\r\n        this.id = this.$route.query.id\r\n      }\r\n      if (this.id) {\r\n        this.loading = true\r\n        this.activate = false // 销毁部门组件\r\n        await getBusinessCostById({ id: this.id }).then(response => this.setData(response))\r\n      }\r\n    },\r\n    setData(response) {\r\n      const { data } = response\r\n      // 填充参数\r\n      this.ruleForm = {\r\n        id: data.id,\r\n        number: data.number,\r\n        orgId: data.orgId,\r\n        remark: data.remark,\r\n        billFlowId: data.billFlowId,\r\n        state: data.state\r\n      }\r\n      // 填充 明细列表\r\n      this.list = data.businessCostDetails\r\n      this.loading = false // loading 状态关闭\r\n      this.attitudePara = { planId: data.id, billFlowId: data.billFlowId }\r\n      this.showbuttons = true // 初始化完成，显示上面的按钮\r\n      this.activate = true // 加载部门组件\r\n      this.loadFlow = true // 加载审批组件\r\n    },\r\n    closeThePage() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    },\r\n    dialogClose(data, state) {\r\n      this.addMaterial(data, state)\r\n      this.dialogTableVisible = false\r\n    },\r\n    addMaterial(data, state) {\r\n      if (data) {\r\n        if (state === 'add') {\r\n          this.list.push(data)\r\n        } else if (state === 'update') {\r\n          this.list.splice(this.listIndex, 1, data)\r\n        }\r\n      }\r\n    },\r\n    previous() {\r\n      // 上一步\r\n      this.active = 0\r\n      this.billFlow = null\r\n    },\r\n    edit(d) {\r\n      this.currentRow = d.row\r\n      this.listIndex = d.$index\r\n      this.dialogTitle = '编辑材料'\r\n      this.comName = 'BusinessCostDetailAdd'\r\n      this.dialogWidth = '70%'\r\n      this.dialogTableVisible = true\r\n    },\r\n    add() {\r\n      this.currentRow = null\r\n      this.dialogTitle = '添加材料'\r\n      this.comName = 'BusinessCostDetailAdd'\r\n      this.dialogWidth = '70%'\r\n      this.dialogTableVisible = true\r\n    },\r\n    del(d) {\r\n      // 页面删除\r\n      this.list.splice(d.$index, 1)\r\n    },\r\n    onError(err) {\r\n      this.$message.info('导出失败：' + err)\r\n    },\r\n    onSuccess(d, file) {\r\n      // 导入判断\r\n      var data = d[0].data\r\n      // console.log('数据为空的字段data中不会有该字段:', data)\r\n      if (data.length) {\r\n        const postData = []\r\n        var errorMessage = ''\r\n        for (var e of data) {\r\n          if (!e.材料名称) {\r\n            errorMessage += '第' + e.__rowNum__ + '行，材料名称不能为空；'\r\n          }\r\n          if (!e.材料名称) {\r\n            errorMessage += '第' + e.__rowNum__ + '行，材料名称不能为空；'\r\n          }\r\n          if (!e.数量) {\r\n            errorMessage += '第' + e.__rowNum__ + '行，数量不能为空；'\r\n          }\r\n          // 必须是数字\r\n          if (e.数量) {\r\n            if (!validateData.dbl(e.数量.trim()).isSuccess) {\r\n              errorMessage += '第' + e.__rowNum__ + '行，数量必须是数字；'\r\n            }\r\n          }\r\n          if (!e.单价) {\r\n            errorMessage += '第' + e.__rowNum__ + '行，单价不能为空；'\r\n          }\r\n          if (e.单价) {\r\n            if (!validateData.dbl(e.单价.trim()).isSuccess) {\r\n              errorMessage += '第' + e.__rowNum__ + '行，单价必须是数字；'\r\n            }\r\n          }\r\n          if (!e.总金额) {\r\n            errorMessage += '第' + e.__rowNum__ + '行，总金额不能为空；'\r\n          }\r\n          if (e.总金额) {\r\n            if (!validateData.dbl(e.总金额.trim()).isSuccess) {\r\n              errorMessage += '第' + e.__rowNum__ + '行，总金额必须是数字；'\r\n            }\r\n          }\r\n          var obj1 = {}\r\n          var obj2 = {}\r\n          var detailCols = ['CategoryName', 'Quantity', 'Price', 'Amount', 'Remark']\r\n          this.sheet[0].keys.forEach((v, i) => {\r\n            var value = e[this.sheet[0].tHeader[i]]\r\n            // 清除空格 回车 换行符\r\n            if (value) { value = cleanText(value) } else { value = '' }\r\n            // console.log('v:' + v + ';value:' + value)\r\n            if (detailCols.includes(v)) { obj1[v] = value } else { obj2[v] = value }\r\n          })\r\n          obj1['Material'] = obj2\r\n          postData.push(obj1)\r\n        }\r\n        this.loading = true\r\n        if (errorMessage.length > 0) {\r\n          this.$alert(`${errorMessage.replace(/；/g, '；<br />')}`,\r\n            { dangerouslyUseHTMLString: true })\r\n          this.loading = false\r\n          return\r\n        }\r\n        // console.log('postData:', postData)\r\n        // 把数据推送到后端进行验证\r\n        checkBusinessCostDetail(postData).then(response => {\r\n          this.loading = false\r\n          if (response.request === 100) {\r\n            this.$alert(`${response.msg.replace(/；/g, '；<br />')}`,\r\n              { dangerouslyUseHTMLString: true })\r\n          } else {\r\n            if (response.data) {\r\n              const { data } = response\r\n              // 拼接成数组对象\r\n              for (var item1 of data) {\r\n                var obj2 = {\r\n                  materialCategoryId: item1.materialCategoryId,\r\n                  materialCategory: item1.materialCategory,\r\n                  quantity: item1.quantity,\r\n                  price: item1.price,\r\n                  amount: item1.amount,\r\n                  remark: item1.remark\r\n                }\r\n                console.log(obj2)\r\n                this.addMaterial(obj2, 'add')\r\n              }\r\n            }\r\n          }\r\n        }).catch(() => { this.loading = false })\r\n      } else {\r\n        this.$message.info('模板中数据不能为空')\r\n      }\r\n    },\r\n    cancel() { // 作废\r\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.active = 2\r\n        this.loading = true\r\n        deleteBusinessCost({ id: this.ruleForm.id }).then(response => {\r\n          this.$message(response.message)\r\n          this.loading = false\r\n          this.closeThePage()\r\n        })\r\n      }).catch(() => {})\r\n    }\r\n  }\r\n}\r\n",null]}