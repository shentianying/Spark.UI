{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\zjgl\\FundAllocation\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\zjgl\\FundAllocation\\edit.vue","mtime":1635216068779},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { GetFundAllocationById, GetBillFlow, AddFundAllocation, PutFundAllocation, DeleteFundAllocation } from '@/api/cwgl/zjgl/FundAllocation.js'\r\nimport FlowSelect from '@/components/Flow/flowSelect'\r\nimport { validate } from '@/utils/validate'\r\nimport MyForm from '@/components/MyForm'\r\n\r\nexport default {\r\n  name: 'ZiJinDiaoBoEdit',\r\n  components: {\r\n    FlowSelect,\r\n    MyForm\r\n  },\r\n  data() {\r\n    return {\r\n      size: 'mini',\r\n      active: 1, // 提交进度 1: 编辑信息 2: 编辑审批流程\r\n      dialogParam: {\r\n        // dialog的配置参数集合\r\n        title: '选择承兑', // 标题\r\n        show: false, // 是否显示\r\n        type: 1 // 显示类型，1：承兑信息\r\n      },\r\n      zjdbForm: {\r\n        id: 0,\r\n        billFlow: null, // 流程数据\r\n        orgId: '', // 调出部门\r\n        orgIdIn: '', // 调入部门\r\n        number: '', // 收款编号\r\n        capitalType: '', // 资金形式id\r\n        remark: '', // 备注\r\n        amount: '', // 金额\r\n        state: 0 // 状态 0:制单;1:审批;1000:支付;10000:完成;-1:作废\r\n      },\r\n      zjxsData: [], // 资金形式下拉\r\n      cdmxData: [], // 承兑明细列表\r\n      zjcdDate: [], // 未承兑列表\r\n      cdParams: {\r\n        currentPage: 1,\r\n        pageSize: this.utils.getPersonalSettings().pageSize,\r\n        ticketNumber: '',\r\n        orgids: []\r\n      },\r\n      // 验证规则\r\n      rules: {\r\n        orgId: [\r\n          { required: true, message: '请选择调入部门', trigger: 'change' }\r\n        ],\r\n        orgIdIn: [\r\n          { required: true, message: '请选择调出部门', trigger: 'change' }\r\n        ],\r\n        capitalType: [\r\n          { required: true, message: '请选择资金形式', trigger: 'change' }\r\n        ],\r\n        amount: [\r\n          { required: true, message: '请输入金额', trigger: 'blur' },\r\n          { validator: validate.money, message: '金额格式不正确', trigger: 'blur' },\r\n          { validator: validate.max_amount, message: '超过所能存储的最大金额' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    /**\r\n     * 计算是否是承兑\r\n     */\r\n    isChengdui() {\r\n      const { capitalType } = this.zjdbForm\r\n      return capitalType === 2 || capitalType === 3\r\n    },\r\n    title() {\r\n      const { active } = this\r\n      return active === 2 ? '审批流程' : '资金调拨信息'\r\n    },\r\n    /**\r\n     * 处理form表单的数据\r\n     */\r\n    formNodeData() {\r\n      return [\r\n        { label: '编码:', keyword: 'number', monopolize: true, props: { disabled: true, placeholder: '系统自动生成' }},\r\n        { label: '调出部门:', keyword: 'orgId', component: 'OrgSelect', props: { dataMode: 1, collapseTags: true, showAllLevels: false, filterable: true, expandTrigger: 'hover', placeholder: '请选择调出部门', checkStrictly: true }},\r\n        { label: '调入部门:', keyword: 'orgIdIn', component: 'OrgSelect', props: { dataMode: 1, collapseTags: true, showAllLevels: false, filterable: true, expandTrigger: 'hover', placeholder: '请选择调入部门', checkStrictly: true }},\r\n        { label: '资金形式:', keyword: 'capitalType', component: 'CapitalSelect', props: { multiple: false, showAllLevels: false }},\r\n        { label: '金额:', keyword: 'amount' },\r\n        { label: '备注:', keyword: 'remark', monopolize: true, props: { type: 'textarea' }}\r\n      ]\r\n    }\r\n  },\r\n  beforeRouteEnter(to, from, next) {\r\n    next(vm => {\r\n      const newId = vm.$route.query.id\r\n      const oldId = vm.zjdbForm.id\r\n      if (newId && newId !== oldId) {\r\n      // 说明是打开另一个单子的编辑页面\r\n        vm.zjdbForm.id = newId\r\n        vm.getZjdbForm()\r\n        vm.active = 1\r\n      } else if (!newId && oldId) {\r\n        // 说明是打开一个新建页面\r\n        Object.assign(vm.$data, vm.$options.data())\r\n        vm.$nextTick(() => {\r\n          vm.$refs['ruleForm']?.resetFields()\r\n        })\r\n      }\r\n    })\r\n  },\r\n  methods: {\r\n    /**\r\n     * 修改填报进度\r\n     */\r\n    setActive(active) {\r\n      this.active = active\r\n    },\r\n    /**\r\n     * 下一步\r\n     */\r\n    nextStep(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          // 获取流程数据\r\n          const { state, billFlow } = this.zjdbForm\r\n          const req = {\r\n            ...this.zjdbForm,\r\n            state: state || 0\r\n          }\r\n          if (billFlow) req.billFlowId = billFlow.id\r\n          delete req.billFlow\r\n          delete req.number\r\n          GetBillFlow(req).then(({ data, success, message }) => {\r\n            if (success) {\r\n              this.zjdbForm.billFlow = data.billFlow\r\n              this.setActive(2)\r\n            } else {\r\n              this.$message.error(message)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    /**\r\n     * 当选择承兑以后金额变成0\r\n     */\r\n    capitalTypeChange() {\r\n      if (this.isChengdui) this.zjdbForm.amount = 0\r\n    },\r\n    /**\r\n     * 获取资金调拨数据\r\n     */\r\n    getZjdbForm() {\r\n      GetFundAllocationById(this.zjdbForm.id).then(\r\n        res => {\r\n          if (res.code === 200) {\r\n            for (const key in this.zjdbForm) {\r\n              this.zjdbForm[key] = res.data[key]\r\n            }\r\n            this.zjdbForm.billFlow = res.billFlowData\r\n            console.log(this.zjdbForm, 110)\r\n          }\r\n        }\r\n      )\r\n    },\r\n    // 作废\r\n    invalidForm() {\r\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        return DeleteFundAllocation(this.zjdbForm.id)\r\n      }).then(() => {\r\n        this.$message.success('操作成功')\r\n        this.back()\r\n      })\r\n    },\r\n    /**\r\n     * 提交表单\r\n     * @param {Number} state 提交类型，0：保存；1：提交\r\n     */\r\n    submitForm(state) {\r\n      const req = {\r\n        ...this.zjdbForm,\r\n        state\r\n      }\r\n      delete req.number\r\n      if (this.zjdbForm.billFlow) {\r\n        // 获取流程组件中的数据\r\n        const billFlow = this.$refs.flowSelect.getBillFlow()\r\n        if (!billFlow) {\r\n          return false\r\n        }\r\n        req.billFlow = billFlow\r\n      } else {\r\n        this.$message.error('流程数据不能为空')\r\n        return\r\n      }\r\n      if (req.id) {\r\n        PutFundAllocation(req).then(res => {\r\n          this.$message.success('保存成功')\r\n          this.back()\r\n        })\r\n      } else {\r\n        AddFundAllocation(req).then(() => {\r\n          this.$message.success('提交成功')\r\n          this.back()\r\n        })\r\n      }\r\n    },\r\n    /**\r\n     * 返回上一页，并关闭当前页\r\n     */\r\n    back() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    }\r\n  }\r\n}\r\n",null]}