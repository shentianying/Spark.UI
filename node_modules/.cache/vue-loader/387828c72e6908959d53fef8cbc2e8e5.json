{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\gckgl\\gathering\\projectGatheringSplit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\gckgl\\gathering\\projectGatheringSplit.vue","mtime":1635749455694},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getProjectGatheringWithSplitById, splitProjectGathering, handInputProjectGathering } from '@/api/xmgl/projectGathering'\r\nimport { validateData, validate } from '@/utils/validate'\r\nimport SelectProject from '@/components/Other/xmgl/selectProject'\r\nimport OrgSelect2 from '@/components/OrgSelect/index2'\r\nexport default {\r\n  name: 'ProjectGatheringSplit',\r\n  components: {\r\n    SelectProject,\r\n    OrgSelect2\r\n  },\r\n  data() {\r\n    return {\r\n      size: 'mini',\r\n      ruleForm: {\r\n        id: 0,\r\n        number: '',\r\n        orgId: null,\r\n        companyId: this.$store.state.user.selectOrgId,\r\n        projectId: null,\r\n        gatheringDate: new Date(),\r\n        personId: this.$store.state.user.uid,\r\n        gatheringAmount: '',\r\n        remark: '',\r\n        state: 0,\r\n        splitOrgId: null,\r\n        splitCompanyProjectId: null,\r\n        splitCompanyAmount: '',\r\n        splitProjectAmount: '',\r\n        groupManageFee: '',\r\n        bank: ''\r\n      },\r\n      orgName: '',\r\n      gatheringType: '',\r\n      capitalType: '',\r\n      projectGatheringId: null,\r\n      projectName: '',\r\n      orgList: [],\r\n      keyOrg: 0,\r\n      acceptances: [],\r\n      isChengDui: false,\r\n\r\n      loading: false,\r\n      rules: {\r\n        splitCompanyProjectId: [{ required: true, message: '请选择项目', trigger: 'change' }],\r\n        splitOrgId: [{ required: true, message: '请总公司地区', trigger: 'change' }],\r\n        splitCompanyAmount: [\r\n          { required: true, message: '请输入金额', trigger: 'change' },\r\n          { validator: validate.money, message: '金额格式不正确' }\r\n        ],\r\n        splitProjectAmount: [\r\n          { required: true, message: '请输入金额', trigger: 'change' },\r\n          { validator: validate.money, message: '金额格式不正确' }\r\n        ],\r\n        groupManageFee: [\r\n          { validator: validate.money, message: '金额格式不正确', trigger: 'change' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    'ruleForm.splitCompanyAmount': {\r\n      handler: function(value, oldvalue) {\r\n        if (value !== oldvalue) {\r\n          this.ruleForm.groupManageFee = this.ruleForm.gatheringAmount - this.ruleForm.splitCompanyAmount - this.ruleForm.splitProjectAmount\r\n        }\r\n      }, deep: true\r\n    },\r\n    'ruleForm.splitProjectAmount': {\r\n      handler: function(value, oldvalue) {\r\n        if (value !== oldvalue) {\r\n          this.ruleForm.groupManageFee = this.ruleForm.gatheringAmount - this.ruleForm.splitCompanyAmount - this.ruleForm.splitProjectAmount\r\n        }\r\n      }, deep: true\r\n    }\r\n  },\r\n  activated() {\r\n    if (this.$route.params.id) {\r\n      this.initData()\r\n      this.refreshRouterName = this.$route.params.refreshRouterName\r\n    }\r\n  },\r\n  mounted() {\r\n    if (!this.$route.params.id) {\r\n      this.initData()\r\n      this.refreshRouterName = this.$route.params.refreshRouterName\r\n    }\r\n  },\r\n  methods: {\r\n    submitForm(formName, state) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n          newObj.State = 10000\r\n          this.loading = true\r\n\r\n          if (state === 1) {\r\n            const AcceptanceList = []\r\n            if (newObj.capitalType === 2 || newObj.capitalType === 3) {\r\n              for (const item of this.acceptances) {\r\n                if (!item.ticketDate) {\r\n                  this.$message.error('请填写开票日期')\r\n                  return false\r\n                }\r\n                if (!item.expiration) {\r\n                  this.$message.error('请填写到期日期')\r\n                  return false\r\n                }\r\n                if (new Date(item.ticketDate) > new Date(item.expiration)) {\r\n                  this.$message.error('开票日期不能晚于到期日期')\r\n                  return false\r\n                }\r\n                if (!validateData.money(item.amount).isSuccess) {\r\n                  this.$message.error('金额格式不正确')\r\n                  return false\r\n                }\r\n                if (!item.drawer) {\r\n                  this.$message.error('请填写出票人')\r\n                  return false\r\n                }\r\n                if (!item.payer) {\r\n                  this.$message.error('请填写付款人')\r\n                  return false\r\n                }\r\n                if (!item.payee) {\r\n                  this.$message.error('请填写收款人')\r\n                  return false\r\n                }\r\n                const tmp = { ...item }\r\n                delete tmp.isEdit\r\n                delete tmp.backups\r\n                AcceptanceList.push(tmp)\r\n              }\r\n            }\r\n            const data = { projectGathering: newObj, acceptanceList: AcceptanceList }\r\n            splitProjectGathering(data).then(response => {\r\n              if (response.errorMsg) {\r\n              // 验证错误\r\n                this.$alert(`${response.errorMsg.replace(/；/g, '；<br />')}`,\r\n                  { dangerouslyUseHTMLString: true })\r\n                return\r\n              }\r\n              this.$message(response.message)\r\n              this.loading = false\r\n              this.closeThePage()\r\n            }).catch(() => {\r\n              this.loading = false\r\n            })\r\n          } else if (state === 0) {\r\n            handInputProjectGathering(newObj).then(response => {\r\n              if (response.errorMsg) {\r\n                // 验证错误\r\n                this.$alert(`${response.errorMsg.replace(/；/g, '；<br />')}`,\r\n                  { dangerouslyUseHTMLString: true })\r\n                return\r\n              }\r\n              this.$message(response.message)\r\n              this.loading = false\r\n              this.closeThePage()\r\n            }).catch(() => {\r\n              this.loading = false\r\n            })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    initData() {\r\n      this.projectGatheringId = this.$route.query.id\r\n      if (this.projectGatheringId) {\r\n        getProjectGatheringWithSplitById({ id: this.projectGatheringId }).then(response => {\r\n          const { data, acceptances, orgList, orgName, splitCompanyProject, gatheringType, capitalType } = response\r\n          this.orgList = orgList\r\n          this.ruleForm = data\r\n          this.orgName = orgName\r\n          if (data.capitalType === 2 || data.capitalType === 3) {\r\n            this.isChengDui = true\r\n          }\r\n          this.keyOrg += 1\r\n          this.capitalType = capitalType.name\r\n          this.gatheringType = gatheringType.name\r\n          this.projectName = splitCompanyProject\r\n          this.acceptances = acceptances\r\n          if (Array.isArray(this.acceptances)) {\r\n            this.acceptances.forEach(ele => {\r\n              this.$set(ele, 'isEdit', false)\r\n              this.$set(ele, 'backups', JSON.stringify(ele))\r\n            })\r\n          }\r\n        })\r\n      }\r\n    },\r\n    handleEdit(row) {\r\n      this.$set(row, 'isEdit', true)\r\n    },\r\n    handleSubmitEdit(row) {\r\n      this.$set(row, 'isEdit', false)\r\n    },\r\n    /**\r\n     * @description: 列表行内编辑取消修改\r\n     * @param {*} row\r\n     * @return {*}\r\n     */\r\n    handleCancelEdit(row) {\r\n      Object.assign(row, JSON.parse(row.backups))\r\n    },\r\n    addRow() {\r\n      const row = { isEdit: false, isAdd: true }\r\n      this.$set(row, 'backups', JSON.stringify(row))\r\n      row.isEdit = true\r\n      this.acceptances.push(row)\r\n    },\r\n    deleteRow(index, rows) {\r\n      rows.splice(index, 1)\r\n    },\r\n    closeThePage() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    },\r\n    selectProject() {\r\n      this.$refs.projectRef.openDialog()\r\n    },\r\n    getProject(data) {\r\n      if (data.length > 0) {\r\n        this.ruleForm.splitCompanyProjectId = data[0].id\r\n        this.projectName = data[0].name\r\n        this.ruleForm.splitOrgId = data[0].orgId\r\n        this.keyOrg += 1\r\n      }\r\n    }\r\n  }\r\n}\r\n",null]}