{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\qxgl\\component\\rolePermit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\qxgl\\component\\rolePermit.vue","mtime":1624071363353},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { GetPageAndPermit } from '@/api/xtgl/page'\r\nimport { addRolePermit, getRolePermitByRoleId } from '@/api/xtgl/role'\r\nimport { getTree, getLeafNodes } from '@/utils/index'\r\n\r\nexport default {\r\n  name: 'RolePermit',\r\n  components: {\r\n\r\n  },\r\n  props: {\r\n    showSubmitButton: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    roleIds: {\r\n      type: String,\r\n      default: null\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      list: [],\r\n      listLoading: true,\r\n      buttonLoading: false,\r\n      // currentRow: null,\r\n      checkList: [],\r\n      permit: [],\r\n      pageList: [],\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'routerTitle'\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n\r\n  },\r\n  mounted() {\r\n    this.fetchData()\r\n  },\r\n  methods: {\r\n    fetchData() {\r\n      this.listLoading = true\r\n      new Promise((resolve, reject) => {\r\n        GetPageAndPermit().then(response => {\r\n          this.permit = response.data.permitData\r\n          this.pageList = response.data.pageData\r\n          this.list = getTree(0, response.data.pageData)\r\n          resolve()\r\n        })\r\n      }).then(res => {\r\n        // 设置 角色的 节点\r\n        if (this.roleIds) {\r\n          var postData = {}\r\n          postData.roleId = this.roleIds\r\n          getRolePermitByRoleId(postData).then(response => {\r\n            this.checkList = response.data.map(m => { return m.permitId })\r\n          })\r\n        }\r\n      }).catch(err => this.$message.info(err))\r\n    },\r\n\r\n    handleSave() {\r\n      // const items = this.$refs.tree.getCheckedNodes(false, true)\r\n      var postData = []\r\n      this.checkList.forEach(e => {\r\n        postData.push({ roleId: this.$route.query.id, permitId: e })\r\n      })\r\n      this.buttonLoading = true\r\n      addRolePermit(postData).then(response => {\r\n        this.$message.info(response.message)\r\n        this.buttonLoading = false\r\n        this.$emit('dialogClose')\r\n      }).catch(() => { this.buttonLoading = false })\r\n    },\r\n    closeThePage() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    },\r\n    getPermitId(pageId, view = null) {\r\n      var _permit = this.permit\r\n      let arr1 = []\r\n      // 根据菜单id 生成树形结构\r\n      var treeNode1 = getTree(pageId, this.pageList)\r\n      // 根据树形结构，找出叶子节点\r\n      var childTreeNodes = getLeafNodes({ children: treeNode1 }, [])\r\n      // 根据菜单id 选出权限\r\n      if (childTreeNodes.length) {\r\n        // 数据不为空，不是叶子节点\r\n        arr1 = _permit.filter(f => childTreeNodes.includes(f.pageId))\r\n      } else {\r\n        // 是叶子节点\r\n        arr1 = _permit.filter(f => f.pageId === pageId)\r\n      }\r\n      if (view) {\r\n        // 过滤所有查看\r\n        arr1 = arr1.filter(f => f.isView)\r\n      }\r\n      return arr1.map(m => { return m.id })\r\n    },\r\n    handleCheckAll(checked) {\r\n      if (checked) {\r\n        var arr = this.getPermitId(0)\r\n        this.checkList = arr\r\n      } else {\r\n        this.checkList = []\r\n      }\r\n    },\r\n    handleSelectAllView(checked) {\r\n      if (checked) {\r\n        var arr = this.getPermitId(0, true)\r\n        this.checkList = arr\r\n      } else {\r\n        this.checkList = []\r\n      }\r\n    },\r\n    handleSelectView(checked, id) { // 选择查看\r\n      var arr = this.getPermitId(id, true)\r\n      this.checkProgress(checked, arr)\r\n    },\r\n    handleSelectAll(checked, id) { // 选择全选\r\n      // 获取节点\r\n      var arr = this.getPermitId(id)\r\n      this.checkProgress(checked, arr)\r\n    },\r\n    checkProgress(checked, arr) {\r\n      if (checked) {\r\n        // 已经选中的和选中的和合并数组\r\n        this.checkList = [...new Set([...this.checkList, ...arr])]\r\n      } else {\r\n        //  数组差集\r\n        var arr1 = [...this.checkList].filter(x => !arr.some(ele => ele === x))\r\n        this.checkList = [...new Set(arr1)]\r\n      }\r\n    }\r\n  }\r\n}\r\n",null]}