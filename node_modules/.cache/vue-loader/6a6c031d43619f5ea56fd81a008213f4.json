{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\material\\components\\addMCPItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\material\\components\\addMCPItem.vue","mtime":1624071363315},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { putMaterialCategoryProperty } from '@/api/cggl/material'\r\nexport default {\r\n  name: 'AddMCPItem',\r\n  props: {\r\n    obj: {\r\n      type: Object,\r\n      default: null\r\n    },\r\n    pid: {\r\n      type: Number,\r\n      default: 0\r\n    }\r\n\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        list: [],\r\n        id: null,\r\n        isRequired: false,\r\n        isTargetRequired: false,\r\n        canInput: false,\r\n        itemName: '',\r\n        sort: 10\r\n      },\r\n      buttonLoading: false\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initData()\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          this.buttonLoading = true\r\n          var items = [] // 拼装子项数据\r\n          var cnaArr = this.ruleForm.itemName.split('\\n').filter(a => a.trim()) // 分割并且去掉空行\r\n          cnaArr = Array.from(new Set(cnaArr)) // ES6 去掉重复项\r\n          cnaArr.forEach(e => {\r\n            var a = {}\r\n            a.categoryId = this.obj.categoryId\r\n            a.propertyId = this.obj.propertyId\r\n            a.mCPId = this.obj.id\r\n            a.name = e\r\n            a.sort = 10\r\n            items.push(a)\r\n          })\r\n          var postData = {\r\n            id: this.ruleForm.id,\r\n            isRequired: this.ruleForm.isRequired,\r\n            isTargetRequired: this.ruleForm.isTargetRequired,\r\n            canInput: this.ruleForm.canInput,\r\n            mCPItem: items\r\n          }\r\n          putMaterialCategoryProperty(postData).then(response => {\r\n            this.$message(response.message)\r\n            this.buttonLoading = false\r\n            this.$emit('addItemclose')\r\n          }).catch(() => { this.buttonLoading = false })\r\n          // AddMaterialCategoryPropertyItem(postData).then(response => {\r\n          //   this.$message(response.message)\r\n          //   this.buttonLoading = false\r\n          //   this.$emit('addItemclose')\r\n          // }).catch(() => { this.buttonLoading = false })\r\n        }\r\n      })\r\n    },\r\n    // resetForm(formName) {\r\n    //   this.$refs[formName].resetFields()\r\n    // },\r\n    // addItem() {\r\n    //   this.ruleForm.list.push({ name: '', sort: 1 })\r\n    // },\r\n    // removeItem(item) {\r\n    //   var index = this.ruleForm.list.indexOf(item)\r\n    //   if (index !== -1) {\r\n    //     this.ruleForm.list.splice(index, 1)\r\n    //   }\r\n    // },\r\n    initData() {\r\n      var newObj = JSON.parse(JSON.stringify(this.obj))\r\n      var itemsStr = ''\r\n      newObj.mcpItem.forEach(e => {\r\n        itemsStr += e.name + '\\n'\r\n      })\r\n      this.ruleForm = {\r\n        itemName: itemsStr,\r\n        isRequired: newObj.isRequired,\r\n        isTargetRequired: newObj.isTargetRequired,\r\n        canInput: newObj.canInput,\r\n        id: newObj.id\r\n      }\r\n      // getMaterialCategoryPropertyItem({ mcpId: this.obj.id }).then(response => {\r\n      //   const { data } = response\r\n      //   var itemsStr = ''\r\n      //   data.forEach(e => {\r\n      //     itemsStr += e.name + '\\n'\r\n      //   })\r\n      //   this.ruleForm.name = itemsStr\r\n      // })\r\n    }\r\n  }\r\n}\r\n",null]}