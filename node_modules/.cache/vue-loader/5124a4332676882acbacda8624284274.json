{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\ggzx\\grgl\\workerWhitelist\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\ggzx\\grgl\\workerWhitelist\\edit.vue","mtime":1635749455688},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getFormById, saveData, deleteData } from '@/api/ggzx/workerWhitelist'\r\nimport { getDefaultOptions } from '@/api/ggzx/worker'\r\nimport UpFile from '@/components/UpLoad/UpFile'\r\nimport { validateData } from '@/utils/validate'\r\nexport default {\r\n  name: 'WorkerWhitelistEdit',\r\n  components: {\r\n    UpFile\r\n  },\r\n  props: {\r\n    obj: {\r\n      type: Object,\r\n      default: null\r\n    },\r\n    list: {\r\n      type: Array,\r\n      default: () => []\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        id: 0,\r\n        year: null,\r\n        number: '',\r\n        name: '',\r\n        idNumber: '',\r\n        type: null,\r\n        reason: '',\r\n        fileList: [],\r\n        remark: ''\r\n      },\r\n      whitelistTypeList: null,\r\n      yearList: [],\r\n      disabled: false,\r\n      buttonLoading: false,\r\n      isLoad: false,\r\n      rules: {\r\n        // path: [{ required: true, message: '请输入活动名称', trigger: 'blur' }],\r\n        year: [{ required: true, message: '请选择', trigger: 'blur' }],\r\n        idNumber: [{ required: true, message: '请输入', trigger: 'blur' }],\r\n        reason: [{ required: true, message: '请输入', trigger: 'blur' }]\r\n        // component: [\r\n        //   { required: true, message: '请选择活动区域', trigger: 'blur' }\r\n        // ]\r\n      }\r\n    }\r\n  },\r\n  wathch: {\r\n\r\n  },\r\n  mounted() {\r\n    this.initData()\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          if (!validateData.idCode(this.ruleForm.idNumber).isSuccess) {\r\n            this.$message.error(validateData.idCode(this.ruleForm.idNumber).msg)\r\n            return false\r\n          } else {\r\n            var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n            this.buttonLoading = true\r\n            const postData = {\r\n              id: newObj.id,\r\n              year: newObj.year,\r\n              number: newObj.number,\r\n              name: newObj.name,\r\n              idNumber: newObj.idNumber,\r\n              type: newObj.type,\r\n              reason: newObj.reason,\r\n              remark: newObj.remark,\r\n              fileList: newObj.fileList\r\n            }\r\n            saveData(postData).then(response => {\r\n              this.$message(response.message)\r\n              this.buttonLoading = false\r\n              this.$emit('dialogClose')\r\n            }).catch(() => { this.buttonLoading = false })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields()\r\n    },\r\n    initData() {\r\n      if (this.obj) {\r\n        var newObj = JSON.parse(JSON.stringify(this.obj))\r\n        // this.ruleForm = newObj\r\n        getFormById({ id: newObj.id }).then(response => this.setData(response))\r\n      }\r\n      this.whitelistTypeList = this.list\r\n      getDefaultOptions().then(op => {\r\n        const { yearOptions } = op\r\n        this.yearList = yearOptions\r\n      })\r\n    },\r\n    setData(response) {\r\n      this.fileListKey++\r\n      this.buttonLoading = true\r\n      const { data, fileList } = response\r\n      this.ruleForm = data\r\n      this.ruleForm.fileList = fileList\r\n      this.disabled = true\r\n      this.buttonLoading = false\r\n    },\r\n    handleDelete(id) {\r\n      this.$confirm('确定要移除吗?', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.buttonLoading = true\r\n        deleteData({ id: id }).then(res => {\r\n          if (res.code === 200) {\r\n            this.$message.success(res.message)\r\n            this.buttonLoading = false\r\n            this.$emit('dialogClose')\r\n          } else {\r\n            this.$message.error(res.message)\r\n            this.buttonLoading = false\r\n            this.$emit('dialogClose')\r\n          }\r\n        }).finally(() => {\r\n          this.listLoading = false\r\n        })\r\n      })\r\n    }\r\n  }\r\n}\r\n",null]}