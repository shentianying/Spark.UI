{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\qxgl\\component\\userRoleAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\qxgl\\component\\userRoleAdd.vue","mtime":1624071363354},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getRole, addUserRole, putUserRole } from '@/api/xtgl/role'\r\nexport default {\r\n  name: 'UserRoleAdd',\r\n  components: {\r\n  },\r\n  props: {\r\n    obj: {\r\n      type: Object,\r\n      default: null\r\n    },\r\n    id: {\r\n      type: Number,\r\n      default: 0\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        roleId: null\r\n      },\r\n      buttonLoading: false,\r\n      roleList: null,\r\n      rules: {\r\n        expirationDate: [{ required: true, type: 'string', message: '不能为空', trigger: ['blur', 'change'] }]\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initData()\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n          // newObj.authorizedUesrId = Number(newObj.authorizedUesrId)\r\n          if (this.obj) {\r\n            this.buttonLoading = true\r\n            putUserRole(newObj).then(response => {\r\n              this.$message(response.message)\r\n              this.buttonLoading = false\r\n              this.$emit('dialogClose')\r\n            }).catch(() => { this.buttonLoading = false })\r\n          } else {\r\n            newObj.userId = Number(this.id)\r\n            addUserRole(newObj).then(response => {\r\n              this.$message(response.message)\r\n              this.buttonLoading = false\r\n              this.$emit('dialogClose')\r\n            }).catch(() => { this.buttonLoading = false })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    initData() {\r\n      getRole().then(response => {\r\n        this.roleList = response.data\r\n      })\r\n      if (this.obj) {\r\n        var newObj = JSON.parse(JSON.stringify(this.obj))\r\n        this.ruleForm = newObj\r\n      }\r\n    }\r\n  }\r\n}\r\n",null]}