{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\ywgl\\SocialResource\\details.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\ywgl\\SocialResource\\details.vue","mtime":1635839421444},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getSocialResourceById, SaveRelationship } from '@/api/ywgl/socialResource.js'\r\nimport SocialResourceSelect from '@/components/SearchBar/form/SocialResourceSelect'\r\nimport Detailsedit from '@/components/Detailsedit'\r\nimport TableEx from '@/components/TableEx'\r\nexport default {\r\n  name: 'SocialResourceDetails',\r\n  components: {\r\n    Detailsedit,\r\n    TableEx\r\n    // UpFile\r\n  },\r\n  data() {\r\n    return {\r\n      size: 'mini',\r\n      activeNames: ['0', '1', '2'], // 展开的折叠面板\r\n      loading: false, // 请求未完成\r\n      myDetails: null, // 详情数据\r\n      /* 列表数据相关 */\r\n      relationTable: { // 关系列表\r\n        columns: [\r\n          {\r\n            label: '序号', // 表头\r\n            minWidth: '80', // 最小宽度\r\n            format: (val, format, row, column, scoped) => scoped.$index + 1\r\n          },\r\n          {\r\n            render: (h) => {\r\n              return (\r\n                <el-table-column minWidth='120' align='center' label='姓名' scopedSlots={{ default: ({ row }) => {\r\n                  if (this.type === 1) {\r\n                    return (<SocialResourceSelect\r\n                      value={row.toId}\r\n                      vModel={row.toId}\r\n                      onSelect={\r\n                        (val) => {\r\n                          row.socialResource.company = val[0].company\r\n                          row.socialResource.position = val[0].position\r\n                          row.socialResource.name = val[0].name\r\n                          console.log(row)\r\n                        }\r\n                      }\r\n                      onChange={\r\n                        (val) => {\r\n                          if (val === '') {\r\n                            row.socialResource.company = ''\r\n                            row.socialResource.position = ''\r\n                            row.socialResource.name = ''\r\n                          }\r\n                        }\r\n                      } size='mini'\r\n                      placeholder='输入关键字搜索'/>\r\n                    )\r\n                  } else {\r\n                    return row.socialResource.name\r\n                  }\r\n                } }} />\r\n              )\r\n            }\r\n          },\r\n          {\r\n            label: '所在单位',\r\n            prop: 'socialResource.company',\r\n            minWidth: '120'\r\n          },\r\n          {\r\n            label: '职务',\r\n            prop: 'socialResource.position',\r\n            minWidth: '120'\r\n          },\r\n          {\r\n            render: (h) => {\r\n              return (\r\n                <el-table-column minWidth='120' align='center' label='与本人关系' scopedSlots={{ default: ({ row }) => {\r\n                  if (this.type === 1) {\r\n                    return (<el-input\r\n                      vModel={row.relationship}\r\n                      size='mini'\r\n                      placeholder='输入关系'/>\r\n                    )\r\n                  } else {\r\n                    return row.relationship\r\n                  }\r\n                } }} />\r\n              )\r\n            }\r\n          },\r\n          {\r\n            render: (h) => {\r\n              return (\r\n                <el-table-column minWidth='120' align='center' label='备注' scopedSlots={{ default: ({ row }) => {\r\n                  if (this.type === 1) {\r\n                    return (<el-input\r\n                      vModel={row.remark}\r\n                      size='mini'\r\n                      placeholder='输入备注'/>\r\n                    )\r\n                  } else {\r\n                    return row.remark\r\n                  }\r\n                } }} />\r\n              )\r\n            }\r\n          }\r\n        ],\r\n        list: [\r\n          {\r\n            id: 0,\r\n            fromId: this.myId,\r\n            toId: '',\r\n            socialResource: {\r\n              name: '', // 姓名\r\n              position: '', // 职务\r\n              company: '' // 单位\r\n            },\r\n            relationship: '', // 与本人关系\r\n            remark: '' // 备注\r\n          }\r\n        ],\r\n        loading: false\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    /**\r\n     * 详情各字段计算\r\n     */\r\n    infoList() {\r\n      const {\r\n        myDetails: {\r\n          data: {\r\n            name,\r\n            sex,\r\n            birthYear,\r\n            companyTel,\r\n            company,\r\n            companyType,\r\n            position,\r\n            companyAddress,\r\n            homeAddress,\r\n            homeTel,\r\n            email,\r\n            qq,\r\n            interest,\r\n            study,\r\n            work,\r\n            resources,\r\n            inUse,\r\n            remark,\r\n            upFile,\r\n            createUserName,\r\n            createDate,\r\n            lastEditUserName,\r\n            lastEditDate\r\n          }\r\n        }\r\n      } = this\r\n\r\n      return [\r\n        { label: '姓名', value: name },\r\n        { label: '性别', value: sex },\r\n        { label: '出生年份', value: birthYear },\r\n        { label: '电话', value: companyTel },\r\n        { label: '工作单位', value: company },\r\n        { label: '单位性质', value: companyType },\r\n        { label: '职务', value: position },\r\n        { label: '单位地址', value: companyAddress },\r\n        { label: '现居住地', value: homeAddress },\r\n        { label: '家庭电话', value: homeTel },\r\n        { label: 'Email', value: email },\r\n        { label: 'QQ', value: qq },\r\n        { label: '个人喜好', value: interest, monopolize: true },\r\n        { label: '学习经历', value: study, monopolize: true },\r\n        { label: '工作经历', value: work, monopolize: true },\r\n        { label: '资源关系', value: resources, monopolize: true },\r\n        { label: '备注', value: remark, monopolize: true },\r\n        { label: '附件', value: upFile || [], component: 'UpFile', monopolize: true },\r\n        { label: '制单人', value: createUserName },\r\n        { label: '制单时间', value: createDate },\r\n        { label: '更新人', value: lastEditUserName },\r\n        { label: '更新时间', value: lastEditDate },\r\n        { label: '状态', value: inUse ? '正常' : '禁用' }\r\n      ]\r\n    }\r\n  },\r\n  beforeRouteEnter(to, from, next) {\r\n    next(vm => {\r\n      vm.initDat()\r\n    })\r\n  },\r\n  methods: {\r\n    /**\r\n     * @description: 初始化数据\r\n     */\r\n    initDat() {\r\n      const { id, type } = this.$route.query\r\n      this.myId = id\r\n      this.type = type\r\n      if (this.type === 1) {\r\n        this.tag = true\r\n      } else {\r\n        this.tag = false\r\n      }\r\n      this.fetchData()\r\n    },\r\n    /**\r\n     * 获取详情信息\r\n     */\r\n    async fetchData() {\r\n      if (!this.myId) return\r\n      this.loading = true\r\n      getSocialResourceById({ id: this.myId }).then(res => {\r\n        this.myDetails = res\r\n        this.relationTable.list = res.linkList\r\n      }).catch(e => {\r\n        console.log('fetchData:请求列表数据失败，错误信息：', e)\r\n      }).finally(() => {\r\n        this.loading = false\r\n      })\r\n    },\r\n    goBack() {\r\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\r\n    },\r\n    handleGraph(id) {\r\n      this.$router.push({ name: 'Relation', query: { id: id, refreshRouterName: this.$route.name }})\r\n    },\r\n    saveTable(id) {\r\n      const req = {\r\n        relationTable: this.relationTable.list,\r\n        id: id\r\n      }\r\n\r\n      let flage = true\r\n      let same = false\r\n      this.relationTable.list.forEach(e => {\r\n        if (e.toId === '' || e.relationship === '') { flage = false }\r\n        if (e.fromId === e.toId) { same = true }\r\n      })\r\n      if (!flage) {\r\n        this.$message('请将关系信息填写完整!')\r\n        return false\r\n      }\r\n      if (same) {\r\n        this.$message('请不要选择其本人!')\r\n        return false\r\n      }\r\n      this.loading = true\r\n      SaveRelationship(req).then(res => {\r\n        // 更新\r\n        this.$message.success('保存成功')\r\n        this.loading = false\r\n        this.goBack()\r\n      }).catch(() => {\r\n        this.loading = false\r\n      })\r\n    },\r\n    /**\r\n     * 添加关系\r\n     */\r\n    addTable() {\r\n      // 最后一条数据不能删掉 所以新增的一条数据的id 只能取list的最后一条数据的id+1; 直接取list.length会有问题\r\n      // const length = this.relationTable.list.length - 1\r\n      // const id = length < 0 ? 0 : this.relationTable.list[length].id + 1\r\n      this.relationTable.list.push({\r\n        id: 0,\r\n        fromId: this.myId,\r\n        toId: '',\r\n        socialResource: {\r\n          name: '', // 姓名\r\n          position: '', // 职务\r\n          company: '' // 单位\r\n        },\r\n        relationship: '', // 与本人关系\r\n        remark: '' // 备注\r\n      })\r\n    },\r\n    /**\r\n     * 删除关系信息\r\n     */\r\n    handleDel(row) {\r\n      // 删除选中的信息\r\n      if (this.relationTable.list.length > 1) {\r\n        // this.relationTable.list = this.relationTable.list.filter(e => {\r\n        //   return e.id !== row.id\r\n        // })\r\n        this.relationTable.list.splice(row.$index + 1, 1)\r\n      }\r\n    }\r\n  }\r\n}\r\n",null]}