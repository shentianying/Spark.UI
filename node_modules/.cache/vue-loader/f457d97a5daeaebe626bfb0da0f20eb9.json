{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\rsgl\\rygw\\personPostDetailEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\rsgl\\rygw\\personPostDetailEdit.vue","mtime":1624493744079},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getPostListByOrgId, getPostPoolDetailById } from '@/api/rsgl/postPool'\r\nimport { addPersonPost, putPersonPost, getPersonPostEditInit } from '@/api/rsgl/personPost'\r\nimport OrgSelect2 from '@/components/OrgSelect/index2'\r\nexport default {\r\n  name: 'PersonPostDetailEdit',\r\n  components: {\r\n    OrgSelect2\r\n  },\r\n  props: {\r\n    obj: {\r\n      type: Object,\r\n      default: null\r\n    },\r\n    userVal: {\r\n      type: Number,\r\n      default: 0\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        personId: null,\r\n        postId: null,\r\n        orgId: null,\r\n        postPoolDetailId: null,\r\n        roleId: null,\r\n        positionId: null,\r\n        isMain: false,\r\n        inUse: true\r\n      },\r\n      changeFlag: false,\r\n      postList: [],\r\n      roleList: [],\r\n      positionList: [],\r\n      buttonLoading: false,\r\n      rules: {\r\n        postPoolDetailId: [{ required: true, message: '必填', trigger: 'blur' }],\r\n        positionId: [{ required: true, message: '必填', trigger: 'blur' }],\r\n        roleId: [{ required: true, message: '必填', trigger: 'blur' }],\r\n        orgId: [{ required: true, message: '必填', trigger: 'blur' }]\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initData()\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          var newObj = JSON.parse(JSON.stringify(this.ruleForm))\r\n          newObj.personId = this.userVal\r\n          if (this.obj) {\r\n            this.buttonLoading = true\r\n            putPersonPost(newObj)\r\n              .then((response) => {\r\n                this.$message(response.message)\r\n                this.buttonLoading = false\r\n                this.$emit('dialogClose')\r\n              }).catch(() => { this.buttonLoading = false })\r\n          } else {\r\n            addPersonPost(newObj)\r\n              .then((response) => {\r\n                this.$message(response.message)\r\n                this.buttonLoading = false\r\n                this.$emit('dialogClose')\r\n              }).catch(() => { this.buttonLoading = false })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    initData() {\r\n      if (this.obj) {\r\n        var newObj = JSON.parse(JSON.stringify(this.obj))\r\n        getPersonPostEditInit({ orgId: newObj.orgId }).then(response => {\r\n          const { data1, data2, data3 } = response\r\n          this.postList = data1\r\n          this.positionList = data3\r\n          this.roleList = data2\r\n          this.ruleForm = newObj\r\n        })\r\n      } else {\r\n        getPersonPostEditInit({ orgId: 0 }).then(response => {\r\n          const { data2, data3 } = response\r\n          this.positionList = data3\r\n          this.roleList = data2\r\n          this.changeFlag = true\r\n        })\r\n      }\r\n    },\r\n    getPostList(setVal) {\r\n      getPostListByOrgId({ id: setVal }).then(response => {\r\n        const { data } = response\r\n        this.postList = data\r\n      })\r\n    },\r\n    postChange(val) {\r\n      getPostPoolDetailById({ id: val }).then(response => {\r\n        const { data } = response\r\n        this.ruleForm.postId = data.postId\r\n        this.ruleForm.roleId = data.roleId\r\n      })\r\n    },\r\n    orgChange(val) {\r\n      if (this.changeFlag) {\r\n        if (val) {\r\n          this.ruleForm.postPoolDetailId = null\r\n          this.ruleForm.roleId = null\r\n          this.getPostList(val)\r\n        }\r\n      } else {\r\n        this.changeFlag = true\r\n      }\r\n    }\r\n  }\r\n}\r\n",null]}