{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\components\\FlowRemake\\flowAttitude.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\components\\FlowRemake\\flowAttitude.vue","mtime":1630891145103},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.array.find\");\n\nvar _billFlow = require(\"@/api/xtgl/billFlow\");\n\nvar _UpFile = _interopRequireDefault(require(\"@/components/UpLoad/UpFile\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/**\r\n * 查看流程进度组件重写,\r\n * 逻辑完全不变只改样式和排版\r\n * */\nvar _default = {\n  name: 'FlowAttitude',\n  components: {\n    UpFile: _UpFile.default\n  },\n  props: {\n    para: {\n      type: Object,\n      default: null\n    },\n    show: {\n      type: Boolean,\n      default: false\n    },\n    // 是否显示表单和撤销\n    toVoid: {\n      type: Boolean,\n      default: true\n    },\n    //  是否显示作废，默认显示\n    toBack: {\n      type: Boolean,\n      default: true\n    } //  是否显示退回到制单，默认显示\n\n  },\n  data: function data() {\n    return {\n      ruleForm: {\n        id: 0,\n        formId: 0,\n        billId: 0,\n        title: '',\n        content: '',\n        fileList: [],\n        attitudeType: 1,\n        backGroup: 0,\n        // 0 制单\n        type: 1\n      },\n      loading: false,\n      list: null,\n      billFlowNodeList: null,\n      upFiles: [],\n      dialogTitle: '附件列表',\n      comName: 'UpFile',\n      dialogWidth: '50%',\n      dialogTableVisible: false,\n      fileList: [],\n      showBack: true,\n      //  是否显示退回\n      // fileListData: [],\n      data: [{\n        text: '作废',\n        value: -1\n      }, {\n        text: '撤销',\n        value: -2\n      }, {\n        text: '制单',\n        value: 0\n      }, {\n        text: '转到下一步',\n        value: 1\n      }, {\n        text: '只填写意见不转下一步',\n        value: 2\n      }, {\n        text: '退回到',\n        value: 3\n      }],\n      showRevoke: false,\n      // 显示撤销\n      showForm: false,\n      // 显示提交审批表单\n      showAll: true,\n      // 显示所有\n      rules: {\n        content: [{\n          required: true,\n          message: '请输入',\n          trigger: 'blur'\n        }],\n        type: [{\n          required: true,\n          message: '请选择',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  watch: {\n    para: function para() {\n      this.fetchData();\n    }\n  },\n  created: function created() {\n    // 显示表单\n    this.fetchData();\n  },\n  methods: {\n    fetchData: function fetchData() {\n      var _this = this;\n\n      //  如果可退回到制单，backGroup初始值为0，默认为制单\n      if (this.toBack === true) {\n        this.ruleForm.backGroup = 0;\n      }\n\n      console.log(this.para);\n      var _this$para = this.para,\n          planId = _this$para.planId,\n          billFlowId = _this$para.billFlowId,\n          formId = _this$para.formId;\n      var postData = {\n        billId: planId,\n        billFlowId: billFlowId,\n        formId: formId\n      };\n      (0, _billFlow.initAttitude)(postData).then(function (response) {\n        var data = response.data,\n            beforeBillFlowNodeList = response.beforeBillFlowNodeList,\n            checkState = response.checkState,\n            isRevoke = response.isRevoke;\n        _this.list = data;\n        _this.billFlowNodeList = beforeBillFlowNodeList;\n\n        if (_this.show) {\n          if (isRevoke.item1) {\n            _this.showRevoke = true;\n          }\n\n          if (checkState.item3 === 2) {\n            // 2 未审批\n            _this.showForm = true;\n          }\n        }\n\n        if ((_this.list || []).length === 0 && !_this.show) {\n          _this.showAll = false;\n        }\n\n        if (_this.billFlowNodeList === null && _this.toBack === false) {\n          _this.showBack = false;\n        }\n      });\n    },\n    submitForm: function submitForm() {\n      var _this2 = this;\n\n      this.$refs['ruleForm'].validate(function (valid) {\n        if (valid) {\n          var newObj = JSON.parse(JSON.stringify(_this2.ruleForm));\n          newObj.billId = _this2.para.planId;\n          newObj.formId = _this2.para.formId;\n          newObj.operation = _this2.data.find(function (f) {\n            return f.value === _this2.ruleForm.attitudeType;\n          }).text;\n\n          if (_this2.ruleForm.attitudeType === 3) {\n            if (_this2.ruleForm.backGroup === 0) {\n              newObj.operation += '制单';\n            } else {\n              newObj.operation += _this2.billFlowNodeList.find(function (f) {\n                return f.value === _this2.ruleForm.backGroup;\n              }).name;\n            }\n          }\n\n          _this2.$confirm('是否确定', '提示', {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }).then(function () {\n            _this2.add(newObj);\n          }).catch(function () {\n            _this2.loading = false;\n          });\n        }\n      });\n    },\n    add: function add(newObj) {\n      var _this3 = this;\n\n      this.loading = true;\n      (0, _billFlow.addAttitude)(newObj).then(function (response) {\n        var attitudeList = response.attitudeList,\n            message = response.message,\n            billFlowState = response.billFlowState; // 如果只填写意见不转下一步 需要更新流程\n\n        if (_this3.type !== 2) {\n          _this3.list = attitudeList;\n        }\n\n        if (_this3.type !== 2) {// this.show = false // 隐藏表单\n        }\n\n        _this3.ruleForm.content = '';\n\n        _this3.$message(message);\n\n        _this3.$emit('update', billFlowState); // 更新流程\n\n\n        _this3.loading = false;\n      }).catch(function () {\n        _this3.loading = false;\n      });\n    },\n    revoke: function revoke() {\n      var postData = {};\n      postData.billId = this.para.planId;\n      postData.formId = this.para.formId;\n      postData.title = '撤回';\n      postData.content = '撤回单据';\n      postData.operation = '撤回';\n      postData.attitudeType = -2;\n      this.add(postData);\n    } // showFileList(upFiles) {\n    //   this.dialogTitle = '附件列表'\n    //   this.comName = 'UpFile'\n    //   this.dialogWidth = '50%'\n    //   this.upFiles = upFiles\n    //   this.dialogTableVisible = true\n    // },\n    // dialogClose(data) {\n    //   this.dialogTableVisible = false\n    // }\n\n  }\n};\nexports.default = _default;",null]}