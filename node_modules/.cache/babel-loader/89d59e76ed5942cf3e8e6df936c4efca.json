{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\ggzx\\grgl\\organization\\workerOrgEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\ggzx\\grgl\\organization\\workerOrgEdit.vue","mtime":1635749455662},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _workerOrg = require(\"@/api/ggzx/workerOrg\");\n\nvar _index = require(\"@/utils/index\");\n\nvar _vueTreeselect = _interopRequireDefault(require(\"@riophae/vue-treeselect\"));\n\nrequire(\"@riophae/vue-treeselect/dist/vue-treeselect.css\");\n\nvar _selectPerson = _interopRequireDefault(require(\"@/components/Other/selectPerson\"));\n\nvar _selectWorker = _interopRequireDefault(require(\"@/components/Other/ggzx/selectWorker\"));\n\nvar _index2 = _interopRequireDefault(require(\"@/components/OrgSelect/index2\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'WorkerOrgEdit',\n  components: {\n    // OrgSelect2\n    Treeselect: _vueTreeselect.default,\n    SelectPerson: _selectPerson.default,\n    SelectWorker: _selectWorker.default,\n    OrgSelect2: _index2.default\n  },\n  props: {\n    obj: {\n      type: Object,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      ruleForm: {\n        pid: 0,\n        id: 0,\n        orgId: 0,\n        personType: null,\n        personId: null,\n        postTypeId: null,\n        name: '',\n        number: '',\n        personPostId: null,\n        post: {},\n        person: {},\n        worker: {}\n      },\n      activate: true,\n      treeList: null,\n      worker: {},\n      buttonLoading: false,\n      isLoad: false,\n      postTypeOptions: [],\n      personTypeOptions: [],\n      disabled: false,\n      rules: {\n        orgId: [{\n          required: true,\n          message: '请选择项目',\n          trigger: 'blur'\n        }],\n        personType: [{\n          required: true,\n          message: '请选择',\n          trigger: 'change'\n        }],\n        postTypeId: [{\n          required: true,\n          message: '请选择',\n          trigger: 'change'\n        }],\n        personPostId: [{\n          required: true,\n          message: '请选择',\n          trigger: 'change'\n        }],\n        // parentPersonId: [\n        //   { required: true, message: '请选择', trigger: 'change' }\n        // ],\n        personId: [{\n          required: true,\n          message: '请选择',\n          trigger: 'blur'\n        }]\n      },\n      personList: [],\n      // workerList: [],\n      loading: false\n    };\n  },\n  wathch: {},\n  mounted: function mounted() {\n    this.getOptions();\n    this.initData();\n    this.initTree();\n  },\n  methods: {\n    submitForm: function submitForm(formName) {\n      var _this = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var newObj = JSON.parse(JSON.stringify(_this.ruleForm));\n          _this.buttonLoading = true;\n\n          if (_this.obj) {\n            newObj.id = _this.obj.id;\n          }\n\n          (0, _workerOrg.saveData)(newObj).then(function (response) {\n            _this.$message(response.message);\n\n            _this.buttonLoading = true;\n\n            _this.$emit('dialogClose');\n          }).catch(function () {\n            _this.buttonLoading = false;\n          });\n        }\n      });\n    },\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    initData: function initData() {\n      if (this.obj) {\n        var newObj = JSON.parse(JSON.stringify(this.obj)); // newObj.inUse = newObj.inUse ? 'true' : 'false'\n\n        this.ruleForm = newObj;\n        console.log('传过来的数据：', newObj);\n      }\n    },\n    initTree: function initTree() {\n      var _this2 = this;\n\n      this.listLoading = true;\n      this.activate = false; // 销毁部门组件\n\n      (0, _workerOrg.getList)().then(function (response) {\n        response.data.forEach(function (ele) {\n          ele.label = ele.name;\n          ele.personPostName = ele.post.name;\n        }); // this.treeList = response.data\n\n        _this2.isLoad = true; // console.log('树形结构：', this.treeList)\n\n        var result = (0, _index.getTree)(0, response.data);\n        _this2.treeList = [{\n          id: 0,\n          pid: 0,\n          label: '一级根目录',\n          children: result\n        }];\n        _this2.listLoading = false;\n        _this2.activate = true; // 加载部门组件\n      });\n    },\n    getOptions: function () {\n      var _getOptions = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _yield$getDefaultOpti, personTypeOptions, postTypeOptions;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _workerOrg.getDefaultOptions)();\n\n              case 2:\n                _yield$getDefaultOpti = _context.sent;\n                personTypeOptions = _yield$getDefaultOpti.personTypeOptions;\n                postTypeOptions = _yield$getDefaultOpti.postTypeOptions;\n                this.personTypeOptions = personTypeOptions;\n                this.postTypeOptions = postTypeOptions;\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getOptions() {\n        return _getOptions.apply(this, arguments);\n      }\n\n      return getOptions;\n    }(),\n\n    /**\r\n     * 设置禁用\r\n     */\n    my_normalizer: function my_normalizer(node) {\n      if (node.postTypeId === 1) {\n        node.isDisabled = true;\n      } else {\n        node.isDisabled = false;\n      }\n\n      console.log(node);\n      return node;\n    },\n    getPersons: function getPersons(personList) {\n      var _this3 = this;\n\n      if ((personList || []).length > 0) {\n        // this.personList = [...this.personList, ...personList.map(m => { return { id: m.id, name: m.name } })]\n        this.$nextTick(function () {\n          console.log(personList[0]);\n          _this3.ruleForm.person = personList[0];\n          _this3.ruleForm.personId = personList[0].id;\n          _this3.ruleForm.name = personList[0].name;\n          _this3.ruleForm.number = personList[0].number;\n          _this3.ruleForm.post = personList[0].post;\n          _this3.ruleForm.personPostId = personList[0].post.id;\n        });\n      }\n    },\n    checkPerson: function checkPerson() {\n      this.$refs.personRef.openDialog();\n    },\n    getWorkers: function getWorkers(worker) {\n      this.ruleForm.worker = worker;\n      this.worker = worker;\n      this.ruleForm.personId = worker.personId;\n      this.ruleForm.name = worker.name;\n      this.ruleForm.number = worker.number;\n      this.ruleForm.post = worker.person.post;\n      this.ruleForm.personPostId = worker.person.postId;\n    },\n    checkWorker: function checkWorker() {\n      this.$refs.workerRef.openDialog();\n    }\n  }\n};\nexports.default = _default;",null]}