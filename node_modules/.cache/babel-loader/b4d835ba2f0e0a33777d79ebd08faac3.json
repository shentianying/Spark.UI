{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\htly\\kggl\\projectStartManageAttitude.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\htly\\kggl\\projectStartManageAttitude.vue","mtime":1629764722498},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _technicalBid = require(\"@/api/ywgl/technicalBid\");\n\nvar _UpFile = _interopRequireDefault(require(\"@/components/UpLoad/UpFile\"));\n\nvar _flowDisplay = _interopRequireDefault(require(\"@/components/Flow/flowDisplay\"));\n\nvar _flowAttitude = _interopRequireDefault(require(\"@/components/Flow/flowAttitude\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'ProjectStartManageEdit',\n  components: {\n    UpFile: _UpFile.default,\n    FlowDisplay: _flowDisplay.default,\n    FlowAttitude: _flowAttitude.default\n  },\n  data: function data() {\n    return {\n      ruleForm: {\n        id: 0,\n        number: '',\n        orgId: null,\n        companyId: this.$store.state.user.selectOrgId,\n        name: '',\n        remark: '',\n        state: 0,\n        billFlowId: 0,\n        fileList: []\n      },\n      startManageId: null,\n      projectName: '',\n      keyOrg: 0,\n      orgList: [],\n      startTypeList: [],\n      attitudePara: null,\n      loadFlow: false,\n      billFlow: null,\n      active: 0,\n      loading: false,\n      rules: {}\n    };\n  },\n  activated: function activated() {\n    if (this.$route.params.id) {\n      this.ruleForm.orgId = null; // 刷新 org 列表\n\n      this.initData();\n      this.refreshRouterName = this.$route.params.refreshRouterName;\n    }\n  },\n  mounted: function mounted() {\n    if (!this.$route.params.id) {\n      this.initData();\n      this.activate = true;\n    }\n  },\n  methods: {\n    initData: function initData() {\n      var _this = this;\n\n      // 有参数id 就是编辑\n      if (this.$route.query.id) {\n        this.startManageId = this.$route.query.id;\n      }\n\n      new Promise(function (resolve, reject) {\n        (0, _technicalBid.getTechnicalBidEditInit)().then(function (response) {\n          var orgList = response.orgList,\n              result1 = response.result1;\n          _this.orgList = orgList;\n          _this.startTypeList = result1;\n          _this.keyOrg += 1;\n          resolve(orgList);\n        });\n      }).then(function (orgList) {\n        if (_this.startManageId) {\n          (0, _technicalBid.getTechnicalBidById)({\n            id: _this.startManageId\n          }).then(function (response) {\n            var data = response.data;\n            _this.ruleForm = data;\n            _this.keyOrg += 1;\n            _this.ruleForm.fileList = data.upFile;\n          });\n        }\n      }).catch(function () {\n        _this.$message.error('信息错误');\n      });\n    },\n    closeThePage: function closeThePage() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    }\n  }\n};\nexports.default = _default;",null]}