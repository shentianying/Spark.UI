{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\ywgl\\swb\\bussinessBidEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\ywgl\\swb\\bussinessBidEdit.vue","mtime":1635988408093},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _bussinessBid = require(\"@/api/ywgl/bussinessBid\");\n\nvar _UpFile = _interopRequireDefault(require(\"@/components/UpLoad/UpFile\"));\n\nvar _flowSelect = _interopRequireDefault(require(\"@/components/Flow/flowSelect\"));\n\nvar _index = _interopRequireDefault(require(\"@/components/OrgSelect/index2\"));\n\nvar _bussinessBidDetailAdd = _interopRequireDefault(require(\"./bussinessBidDetailAdd\"));\n\nvar _selectBussinessInfo = _interopRequireDefault(require(\"@/components/Other/ywgl/selectBussinessInfo\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import { validate } from '@/utils/validate'\nvar _default = {\n  name: 'BussinessBidEdit',\n  components: {\n    FlowSelect: _flowSelect.default,\n    UpFile: _UpFile.default,\n    OrgSelect2: _index.default,\n    BussinessBidDetailAdd: _bussinessBidDetailAdd.default,\n    SelectBussinessInfo: _selectBussinessInfo.default\n  },\n  data: function data() {\n    return {\n      ruleForm: {\n        id: 0,\n        number: '',\n        orgId: null,\n        companyId: this.$store.state.user.selectOrgId,\n        bussinessInfoId: null,\n        controlPrice: 0,\n        offerType: null,\n        professionalType: null,\n        marketSegment: null,\n        planForeignQuotation: 0,\n        estimatedCost: 0,\n        estimatedProfit: 0,\n        costOfFlatMeter: 0,\n        quotationDeadline: null,\n        quotationTimes: 0,\n        totalTimes: 0,\n        remark: '',\n        state: 0,\n        billFlowId: 0,\n        fileList: []\n      },\n      infoForm: {\n        tenderMode: '',\n        reliableLevel: '',\n        decorationArea: '',\n        floors: '',\n        professionalType: '',\n        competitors: '',\n        bidEvaluationMethod: ''\n      },\n      bussinessBidId: null,\n      area: 0,\n      // 用于计算每平米造价 infoForm里的格式化了\n      bussinessInfoName: '',\n      keyOrg: 0,\n      orgList: null,\n      marketSegmentList: [],\n      professionalTypeList: [],\n      offerTypeList: [],\n      dialogTableVisible: false,\n      dialogTitle: '添加评分细则及估值',\n      dialogWidth: '50%',\n      comName: 'CreditBidDetailAdd',\n      currentRow: null,\n      listIndex: 0,\n      list: [],\n      count: 0,\n      attitudePara: null,\n      loadFlow: false,\n      billFlow: null,\n      active: 0,\n      loading: false,\n      rules: {\n        bussinessInfoId: [{\n          required: true,\n          message: '请输入',\n          trigger: 'change'\n        }],\n        offerType: [{\n          required: true,\n          message: '请输入',\n          trigger: 'blur'\n        }],\n        professionalType: [{\n          required: true,\n          message: '请输入',\n          trigger: 'blur'\n        }],\n        marketSegment: [{\n          required: true,\n          message: '请输入',\n          trigger: 'blur'\n        }],\n        quotationDeadline: [{\n          required: true,\n          message: '请输入',\n          trigger: 'blur'\n        }],\n        quotationTimes: [{\n          required: true,\n          message: '请输入',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  watch: {\n    'ruleForm.planForeignQuotation': {\n      handler: function handler(value, oldvalue) {\n        if (value !== oldvalue) {\n          this.ruleForm.estimatedProfit = ((this.ruleForm.planForeignQuotation - this.ruleForm.estimatedCost) * 100 / this.ruleForm.planForeignQuotation).toFixed(2);\n          this.ruleForm.costOfFlatMeter = (this.ruleForm.planForeignQuotation * 10000 / this.area).toFixed(2);\n\n          if (isNaN(this.ruleForm.estimatedProfit)) {\n            this.ruleForm.estimatedProfit = 0;\n          }\n\n          if (isNaN(this.ruleForm.costOfFlatMeter)) {\n            this.ruleForm.costOfFlatMeter = 0;\n          }\n        }\n      },\n      deep: true\n    },\n    'ruleForm.estimatedCost': {\n      handler: function handler(value, oldvalue) {\n        if (value !== oldvalue) {\n          this.ruleForm.estimatedProfit = ((this.ruleForm.planForeignQuotation - this.ruleForm.estimatedCost) * 100 / this.ruleForm.planForeignQuotation).toFixed(2);\n\n          if (isNaN(this.ruleForm.estimatedProfit)) {\n            this.ruleForm.estimatedProfit = 0;\n          }\n        }\n      },\n      deep: true\n    },\n    'area': {\n      handler: function handler(value, oldvalue) {\n        if (value !== oldvalue) {\n          this.ruleForm.costOfFlatMeter = (this.ruleForm.planForeignQuotation * 10000 / this.area).toFixed(2);\n        }\n      },\n      deep: true\n    }\n  },\n  activated: function activated() {\n    if (this.$route.params.id) {\n      this.ruleForm.orgId = null; // 刷新 org 列表\n\n      this.initData();\n      this.refreshRouterName = this.$route.params.refreshRouterName;\n    }\n  },\n  mounted: function mounted() {\n    if (!this.$route.params.id) {\n      this.initData();\n      this.activate = true;\n    }\n  },\n  methods: {\n    submitForm: function submitForm(formName, state) {\n      var _this = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var newObj = JSON.parse(JSON.stringify(_this.ruleForm));\n          newObj.state = state;\n          var tempIds = [];\n\n          if (newObj.fileList.length > 0) {\n            tempIds = newObj.fileList.map(function (m) {\n              return {\n                id: m.id,\n                addFlag: m.addFlag\n              };\n            });\n          } else {\n            if (state === 1) {\n              _this.$message('必须上传附件!');\n\n              return;\n            }\n          }\n\n          newObj.fileList = tempIds;\n          var arr1 = [];\n\n          _this.list.forEach(function (e) {\n            var item = {};\n\n            if (e.planQuote !== 0) {\n              item.id = e.id;\n              item.name = e.name;\n              item.planQuote = e.planQuote;\n              item.estimatedCost = e.estimatedCost;\n              item.estimatedProfitMargin = e.estimatedProfitMargin;\n              item.estimatedConsultancyFee = e.estimatedConsultancyFee;\n              item.estimatedNetProfitMargin = e.estimatedNetProfitMargin;\n              arr1.push(item);\n            }\n          });\n\n          newObj.bussinessBidDetails = arr1;\n\n          if (_this.billFlow) {\n            // 获取流程组件中的数据\n            var billFlow = _this.$refs.flowSelect.getBillFlow();\n\n            if (!billFlow) {\n              return false;\n            }\n\n            newObj.billFlow = billFlow;\n          } else {\n            _this.$message('流程数据不能为空');\n\n            return;\n          }\n\n          _this.buttonLoading = true;\n\n          if (_this.bussinessBidId) {\n            (0, _bussinessBid.putBussinessBid)(newObj).then(function (response) {\n              if (response.errorMsg) {\n                // 验证错误\n                _this.$alert(\"\".concat(response.errorMsg.replace(/；/g, '；<br />')), {\n                  dangerouslyUseHTMLString: true\n                });\n\n                return;\n              }\n\n              _this.$message(response.message);\n\n              _this.buttonLoading = false;\n\n              _this.closeThePage();\n            }).catch(function () {\n              _this.buttonLoading = false;\n              _this.active = 0;\n            });\n          } else {\n            (0, _bussinessBid.addBussinessBid)(newObj).then(function (response) {\n              if (response.errorMsg) {\n                // 验证错误\n                _this.$alert(\"\".concat(response.errorMsg.replace(/；/g, '；<br />')), {\n                  dangerouslyUseHTMLString: true\n                });\n\n                return;\n              }\n\n              _this.$message(response.message);\n\n              _this.buttonLoading = false;\n\n              _this.closeThePage(); // this.setData(response)\n\n            }).catch(function () {\n              _this.buttonLoading = false;\n              _this.active = 0;\n            });\n          }\n        }\n      });\n    },\n    initData: function initData() {\n      var _this2 = this;\n\n      // 有参数id 就是编辑\n      if (this.$route.query.id) {\n        this.bussinessBidId = this.$route.query.id;\n      }\n\n      new Promise(function (resolve, reject) {\n        (0, _bussinessBid.getBussinessBidEditInit)().then(function (response) {\n          var orgList = response.orgList,\n              result1 = response.result1,\n              result2 = response.result2,\n              result3 = response.result3,\n              result4 = response.result4,\n              result5 = response.result5,\n              result6 = response.result6;\n          _this2.orgList = orgList;\n          _this2.tenderModeList = result1;\n          _this2.reliableLevelList = result2;\n          _this2.informationSourceList = result3;\n          _this2.marketSegmentList = result4;\n          _this2.offerTypeList = result5;\n          _this2.professionalTypeList = result6;\n          resolve(orgList);\n        });\n      }).then(function (orgList) {\n        if (_this2.bussinessBidId) {\n          (0, _bussinessBid.getBussinessBidById)({\n            id: _this2.bussinessBidId\n          }).then(function (response) {\n            var data = response.data,\n                detailList = response.detailList,\n                bidEvaluationMethod = response.bidEvaluationMethod;\n            _this2.area = data.bussinessInfo.decorationArea;\n            _this2.ruleForm = data;\n            _this2.keyOrg += 1;\n            _this2.ruleForm.fileList = data.upFile;\n            _this2.bussinessInfoName = data.bussinessInfo.projectName;\n            _this2.infoForm.tenderMode = data.bussinessInfo.tenderMode && _this2.tenderModeList ? _this2.tenderModeList.find(function (f) {\n              return f.value === data.bussinessInfo.tenderMode;\n            }).name : '';\n            _this2.infoForm.decorationArea = data.bussinessInfo.decorationArea ? _this2.utils.formatMoney(data.bussinessInfo.decorationArea, 2, 0) : null;\n            _this2.infoForm.floors = data.bussinessInfo.floors;\n            _this2.infoForm.informationSource = data.bussinessInfo.informationSource && _this2.informationSourceList ? _this2.informationSourceList.find(function (f) {\n              return f.value === data.bussinessInfo.informationSource;\n            }).name : '';\n            _this2.infoForm.competitors = data.bussinessInfo.competitors;\n            _this2.infoForm.bidEvaluationMethod = bidEvaluationMethod;\n            _this2.list = detailList;\n            _this2.count = data.quotationTimes - 1;\n          });\n        }\n      }).catch(function () {\n        _this2.$message.error('信息错误');\n      });\n    },\n    getDynamicFlow: function getDynamicFlow(formName) {\n      var _this3 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var newObj = JSON.parse(JSON.stringify(_this3.ruleForm));\n          var arr1 = [];\n\n          _this3.list.forEach(function (e) {\n            var item = {};\n\n            if (e.planQuote !== 0) {\n              item.id = e.id;\n              item.name = e.name;\n              item.planQuote = e.planQuote;\n              item.estimatedCost = e.estimatedCost;\n              item.estimatedProfitMargin = e.estimatedProfitMargin;\n              item.estimatedConsultancyFee = e.estimatedConsultancyFee;\n              item.estimatedNetProfitMargin = e.estimatedNetProfitMargin;\n              arr1.push(item);\n            }\n          });\n\n          if (arr1.length === 0) {\n            _this3.$message.warning('请添加本次报价！');\n\n            return;\n          }\n\n          newObj.bussinessBidDetails = arr1;\n          (0, _bussinessBid.getBillFlow)(newObj).then(function (response) {\n            if (response.success) {\n              _this3.billFlow = response.data.billFlow;\n              _this3.active = 1;\n            } else {\n              _this3.$message(response.message);\n            }\n          });\n        }\n      });\n    },\n    previous: function previous() {\n      // 上一步\n      this.active--;\n      this.billFlow = null;\n    },\n    cancel: function cancel() {\n      var _this4 = this;\n\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this4.active = 2;\n        _this4.buttonloading = true;\n        (0, _bussinessBid.deleteBussinessBid)({\n          id: _this4.ruleForm.id\n        }).then(function (response) {\n          _this4.$message(response.message);\n\n          _this4.buttonloading = false;\n\n          _this4.closeThePage();\n        });\n      }).catch(function () {});\n    },\n    closeThePage: function closeThePage() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    },\n    dialogClose: function dialogClose(data, state) {\n      this.addDetail(data, state);\n      this.dialogTableVisible = false;\n    },\n    addDetail: function addDetail(data, state) {\n      if (data) {\n        if (state === 'add') {\n          // 在此判断新增标段是否已经存在\n          this.list.push(data);\n        } else if (state === 'update') {\n          this.list.splice(this.listIndex, 1, data);\n        }\n      }\n    },\n    edit: function edit(d) {\n      this.currentRow = d.row;\n      this.listIndex = d.$index;\n      this.dialogTitle = '编辑本次报价';\n      this.comName = 'BussinessBidDetailAdd';\n      this.dialogWidth = '50%';\n      this.dialogTableVisible = true;\n    },\n    add: function add() {\n      this.currentRow = null;\n      this.dialogTitle = '添加新标段和报价';\n      this.comName = 'BussinessBidDetailAdd';\n      this.dialogWidth = '50%';\n      this.dialogTableVisible = true;\n    },\n    del: function del(d) {\n      // 判断是新增标段还是原有标段(新标段不含原始报价字段)\n      if (Object.prototype.hasOwnProperty.call(d.row, 'quotation1')) {\n        this.list[d.$index].planQuote = 0;\n        this.list[d.$index].estimatedCost = 0;\n        this.list[d.$index].estimatedProfitMargin = 0;\n        this.list[d.$index].estimatedConsultancyFee = 0;\n        this.list[d.$index].estimatedNetProfitMargin = 0;\n      } else {\n        this.list.splice(d.$index, 1);\n      }\n    },\n    getSummaries: function getSummaries(param) {\n      var _this5 = this;\n\n      var columns = param.columns,\n          data = param.data;\n      var sums = [];\n      columns.forEach(function (column, index) {\n        if (index === 0) {\n          sums[index] = '合计';\n          return;\n        }\n\n        var columnArr = [];\n        var values = data.map(function (item) {\n          var arr = [];\n\n          if (column.property) {\n            arr = column.property.toString().split('.');\n          }\n\n          if (arr.length > 1) {\n            columnArr.push(column.property);\n\n            if (item[arr[0]]) {\n              return Number(item[arr[0]][arr[1]]);\n            } else {\n              return Number(0);\n            }\n          }\n\n          if (arr.length === 1) {\n            return Number(item[column.property]);\n          }\n        });\n\n        if (columnArr.includes(column.property)) {\n          if (column.property.toString().indexOf('estimatedProfitMargin') > -1) {\n            sums[index] = ((sums[index - 2] - sums[index - 1]) * 100 / sums[index - 2]).toFixed(2);\n          } else {\n            sums[index] = values.reduce(function (prev, curr) {\n              var value = Number(curr);\n\n              if (!isNaN(value)) {\n                return prev + curr;\n              } else {\n                return prev;\n              }\n            }, 0).toFixed(2);\n            sums[index];\n          }\n        }\n\n        if (column.property === 'planQuote') {\n          _this5.ruleForm.planForeignQuotation = values.reduce(function (prev, curr) {\n            var value = Number(curr);\n\n            if (!isNaN(value)) {\n              return prev + curr;\n            } else {\n              return prev;\n            }\n          }, 0).toFixed(2); // this.ruleForm.planForeignQuotation\n        }\n\n        if (column.property === 'estimatedCost') {\n          _this5.ruleForm.estimatedCost = values.reduce(function (prev, curr) {\n            var value = Number(curr);\n\n            if (!isNaN(value)) {\n              return prev + curr;\n            } else {\n              return prev;\n            }\n          }, 0).toFixed(2); // sums[index]\n        }\n      });\n      return sums;\n    },\n    selectBussinessInfo: function selectBussinessInfo() {\n      this.$refs.bussinessInfoRef.openDialog();\n    },\n    getBussinessInfo: function getBussinessInfo(data) {\n      var _this6 = this;\n\n      if (data.length > 0) {\n        this.ruleForm.bussinessInfoId = data[0].id;\n        this.bussinessInfoName = data[0].projectName;\n        (0, _bussinessBid.getBussinessInfoById)({\n          id: this.ruleForm.bussinessInfoId\n        }).then(function (response) {\n          var data = response.data,\n              detailList = response.detailList,\n              totalTimes = response.totalTimes,\n              quotationTimes = response.quotationTimes,\n              bidEvaluationMethod = response.bidEvaluationMethod;\n          _this6.ruleForm.orgId = data.orgId;\n          _this6.keyOrg += 1;\n          _this6.ruleForm.companyId = data.companyId;\n          _this6.ruleForm.professionalType = data.professionalType;\n          _this6.infoForm.tenderMode = data.tenderMode && _this6.tenderModeList ? _this6.tenderModeList.find(function (f) {\n            return f.value === data.tenderMode;\n          }).name : '';\n          _this6.infoForm.decorationArea = data.decorationArea ? _this6.utils.formatMoney(data.decorationArea, 2, 0) : null;\n          _this6.area = data.decorationArea;\n          _this6.infoForm.floors = data.floors;\n          _this6.infoForm.informationSource = data.informationSource && _this6.informationSourceList ? _this6.informationSourceList.find(function (f) {\n            return f.value === data.informationSource;\n          }).name : '';\n          _this6.infoForm.competitors = data.competitors;\n          _this6.infoForm.bidEvaluationMethod = bidEvaluationMethod;\n          _this6.ruleForm.totalTimes = totalTimes;\n          _this6.ruleForm.quotationTimes = quotationTimes + 1;\n          _this6.list = detailList;\n          _this6.count = quotationTimes;\n        });\n      }\n    }\n  }\n};\nexports.default = _default;",null]}