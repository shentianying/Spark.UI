{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\byj\\Imprest\\WriteOffDetails.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\byj\\Imprest\\WriteOffDetails.vue","mtime":1633684104551},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _Detailsedit = _interopRequireDefault(require(\"@/components/Detailsedit\"));\n\nvar _Impresst = require(\"@/api/cwgl/Impresst\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'ImprestWriteOffDetails',\n  components: {\n    Detailsedit: _Detailsedit.default\n  },\n  data: function data() {\n    return {\n      size: 'mini',\n      loading: false,\n      // 请求未完成\n      myDetails: {},\n      // 详情数据\n      imprestTypeList: [],\n      // 冲销方式数据\n      stateList: [] // 状态列表\n\n    };\n  },\n  computed: {\n    /**\r\n     * 详情各字段计算\r\n     */\n    infoList: function infoList() {\n      if (!this.myDetails.data) return;\n      var _this$myDetails$data = this.myDetails.data,\n          number = _this$myDetails$data.number,\n          amount = _this$myDetails$data.amount,\n          remark = _this$myDetails$data.remark,\n          personNumber = _this$myDetails$data.personNumber,\n          personName = _this$myDetails$data.personName,\n          createDate = _this$myDetails$data.createDate,\n          createUserName = _this$myDetails$data.createUserName,\n          lastEditUserName = _this$myDetails$data.lastEditUserName,\n          lastEditDate = _this$myDetails$data.lastEditDate,\n          pageName = _this$myDetails$data.pageName,\n          pageId = _this$myDetails$data.pageId,\n          stateName = _this$myDetails$data.stateName,\n          writeOffMode = _this$myDetails$data.writeOffMode,\n          capitalTypeName = _this$myDetails$data.capitalTypeName,\n          orgStr = _this$myDetails$data.orgStr;\n      var goDeal = this.goDeal;\n      return [{\n        label: '编号',\n        value: number\n      }, {\n        label: '部门',\n        value: orgStr\n      }, {\n        label: '摘要',\n        value: \"\".concat(personName).concat(writeOffMode, \"\\u5907\\u7528\\u91D1\")\n      }, {\n        label: '支付方式',\n        value: capitalTypeName\n      }, {\n        label: '冲销工人号',\n        value: personNumber\n      }, {\n        label: '姓名',\n        value: personName\n      }, {\n        label: '冲销金额',\n        value: \"\".concat(Math.abs(amount))\n      }, {\n        label: '冲销方式',\n        value: writeOffMode\n      }, {\n        label: '备注',\n        value: remark,\n        monopolize: true\n      }, {\n        label: '制单人',\n        value: createUserName\n      }, {\n        label: '制单时间',\n        value: createDate\n      }, {\n        label: '更新人',\n        value: lastEditUserName\n      }, {\n        label: '更新时间',\n        value: lastEditDate\n      }, {\n        label: '状态',\n        value: stateName\n      }, {\n        label: '源头',\n        value: pageName,\n        click: goDeal,\n        params: [pageId]\n      }];\n    }\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    next(function (vm) {\n      vm.initData();\n    });\n  },\n  methods: {\n    /**\r\n     * @description: 初始化数据\r\n     */\n    initData: function initData() {\n      var id = this.$route.query.id;\n      this.myId = id;\n      this.fetchData();\n      this.InitImprestWriteOffType();\n    },\n\n    /**\r\n     * @description: 初始化冲销方式单选\r\n     */\n    InitImprestWriteOffType: function InitImprestWriteOffType() {\n      var _this = this;\n\n      (0, _Impresst.InitImprestWriteOff)().then(function (res) {\n        _this.imprestTypeList = res.typeList;\n      });\n    },\n\n    /**\r\n     * 获取详情信息\r\n     */\n    fetchData: function () {\n      var _fetchData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.myId) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                this.loading = true;\n                _context.next = 5;\n                return (0, _Impresst.GetImprestWriteOffById)({\n                  id: this.myId\n                });\n\n              case 5:\n                res = _context.sent;\n                this.myDetails = res;\n                this.loading = false;\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function fetchData() {\n        return _fetchData.apply(this, arguments);\n      }\n\n      return fetchData;\n    }(),\n\n    /**\r\n     * 前往源头\r\n     * @param {*} pageId 路由id\r\n     * @param {*} billId 单据id\r\n     */\n    goDeal: function goDeal(pageId, billId) {\n      if (!pageId) return;\n\n      var _this$getRoute = this.getRoute(pageId),\n          routerName = _this$getRoute.routerName;\n\n      this.$router.replace({\n        name: routerName,\n        query: {\n          id: billId,\n          refreshRouterName: this.$route.name\n        },\n        params: {\n          id: billId,\n          type: 1\n        }\n      });\n    },\n    getRoute: function getRoute(pageId) {\n      // 获取菜单列表\n      var getIsMenu = this.$store.getters.menus;\n      return getIsMenu.find(function (f) {\n        return f.id === pageId;\n      });\n    }\n  }\n};\nexports.default = _default;",null]}