{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\gckgl\\gathering\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\gckgl\\gathering\\index.vue","mtime":1635749455692},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _projectGathering = require(\"@/api/xmgl/projectGathering\");\n\nvar _SearchBar = _interopRequireDefault(require(\"@/components/SearchBar\"));\n\nvar _searchData = _interopRequireDefault(require(\"./searchData\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'ProjectGathering',\n  components: {\n    SearchBar: _SearchBar.default\n  },\n  data: function data() {\n    return {\n      tabPosition: 1,\n      size: 'mini',\n      // 整体大小 medium / small / mini\n      searchData: _searchData.default,\n      // 渲染搜索栏数据\n      amount: 0,\n      // 统计收款\n\n      /* 列表数据相关 */\n      table: {\n        list: [],\n        loading: false,\n        total: 0,\n        currentPage: 1,\n        pageSize: this.utils.getPersonalSettings().pageSize\n      },\n      formState: [{\n        name: '制单',\n        value: 0\n      }, {\n        name: '未拆分',\n        value: 1\n      }, {\n        name: '已拆分',\n        value: 10000\n      }, {\n        name: '作废',\n        value: -1\n      }]\n    };\n  },\n  activated: function activated() {\n    console.info('actived');\n    this.fetchData();\n  },\n  created: function created() {\n    console.info('created');\n    this.fetchData();\n  },\n  methods: {\n    /**\r\n     * @description: 获取列表数据、搜索数据\r\n     * @return {*}\r\n     */\n    fetchData: function () {\n      var _fetchData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var postData, response, data, count, gathering, projectStateList, gatheringTypeList, capitalTypeList;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.table.loading = true;\n                _context.prev = 1;\n                // 获取请求参数\n                postData = this.getSearchData();\n                postData.currentPage = this.table.currentPage;\n                postData.pageSize = this.table.pageSize;\n                postData.type = this.tabPosition;\n                console.log('fetchData:请求数据', postData); // 请求开始\n\n                _context.next = 9;\n                return (0, _projectGathering.getProjectGatheringPaging)(postData);\n\n              case 9:\n                response = _context.sent;\n                data = response.data, count = response.count, gathering = response.gathering, projectStateList = response.projectStateList, gatheringTypeList = response.gatheringTypeList, capitalTypeList = response.capitalTypeList;\n                this.amount = gathering; // 搜索栏数据初始化\n\n                projectStateList.forEach(function (ele) {\n                  // 项目状态选项数据转换\n                  ele.label = ele.name;\n                });\n                capitalTypeList.forEach(function (ele) {\n                  ele.label = ele.name;\n                }); // 资金形式选项数据转换\n\n                gatheringTypeList.forEach(function (ele) {\n                  ele.label = ele.name;\n                }); // 收款类型选项数据转换\n\n                this.searchData = this.searchData.map(function (item) {\n                  item.options = item.name === 'projectState' ? projectStateList : item.options;\n                  item.options = item.name === 'gatheringTypes' ? gatheringTypeList : item.options;\n                  item.options = item.name === 'capitalTypes' ? capitalTypeList : item.options;\n                  return item;\n                }); // 列表数据初始化\n\n                this.table.list = data;\n                this.table.total = count;\n                _context.next = 23;\n                break;\n\n              case 20:\n                _context.prev = 20;\n                _context.t0 = _context[\"catch\"](1);\n                console.log('fetchData:请求列表数据失败，错误信息：', _context.t0);\n\n              case 23:\n                _context.prev = 23;\n                this.table.loading = false;\n                return _context.finish(23);\n\n              case 26:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 20, 23, 26]]);\n      }));\n\n      function fetchData() {\n        return _fetchData.apply(this, arguments);\n      }\n\n      return fetchData;\n    }(),\n\n    /**\r\n     * @description: 搜索栏数据转换\r\n     * @return {Object} request数据\r\n     */\n    getSearchData: function getSearchData() {\n      var data = {};\n      this.searchData.forEach(function (item) {\n        var val = item.value;\n\n        if (item.name === 'yearmonth') {\n          data.gatheringYear = val[0];\n          data.gatheringMonth = val[1];\n        } else if (item.name === 'year') {\n          data.year = new Date(val).getFullYear();\n        } else {\n          data[item.name] = item.value;\n        }\n      });\n      return data;\n    },\n\n    /**\r\n     * @description: type栏数据转换\r\n     * @param {Number} val\r\n     */\n    radioChange: function radioChange(val) {\n      // 清空和切换条件\n      this.searchData = _searchData.default;\n      this.tabPosition = val; // 填充数据\n\n      this.fetchData();\n    },\n\n    /**\r\n     * @description: 设置分页大小\r\n     * @param {Number} val\r\n     */\n    sizeChange: function sizeChange(val) {\n      this.table.pageSize = val;\n      this.fetchData();\n    },\n\n    /**\r\n     * @description: 搜索回调\r\n     */\n    handelSearch: function () {\n      var _handelSearch = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.fetchData();\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handelSearch() {\n        return _handelSearch.apply(this, arguments);\n      }\n\n      return handelSearch;\n    }(),\n\n    /**\r\n     * @description: 单据状态\r\n     * @param {Object} row\r\n     */\n    getFormState: function getFormState(state) {\n      var obj = this.formState.find(function (f) {\n        return f.value === state;\n      });\n\n      if (obj) {\n        return obj.name;\n      } else {\n        return '状态不详';\n      }\n    },\n    getType: function getType(state) {\n      var type = 'primary';\n\n      switch (state) {\n        case 0:\n          type = 'info';\n          break;\n\n        case 1:\n          type = 'warning';\n          break;\n\n        case 1000:\n          type = 'primary';\n          break;\n\n        case 10000:\n          type = 'success';\n          break;\n\n        case -1:\n          type = 'danger';\n          break;\n      }\n\n      return type;\n    },\n\n    /**\r\n     * @description: 路由到详情页\r\n     * @param {*} row\r\n     */\n    handleDetails: function handleDetails(row) {\n      this.$router.push({\n        name: 'ProjectGatheringDetail',\n        query: {\n          id: row.id,\n          refreshRouterName: this.$route.name\n        },\n        params: {\n          id: row.id\n        }\n      });\n    },\n\n    /**\r\n     * @description: 路由到详情页\r\n     * @param {*} row\r\n     */\n    handleSplit: function handleSplit(row) {\n      this.$router.push({\n        name: 'ProjectGatheringSplit',\n        query: {\n          id: row.id,\n          refreshRouterName: this.$route.name\n        },\n        params: {\n          id: row.id\n        }\n      });\n    },\n\n    /**\r\n     * @description: table编辑\r\n     * @param {Object} row\r\n     */\n    handleEdit: function handleEdit() {\n      var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var type = arguments.length > 1 ? arguments[1] : undefined;\n      this.$router.push({\n        name: 'ProjectGatheringEdit',\n        query: {\n          type: type,\n          id: id,\n          refreshRouterName: this.$route.name\n        },\n        params: {\n          id: id,\n          type: 3\n        }\n      });\n    }\n  }\n};\nexports.default = _default;",null]}