{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\qxgl\\component\\rolePermit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\qxgl\\component\\rolePermit.vue","mtime":1624071363353},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.set\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/toConsumableArray\"));\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _page = require(\"@/api/xtgl/page\");\n\nvar _role = require(\"@/api/xtgl/role\");\n\nvar _index = require(\"@/utils/index\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'RolePermit',\n  components: {},\n  props: {\n    showSubmitButton: {\n      type: Boolean,\n      default: true\n    },\n    roleIds: {\n      type: String,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      list: [],\n      listLoading: true,\n      buttonLoading: false,\n      // currentRow: null,\n      checkList: [],\n      permit: [],\n      pageList: [],\n      defaultProps: {\n        children: 'children',\n        label: 'routerTitle'\n      }\n    };\n  },\n  computed: {},\n  mounted: function mounted() {\n    this.fetchData();\n  },\n  methods: {\n    fetchData: function fetchData() {\n      var _this = this;\n\n      this.listLoading = true;\n      new Promise(function (resolve, reject) {\n        (0, _page.GetPageAndPermit)().then(function (response) {\n          _this.permit = response.data.permitData;\n          _this.pageList = response.data.pageData;\n          _this.list = (0, _index.getTree)(0, response.data.pageData);\n          resolve();\n        });\n      }).then(function (res) {\n        // 设置 角色的 节点\n        if (_this.roleIds) {\n          var postData = {};\n          postData.roleId = _this.roleIds;\n          (0, _role.getRolePermitByRoleId)(postData).then(function (response) {\n            _this.checkList = response.data.map(function (m) {\n              return m.permitId;\n            });\n          });\n        }\n      }).catch(function (err) {\n        return _this.$message.info(err);\n      });\n    },\n    handleSave: function handleSave() {\n      var _this2 = this;\n\n      // const items = this.$refs.tree.getCheckedNodes(false, true)\n      var postData = [];\n      this.checkList.forEach(function (e) {\n        postData.push({\n          roleId: _this2.$route.query.id,\n          permitId: e\n        });\n      });\n      this.buttonLoading = true;\n      (0, _role.addRolePermit)(postData).then(function (response) {\n        _this2.$message.info(response.message);\n\n        _this2.buttonLoading = false;\n\n        _this2.$emit('dialogClose');\n      }).catch(function () {\n        _this2.buttonLoading = false;\n      });\n    },\n    closeThePage: function closeThePage() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    },\n    getPermitId: function getPermitId(pageId) {\n      var view = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var _permit = this.permit;\n      var arr1 = []; // 根据菜单id 生成树形结构\n\n      var treeNode1 = (0, _index.getTree)(pageId, this.pageList); // 根据树形结构，找出叶子节点\n\n      var childTreeNodes = (0, _index.getLeafNodes)({\n        children: treeNode1\n      }, []); // 根据菜单id 选出权限\n\n      if (childTreeNodes.length) {\n        // 数据不为空，不是叶子节点\n        arr1 = _permit.filter(function (f) {\n          return childTreeNodes.includes(f.pageId);\n        });\n      } else {\n        // 是叶子节点\n        arr1 = _permit.filter(function (f) {\n          return f.pageId === pageId;\n        });\n      }\n\n      if (view) {\n        // 过滤所有查看\n        arr1 = arr1.filter(function (f) {\n          return f.isView;\n        });\n      }\n\n      return arr1.map(function (m) {\n        return m.id;\n      });\n    },\n    handleCheckAll: function handleCheckAll(checked) {\n      if (checked) {\n        var arr = this.getPermitId(0);\n        this.checkList = arr;\n      } else {\n        this.checkList = [];\n      }\n    },\n    handleSelectAllView: function handleSelectAllView(checked) {\n      if (checked) {\n        var arr = this.getPermitId(0, true);\n        this.checkList = arr;\n      } else {\n        this.checkList = [];\n      }\n    },\n    handleSelectView: function handleSelectView(checked, id) {\n      // 选择查看\n      var arr = this.getPermitId(id, true);\n      this.checkProgress(checked, arr);\n    },\n    handleSelectAll: function handleSelectAll(checked, id) {\n      // 选择全选\n      // 获取节点\n      var arr = this.getPermitId(id);\n      this.checkProgress(checked, arr);\n    },\n    checkProgress: function checkProgress(checked, arr) {\n      if (checked) {\n        // 已经选中的和选中的和合并数组\n        this.checkList = (0, _toConsumableArray2.default)(new Set([].concat((0, _toConsumableArray2.default)(this.checkList), (0, _toConsumableArray2.default)(arr))));\n      } else {\n        //  数组差集\n        var arr1 = (0, _toConsumableArray2.default)(this.checkList).filter(function (x) {\n          return !arr.some(function (ele) {\n            return ele === x;\n          });\n        });\n        this.checkList = (0, _toConsumableArray2.default)(new Set(arr1));\n      }\n    }\n  }\n};\nexports.default = _default;",null]}