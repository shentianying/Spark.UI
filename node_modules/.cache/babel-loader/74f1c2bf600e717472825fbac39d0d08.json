{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Projects\\spark\\Spark.UI\\src\\utils\\index.js","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\utils\\index.js","mtime":1635216068726},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.amountInWords = amountInWords;\nexports.parseTime = parseTime;\nexports.formatExcelDate = formatExcelDate;\nexports.formatTime = formatTime;\nexports.uuid = uuid;\nexports.getPersonalSettings = getPersonalSettings;\nexports.formatMoney = formatMoney;\nexports.param2Obj = param2Obj;\nexports.NumberMul = NumberMul;\nexports.NumberAdd = NumberAdd;\nexports.NumberSub = NumberSub;\nexports.NumberDiv = NumberDiv;\nexports.getTree = getTree;\nexports.toTree = toTree;\nexports.getTreeNode = getTreeNode;\nexports.findPNode = findPNode;\nexports.getLeafNodes = getLeafNodes;\nexports.closeAndRefresh = closeAndRefresh;\nexports.getFileSize = getFileSize;\nexports.cleanText = cleanText;\nexports.getObjectValue = getObjectValue;\nexports.unique = unique;\nexports.formatIndex = formatIndex;\nexports.easyDeepClone = easyDeepClone;\nexports.sum = sum;\nexports.getPerson = getPerson;\nexports.IsNextPerson = IsNextPerson;\nexports.hasPower = hasPower;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/es7.string.pad-start\");\n\nvar _typeof2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/typeof\"));\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nvar _store = _interopRequireDefault(require(\"@/store\"));\n\nvar _router = _interopRequireDefault(require(\"@/router\"));\n\nvar _localstore = require(\"./localstore\");\n\n/**\r\n * @description: 将小写金额转换成大写\r\n * @param {Number} n 需要转换的数值\r\n * @return {String} 大写金额\r\n */\nfunction amountInWords(n) {\n  if (!n) return '';\n  if (n.toString() === '0') return '零';\n  if (!/^(\\+|-)?(0|[1-9]\\d*)(\\.\\d+)?$/.test(n)) return '数据非法';\n  var unit = '仟佰拾亿仟佰拾万仟佰拾元角分';\n  var str = '';\n  n += '00';\n  var a = parseFloat(n);\n\n  if (a < 0) {\n    n = n.substr(1);\n  }\n\n  var p = n.indexOf('.');\n\n  if (p >= 0) {\n    n = n.substring(0, p) + n.substr(p + 1, 2);\n  }\n\n  unit = unit.substr(unit.length - n.length);\n\n  for (var i = 0; i < n.length; i++) {\n    str += '零壹贰叁肆伍陆柒捌玖'.charAt(n.charAt(i)) + unit.charAt(i);\n  }\n\n  if (a > 0) {\n    return str.replace(/零(仟|佰|拾|角)/g, '零').replace(/(零)+/g, '零').replace(/零(万|亿|元)/g, '$1').replace(/(亿)万|壹(拾)/g, '$1$2').replace(/^元零?|零分/g, '').replace(/元$/g, '元整');\n  } else {\n    return '负' + str.replace(/零(仟|佰|拾|角)/g, '零').replace(/(零)+/g, '零').replace(/零(万|亿|元)/g, '$1').replace(/(亿)万|壹(拾)/g, '$1$2').replace(/^元零?|零分/g, '').replace(/元$/g, '元整');\n  }\n}\n/**\r\n * Parse the time to string\r\n * @param {(Object|string|number)} time\r\n * @param {string} cFormat\r\n * @returns {string | null}\r\n */\n\n\nfunction parseTime(time, cFormat) {\n  if (arguments.length === 0) {\n    return null;\n  }\n\n  var format = cFormat || '{y}-{m}-{d} {h}:{i}:{s}';\n  var date;\n\n  if ((0, _typeof2.default)(time) === 'object') {\n    date = time;\n  } else {\n    if (typeof time === 'string' && /^[0-9]+$/.test(time)) {\n      time = parseInt(time);\n    }\n\n    if (typeof time === 'number' && time.toString().length === 10) {\n      time = time * 1000;\n    }\n\n    date = new Date(time);\n  }\n\n  var formatObj = {\n    y: date.getFullYear(),\n    m: date.getMonth() + 1,\n    d: date.getDate(),\n    h: date.getHours(),\n    i: date.getMinutes(),\n    s: date.getSeconds(),\n    a: date.getDay()\n  };\n  var time_str = format.replace(/{([ymdhisa])+}/g, function (result, key) {\n    var value = formatObj[key]; // Note: getDay() returns 0 on Sunday\n\n    if (key === 'a') {\n      return ['日', '一', '二', '三', '四', '五', '六'][value];\n    }\n\n    return value.toString().padStart(2, '0');\n  });\n  return time_str;\n}\n/**\r\n * 数字转日期格式\r\n * @param {日期数字} numb\r\n * @param {分隔符} format\r\n */\n\n\nfunction formatExcelDate(numb) {\n  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '-';\n\n  if (isNaN(numb)) {\n    return numb;\n  }\n\n  var time = new Date(new Date('1900-1-1').getTime() + (numb - 1) * 3600 * 24 * 1000);\n  var year = time.getFullYear() + '';\n  var month = time.getMonth() + 1 + '';\n  var date = time.getDate();\n\n  if (format && format.length === 1) {\n    return year + format + (month < 10 ? '0' + month : month) + format + (date < 10 ? '0' + date : date);\n  }\n\n  return year + (month < 10 ? '0' + month : month) + (date < 10 ? '0' + date : date);\n}\n/**\r\n * @param {number} time\r\n * @param {string} option\r\n * @returns {string}\r\n */\n\n\nfunction formatTime(time, option) {\n  if (('' + time).length === 10) {\n    time = parseInt(time) * 1000;\n  } else {\n    time = +time;\n  }\n\n  var d = new Date(time);\n  var now = Date.now();\n  var diff = (now - d) / 1000;\n\n  if (diff < 30) {\n    return '刚刚';\n  } else if (diff < 3600) {\n    // less 1 hour\n    return Math.ceil(diff / 60) + '分钟前';\n  } else if (diff < 3600 * 24) {\n    return Math.ceil(diff / 3600) + '小时前';\n  } else if (diff < 3600 * 24 * 2) {\n    return '1天前';\n  }\n\n  if (option) {\n    return parseTime(time, option);\n  } else {\n    return d.getMonth() + 1 + '月' + d.getDate() + '日' + d.getHours() + '时' + d.getMinutes() + '分';\n  }\n}\n\nfunction uuid() {\n  var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 32;\n  var num = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890';\n  var str = '';\n\n  for (var i = 0; i < length; i++) {\n    str += num.charAt(Math.floor(Math.random() * num.length));\n  }\n\n  return str;\n}\n/**\r\n * @returns {object} 个人设置对象\r\n */\n\n\nfunction getPersonalSettings() {\n  // 默认值\n  var personalSettings = {\n    amountFormat: 4,\n    // 默认万分位\n    pageSize: 10 // 默认每页十条\n\n  };\n  var LSResult = (0, _localstore.LSGetObject)('PersonalSettings');\n\n  if (LSResult) {\n    var amountFormat = LSResult.amountFormat,\n        pageSize = LSResult.pageSize;\n    personalSettings = {\n      amountFormat: Number(amountFormat),\n      pageSize: Number(pageSize)\n    };\n  }\n\n  return personalSettings;\n}\n/**\r\n  *格式化金额，\r\n  * 2021年9月4日 发现当金额为负数时存在逻辑错误,会出现-,1234.12这样的\r\n  * 现增加负数的判断,先转成正数,格式化以后再加上负号\r\n  * @param {Number|String} s : 金额\r\n  * @param {Number} n : 保留位数\r\n  * @param {Number} [d=4] : 默认万分位数 ,d=0,取用户设置的值\r\n  * @returns {String} 1,2345.11\r\n  **/\n\n\nfunction formatMoney(s, n) {\n  var d = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 4;\n\n  if (d === 0) {\n    var _getPersonalSettings = getPersonalSettings(),\n        amountFormat = _getPersonalSettings.amountFormat;\n\n    d = amountFormat;\n  }\n\n  n = n > 0 && n <= 20 ? n : 2;\n  s = Number(s);\n\n  var _Symbol = s < 0 ? '-' : '';\n\n  s = parseFloat((Math.abs(s) + '').replace(/[^\\d\\.-]/g, '')).toFixed(n) + '';\n  var l = s.split('.')[0].split('').reverse();\n  var r = s.split('.')[1];\n  var t = '';\n\n  for (var i = 0; i < l.length; i++) {\n    t += l[i] + ((i + 1) % d === 0 && i + 1 !== l.length ? ',' : '');\n  }\n\n  return \"\".concat(_Symbol).concat(t.split('').reverse().join(''), \".\").concat(r);\n}\n/**\r\n * @param {string} url\r\n * @returns {Object}\r\n */\n\n\nfunction param2Obj(url) {\n  var search = url.split('?')[1];\n\n  if (!search) {\n    return {};\n  }\n\n  return JSON.parse('{\"' + decodeURIComponent(search).replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g, '\":\"').replace(/\\+/g, ' ') + '\"}');\n} // 乘法\n\n\nfunction NumberMul(arg1, arg2) {\n  var m = 0;\n  var s1 = arg1.toString();\n  var s2 = arg2.toString();\n\n  try {\n    m += s1.split('.')[1].length; // eslint-disable-next-line no-empty\n  } catch (e) {}\n\n  try {\n    m += s2.split('.')[1].length; // eslint-disable-next-line no-empty\n  } catch (e) {}\n\n  return Number(s1.replace('.', '')) * Number(s2.replace('.', '')) / Math.pow(10, m);\n} // 加法\n\n\nfunction NumberAdd(arg1, arg2) {\n  var r1, r2, m, n;\n\n  try {\n    r1 = arg1.toString().split('.')[1].length;\n  } catch (e) {\n    r1 = 0;\n  }\n\n  try {\n    r2 = arg2.toString().split('.')[1].length;\n  } catch (e) {\n    r2 = 0;\n  }\n\n  m = Math.pow(10, Math.max(r1, r2));\n  n = r1 >= r2 ? r1 : r2;\n  return ((arg1 * m + arg2 * m) / m).toFixed(n);\n} // 减法\n\n\nfunction NumberSub(arg1, arg2) {\n  var re1, re2, m, n;\n\n  try {\n    re1 = arg1.toString().split('.')[1].length;\n  } catch (e) {\n    re1 = 0;\n  }\n\n  try {\n    re2 = arg2.toString().split('.')[1].length;\n  } catch (e) {\n    re2 = 0;\n  }\n\n  m = Math.pow(10, Math.max(re1, re2));\n  n = re1 >= re2 ? re1 : re2;\n  return ((arg1 * m - arg2 * m) / m).toFixed(n);\n} // 除数，被除数， 保留的小数点后的位数\n\n\nfunction NumberDiv(arg1, arg2, digit) {\n  var t1 = 0;\n  var t2 = 0;\n  var r1;\n  var r2; // eslint-disable-next-line no-empty\n\n  try {\n    t1 = arg1.toString().split('.')[1].length;\n  } catch (e) {} // eslint-disable-next-line no-empty\n\n\n  try {\n    t2 = arg2.toString().split('.')[1].length;\n  } catch (e) {}\n\n  r1 = Number(arg1.toString().replace('.', ''));\n  r2 = Number(arg2.toString().replace('.', '')); // 获取小数点后的计算值\n\n  var result = (r1 / r2 * Math.pow(10, t2 - t1)).toString();\n  var result2 = result.split('.')[1];\n  result2 = result2.substring(0, digit > result2.length ? result2.length : digit);\n  return Number(result.split('.')[0] + '.' + result2);\n} // 方法1。根据后台的列表数据，递归生成树形结构\n\n\nfunction getTree(id, data) {\n  var a = data.filter(function (f) {\n    return f.pid === id;\n  });\n  var b = data.filter(function (f) {\n    return f.pid !== id;\n  });\n  a.forEach(function (element) {\n    var arr = getTree(element.id, b);\n\n    if (arr.length) {\n      element.children = arr;\n    }\n  });\n  return a;\n} // 方法2。根据后台的列表数据，递归生成树形结构\n\n\nfunction toTree(data) {\n  var result = [];\n\n  if (!Array.isArray(data)) {\n    return result;\n  }\n\n  data.forEach(function (item) {\n    delete item.children;\n  });\n  var map = {};\n  data.forEach(function (item) {\n    map[item.id] = item;\n  });\n  data.forEach(function (item) {\n    var parent = map[item.pid];\n\n    if (parent) {\n      (parent.children || (parent.children = [])).push(item);\n    } else {\n      result.push(item);\n    }\n  });\n  return result;\n} // 递归 获取所有子节点 id 的数组\n\n\nfunction getTreeNode(data, arr) {\n  if (data.children) {\n    data.children.forEach(function (element) {\n      arr.push(element.id);\n\n      if (element.children) {\n        getTreeNode(element, arr);\n      }\n    });\n  }\n\n  return arr;\n} // 递归从子节点向上查找父节点\n\n\nfunction findPNode(arr1, id) {\n  var temp = [];\n\n  var forFn = function forFn(arr, id) {\n    var pNode = arr.find(function (f) {\n      return f.id === id;\n    });\n\n    if (pNode) {\n      temp.push(pNode);\n\n      if (pNode.pid !== 0) {\n        forFn(arr, pNode.pid);\n      }\n    }\n  };\n\n  forFn(arr1, id);\n  return temp;\n} // 获取该节点下面的所有的叶子节点\n\n\nfunction getLeafNodes(data, arr) {\n  if (data.children) {\n    data.children.forEach(function (element) {\n      if (element.children) {\n        getLeafNodes(element, arr);\n      } else {\n        arr.push(element.id);\n      }\n    });\n  }\n\n  return arr;\n} // 关闭当前页面刷新列表页面\n\n\nfunction closeAndRefresh(refreshRouterName) {\n  _store.default.dispatch('tagsView/delView', _router.default.history.current);\n\n  _router.default.push({\n    name: refreshRouterName,\n    params: {\n      refresh: true\n    }\n  });\n} // 计算文件大小函数(保留两位小数),Size为字节大小\n// size：初始文件大小\n\n\nfunction getFileSize(size) {\n  if (!size) {\n    return '';\n  }\n\n  var num = 1024.00; // byte\n\n  if (size < num) {\n    return size + 'B';\n  }\n\n  if (size < Math.pow(num, 2)) {\n    return (size / num).toFixed(2) + 'K';\n  } // kb\n\n\n  if (size < Math.pow(num, 3)) {\n    return (size / Math.pow(num, 2)).toFixed(2) + 'M';\n  } // M\n\n\n  if (size < Math.pow(num, 4)) {\n    return (size / Math.pow(num, 3)).toFixed(2) + 'G';\n  } // G\n\n\n  return (size / Math.pow(num, 4)).toFixed(2) + 'T'; // T\n}\n/**\r\n *\r\n * @param {string} str\r\n */\n\n\nfunction cleanText(str) {\n  if (typeof str === 'string') {\n    var r = str.replace(/[\\r\\n]/g, ''); // 去掉回车换行\n\n    return r.trim();\n  } else if (typeof str === 'undefined') {\n    return '';\n  } else {\n    return str;\n  }\n}\n/**\r\n * 获取对象中某个属性的值 o:值 a:属性名称\r\n * @param {object} o 对象\r\n * @param {string} a 属性名\r\n * @param {string} d 默认返回值\r\n */\n\n\nfunction getObjectValue(o, a) {\n  var d = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n  if (o) {\n    return o[a];\n  } else {\n    return d;\n  }\n}\n/**\r\n * 去重。\r\n * @param {Array} arr 要去重的数组\r\n * @param {string} n 根据对象中的哪个名称去重\r\n */\n// export function unique(arr, n = 'id') {\n//   const res = new Map()\n//   return arr.filter((arr) => !res.has(arr[n]) && res.set(arr[n], 1))\n// }\n\n\nfunction unique(arr) {\n  var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'id';\n  var t = [];\n  arr.forEach(function (e) {\n    if (!t.some(function (f) {\n      return f[n] === e[n];\n    })) {\n      t.push(e);\n    }\n  });\n  return t;\n}\n/**\r\n * 格式化行号,不够10就补0\r\n * @param {Number} n 下标,从0开始\r\n * @returns 行号,从01开始计数\r\n */\n\n\nfunction formatIndex(n) {\n  n = (n + 1).toString();\n  return n[1] ? n : '0' + n;\n}\n/**\r\n * 简单深拷贝,试用简单的对象和数组结构\r\n * @param {*} origin 拷贝对象\r\n * @returns 新的对象\r\n */\n\n\nfunction easyDeepClone(origin) {\n  if ((0, _typeof2.default)(origin) === 'object') return JSON.parse(JSON.stringify(origin));\n}\n/**\r\n * 求和\r\n * @param  {...Number,Number[]} nums 数字或数字数组\r\n * @returns 和\r\n * @example sun(1,2,[3,4],5)\r\n */\n\n\nfunction sum() {\n  var _ref;\n\n  var arr = (_ref = []).concat.apply(_ref, arguments);\n\n  if (arr.length === 0) return 0;\n  return arr.reduce(function (prev, curr) {\n    return prev + curr;\n  });\n}\n/**\r\n* 获取待处理人\r\n* @param {Object} bf 流程对象\r\n* @returns {String} 待处理人字符串\r\n*/\n\n\nfunction getPerson(bf) {\n  if (bf) {\n    var arr = bf.billFlowNode.filter(function (f) {\n      return f.isCurrentState && !f.isChecked;\n    });\n    return arr.map(function (m) {\n      return m.person.name;\n    }).join('、');\n  }\n}\n/**\r\n* 判断自己是否是待处理人\r\n*/\n\n\nfunction IsNextPerson(bf) {\n  var _bf$billFlowNode;\n\n  var arr = (bf === null || bf === void 0 ? void 0 : (_bf$billFlowNode = bf.billFlowNode) === null || _bf$billFlowNode === void 0 ? void 0 : _bf$billFlowNode.filter(function (f) {\n    return f.isCurrentState && !f.isChecked;\n  })) || [];\n  return arr.find(function (v) {\n    return v.person.id === _store.default.state.user.uid;\n  });\n}\n/**\r\n * 判断当前角色是否有对应权限\r\n * 判断方法跟自定义命令v-has是一样的,之所以写一个这个是因为v-has的逻辑是没有权限直接删除按钮,现在的需求是只想知道是否有权限,后续操作另外处理,这样更自由\r\n * @param {String} power-权限标识,字符串不区分大小写,对应于系统设置-权限管理-菜单权限中的标识\r\n * @returns {Object} 为了更加方便直接返回对应权限的权限对象,如果没有就是undefined\r\n */\n\n\nfunction hasPower(power) {\n  var _store$getters, _store$getters$info, _store$getters$info$r;\n\n  return _store.default === null || _store.default === void 0 ? void 0 : (_store$getters = _store.default.getters) === null || _store$getters === void 0 ? void 0 : (_store$getters$info = _store$getters.info) === null || _store$getters$info === void 0 ? void 0 : (_store$getters$info$r = _store$getters$info.rolePermitList) === null || _store$getters$info$r === void 0 ? void 0 : _store$getters$info$r.find(function (f) {\n    return f.permit.code.toLowerCase() === power.toLowerCase();\n  });\n}",null]}