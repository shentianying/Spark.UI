{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Projects\\spark\\Spark.UI\\src\\components\\TableEx\\Column\\index.js","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\components\\TableEx\\Column\\index.js","mtime":1635216068724},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/objectSpread2\"));\n\nvar _babelHelperVueJsxMergeProps = _interopRequireDefault(require(\"@vue/babel-helper-vue-jsx-merge-props\"));\n\nrequire(\"./index.scss\");\n\nvar _util = require(\"../util\");\n\n/**\r\n  * @column\r\n               {\r\n                  label: '部门', // 表头\r\n                  prop: 'number', // 渲染的属性\r\n                  // 输出前对数据进行转换处理。支持字符串或者函数\r\n\r\n                  formatPopper(val, format, row, column)  提示的格式化方式默认使用format。\r\n                  formatExport(val, format, row, column)  表格导出使用的格式化方式默认使用format。\r\n                  format(val,format, row, column)         自定义转换函数。处理好的数据直接return（接受字符串或者自定义函数）\r\n\r\n                  format:'date',  金额万分位:money;  日期:date  目前只接受两种\r\n\r\n                  class: 'link', // 自定义类名\r\n                  click(row) {}, //  单击事件。当前行作为参数，处理好的数据直接return\r\n\r\n                  // 下面是el-table-column参数，具体请查看element文档\r\n                  align: 'center', // 对齐方式\r\n                  width: '130', // 宽度\r\n                  minWidth: '10' // 最小宽度\r\n                }\r\n  */\nfunction template(h) {\n  var formatPopper = this.formatPopper,\n      _click = this.click,\n      formatCont = this.formatCont,\n      column = this.column,\n      defaultTooltip = this.defaultTooltip,\n      popperClass = this.popperClass,\n      tooltipEffect = this.tooltipEffect,\n      index = this.index;\n  var defaultSlot = {\n    default: function _default(scope) {\n      return h(\"el-tooltip\", {\n        \"class\": 'column-wrapper',\n        \"attrs\": {\n          \"open-delay\": column.openDelay || 0,\n          \"disabled\": defaultTooltip,\n          \"popper-class\": popperClass,\n          \"placement\": 'top',\n          \"effect\": tooltipEffect\n        }\n      }, [h(\"div\", {\n        \"slot\": 'content',\n        \"domProps\": {\n          \"innerHTML\": formatPopper(scope.row, column, scope)\n        }\n      }), h(\"div\", {\n        \"class\": column.class,\n        \"on\": {\n          \"click\": function click() {\n            return _click(scope.row, column, scope);\n          }\n        },\n        \"domProps\": {\n          \"innerHTML\": formatCont(scope.row, column, scope)\n        }\n      })]);\n    }\n  };\n  return h(\"el-table-column\", (0, _babelHelperVueJsxMergeProps.default)([{\n    \"class\": 'TableExColumn'\n  }, {\n    \"props\": (0, _objectSpread2.default)({\n      fixed: index === 0 ? 'left' : null\n    }, column)\n  }, {\n    \"attrs\": {\n      \"show-overflow-tooltip\": defaultTooltip\n    },\n    \"scopedSlots\": column.type ? null : defaultSlot\n  }]));\n}\n\nvar _default2 = {\n  props: {\n    index: {\n      type: Number,\n      default: 0\n    },\n    tooltipEffect: {\n      type: String,\n      default: 'light'\n    },\n    popperClass: {\n      type: String,\n      default: 'popper-cont'\n    },\n    column: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  computed: {\n    defaultTooltip: function defaultTooltip() {\n      return typeof this.column.formatPopper !== 'function';\n    }\n  },\n  render: function render(h) {\n    var content;\n\n    if (typeof this.column.render === 'function') {\n      content = this.column.render.call(this, h);\n    } else {\n      content = template.call(this, h);\n    }\n\n    return content;\n  },\n  methods: {\n    click: function click(row, scope) {\n      var ck = this.column.click;\n\n      if (typeof ck === 'function') {\n        ck(row, this.column, scope);\n      }\n    },\n    formatPopper: function formatPopper(row, column, scope) {\n      var cb = column.formatPopper;\n\n      if (typeof cb === 'function') {\n        var prop = column.prop;\n        var val = (0, _util.getValueByPath)(row, prop);\n        return cb(val, _util.formatFunc, row, column, scope);\n      } else {\n        return this.formatCont(row, column, scope);\n      }\n    },\n    formatCont: function formatCont(row, column, scope) {\n      var format = column.format;\n      return (0, _util.formatText)(format, row, column, scope);\n    },\n    getValueByPath: function getValueByPath() {\n      return _util.getValueByPath.apply(void 0, arguments);\n    },\n    formatText: function formatText() {\n      return _util.formatText.apply(void 0, arguments);\n    }\n  }\n};\nexports.default = _default2;",null]}