{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\zjgl\\diaoBo\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\zjgl\\diaoBo\\index.vue","mtime":1629874990609},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _zjsk = _interopRequireDefault(require(\"@/api/cwgl/zjgl/zjsk.js\"));\n\nvar _SearchBar = _interopRequireDefault(require(\"@/components/SearchBar\"));\n\nvar _searchData = _interopRequireDefault(require(\"./searchData\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import { getBussinessInfoPaging, getBussinessInfoEditInit } from '@/api/ywgl/bussinessInfo'\nvar _default = {\n  name: 'ZiJinShouKuan',\n  components: {\n    SearchBar: _SearchBar.default\n  },\n  data: function data() {\n    return {\n      searchData: _searchData.default,\n      // 渲染搜索栏数据\n      filter: {\n        // 过滤数据\n        state: '1',\n        stateOptions: [{\n          value: '0',\n          name: '制单'\n        }, {\n          value: '1',\n          name: '作废'\n        }, {\n          value: 3,\n          name: '审批'\n        }, {\n          value: 4,\n          name: '支付'\n        }, {\n          value: 5,\n          name: '完成'\n        }]\n      },\n\n      /* 列表数据相关 */\n      table: {\n        list: [],\n        loading: false,\n        total: 0,\n        currentPage: 1,\n        pageSize: 10\n      }\n    };\n  },\n  created: function created() {\n    this.fetchData();\n  },\n  methods: {\n    /**\r\n     * @description: 获取列表数据、搜索数据\r\n     * @return {*}\r\n     */\n    fetchData: function () {\n      var _fetchData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var postData, response, data, count, capitalTypeOptions, paymentTypeOptions;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.table.loading = true;\n                _context.prev = 1;\n                // 获取请求参数\n                postData = this.getSearchData();\n                postData.currentPage = this.table.currentPage;\n                postData.pageSize = this.table.pageSize;\n                console.log('fetchData:请求数据', postData); // 请求开始\n\n                _context.next = 8;\n                return _zjsk.default.GetPaymentPaging(postData);\n\n              case 8:\n                response = _context.sent;\n                data = response.data, count = response.count, capitalTypeOptions = response.capitalTypeOptions, paymentTypeOptions = response.paymentTypeOptions; // 搜索栏数据初始化\n\n                capitalTypeOptions.forEach(function (ele) {\n                  ele.label = ele.name;\n                }); // 资金形式选项数据转换\n\n                paymentTypeOptions.forEach(function (ele) {\n                  ele.label = ele.name;\n                }); // 收款类型选项数据转换\n\n                this.searchData = this.searchData.map(function (item) {\n                  item.options = item.name === 'paymentTypes' ? paymentTypeOptions : [];\n                  item.options = item.name === 'capitalTypes' ? capitalTypeOptions : [];\n                  return item;\n                }); // 列表数据初始化\n\n                this.table.list = data;\n                this.table.total = count;\n                _context.next = 20;\n                break;\n\n              case 17:\n                _context.prev = 17;\n                _context.t0 = _context[\"catch\"](1);\n                console.log('fetchData:请求列表数据失败，错误信息：', _context.t0);\n\n              case 20:\n                _context.prev = 20;\n                this.table.loading = false;\n                return _context.finish(20);\n\n              case 23:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 17, 20, 23]]);\n      }));\n\n      function fetchData() {\n        return _fetchData.apply(this, arguments);\n      }\n\n      return fetchData;\n    }(),\n\n    /**\r\n     * @description: 搜索栏数据转换\r\n     * @return {Object} request数据\r\n     */\n    getSearchData: function getSearchData() {\n      var data = {};\n      this.searchData.forEach(function (item) {\n        if (item.name === 'dateRange') {\n          data.startDate = item.value[0];\n          data.endDate = item.value[1];\n        } else if (item.name === 'moneySection') {\n          data.startAmount = item.value[0];\n          data.endAmount = item.value[1];\n        } else {\n          data[item.name] = item.value;\n        }\n      });\n      return data;\n    },\n\n    /**\r\n     * @description: 设置分页大小\r\n     * @param {Number} val\r\n     */\n    sizeChange: function sizeChange(val) {\n      this.table.pageSize = val;\n      this.fetchData();\n    },\n\n    /**\r\n     * @description: 搜索回调\r\n     */\n    HandelSearch: function HandelSearch() {\n      this.fetchData();\n    },\n\n    /**\r\n     * @description: table编辑\r\n     * @param {Object} row\r\n     */\n    handleEdit: function handleEdit(row) {}\n  }\n};\nexports.default = _default;",null]}