{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Projects\\spark\\Spark.UI\\src\\components\\TableEx\\util.js","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\components\\TableEx\\util.js","mtime":1635749455613},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getValueByPath = getValueByPath;\nexports.formatText = formatText;\nexports.default = exports.formatFunc = void 0;\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nvar Utils = _interopRequireWildcard(require(\"@/utils/index\"));\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar formatFunc = {\n  date: function date(text) {\n    var pattern = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'YYYY-MM-DD';\n    return text ? (0, _moment.default)(text).format(pattern) : text;\n  },\n  money: function money(text) {\n    return Utils.formatMoney(text, 2, 0);\n  }\n};\nexports.formatFunc = formatFunc;\n\nfunction getValueByPath(obj, path) {\n  var bailRe = /[^\\w.$]/;\n  if (typeof path !== 'string' || bailRe.test(path)) return;\n  var segments = path.split('.');\n\n  for (var i = 0; i < segments.length; i++) {\n    if (!obj) return;\n    obj = obj[segments[i]];\n  }\n\n  return obj;\n}\n\nfunction formatText(format, row, column, scope) {\n  var res = ''; // console.log(format, row, column)\n\n  var val = getValueByPath(row, column.prop); // console.log(column, row)\n\n  if (typeof format === 'string') {\n    res = formatFunc[format] ? formatFunc[format](val) : val;\n  } else if (typeof format === 'function') {\n    res = format(val, formatFunc, row, column, scope);\n  } else {\n    // console.log(column, row)\n    res = val;\n  }\n\n  return res;\n}\n\nvar _default = formatFunc;\nexports.default = _default;",null]}