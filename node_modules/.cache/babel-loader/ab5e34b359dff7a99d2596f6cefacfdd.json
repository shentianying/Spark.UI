{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\jhgl\\designOrder\\designOrderEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\jhgl\\designOrder\\designOrderEdit.vue","mtime":1628756195058},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _designOrder = require(\"@/api/cggl/designOrder\");\n\nvar _index = _interopRequireDefault(require(\"@/components/OrgSelect/index2\"));\n\nvar _flowSelect = _interopRequireDefault(require(\"@/components/Flow/flowSelect\"));\n\nvar _pikazExcelJs = require(\"pikaz-excel-js\");\n\nvar _index2 = require(\"@/utils/index\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import { getPlanBillAttitudeById } from '@/api/cggl/plan'\n// import FlowDisplay from '@/components/Flow/flowDisplay'\n// import FlowAttitude from '@/components/Flow/flowAttitude'\n// import UpFile from '@/components/UpLoad/UpFile'\nvar _default = {\n  name: 'DesignOrderEdit',\n  components: {\n    OrgSelect2: _index.default,\n    FlowSelect: _flowSelect.default,\n    // UpFile,\n    ExcelExport: _pikazExcelJs.ExcelExport,\n    ExcelImport: _pikazExcelJs.ExcelImport\n  },\n  data: function data() {\n    return {\n      ruleForm: {\n        id: 0,\n        number: '',\n        orgId: 0,\n        state: 0,\n        billFlowId: 0,\n        planDesignOrderDetail: []\n      },\n      loading: false,\n      isLoad: true,\n      activate: false,\n      active: 0,\n      list: [],\n      orgStr: '',\n      billFlow: null,\n      columnShow: {\n        unit2: true,\n        brand: true,\n        model: true,\n        spec: true,\n        thickness: true,\n        texture: true,\n        surfaceTreatment: true,\n        designNumber: true\n      },\n      sheet: [{\n        // title: '材料计划导入模板',\n        tHeader: ['计划材料明细编号', '材料名称', '品牌/产地', '型号', '规格/尺寸', '厚度', '材质', '表面处理/工艺、色号', '设计编号', '主数量', '辅数量', '备注'],\n        keys: ['planDetailId', 'categoryName', 'brand', 'model', 'spec', 'thickness', 'texture', 'surfaceTreatment', 'designNumber', 'quantity', 'quantity2', 'remark'],\n        table: [],\n        // 默认数据\n        // colWidth: ['10', '15', '15', '10', '30'],\n        // cellStyle: ['string', 'string', 'string', 'string', 'string'], // 单元格样式\n        sheetName: '设计下单'\n      }],\n      rules: {\n        orgId: [{\n          required: true,\n          message: '请输入',\n          trigger: 'change'\n        }] // planType: [{ required: true, message: '请输入', trigger: 'blur' }]\n\n      }\n    };\n  },\n  watch: {\n    'ruleForm.orgId': {\n      handler: function handler(value, oldvalue) {\n        if (!oldvalue) {\n          this.$refs['ruleForm'].validateField('orgId', function (valid) {});\n        }\n      },\n      deep: true\n    }\n  },\n  activated: function activated() {\n    if (this.$route.params.id) {\n      // this.ruleForm.orgId = null // 刷新 org 列表\n      this.initData();\n      this.refreshRouterName = this.$route.params.refreshRouterName;\n    }\n  },\n  mounted: function mounted() {\n    if (!this.$route.params.id) {\n      this.active = 0;\n      this.activate = true;\n    }\n  },\n  methods: {\n    initData: function initData() {\n      var _this = this;\n\n      // 有参数id 就是编辑\n      if (this.$route.query.id) {\n        this.ruleForm.id = this.$route.query.id;\n        this.loading = true;\n        this.activate = false;\n        (0, _designOrder.getPlanDesignOrderById)({\n          id: this.ruleForm.id\n        }).then(function (response) {\n          return _this.setData(response);\n        });\n      }\n    },\n    setData: function setData(response) {\n      var data = response.data; // data == null ,新增。 data != null && state =0 ,就是编辑 else 就是流程审核\n      // 如果设计下单存在 并且 状态是审批状态的话，就关闭页面，阻止编辑\n\n      if (data) {\n        if (data.state > 0) {\n          this.$message.info('单据已在审批阶段，无法制单');\n          this.closeThePage();\n          return;\n        }\n      }\n\n      var pom = [];\n      data.planDesignOrderDetail.forEach(function (e) {\n        var material = e.material;\n        var materialCategory = material.materialCategory;\n        pom.push({\n          id: e.id,\n          planDetailId: e.planDetailId,\n          planDesignOrderId: e.planDesignOrderId,\n          materialId: e.materialId,\n          categoryId: material.categoryId,\n          categoryName: materialCategory.name,\n          categoryUnit: materialCategory.unit,\n          // 主单位\n          unit2: material.unit2,\n          brand: material.brand,\n          model: material.model,\n          spec: material.spec,\n          thickness: material.thickness,\n          texture: material.texture,\n          surfaceTreatment: material.surfaceTreatment,\n          designNumber: material.designNumber,\n          // applicationQuantity: e.applicationQuantity,\n          // applicationQuantity2: e.applicationQuantity2,\n          quantity: e.quantity,\n          quantity2: e.quantity2,\n          entryDate: e.entryDate,\n          remark: e.remark\n        });\n      }); // 填充 明细列表\n\n      this.list = pom;\n      this.setColumnShow(); // 获取 设计下单 数据\n\n      if (data) {\n        // 设计下单制单 保存 状态\n        if (data.state === 0) {\n          // this.ruleForm.id = data.id\n          this.ruleForm.billFlowId = data.billFlowId;\n          this.ruleForm.number = data.number;\n          this.ruleForm.orgId = data.orgId;\n        } else {\n          // state > 0 设计下单 审核流程 状态，跳转到 审核页面\n          this.loading = false;\n          this.$router.replace({\n            name: 'DesignOrderAttitude',\n            query: {\n              id: this.ruleForm.planId,\n              refreshRouterName: this.refreshRouterName\n            },\n            params: {\n              id: this.ruleForm.planId\n            }\n          });\n        }\n      }\n\n      this.loading = false; // loading 状态关闭\n\n      this.activate = true; // 加载部门组件\n    },\n    closeThePage: function closeThePage() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    },\n    setColumnShow: function setColumnShow() {\n      // 设置列的显示。列中，都没有值，就隐藏\n      var modelunit2 = false;\n      var modelbrand = false;\n      var modelmodel = false;\n      var modelspec = false;\n      var modelthickness = false;\n      var modeltexture = false;\n      var modelsurfaceTreatment = false;\n      var modeldesignNumber = false;\n\n      var _iterator = (0, _createForOfIteratorHelper2.default)(this.list),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var row = _step.value;\n\n          if (row.unit2) {\n            modelunit2 = true;\n          }\n\n          if (row.brand) {\n            modelbrand = true;\n          }\n\n          if (row.model) {\n            modelmodel = true;\n          }\n\n          if (row.spec) {\n            modelspec = true;\n          }\n\n          if (row.thickness) {\n            modelthickness = true;\n          }\n\n          if (row.texture) {\n            modeltexture = true;\n          }\n\n          if (row.surfaceTreatment) {\n            modelsurfaceTreatment = true;\n          }\n\n          if (row.designNumber) {\n            modeldesignNumber = true;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      this.columnShow['unit2'] = modelunit2;\n      this.columnShow['brand'] = modelbrand;\n      this.columnShow['model'] = modelmodel;\n      this.columnShow['spec'] = modelspec;\n      this.columnShow['thickness'] = modelthickness;\n      this.columnShow['texture'] = modeltexture;\n      this.columnShow['surfaceTreatment'] = modelsurfaceTreatment;\n      this.columnShow['designNumber'] = modeldesignNumber;\n    },\n    onError: function onError(err) {\n      this.$message.info('导出失败：' + err);\n    },\n    // 导入\n    onSuccess: function onSuccess(d, file) {\n      var _this2 = this;\n\n      if (!this.ruleForm.orgId) {\n        this.$message('请选择项目');\n        return;\n      }\n\n      var data = d[0].data;\n\n      if (data.length) {\n        var errorMessage = '';\n        var arr1 = [];\n\n        var _iterator2 = (0, _createForOfIteratorHelper2.default)(data),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var e = _step2.value;\n\n            if (errorMessage.length > 0) {\n              this.$alert(\"\".concat(errorMessage.replace(/；/g, '；<br />')), {\n                dangerouslyUseHTMLString: true\n              });\n              return;\n            }\n\n            var obj1 = {};\n            this.sheet[0].keys.forEach(function (v, i) {\n              var value = e[_this2.sheet[0].tHeader[i]];\n              value = (0, _index2.cleanText)(value); // console.log('v:', v, '- value:', value)\n\n              if (v === 'applicationQuantity') {\n                v = 'quantity';\n              }\n\n              if (v === 'applicationQuantity2') {\n                v = 'quantity2';\n              }\n\n              obj1[v] = value;\n            });\n            obj1['id'] = 0;\n            obj1['planDesignOrderId'] = 0;\n            arr1.push(obj1);\n          } // console.log('取得导入数据：', arr1)\n\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        this.list = arr1;\n        var newObj = JSON.parse(JSON.stringify(this.ruleForm));\n        newObj.planDesignOrderDetail = this.getPlanDesignOrderDetail(); // 判断导入的数据是否合法\n\n        (0, _designOrder.checkImportExcel)(newObj).then(function (res) {\n          if (res.result === 400) {\n            _this2.list = [];\n\n            _this2.$alert(\"\".concat(res.msg.replace(/；/g, '；<br />')), {\n              dangerouslyUseHTMLString: true\n            });\n\n            return false;\n          } else {\n            _this2.list = arr1;\n            _this2.ruleForm.planDesignOrderDetail = _this2.getPlanDesignOrderDetail();\n\n            _this2.setColumnShow();\n          }\n        });\n      } else {\n        this.$message.info('模板中数据不能为空');\n      }\n    },\n    submitForm: function submitForm(state) {\n      var _this3 = this;\n\n      var newObj = JSON.parse(JSON.stringify(this.ruleForm)); // 设计下单状态\n\n      newObj.state = state; // console.log('提交前：this.list:', this.list)\n\n      newObj.planDesignOrderDetail = this.getPlanDesignOrderDetail(); // 获取流程组件中的数据\n\n      if (state === 1) {\n        // 如果是提交，验证流程人员的完整信息\n        var checkBillFlow = this.$refs.flowSelect.checkBillFlow();\n\n        if (!checkBillFlow) {\n          this.$message('流程错误，流程中审批人员不能为空');\n          return false;\n        }\n      }\n\n      var billFlow = this.$refs.flowSelect.getBillFlow();\n      newObj.billFlow = billFlow; // console.log('设计下单提交的数据：', newObj)\n      // 保存单据\n      // this.loading = true\n\n      if (this.ruleForm.id) {\n        (0, _designOrder.putPlanDesignOrder)(newObj).then(function (response) {\n          if (response.errorMsg) {\n            // 验证错误\n            _this3.$alert(\"\".concat(response.errorMsg.replace(/；/g, '；<br />')), {\n              dangerouslyUseHTMLString: true\n            });\n\n            return;\n          }\n\n          _this3.$message(response.message);\n\n          _this3.loading = false;\n\n          _this3.closeThePage();\n        }).catch(function () {\n          _this3.loading = false;\n        });\n      } else {\n        (0, _designOrder.addPlanDesignOrder)(newObj).then(function (response) {\n          if (response.errorMsg) {\n            // 验证错误\n            _this3.$alert(\"\".concat(response.errorMsg.replace(/；/g, '；<br />')), {\n              dangerouslyUseHTMLString: true\n            });\n          } else {\n            _this3.$message(response.message);\n\n            _this3.loading = false;\n\n            _this3.closeThePage();\n          }\n        }).catch(function () {\n          _this3.loading = false;\n        });\n      }\n    },\n    previous: function previous() {\n      // 上一步\n      this.active = 0;\n      this.billFlow = null;\n    },\n    cancel: function cancel() {\n      var _this4 = this;\n\n      // 作废\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this4.loading = true;\n        (0, _designOrder.deleteDesignOrder)({\n          id: _this4.ruleForm.id\n        }).then(function (response) {\n          _this4.$message(response.message);\n\n          _this4.loading = false;\n\n          _this4.closeThePage();\n        });\n      }).catch(function () {});\n    },\n    getDynamicFlow: function getDynamicFlow() {\n      var _this5 = this;\n\n      this.$refs['ruleForm'].validate(function (valid) {\n        if (valid) {\n          if ((_this5.list || []).length === 0) {\n            _this5.$alert('请导入设计下单明细');\n\n            return;\n          }\n\n          var newObj = JSON.parse(JSON.stringify(_this5.ruleForm)); // delete newObj.planDesignOrderDetail\n          // newObj.planDesignOrderDetail = this.getPlanDesignOrderDetail()\n          // 拼接材料明细参数\n\n          _this5.loading = true; // 验证信息\n\n          (0, _designOrder.checkPlanDesignOrderDetail)(_this5.getPlanDesignOrderDetail()).then(function (response) {\n            if (response.result === 400) {\n              _this5.$alert(\"\".concat(response.msg.replace(/；/g, '；<br />')), {\n                dangerouslyUseHTMLString: true\n              });\n            } else {\n              // console.log('getBillFlow11:', newObj)\n              (0, _designOrder.getBillFlow)(newObj).then(function (response) {\n                _this5.loading = false;\n\n                if (response.success) {\n                  _this5.billFlow = response.data.billFlow;\n                  _this5.active = 1;\n                } else {\n                  _this5.$message(response.message);\n                }\n              }).catch(function () {\n                _this5.loading = false;\n              });\n            }\n\n            _this5.loading = false;\n          }).catch(function () {\n            _this5.loading = false;\n          });\n        }\n      });\n    },\n    getPlanDesignOrderDetail: function getPlanDesignOrderDetail() {\n      return this.list.map(function (m) {\n        return {\n          id: m.id,\n          planDetailId: m.planDetailId,\n          planDesignOrderId: m.planDesignOrderId,\n          quantity: m.quantity,\n          quantity2: m.quantity2,\n          materialId: m.materialId,\n          remark: m.remark,\n          material: {\n            categoryId: m.categoryId,\n            categoryName: m.categoryName,\n            unit2: '块',\n            brand: m.brand,\n            model: m.model,\n            spec: m.spec,\n            thickness: m.thickness,\n            texture: m.texture,\n            surfaceTreatment: m.surfaceTreatment,\n            designNumber: m.designNumber\n          }\n        };\n      });\n    }\n  }\n};\nexports.default = _default;",null]}