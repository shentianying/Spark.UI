{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Projects\\spark\\Spark.UI\\src\\utils\\localstore.js","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\utils\\localstore.js","mtime":1635216068726},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LSGet = LSGet;\nexports.LSGetObject = LSGetObject;\nexports.LSSet = LSSet;\nexports.LSSetObject = LSSetObject;\nexports.LSRemove = LSRemove;\nexports.LSClear = LSClear;\n\nfunction LSGet(key) {\n  return localStorage.getItem(key);\n} // 获取 数组或者对象\n\n\nfunction LSGetObject(key) {\n  var result = LSGet(key);\n  return result ? JSON.parse(result) : null;\n}\n\nfunction LSSet(key, value) {\n  return localStorage.setItem(key, value);\n} // 设置对象或者数组\n\n\nfunction LSSetObject(key, value) {\n  // if (typeof value === 'object') {\n  LSSet(key, JSON.stringify(value)); // }\n}\n\nfunction LSRemove(key) {\n  return localStorage.removeItem(key);\n}\n\nfunction LSClear() {\n  return localStorage.clear();\n}",null]}