{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\jhgl\\planAttitude.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\jhgl\\planAttitude.vue","mtime":1630736284827},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.array.find\");\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _plan = require(\"@/api/cggl/plan\");\n\nvar _index = _interopRequireDefault(require(\"@/components/OrgSelect/index2\"));\n\nvar _flowDisplay = _interopRequireDefault(require(\"@/components/Flow/flowDisplay\"));\n\nvar _flowAttitude = _interopRequireDefault(require(\"@/components/Flow/flowAttitude\"));\n\nvar _UpFile = _interopRequireDefault(require(\"@/components/UpLoad/UpFile\"));\n\nvar _taskAdd = _interopRequireDefault(require(\"@/views/cggl/task/taskAdd\"));\n\nvar _planDetailCancel = _interopRequireDefault(require(\"./cancel/planDetailCancel\"));\n\nvar _pikazExcelJs = require(\"pikaz-excel-js\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import MsgInfo from '@/components/Other/msgInfo.vue'\nvar _default = {\n  name: 'PlanAttitude',\n  components: {\n    OrgSelect2: _index.default,\n    FlowAttitude: _flowAttitude.default,\n    FlowDisplay: _flowDisplay.default,\n    UpFile: _UpFile.default,\n    TaskAdd: _taskAdd.default,\n    PlanDetailCancel: _planDetailCancel.default,\n    ExcelExport: _pikazExcelJs.ExcelExport // ExcelImport\n    // MsgInfo\n\n  },\n  data: function data() {\n    return {\n      ruleForm: {\n        id: 0,\n        number: '',\n        orgId: null,\n        planType: '',\n        planTypeName: '',\n        materialTypeName: '',\n        realNumber: '',\n        remark: '',\n        state: 0,\n        billFlowId: 0,\n        organization: null,\n        fileList: []\n      },\n      special_operation: false,\n      loading: false,\n      isLoad: false,\n      orgStr: '',\n      // personArr: [{ id: 4, name: '银角大王' }, { id: 10, name: '薛飞' }],\n      activate: false,\n      dialogTableVisible: false,\n      dialogTitle: '保存',\n      dialogWidth: '70%',\n      comName: 'PlanDetailAdd',\n      currentRow: null,\n      listIndex: 0,\n      fullscreen: false,\n      list: [],\n      fileList: [],\n      // 上传文件列表\n      billFlow: null,\n      attitudePara: {},\n      multipleSelection: [],\n      stateList: [],\n      taskList: [],\n      cancelList: [],\n      formState: null,\n      columnShow: {\n        unit2: true,\n        brand: true,\n        model: true,\n        spec: true,\n        thickness: true,\n        texture: true,\n        surfaceTreatment: true,\n        designNumber: true\n      },\n      sheet: [{\n        // title: '材料计划导入模板',\n        keys: [],\n        tHeader: [],\n        // keys: ['planDetailId', 'isUnit', 'unit', 'quantity', 'remark'],\n        // tHeader: ['材料Id', '是否用主单位', '单位名称', '数量', '备注'],\n        table: [],\n        // 默认数据\n        // colWidth: ['10', '15', '15', '10', '30'],\n        // cellStyle: ['string', 'string', 'string', 'string', 'string'], // 单元格样式\n        sheetName: '计划材料明细'\n      }],\n      rules: {// orgId: [{ required: true, message: '请输入', trigger: 'change' }],\n        // planType: [{ required: true, message: '请输入', trigger: 'blur' }]\n      }\n    };\n  },\n  activated: function activated() {\n    if (this.$route.params.id) {\n      this.ruleForm.orgId = null; // 刷新 org 列表\n\n      this.initData();\n      this.refreshRouterName = this.$route.params.refreshRouterName;\n    }\n  },\n  mounted: function mounted() {\n    if (!this.$route.params.id) {\n      this.activate = true;\n    } // getDictionaryList({ type: 'cgglPlanType' }).then(response => {\n    //   const { data } = response\n    //   this.planTypeList = data\n    // })\n\n  },\n  methods: {\n    initData: function () {\n      var _initData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // 有参数id 就是编辑\n                if (this.$route.query.id) {\n                  this.id = this.$route.query.id;\n                }\n\n                if (!this.id) {\n                  _context.next = 6;\n                  break;\n                }\n\n                this.loading = true;\n                this.activate = false; // 销毁\n\n                _context.next = 6;\n                return (0, _plan.getPlanBillAttitudeById)({\n                  id: this.id\n                }).then(function (response) {\n                  return _this.setData(response);\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function initData() {\n        return _initData.apply(this, arguments);\n      }\n\n      return initData;\n    }(),\n    setData: function setData(response) {\n      var _this2 = this;\n\n      // 验证\n      if (!response.success) {\n        this.$alert(response.message, {\n          callback: function callback(action) {\n            _this2.closeThePage();\n          }\n        });\n      }\n\n      var planData = response.planData,\n          billFlowData = response.billFlowData,\n          planType = response.planType,\n          orgStr = response.orgStr,\n          materialType = response.materialType,\n          detailStates = response.detailStates; // 检查当前 状态 是否有特殊操作\n\n      var filterOption = billFlowData.billFlowNode.filter(function (f) {\n        return f.isCurrentState;\n      });\n\n      if ((filterOption || []).length) {\n        if (filterOption[0].option > 0) {\n          // alert('当前节点有特殊操作')\n          if (filterOption[0].option === 1) {\n            // 分配任务单\n            this.special_operation = true;\n          }\n        } else {\n          this.special_operation = false;\n        }\n      }\n\n      this.orgStr = orgStr;\n      this.stateList = detailStates;\n      this.taskList = planData.cgTasks; // 任务单列表\n\n      this.cancelList = planData.planDetailCancels; // 退回单列表\n\n      var pom = [];\n      planData.planDetail.forEach(function (e) {\n        pom.push({\n          id: e.id,\n          categoryId: e.material.categoryId,\n          category: {\n            id: e.material.categoryId,\n            name: e.material.materialCategory.name,\n            unit: e.material.materialCategory.unit,\n            isMain: e.material.materialCategory.isMain\n          },\n          unit: e.material.unit,\n          // unit已经不存在了\n          unit2: e.material.unit2,\n          brand: e.material.brand,\n          model: e.material.model,\n          spec: e.material.spec,\n          thickness: e.material.thickness,\n          texture: e.material.texture,\n          surfaceTreatment: e.material.surfaceTreatment,\n          designNumber: e.material.designNumber,\n          applicationQuantity: e.applicationQuantity,\n          applicationQuantity2: e.applicationQuantity2,\n          quantity: e.quantity,\n          quantity2: e.quantity2,\n          entryDate: e.entryDate,\n          remark: e.remark,\n          state: e.state,\n          fileList: planData.upFile.filter(function (f) {\n            return f.tableId === e.id;\n          })\n        });\n      }); // 填充参数\n\n      this.ruleForm = {\n        id: planData.id,\n        number: planData.number,\n        orgId: planData.orgId,\n        planTypeName: planType.name,\n        materialTypeName: materialType.name,\n        realNumber: planData.realNumber,\n        remark: planData.remark,\n        state: planData.state,\n        billFlowId: planData.billFlowId,\n        createUserName: planData.createUserName,\n        submitUserName: planData.submitUserName,\n        lastEditUserName: planData.lastEditUserName,\n        createDate: planData.createDate,\n        submitDate: planData.submitDate,\n        lastEditDate: planData.lastEditDate,\n        fileList: planData.upFile.filter(function (f) {\n          return f.tableId === planData.id;\n        }) // organization: planData.organization\n\n      }; // 填充 明细列表\n\n      this.list = pom;\n      this.billFlow = billFlowData; // **start**信息意见组件需要的数据\n      // this.personArr = billFlowData.billFlowNode.map(m => { return { id: m.person.id, name: m.person.name } })\n      // **end**信息意见组件需要的数据\n\n      this.attitudePara = {\n        formId: billFlowData.formId,\n        billFlowId: planData.billFlowId,\n        planId: planData.id\n      };\n\n      if (this.special_operation) {\n        this.isLoad = false; // 分配任务单不加载审批组件\n      } else {\n        this.isLoad = true; // 加载审批组件\n      }\n\n      this.setColumnShow();\n      this.loading = false; // loading 状态关闭\n\n      this.activate = true; // 加载部门组件\n    },\n    updateFlow: function updateFlow() {\n      // 修改计划单据state状态\n      // this.loading = true\n      // this.billFlow = null\n      // putPlanState({ id: data.billId, state: data.state }).then(response => {\n      //   this.loading = false\n      //   // 重新加载 流程\n      //   this.closeThePage()\n      // })\n      this.closeThePage();\n    },\n    closeThePage: function closeThePage() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    },\n    dialogClose: function dialogClose() {\n      var _this3 = this;\n\n      this.loading = true;\n      this.activate = false; // 销毁\n\n      (0, _plan.getPlanBillAttitudeById)({\n        id: this.id\n      }).then(function (response) {\n        return _this3.setData(response);\n      });\n      this.dialogTableVisible = false;\n    },\n    showFileList: function showFileList(fileList) {\n      // console.log('fileList:', fileList)\n      this.dialogTitle = '附件列表';\n      this.comName = 'UpFile';\n      this.dialogWidth = '50%';\n      this.fileList = fileList;\n      this.dialogTableVisible = true;\n    },\n    setColumnShow: function setColumnShow() {\n      // 设置列的显示。列中，都没有值，就隐藏\n      var modelunit2 = false;\n      var modelbrand = false;\n      var modelmodel = false;\n      var modelspec = false;\n      var modelthickness = false;\n      var modeltexture = false;\n      var modelsurfaceTreatment = false;\n      var modeldesignNumber = false;\n\n      var _iterator = (0, _createForOfIteratorHelper2.default)(this.list),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var row = _step.value;\n\n          if (row.unit2) {\n            modelunit2 = true;\n          }\n\n          if (row.brand) {\n            modelbrand = true;\n          }\n\n          if (row.model) {\n            modelmodel = true;\n          }\n\n          if (row.spec) {\n            modelspec = true;\n          }\n\n          if (row.thickness) {\n            modelthickness = true;\n          }\n\n          if (row.texture) {\n            modeltexture = true;\n          }\n\n          if (row.surfaceTreatment) {\n            modelsurfaceTreatment = true;\n          }\n\n          if (row.designNumber) {\n            modeldesignNumber = true;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      this.columnShow['unit2'] = modelunit2;\n      this.columnShow['brand'] = modelbrand;\n      this.columnShow['model'] = modelmodel;\n      this.columnShow['spec'] = modelspec;\n      this.columnShow['thickness'] = modelthickness;\n      this.columnShow['texture'] = modeltexture;\n      this.columnShow['surfaceTreatment'] = modelsurfaceTreatment;\n      this.columnShow['designNumber'] = modeldesignNumber;\n    },\n    // 多选框选中数据\n    handleSelectionChange: function handleSelectionChange(selection) {\n      this.multipleSelection = selection;\n    },\n    addTask: function addTask() {\n      if (this.multipleSelection.length > 0) {\n        this.dialogTitle = '分配任务单';\n        this.comName = 'TaskAdd';\n        this.dialogWidth = '100%';\n        this.fileList = [];\n        var data = {\n          planId: this.id,\n          planNumber: this.ruleForm.number,\n          orgId: this.ruleForm.orgId,\n          data: this.multipleSelection\n        };\n        this.currentRow = data;\n        this.fullscreen = true;\n        this.dialogTableVisible = true;\n      } else {\n        this.$message.error('必须选择材料！');\n      } // if (this.multipleSelection.length > 0) {\n      //   this.$router.push({ name: 'TaskAdd', query: { refreshRouterName: this.$route.name, planId: this.id, planNumber: this.ruleForm.number }, params: { data: this.multipleSelection,\n      //     orgId: this.ruleForm.orgId,\n      //     orgStr: this.orgStr,\n      //     planNumber: this.ruleForm.number,\n      //     planTypeName: this.ruleForm.planTypeName,\n      //     materialTypeName: this.ruleForm.materialTypeName }})\n      // } else {\n      //   this.$alert('必须选择材料！')\n      // }\n\n    },\n    returnMaterial: function returnMaterial() {\n      if (this.multipleSelection.length > 0) {\n        this.dialogTitle = '材料退回';\n        this.comName = 'PlanDetailCancel';\n        this.dialogWidth = '100%';\n        this.fileList = [];\n        var data = {\n          planId: this.id,\n          planNumber: this.ruleForm.number,\n          orgId: this.ruleForm.orgId,\n          orgStr: this.orgStr,\n          planDetail: this.multipleSelection\n        };\n        this.currentRow = data;\n        this.fullscreen = true;\n        this.dialogTableVisible = true;\n      } else {\n        this.$message.error('必须选择材料！');\n      }\n    },\n    taskDetail: function taskDetail(row) {\n      this.$router.push({\n        name: 'TaskDetail',\n        query: {\n          id: row.id,\n          refreshRouterName: this.$route.name,\n          tab: 'detail'\n        },\n        params: {\n          id: row.id\n        }\n      });\n    },\n    selectInit: function selectInit(row, index) {\n      if (row.state === 0) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    getFormState: function getFormState(row) {\n      if (!row.billFlow) {\n        return '流程空';\n      }\n\n      var formState = row.billFlow.form.formState;\n      this.formState = formState;\n      var state = row.state;\n      if (state === -1) return '作废';\n      var obj = formState.find(function (f) {\n        return f.value === state;\n      });\n\n      if (obj) {\n        return obj.name;\n      } else {\n        return '状态不详';\n      }\n    },\n    getPerson: function getPerson(bf) {\n      if (bf) {\n        var arr = bf.billFlowNode.filter(function (f) {\n          return f.isCurrentState && !f.isChecked;\n        });\n        return arr.map(function (m) {\n          return m.person.name;\n        }).join('、');\n      }\n    },\n    attitude: function attitude(row) {\n      this.$router.push({\n        name: 'PlanDetailCancelAttitude',\n        query: {\n          id: row.id,\n          refreshRouterName: this.$route.name\n        },\n        params: {\n          id: row.id\n        }\n      });\n    },\n    onError: function onError(err) {\n      this.$message.info('导出失败：' + err);\n    },\n    beforeStart: function beforeStart(bookType, filename, sheet) {\n      // 清空 sheet\n      this.sheet[0].keys = [];\n      this.sheet[0].tHeader = [];\n      this.sheet[0].table = [];\n      var k = this.sheet[0].keys;\n      var t = this.sheet[0].tHeader;\n      var sheetTableData = [];\n      this.list.forEach(function (e, i) {\n        var obj = {};\n        obj['planDetailId'] = e.id;\n\n        if (i === 0) {\n          k.push('planDetailId');\n          t.push('计划材料明细编号');\n        }\n\n        obj['categoryName'] = e.category.name;\n\n        if (i === 0) {\n          k.push('categoryName');\n          t.push('材料名称');\n        } // if (this.columnShow.brand) {\n\n\n        obj['brand'] = e.brand;\n\n        if (i === 0) {\n          k.push('brand');\n          t.push('品牌/产地');\n        } // }\n        // if (this.columnShow.model) {\n\n\n        obj['model'] = e.model;\n\n        if (i === 0) {\n          k.push('model');\n          t.push('型号');\n        } // }\n        // if (this.columnShow.spec) {\n\n\n        obj['spec'] = e.spec;\n\n        if (i === 0) {\n          k.push('spec');\n          t.push('规格/尺寸');\n        } // }\n        // if (this.columnShow.thickness) {\n\n\n        obj['thickness'] = e.thickness;\n\n        if (i === 0) {\n          k.push('thickness');\n          t.push('厚度');\n        } // }\n        // if (this.columnShow.texture) {\n\n\n        obj['texture'] = e.texture;\n\n        if (i === 0) {\n          k.push('texture');\n          t.push('材质');\n        } // }\n        // if (this.columnShow.surfaceTreatment) {\n\n\n        obj['surfaceTreatment'] = e.surfaceTreatment;\n\n        if (i === 0) {\n          k.push('surfaceTreatment');\n          t.push('表面处理/工艺、色号');\n        } // }\n        // if (this.columnShow.designNumber) {\n\n\n        obj['designNumber'] = e.designNumber;\n\n        if (i === 0) {\n          k.push('designNumber');\n          t.push('设计编号');\n        } // }\n\n\n        obj['unit'] = e.category.unit;\n\n        if (i === 0) {\n          k.push('unit');\n          t.push('主单位');\n        }\n\n        obj['applicationQuantity'] = e.applicationQuantity;\n\n        if (i === 0) {\n          k.push('applicationQuantity');\n          t.push('主数量');\n        }\n\n        obj['unit2'] = e.unit2;\n\n        if (i === 0) {\n          k.push('unit2');\n          t.push('辅单位');\n        }\n\n        obj['applicationQuantity2'] = e.applicationQuantity2;\n\n        if (i === 0) {\n          k.push('applicationQuantity2');\n          t.push('辅数量');\n        }\n\n        obj['entryDate'] = e.entryDate;\n\n        if (i === 0) {\n          k.push('entryDate');\n          t.push('进场日期');\n        }\n\n        obj['remark'] = e.remark;\n\n        if (i === 0) {\n          k.push('remark');\n          t.push('备注');\n        } // if (i === 0) {\n        //   obj['isUnit'] = ''\n        //   k.push('isUnit')\n        //   t.push('是否主单位')\n        //   obj['desUnit'] = ''\n        //   k.push('desUnit')\n        //   t.push('设计单位')\n        //   obj['desQuantity'] = ''\n        //   k.push('desQuantity')\n        //   t.push('设计数量')\n        // }\n\n\n        sheetTableData.push(obj);\n      });\n      console.log('sheet列表: ', sheetTableData);\n      this.sheet[0].table = sheetTableData;\n    }\n  }\n};\nexports.default = _default;",null]}