{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Projects\\spark\\Spark.UI\\src\\permission.js","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\permission.js","mtime":1624956947726},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nrequire(\"core-js/modules/es6.set\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.array.from\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/toConsumableArray\"));\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nrequire(\"core-js/modules/es6.array.find\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/objectSpread2\"));\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _router = _interopRequireDefault(require(\"./router\"));\n\nvar _store = _interopRequireDefault(require(\"./store\"));\n\nvar _elementUi = require(\"element-ui\");\n\nvar _nprogress = _interopRequireDefault(require(\"nprogress\"));\n\nrequire(\"nprogress/nprogress.css\");\n\nvar _auth = require(\"@/utils/auth\");\n\nvar _getPageTitle = _interopRequireDefault(require(\"@/utils/get-page-title\"));\n\nvar _layout = _interopRequireDefault(require(\"@/layout\"));\n\nvar _index = require(\"@/utils/index\");\n\n// progress bar\n// progress bar style\n// get token from cookie\n_nprogress.default.configure({\n  showSpinner: true\n}); // NProgress Configuration\n\n\nvar whiteList = ['/login', '/transfer']; // no redirect whitelist\n\n_router.default.beforeEach( /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee(to, from, next) {\n    var hasToken, hasGetUserInfo, getIsMenu, fm, newObj, noErrorList, menus;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // start progress bar\n            _nprogress.default.start(); // set page title\n\n\n            document.title = (0, _getPageTitle.default)(to.meta.title); // determine whether the user has logged in\n\n            hasToken = (0, _auth.getToken)(); // await getToken()\n\n            if (!hasToken) {\n              _context.next = 38;\n              break;\n            }\n\n            if (!(to.path === '/login')) {\n              _context.next = 9;\n              break;\n            }\n\n            // if is logged in, redirect to the home page\n            next({\n              path: '/'\n            });\n\n            _nprogress.default.done(); // else if (to.matched.length === 0) { // 如果未匹配到路由\n            //   next({ path: '/404' })\n            //   NProgress.done()\n            // }\n\n\n            _context.next = 36;\n            break;\n\n          case 9:\n            hasGetUserInfo = _store.default.getters.name;\n\n            if (!hasGetUserInfo) {\n              _context.next = 14;\n              break;\n            }\n\n            next();\n            _context.next = 36;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.next = 17;\n            return _store.default.dispatch('user/getInfo');\n\n          case 17:\n            if (_store.default.getters.menus.length < 1) {\n              global.antRouter = [];\n              next();\n            }\n\n            getIsMenu = _store.default.getters.menus; // 后台所有菜单\n            // ************1.用角色权限控制菜单--显示自己的菜单************\n\n            fm = formatMenu(getMyRolePage(getIsMenu)); // ************2.不用角色权限控制菜单--全部显示菜单************\n            // const fm = formatMenu(getIsMenu)\n\n            newObj = JSON.parse(JSON.stringify(fm.filter(function (f) {\n              return f.isPage;\n            }))); // 生成没有错误路由的的 树形菜单列表\n\n            noErrorList = checkRouterError(fm);\n            menus = (0, _index.getTree)(0, noErrorList);\n            newObj = newObj.filter(function (f) {\n              return !errorIdList.includes(f.id);\n            }); // 路由中去掉错误的菜单项\n\n            _router.default.addRoutes(level2Router(newObj)); // 2.动态添加路由\n\n\n            global.antRouter = menus; // 3.将路由数据传递给全局变量，做侧边栏菜单渲染工作\n\n            next((0, _objectSpread2.default)((0, _objectSpread2.default)({}, to), {}, {\n              replace: true\n            }));\n            _context.next = 36;\n            break;\n\n          case 29:\n            _context.prev = 29;\n            _context.t0 = _context[\"catch\"](14);\n            _context.next = 33;\n            return _store.default.dispatch('user/resetToken');\n\n          case 33:\n            // console.log('permission.js.error')\n            _elementUi.Message.error({\n              message: _context.t0 || 'Has Error'\n            });\n\n            next(\"/login?redirect=\".concat(to.path));\n\n            _nprogress.default.done();\n\n          case 36:\n            _context.next = 39;\n            break;\n\n          case 38:\n            /* has no token*/\n            if (whiteList.indexOf(to.path) !== -1) {\n              // in the free login whitelist, go directly\n              next();\n            } else {\n              // other pages that do not have permission to access are redirected to the login page.\n              // next(`/login?redirect=${to.path}`)\n              next('/login');\n\n              _nprogress.default.done();\n            }\n\n          case 39:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[14, 29]]);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}());\n\n_router.default.afterEach(function () {\n  // finish progress bar\n  _nprogress.default.done();\n}); // 递归从子节点向上查找父节点\n\n\nfunction findPNode(arr1, id) {\n  var temp = [];\n\n  var forFn = function forFn(arr, id) {\n    var pNode = arr.find(function (f) {\n      return f.id === id;\n    });\n\n    if (pNode) {\n      temp.push(pNode);\n\n      if (pNode.pid !== 0) {\n        forFn(arr, pNode.pid);\n      }\n    }\n  };\n\n  forFn(arr1, id);\n  return temp;\n} // 遍历转换成二级菜单json数据\n\n\nfunction level2Router(arr) {\n  var chilrenList = [];\n\n  var _iterator = (0, _createForOfIteratorHelper2.default)(arr),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var element = _step.value;\n      delete element.id;\n      delete element.pid;\n      delete element.isPage;\n\n      if (element.component) {\n        element.component = require('@/views' + element.component + '.vue').default;\n        chilrenList.push(element);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  var root = {};\n  root.name = 'systemset';\n  root.path = '/systemset';\n  root.component = _layout.default;\n  root.redirect = 'noRedirect'; // root.meta = { title: '后台管理' }\n\n  root.children = chilrenList;\n  return [root, {\n    path: '*',\n    redirect: '/404',\n    hidden: true\n  }];\n}\n\nvar errorIdList = []; // 错误路由的Id数组\n// 检测路由是否错误，过滤掉错误的项\n\nfunction checkRouterError(list) {\n  list.forEach(function (route) {\n    if (route.component) {\n      if (route.component === 'Layout') {\n        route.component = _layout.default;\n      } else {\n        try {\n          route.component = require('@/views' + route.component + '.vue').default; // 导入组件\n        } catch (error) {\n          route.component = 'del';\n          errorIdList.push(route.id);\n          console.error(\"\\u52A0\\u8F7D\\u8DEF\\u7531\\u51FA\\u9519:\".concat(error));\n        }\n      }\n    }\n  });\n  return list.filter(function (f) {\n    return f.component !== 'del';\n  });\n}\n\nfunction formatMenu(menu) {\n  var result = [];\n  menu.forEach(function (ele) {\n    result.push({\n      id: ele.id,\n      pid: ele.pid,\n      path: ele.routerPath,\n      component: ele.routerComponent,\n      redirect: ele.routerRedirect,\n      name: ele.routerName,\n      meta: {\n        title: ele.routerTitle,\n        icon: ele.routerIcon\n      },\n      hidden: ele.routerHidden,\n      isPage: ele.isPage\n    });\n  });\n  return result;\n}\n\nfunction getMyRolePage(getIsMenu) {\n  var rolePermit = _store.default.getters.info.rolePermitList; // 获取当前角色的菜单列表\n\n  var res = [];\n  rolePermit.forEach(function (ele) {\n    res.push.apply(res, (0, _toConsumableArray2.default)(findPNode(getIsMenu, ele.permit.pageId))); // 循环每个子节点，获取对应所有父节点，合并\n  });\n  var myRolePageList = Array.from(new Set(res)); // 去重\n\n  myRolePageList.sort(function (a, b) {\n    // js 排序\n    return a.sort - b.sort;\n  });\n  return myRolePageList;\n}",null]}