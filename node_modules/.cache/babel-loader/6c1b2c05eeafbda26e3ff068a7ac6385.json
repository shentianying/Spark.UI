{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\zjgl\\Expend\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\zjgl\\Expend\\edit.vue","mtime":1634781212981},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/objectSpread2\"));\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _Expend = require(\"@/api/cwgl/zjgl/Expend.js\");\n\nvar _AcceptanceCheckList = _interopRequireDefault(require(\"@/components/Other/AcceptanceCheckList\"));\n\nvar _MyForm = _interopRequireDefault(require(\"@/components/MyForm\"));\n\nvar _validate = require(\"@/utils/validate\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// 未支出承兑单弹窗\nvar _default = {\n  // 组件名称\n  name: 'ZiJinZhiChuEdit',\n  // 局部注册的组件\n  components: {\n    MyForm: _MyForm.default,\n    AcceptanceCheckList: _AcceptanceCheckList.default\n  },\n  // 组件状态值\n  data: function data() {\n    return {\n      type: 'add',\n      // 编辑:edit  新增:add\n      size: 'mini',\n      // 整体大小\n      dialogVisible: false,\n      // 控制对话框显示\n      isCanUpdate: true,\n      // 是否可编辑,备注银行除外\n      zcForm: {\n        id: 'new',\n        expendDate: '',\n        // 支出日期\n        number: '',\n        // 收款编号\n        orgId: '',\n        // 部门\n        expendType: '',\n        // 支出类型\n        capitalType: '',\n        // 资金类型\n        date1: '',\n        // 支出日期\n        personId: '',\n        // 经手人ID\n        personName: '',\n        // 经手人\n        amount: '',\n        // 金额\n        summary: '',\n        // 摘要\n        remark: '',\n        // 备注\n        state: -1\n      },\n      zclxData: [],\n      // 支出类型\n      zjlxData: [],\n      // 资金类型\n      cdmxData: [],\n      // 承兑明细列表\n      // 验证规则\n      rules: {\n        orgId: [{\n          required: true,\n          message: '请选择部门',\n          trigger: 'change'\n        }],\n        expendType: [{\n          required: true,\n          message: '请选择支出类型',\n          trigger: 'change'\n        }],\n        capitalType: [{\n          required: true,\n          message: '请选择资金类型',\n          trigger: 'change'\n        }],\n        expendDate: [{\n          required: true,\n          message: '请选择日期',\n          trigger: 'change'\n        }],\n        personId: [{\n          required: true,\n          message: '请选择经手人',\n          trigger: 'change'\n        }],\n        amount: [{\n          required: true,\n          message: '请输入金额',\n          trigger: 'change'\n        }, {\n          validator: _validate.validate.money,\n          message: '金额格式不正确'\n        }, {\n          validator: _validate.validate.max_amount,\n          message: '超过所能存储的最大金额'\n        }],\n        summary: [{\n          required: true,\n          message: '请输入摘要',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: {\n    /**\r\n     * 是否是承兑\r\n     */\n    isChengDui: function isChengDui() {\n      var capitalType = this.zcForm.capitalType;\n      return capitalType === 2 || capitalType === 3;\n    },\n\n    /**\r\n     * 处理form表单的数据\r\n     */\n    formNodeData: function formNodeData() {\n      var _this = this;\n\n      var h = this.$createElement;\n      var isCanUpdate = this.isCanUpdate,\n          zclxData = this.zclxData,\n          isChengDui = this.isChengDui,\n          zcForm = this.zcForm;\n      return [{\n        label: '支出编号:',\n        keyword: 'number',\n        props: {\n          disabled: true,\n          placeholder: '系统自动生成'\n        }\n      }, {\n        label: '部门:',\n        keyword: 'orgId',\n        component: 'OrgSelect',\n        props: {\n          dataMode: 1,\n          collapseTags: true,\n          showAllLevels: false,\n          filterable: true,\n          expandTrigger: 'hover',\n          placeholder: '请选择部门',\n          checkStrictly: true,\n          disabled: !isCanUpdate\n        }\n      }, {\n        label: '支出类型:',\n        keyword: 'expendType',\n        component: 'Select',\n        props: {\n          disabled: !isCanUpdate,\n          placeholder: '请选择',\n          options: zclxData.map(function (v) {\n            return {\n              label: v.name,\n              value: v.value\n            };\n          })\n        }\n      }, {\n        label: '资金类型:',\n        keyword: 'capitalType',\n        component: 'CapitalSelect',\n        props: {\n          disabled: !isCanUpdate,\n          multiple: false,\n          showAllLevels: false\n        }\n      }, {\n        label: '支出日期:',\n        keyword: 'expendDate',\n        component: 'el-date-picker',\n        props: {\n          disabled: !isCanUpdate,\n          type: 'date',\n          placeholder: '选择日期',\n          valueFormat: 'yyyy-MM-dd'\n        }\n      }, {\n        label: '经手人:',\n        keyword: 'personId',\n        component: 'PersonSelect',\n        props: {\n          disabled: !isCanUpdate,\n          multiple: false\n        }\n      }, {\n        label: '金额:',\n        keyword: 'amount',\n        render: function render(h) {\n          return h(\"el-input\", {\n            \"attrs\": {\n              \"disabled\": isChengDui || !isCanUpdate\n            },\n            \"model\": {\n              value: zcForm.amount,\n              callback: function callback($$v) {\n                _this.$set(zcForm, \"amount\", $$v);\n              }\n            }\n          }, [isChengDui ? h(\"el-button\", {\n            \"slot\": 'append',\n            \"style\": 'background-color:white;',\n            \"attrs\": {\n              \"disabled\": !isCanUpdate\n            },\n            \"on\": (0, _objectSpread2.default)({}, {\n              'click': _this.showCd\n            })\n          }, [\"\\u9009\\u62E9\\u627F\\u5151\"]) : '']);\n        }\n      }, {\n        label: '摘要:',\n        keyword: 'summary'\n      }, {\n        label: '备注:',\n        keyword: 'remark',\n        monopolize: true,\n        props: {\n          type: 'textarea'\n        }\n      }];\n    }\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    next(function (vm) {\n      var newId = vm.$route.query.id;\n      var oldId = vm.zcForm.id;\n\n      if (newId && newId !== oldId) {\n        // 说明是打开另一个单子的编辑页面\n        vm.zcForm.id = newId;\n        vm.getZcForm();\n      } else if (!newId && oldId) {\n        var _vm$$refs$ruleForm;\n\n        // 说明是打开一个新建页面\n        Object.assign(vm.zcForm, {\n          state: 0,\n          id: ''\n        });\n        vm.isCanUpdate = true;\n        (_vm$$refs$ruleForm = vm.$refs['ruleForm']) === null || _vm$$refs$ruleForm === void 0 ? void 0 : _vm$$refs$ruleForm.resetFields();\n        vm.getOptions();\n      }\n    });\n  },\n  // 组件方法\n  methods: {\n    /**\r\n     * @description: 获取支出数据\r\n     */\n    getZcForm: function getZcForm() {\n      var _this2 = this;\n\n      (0, _Expend.GetExpendById)(this.zcForm.id).then(function (res) {\n        var code = res.code,\n            data = res.data,\n            expendTypeOptions = res.expendTypeOptions,\n            capitalTypeOptions = res.capitalTypeOptions;\n\n        if (code === 200) {\n          data.expendDate = _this2.$moment(data.expendDate).format('YYYY-MM-DD');\n          _this2.isCanUpdate = data.isCanUpdate;\n\n          for (var key in _this2.zcForm) {\n            if (Object.hasOwnProperty.call(data, key)) {\n              _this2.zcForm[key] = data[key];\n            }\n          }\n\n          if (Array.isArray(data.acceptanceList)) {\n            _this2.cdmxData = _this2.utils.easyDeepClone(data.acceptanceList);\n          }\n\n          _this2.zclxData = expendTypeOptions;\n          _this2.zjlxData = capitalTypeOptions;\n        }\n      });\n    },\n\n    /**\r\n     * @description: 获取支出 资金 类型下拉\r\n     */\n    getOptions: function () {\n      var _getOptions = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _yield$GetExpendPagin, expendTypOptions, capitalTypeOptions;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _Expend.GetExpendPaging)({\n                  currentPage: 1,\n                  pageSize: 1\n                });\n\n              case 2:\n                _yield$GetExpendPagin = _context.sent;\n                expendTypOptions = _yield$GetExpendPagin.expendTypOptions;\n                capitalTypeOptions = _yield$GetExpendPagin.capitalTypeOptions;\n                this.zclxData = expendTypOptions;\n                this.zjlxData = capitalTypeOptions;\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getOptions() {\n        return _getOptions.apply(this, arguments);\n      }\n\n      return getOptions;\n    }(),\n\n    /**\r\n     * @description: 提交更新\r\n     */\n    submitForm: function submitForm(formName) {\n      var _this3 = this;\n\n      this.$refs[formName].validate( /*#__PURE__*/function () {\n        var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(valid) {\n          var data, res;\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  if (!valid) {\n                    _context2.next = 11;\n                    break;\n                  }\n\n                  data = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, _this3.zcForm), {}, {\n                    acceptanceIDs: _this3.cdmxData.map(function (v) {\n                      return v.id;\n                    })\n                  });\n\n                  if (!data.id) {\n                    delete data.id;\n                  }\n\n                  delete data.acceptanceList;\n                  _context2.next = 6;\n                  return (0, _Expend.SaveExpend)(data);\n\n                case 6:\n                  res = _context2.sent;\n\n                  _this3.utils.closeAndRefresh(_this3.$route.query.refreshRouterName);\n\n                  _this3.$message.success(res.message);\n\n                  _context2.next = 13;\n                  break;\n\n                case 11:\n                  console.log('error submit!!');\n                  return _context2.abrupt(\"return\", false);\n\n                case 13:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n\n    /**\r\n     * @description: 作废\r\n     */\n    invalidGathering: function () {\n      var _invalidGathering = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var _this4 = this;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                (0, _Expend.InvalidExpend)(this.zcForm.id).then(function (res) {\n                  _this4.$message.success(res.message);\n\n                  _this4.utils.closeAndRefresh(_this4.$route.query.refreshRouterName);\n                }).catch(function (err) {\n                  console.log(err); // this.$message.error(err.errorMsg || '操作失败')\n                });\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function invalidGathering() {\n        return _invalidGathering.apply(this, arguments);\n      }\n\n      return invalidGathering;\n    }(),\n    cancelForm: function cancelForm(formName) {\n      // this.$router({name:\"\"})\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    },\n\n    /**\r\n     * 弹出承兑选择框\r\n     */\n    showCd: function showCd() {\n      this.dialogVisible = true;\n    },\n\n    /**\r\n     * 承兑票选择完成回调\r\n     */\n    cdCheck: function cdCheck(newData) {\n      var sum = this.utils.sum;\n      this.cdmxData = newData; // this.zcForm.acceptanceIDs = Array.from(new Set(newData.map(item => item.id)))\n\n      this.zcForm.amount = sum(newData.map(function (v) {\n        return v.amount;\n      })).toFixed(2);\n    },\n\n    /**\r\n     * 选择资金形式后的回调,\r\n     * 选择承兑时需要清空承兑明细列表和资金总额\r\n     */\n    capitalTypeChange: function capitalTypeChange(value) {\n      this.cdmxData = [];\n\n      if (value === 2 || value === 3) {\n        this.zcForm.amount = 0;\n      }\n    }\n  }\n};\nexports.default = _default;",null]}