{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\components\\Other\\msgInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\components\\Other\\msgInfo.vue","mtime":1626082556186},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.map\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nvar _message = require(\"@/api/xtgl/message\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import SelectPerson from '@/components/Other/selectPerson'\nvar _default = {\n  name: '',\n  components: {// SelectPerson\n  },\n  props: {\n    personArray: {\n      type: Array,\n      default: null\n    },\n    // 传过来的指定的用户数组 必须包含字段 id,name, 支持自动去重\n    billId: {\n      type: Number,\n      default: 0\n    },\n    billFlowId: {\n      type: Number,\n      default: 0\n    },\n    pageId: {\n      type: Number,\n      default: 0\n    },\n    isShow: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      state: 1,\n      content: '',\n      dialogTableVisible: false,\n      loading: false,\n      pubMessage: [],\n      priMessage: [],\n      active1: ['1'],\n      personList: [] // 去重后的数据\n\n    };\n  },\n  computed: {},\n  watch: {\n    content: function content(value) {// if () {\n      //   this.popoverVisible = true\n      //   console.log('存在@符号')\n      // }\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    if ((this.personArray || []).length > 0) {\n      // 去重，去自己\n      this.personList = this.unique(this.personArray).filter(function (f) {\n        return f.id !== _this.$store.state.user.info.uid;\n      });\n    } else {\n      return null;\n    }\n  },\n  mounted: function mounted() {\n    if (this.isShow) {\n      this.fetchData();\n    }\n  },\n  methods: {\n    fetchData: function fetchData() {\n      var _this2 = this;\n\n      (0, _message.getMessageByBillFlowId)({\n        billFlowId: this.billFlowId\n      }).then(function (res) {\n        var pubData = res.pubData,\n            priData = res.priData;\n        _this2.pubMessage = pubData;\n        _this2.priMessage = priData;\n      });\n    },\n    addReminder: function addReminder() {\n      this.dialogTableVisible = true;\n    },\n    unique: function unique(arr) {\n      // 根据唯一标识id来对数组进行去重\n      var res = new Map(); // 定义常量 res,值为一个Map对象实例\n      // 返回arr数组过滤后的结果，结果为一个数组   过滤条件是，如果res中没有某个键，就设置这个键的值为1\n\n      return arr.filter(function (arr) {\n        return !res.has(arr.id) && res.set(arr.id, 1);\n      });\n    },\n    chooseUser: function chooseUser(text) {\n      this.content += \"@\".concat(text, \" \");\n      this.dialogTableVisible = false;\n    },\n    // getPersons(selectedItems) {\n    //   console.log('输出选中的用户：', selectedItems)\n    // },\n    goSend: function goSend() {\n      var _this3 = this;\n\n      if (this.content.trim() === '') {\n        this.$alert('内容不能为空');\n        return false;\n      }\n\n      var reg = /@[\\u4e00-\\u9fa5]{0,}\\s/g; // 匹配@符号后面带中文加空格 的字符串\n\n      var arr = this.content.match(reg); // 获取匹配后的结果 数组\n      // console.log('匹配的结果arr:', arr)\n\n      if (arr) {\n        // 根据姓名 找到 相对应的 Id 数组\n        var idArr = arr.map(function (m) {\n          return _this3.personList.find(function (f) {\n            return f.name === m.substring(1).trim();\n          }).id;\n        }); // console.log('根据@姓名 找到的 id数组:', idArr)\n\n        var postData = {};\n        postData.content = this.content;\n        postData.billId = this.billId;\n        postData.billFlowId = this.billFlowId;\n        postData.pageId = this.pageId; // 公开,发送给全部人员\n\n        if (this.state === 1) {\n          postData.title = '有一条新的消息';\n          postData.type = 3;\n          var item = [];\n          this.personList.forEach(function (e) {\n            item.push({\n              receiverId: e.id\n            });\n          });\n          postData.messageUser = item;\n        } // 私密，发送给特定人员\n\n\n        if (this.state === 0) {\n          if ((idArr || []).length === 0) {\n            this.$alert('私密必须有人员对象，请@检查格式');\n            return;\n          }\n\n          postData.title = '有人私密@你了';\n          postData.content = this.content;\n          postData.type = 4;\n          postData.billId = this.billId;\n          postData.billFlowId = this.billFlowId;\n          postData.pageId = this.pageId;\n          var _item = [];\n          idArr.forEach(function (e) {\n            _item.push({\n              receiverId: e\n            });\n          });\n          postData.messageUser = _item;\n        }\n\n        this.loading = true;\n        (0, _message.sendMessage)(postData).then(function (res) {\n          _this3.$message(res.message); // 清空\n\n\n          _this3.state = 1;\n          _this3.content = ''; // 刷新\n\n          _this3.fetchData();\n\n          _this3.loading = false;\n        }).catch(function () {\n          _this3.loading = false;\n        });\n      }\n    }\n  }\n};\nexports.default = _default;",null]}