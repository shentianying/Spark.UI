{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\components\\Other\\AcceptanceCheckList.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\components\\Other\\AcceptanceCheckList.vue","mtime":1631087446326},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.find-index\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/toConsumableArray\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/objectSpread2\"));\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nvar _Acceptance = require(\"@/api/cwgl/zjgl/Acceptance.js\");\n\nvar _OrgSelect = _interopRequireDefault(require(\"@/components/SearchBar/OrgSelect\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// 部门选择器\nvar _default2 = {\n  name: 'AcceptanceCheckList',\n  components: {\n    OrgSelect: _OrgSelect.default\n  },\n  props: {\n    value: Boolean,\n    // 是否显示\n    type: {\n      // 资金形式\n      type: [Number, String],\n      default: 2\n    },\n    origin: {\n      // 初始数据,会把这个和新选择地数组合并然后去重,通过onchange返回\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    size: {\n      // 组件尺寸\n      type: String,\n      default: 'mini'\n    }\n  },\n  data: function data() {\n    return {\n      tableData: [],\n      // 表格数据\n      params: {\n        // 筛选请求参数\n        currentPage: 1,\n        pageSize: 10,\n        ticketNumber: '',\n        orgids: []\n      },\n      checkList: [] // 当前选中\n\n    };\n  },\n  watch: {\n    value: function value(val) {\n      if (val) this.getzjcdDate();\n    }\n  },\n  methods: {\n    // 弹出框选择事件\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.checkList = val;\n    },\n\n    /**\r\n     * 获取数据\r\n     */\n    getzjcdDate: function getzjcdDate() {\n      var _this = this;\n\n      (0, _Acceptance.GetAcceptDetailCheckList)((0, _objectSpread2.default)((0, _objectSpread2.default)({}, this.params), {}, {\n        capitalTypes: [this.type]\n      })).then(function (res) {\n        if (res.code === 200) {\n          var allData = [].concat((0, _toConsumableArray2.default)(_this.origin), (0, _toConsumableArray2.default)(res.data));\n          _this.tableData = allData.filter(function (item, index) {\n            // 去重\n            return allData.findIndex(function (v) {\n              return v.id === item.id;\n            }) === index;\n          });\n\n          _this.$nextTick(function () {\n            _this.origin.forEach(function (row) {\n              _this.$refs['multipleTable'].toggleRowSelection(row);\n            });\n          });\n        }\n      });\n    },\n    // 重置方法\n    rest: function rest() {\n      this.params.ticketNumber = '';\n      this.params.orgids = [];\n      this.getzjcdDate();\n    },\n    // 取消方法\n    restqx: function restqx() {\n      this.params.ticketNumber = '';\n      this.params.orgids = [];\n      this.$emit('input', false);\n    },\n\n    /**\r\n     * 确定\r\n     */\n    confirm: function confirm() {\n      this.$emit('onchange', this.checkList);\n      this.$emit('input', false);\n    }\n  }\n};\nexports.default = _default2;",null]}