{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\lcgl\\flowDesign\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\lcgl\\flowDesign\\index.vue","mtime":1628919934786},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _flow = require(\"@/api/xtgl/flow\");\n\nvar _form = require(\"@/api/xtgl/form\");\n\nvar _flowAdd = _interopRequireDefault(require(\"./flowAdd\"));\n\nvar _addFlowNode = _interopRequireDefault(require(\"./component/addFlowNode\"));\n\nvar _conditionAdd = _interopRequireDefault(require(\"./conditionAdd\"));\n\nvar _flow2 = _interopRequireDefault(require(\"./component/flow\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'FlowDesign',\n  components: {\n    FlowAdd: _flowAdd.default,\n    AddFlowNode: _addFlowNode.default,\n    Flow: _flow2.default,\n    ConditionAdd: _conditionAdd.default\n  },\n  data: function data() {\n    return {\n      formList: null,\n      list: [],\n      dropDownData: {},\n      // 所有的下拉初始化数据\n      listLoading: false,\n      dialogTableVisible: false,\n      dialogTitle: '流程信息',\n      comName: 'flowAdd',\n      isCopy: false,\n      currentRow: null,\n      currentForm: null,\n      // 当前选中表单的对象\n      buttonLoading: false,\n      searchText: '',\n      currentIndex: null\n    };\n  },\n  mounted: function mounted() {\n    this.fetchData();\n  },\n  methods: {\n    fetchData: function fetchData() {\n      var _this = this;\n\n      (0, _form.getFormList)({\n        needCheckup: true\n      }).then(function (response) {\n        var data = response.data;\n        _this.formList = data;\n      }).catch(function () {});\n    },\n    getFlow: function getFlow() {\n      var _this2 = this;\n\n      var postData = {};\n      postData.name = this.searchText;\n      postData.formId = this.currentForm.id;\n      this.listLoading = true;\n      (0, _flow.getFlowList)(postData).then(function (response) {\n        var data = response.data,\n            roleList = response.roleList,\n            roleType = response.roleType,\n            options = response.options,\n            flowNodeMode = response.flowNodeMode,\n            formfield = response.formfield,\n            fieldType = response.fieldType,\n            dictionary = response.dictionary,\n            organization = response.organization,\n            formState = response.formState,\n            grade = response.grade;\n        _this2.dropDownData.flowList = data;\n        _this2.dropDownData.roleList = roleList;\n        _this2.dropDownData.roleTypeList = roleType; // this.dropDownData.flowNodeTypeList = flowNodeType\n\n        _this2.dropDownData.options = options; // 操作类型\n\n        _this2.dropDownData.flowNodeModeList = flowNodeMode;\n        _this2.dropDownData.formfieldList = formfield;\n        _this2.dropDownData.fieldTypeList = fieldType;\n        _this2.dropDownData.dictionary = dictionary;\n        _this2.dropDownData.organization = organization;\n        _this2.dropDownData.formStateList = formState;\n        _this2.dropDownData.gradeList = grade;\n        _this2.list = data;\n        _this2.listLoading = false;\n      }).catch(function () {\n        _this2.listLoading = false;\n      });\n    },\n    handleAdd: function handleAdd() {\n      this.currentRow = null;\n      this.comName = 'FlowAdd';\n      this.dialogTableVisible = true;\n    },\n    dialogClose: function dialogClose() {\n      this.dialogTableVisible = false;\n      this.getFlow();\n    },\n    updateFlow: function updateFlow(row) {\n      this.currentRow = row;\n      this.isCopy = false;\n      this.comName = 'FlowAdd';\n      this.dialogTableVisible = true;\n    },\n    formClick: function formClick(item, index) {\n      this.currentForm = item;\n      this.currentIndex = index; // 记录当前选中项的index\n\n      this.getFlow();\n    },\n    prev: function prev(row) {\n      var _this3 = this;\n\n      (0, _flow.putFlowPrev)(row).then(function (response) {\n        _this3.$message(response.message);\n\n        _this3.getFlow();\n      }).catch(function () {});\n    },\n    next: function next(row) {\n      var _this4 = this;\n\n      (0, _flow.putFlowNext)(row).then(function (response) {\n        _this4.$message(response.message);\n\n        _this4.getFlow();\n      }).catch(function () {});\n    },\n    top: function top(row) {\n      var _this5 = this;\n\n      (0, _flow.putFlowTop)(row).then(function (response) {\n        _this5.$message(response.message);\n\n        _this5.getFlow();\n      }).catch(function () {});\n    },\n    bottom: function bottom(row) {\n      var _this6 = this;\n\n      (0, _flow.putFlowBottom)(row).then(function (response) {\n        _this6.$message(response.message);\n\n        _this6.getFlow();\n      }).catch(function () {});\n    },\n    addFlowCondition: function addFlowCondition(row) {\n      this.dialogTitle = '添加条件 - ' + row.name;\n      this.currentRow = row;\n      this.comName = 'conditionAdd';\n      this.dialogTableVisible = true;\n    },\n    copyFlow: function copyFlow(row) {\n      this.dialogTitle = '复制流程';\n      this.currentRow = row;\n      this.comName = 'FlowAdd';\n      this.isCopy = true;\n      this.dialogTableVisible = true; // this.$confirm('是否确定复制', '提示', {\n      //   type: 'warning'\n      // }).then(() => {\n      //   copyFlow({ id: row.id }).then(response => {\n      //     const { message } = response\n      //     this.$message(message)\n      //     this.getFlow()\n      //   })\n      // }).catch(() => {})\n    },\n    formateCondition: function formateCondition(condition) {\n      if (condition) {\n        return condition.replace(/(并且|或者)/g, '<br>$1').split('<br>');\n      } else {\n        return [];\n      }\n    }\n  }\n};\nexports.default = _default;",null]}