{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\fbgl\\fbdwgl\\Subcontractor\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\fbgl\\fbdwgl\\Subcontractor\\index.vue","mtime":1635749455646},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _TableEx = _interopRequireDefault(require(\"@/components/TableEx\"));\n\nvar _SearchBar = _interopRequireDefault(require(\"@/components/SearchBar\"));\n\nvar _subcontractor = require(\"@/api/fbgl/subcontractor\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'SubcontractorIndex',\n  components: {\n    TableEx: _TableEx.default,\n    SearchBar: _SearchBar.default\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      size: 'mini',\n      labelWidth: '85px',\n      searchData: require(\"./searchData\").default(),\n      // 渲染搜索栏数据\n      lastSearch: null,\n      // 最近一次搜索的数据\n      filter: {\n        isForbiddenList: [{\n          name: '是',\n          value: 1\n        }, {\n          name: '否',\n          value: 0\n        }],\n        rateList: []\n      },\n      table: {\n        columns: [{\n          label: '编号',\n          // 表头\n          prop: 'number',\n          // 渲染的属性\n          class: 'link',\n          // class\n          minWidth: '150',\n          // 最小宽度\n          click: function click(row) {\n            return _this.handleDetails(row);\n          },\n          fixed: 'left'\n        }, {\n          label: '部门',\n          prop: 'orgName',\n          minWidth: '130'\n        }, {\n          label: '分包单位名称',\n          prop: 'name',\n          minWidth: '200'\n        }, {\n          label: '分包类型',\n          prop: 'subContractorType',\n          minWidth: '200'\n        }, {\n          label: '法定代表人',\n          prop: 'corporation',\n          width: '120'\n        }, {\n          label: '电话',\n          prop: 'phone',\n          width: '120'\n        }, {\n          label: '委托代理人',\n          prop: 'entrustedAgent',\n          width: '120'\n        }, {\n          label: '星级',\n          prop: 'rate',\n          class: 'red',\n          width: '120',\n          format: function format(val, _format, row, column) {\n            var htmlStr = ''; // 星级\n\n            if (val === '不合格') {\n              column.class = 'red';\n            } else if (val === '合格') {\n              column.class = 'green';\n            } else {\n              column.class = 'star';\n              var length = val.length;\n\n              for (var i = 0; i < length; i++) {\n                htmlStr += \"<i class=\\\"el-icon-star-on\\\" />\";\n              }\n\n              val = htmlStr;\n            }\n\n            return val;\n          }\n        }, {\n          label: '是否禁用',\n          prop: 'isForbidden',\n          minWidth: '80',\n          format: function format(val) {\n            return val ? '是' : '否';\n          }\n        }, {\n          business: 'createUser' // 业务部分的快捷使用参考 src\\components\\TableEx\\Column\\businessList.js\n\n        }],\n        list: [],\n        tbLoading: false,\n        // table loading\n        total: 0,\n        currentPage: 1,\n        pageSize: this.utils.getPersonalSettings().pageSize\n      }\n    };\n  },\n\n  /**\r\n   * 最后决定使用beforeRouteEnter路由守卫代替activated,和created;\r\n   * 其好处是:无论用哪种方式进入都会触发,并且只触发一次;\r\n   */\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    next(function (vm) {\n      vm.fetchData();\n    });\n  },\n  methods: {\n    fetchData: function fetchData(type) {\n      var _this2 = this;\n\n      switch (type) {\n        case 'filter':\n          this.table.currentPage = 1;\n          break;\n\n        case 'reset':\n        case 'search':\n          this.table.currentPage = 1;\n          this.lastSearch = null;\n          break;\n      }\n\n      this.table.tbLoading = true;\n      this.getTable().then(function (res) {\n        return _this2.parseServeDate(res);\n      }).finally(function () {\n        _this2.table.tbLoading = false;\n      });\n    },\n    getTable: function getTable() {\n      var currentPage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.table.currentPage;\n      var pageSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.table.pageSize;\n      // 获取请求参数\n      var postData = this.getSearchData(); // postData.type = this.filter.type\n\n      postData.currentPage = currentPage;\n      postData.pageSize = pageSize; // 请求开始\n\n      return (0, _subcontractor.GetSubcontractorPaging)(postData);\n    },\n    parseServeDate: function parseServeDate(res) {\n      var data = res.data,\n          count = res.count,\n          amount = res.amount,\n          subcontractorTypeList = res.subcontractorTypeList,\n          rateList = res.rateList;\n      var isForbiddenList = this.filter.isForbiddenList;\n      this.$refs['SearchBar'].setData('subcontractorTypes', 'options', subcontractorTypeList, 'init');\n      this.$refs['SearchBar'].setData('rates', 'options', rateList, 'init');\n      this.$refs['SearchBar'].setData('isForbidden', 'options', isForbiddenList, 'init');\n      this.filter.rateList = rateList; // 列表数据初始化\n\n      this.amount = amount;\n      this.table.list = data;\n      this.table.total = count;\n    },\n\n    /**\r\n     * @description: 搜索栏数据转换\r\n     * @return {Object} request数据\r\n     */\n    getSearchData: function getSearchData() {\n      var _this3 = this;\n\n      if (this.lastSearch === null) {\n        this.lastSearch = {};\n        this.searchData.forEach(function (item) {\n          var value = item.value,\n              transformType = item.transformType,\n              name = item.name;\n\n          if (transformType === 'property-serial') {\n            value.forEach(function (ele, index) {\n              var serial = index + 1;\n              _this3.lastSearch[name + serial] = ele;\n            });\n          } else {\n            _this3.lastSearch[name] = value;\n          }\n        });\n      } // 将查询组件里的状态, 支付, 回收选项与是否点击变更按钮关联\n\n\n      this.searchData.forEach(function (item) {\n        if (item.hasOwnProperty('disabled')) {\n          item.disabled = _this3.alterDisabled;\n        }\n      });\n      return this.lastSearch;\n    },\n\n    /**\r\n     * @description: 路由到详情页\r\n     * @param {*} row\r\n     */\n    handleDetails: function handleDetails(row) {\n      this.$router.push({\n        name: 'SubcontractorDetails',\n        query: {\n          type: 'details',\n          id: row.id,\n          refreshRouterName: this.$route.name\n        }\n      });\n    },\n\n    /**\r\n     * @description: table编辑\r\n     * @param {Object} row\r\n     */\n    handleEdit: function handleEdit() {\n      var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var type = arguments.length > 1 ? arguments[1] : undefined;\n      this.$router.push({\n        name: 'SubcontractorEdit',\n        query: {\n          type: type,\n          id: id,\n          rateList: JSON.stringify(this.filter.rateList),\n          refreshRouterName: this.$route.name\n        }\n      });\n    }\n  }\n};\nexports.default = _default;",null]}