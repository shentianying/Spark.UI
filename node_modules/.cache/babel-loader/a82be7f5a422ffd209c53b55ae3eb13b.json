{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\lcgl\\flowDesign\\component\\conditionItemAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\lcgl\\flowDesign\\component\\conditionItemAdd.vue","mtime":1624071363336},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.find\");\n\nvar _index = _interopRequireDefault(require(\"@/components/OrgSelect/index2\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import OrgSelect from '@/components/OrgSelect/index'\nvar _default = {\n  name: 'ConditionItemAdd',\n  components: {\n    // OrgSelect,\n    OrgSelect2: _index.default\n  },\n  props: {\n    cdata: {\n      type: Array,\n      default: null\n    },\n    dropDownData: {\n      type: Object,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      buttonLoading: false,\n      modelValue: null,\n      data: [],\n      rules: {}\n    };\n  },\n  mounted: function mounted() {},\n  methods: {\n    loadOperator: function loadOperator(value, item) {\n      item.isload = false; // 查找类型 'int'||'string || dictionary' ...\n\n      var formfield = this.dropDownData.formfieldList.find(function (f) {\n        return f.id === value;\n      }); // 根据类型 找到 运算符号 下拉列表\n\n      item.operatorList = this.dropDownData.fieldTypeList.find(function (f) {\n        return f.type === formfield.fieldType;\n      }).operator;\n      item.formFlowField = formfield;\n      item.operator = null;\n      item.value = null;\n      item.dicList = null;\n\n      if (formfield.fieldType === 'dictionary') {\n        var dicList = this.dropDownData.dictionary.filter(function (f) {\n          return f.type === formfield.dicType;\n        });\n        dicList.forEach(function (e) {\n          e.label = e.name;\n          e.pid = e.pId;\n          e.id = e.value;\n        });\n        item.dicList = dicList;\n      }\n\n      if (formfield.fieldType === 'organization') {\n        var _dicList = this.dropDownData.organization;\n        item.dicList = _dicList;\n      }\n\n      this.$nextTick(function () {\n        item.isload = true;\n      });\n    },\n    addGroup: function addGroup(item) {\n      item.children.push({\n        header: {\n          flowId: 0,\n          code: item.header.code + 1,\n          pCode: item.header.code,\n          formFlowFieldId: 0,\n          formFlowField: {\n            field: '',\n            fieldName: '',\n            fieldType: '',\n            dicType: ''\n          },\n          operator: '&&',\n          operatorList: null,\n          dicList: null,\n          isload: true,\n          value: '',\n          isLeaf: false\n        },\n        item: [{\n          flowId: 0,\n          code: item.header.code + 2,\n          pCode: item.header.code + 1,\n          formFlowFieldId: null,\n          formFlowField: {\n            field: '',\n            fieldName: '',\n            fieldType: '',\n            dicType: ''\n          },\n          operator: '',\n          operatorList: null,\n          dicList: null,\n          isload: true,\n          value: '',\n          isLeaf: true\n        }],\n        children: []\n      });\n    },\n    delGroup: function delGroup(cdata, index) {\n      cdata.splice(index, 1);\n    },\n    addItem: function addItem(items) {\n      items.push({\n        flowId: 0,\n        // code: item.code + 1,\n        // pCode: item.code,\n        code: 0,\n        pCode: 0,\n        formFlowFieldId: null,\n        formFlowField: {\n          field: '',\n          fieldName: '',\n          fieldType: '',\n          dicType: ''\n        },\n        operator: '',\n        operatorList: null,\n        isload: true,\n        value: '',\n        isLeaf: true\n      });\n    },\n    delItem: function delItem(items, index) {\n      items.splice(index, 1);\n    }\n  }\n};\nexports.default = _default;",null]}