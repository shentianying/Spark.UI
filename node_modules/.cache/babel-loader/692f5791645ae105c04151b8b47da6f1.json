{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\htly\\ProjectCompleteManage\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\htly\\ProjectCompleteManage\\edit.vue","mtime":1633684104557},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/objectSpread2\"));\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _flowSelect = _interopRequireDefault(require(\"@/components/Flow/flowSelect\"));\n\nvar _MyForm = _interopRequireDefault(require(\"@/components/MyForm\"));\n\nvar _ProjectCompleteManage = require(\"@/api/xmgl/ProjectCompleteManage.js\");\n\nvar _project = require(\"@/api/xmgl/project.js\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import TreeSelect from '@/components/SearchBar/form/OrgSelect'\n// import { validate } from '@/utils/validate'\nvar _default = {\n  name: 'ProjectCompleteManageEdit',\n  components: {\n    FlowSelect: _flowSelect.default,\n    MyForm: _MyForm.default\n  },\n  data: function data() {\n    return {\n      size: 'mini',\n      inputPlaceholder: '请输入',\n      selectPlaceholder: '请选择',\n      autoPlaceholder: '自动带出',\n      active: 1,\n      // 提交进度 1: 编辑信息 2: 编辑审批流程\n      firstForm: {\n        projectId: null,\n        // 项目id\n        companyId: 2,\n        // 中南装饰的\n        id: 0,\n        // 新增为0\n        number: '',\n        // 新增时,编号后端生成\n        orgId: '',\n        // 部门id\n        orgStr: '',\n        // 部门名称\n        orderType: 1,\n        // 指令类型\n        completDate: '',\n        // 竣工验收日期\n        remark: '',\n        // 备注\n        fileList: [],\n        // 附件\n        state: 0,\n        // 状态\n        billFlow: [] // 单据流程\n\n      },\n      firstRules: {\n        projectId: [{\n          required: true,\n          message: '请选择项目'\n        }],\n        completDate: [{\n          required: true,\n          message: '请选择竣工验收日期'\n        }],\n        orderType: [{\n          required: true,\n          message: '请选择指令类型'\n        }]\n      },\n      filter: {\n        orderTypeList: [] // 指令类型list\n\n      },\n      project: {}\n    };\n  },\n  computed: {\n    title: function title() {\n      var active = this.active;\n      return active === 2 ? '审批流程' : '项目竣工';\n    },\n\n    /**\r\n     * 计算质保完成日期\r\n     * 质保完成日期=竣工验收日期+质保期\r\n     */\n    warrantyFinishDate: function warrantyFinishDate() {\n      var warrantyDays = this.project.warrantyDays,\n          completDate = this.firstForm.completDate;\n      return completDate ? this.$moment(completDate).add(warrantyDays || 0, 'days').format('YYYY-MM-DD') : '';\n    },\n\n    /**\r\n     * 处理form表单的数据\r\n     */\n    formNodeData: function formNodeData() {\n      var _this$project = this.project,\n          orgName = _this$project.orgName,\n          area = _this$project.area,\n          contractDuration = _this$project.contractDuration,\n          contractStartDate = _this$project.contractStartDate,\n          contractFinishDate = _this$project.contractFinishDate,\n          realStartDate = _this$project.realStartDate,\n          computeFinishDate = _this$project.computeFinishDate,\n          warrantyDays = _this$project.warrantyDays,\n          inputPlaceholder = this.inputPlaceholder,\n          selectPlaceholder = this.selectPlaceholder,\n          autoPlaceholder = this.autoPlaceholder,\n          warrantyFinishDate = this.warrantyFinishDate,\n          orderTypeList = this.filter.orderTypeList;\n      return [{\n        label: '编码:',\n        monopolize: true,\n        keyword: 'number',\n        props: {\n          disabled: true,\n          placeholder: '系统自动生成'\n        }\n      }, {\n        label: '项目:',\n        keyword: 'projectId',\n        component: 'ProjectSelect',\n        props: {\n          placeholder: selectPlaceholder,\n          projectState: [1]\n        }\n      }, {\n        label: '组织机构:',\n        value: orgName,\n        props: {\n          disabled: true,\n          placeholder: '请选择有项目的部门'\n        }\n      }, {\n        label: '竣工验收日期:',\n        keyword: 'completDate',\n        component: 'el-date-picker',\n        props: {\n          type: 'date',\n          placeholder: selectPlaceholder,\n          valueFormat: 'yyyy-MM-dd'\n        }\n      }, {\n        label: '指令类型:',\n        keyword: 'orderType',\n        component: 'Select',\n        props: {\n          propsLabel: 'name',\n          options: orderTypeList,\n          placeholder: selectPlaceholder\n        }\n      }, {\n        label: '建筑面积:',\n        value: area,\n        component: 'Input',\n        props: {\n          disabled: true,\n          placeholder: autoPlaceholder,\n          unit: '㎡'\n        }\n      }, {\n        label: '合同工期:',\n        value: contractDuration,\n        props: {\n          disabled: true,\n          placeholder: autoPlaceholder\n        }\n      }, {\n        label: '合同开工日期:',\n        value: contractStartDate,\n        props: {\n          disabled: true,\n          placeholder: autoPlaceholder\n        }\n      }, {\n        label: '合同竣工日期:',\n        value: contractFinishDate,\n        props: {\n          disabled: true,\n          placeholder: autoPlaceholder\n        }\n      }, {\n        label: '开工日期说明:',\n        value: contractStartDate,\n        monopolize: true,\n        props: {\n          disabled: true,\n          placeholder: autoPlaceholder\n        }\n      }, {\n        label: '实际开工日期:',\n        value: realStartDate,\n        props: {\n          disabled: true,\n          placeholder: autoPlaceholder\n        }\n      }, {\n        label: '计算竣工日期:',\n        value: computeFinishDate,\n        props: {\n          disabled: true,\n          placeholder: autoPlaceholder\n        }\n      }, {\n        label: '质保完成日期:',\n        value: warrantyFinishDate,\n        monopolize: true,\n        props: {\n          disabled: true,\n          placeholder: autoPlaceholder\n        }\n      }, {\n        label: '质保期:',\n        value: warrantyDays,\n        monopolize: true,\n        props: {\n          disabled: true,\n          placeholder: autoPlaceholder\n        }\n      }, {\n        label: '备注:',\n        keyword: 'remark',\n        monopolize: true,\n        props: {\n          placeholder: inputPlaceholder,\n          type: 'textarea'\n        }\n      }, {\n        label: '附件:',\n        monopolize: true,\n        keyword: 'fileList',\n        component: 'UpFile',\n        width: '100%',\n        props: {\n          isUpfile: true,\n          isDelete: true\n        }\n      }];\n    }\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    next(function (vm) {\n      vm.initSelect();\n      var newId = vm.$route.query.id;\n      var oldId = vm.firstForm.id;\n\n      if (newId && newId !== oldId) {\n        // 说明是打开另一个单子的编辑页面\n        vm.firstForm.id = newId;\n        vm.initDataById(newId);\n        vm.active = 1;\n      } else if (!newId && oldId) {\n        // 说明是打开一个新建页面\n        // 将data数据初始成定义时的状态\n        Object.assign(vm.$data, vm.$options.data());\n        vm.$nextTick(function () {\n          vm.$refs.firstForm.resetFields();\n        });\n      }\n    });\n  },\n  methods: {\n    /**\r\n     * 处理项目选择器选择事件\r\n     */\n    handelProjectSelect: function handelProjectSelect(val) {\n      Object.assign(this.firstForm, {\n        orgId: val.orgId,\n        companyId: val.companyId\n      });\n      this.getProjectMessage();\n    },\n\n    /**\r\n     * @description: 初始化选项框数据\r\n     */\n    initSelect: function initSelect() {\n      var _this = this;\n\n      (0, _ProjectCompleteManage.InitProjectCompleteManage)().then(function (_ref) {\n        var orderTypeList = _ref.orderTypeList;\n        _this.filter.orderTypeList = orderTypeList;\n      });\n    },\n\n    /**\r\n     * @description: 根据id获取数据\r\n     */\n    initDataById: function initDataById(id) {\n      var _this2 = this;\n\n      (0, _ProjectCompleteManage.GetProjectCompleteManageById)({\n        id: id\n      }).then(function (_ref2) {\n        var data = _ref2.data,\n            billFlowData = _ref2.billFlowData;\n        Object.keys(_this2.firstForm).forEach(function (key) {\n          _this2.firstForm[key] = data[key] || _this2.firstForm[key];\n        });\n        Object.assign(_this2.firstForm, {\n          fileList: data.upFile,\n          billFlow: billFlowData,\n          completDate: _this2.$moment(data.completDate).format('YYYY-MM-DD')\n        });\n\n        _this2.getProjectMessage();\n      });\n    },\n\n    /**\r\n     * 根据id获取项目信息\r\n     */\n    getProjectMessage: function getProjectMessage() {\n      var _this3 = this;\n\n      var req = {\n        id: this.firstForm.projectId\n      };\n\n      var formatDate = function formatDate(date) {\n        return date ? _this3.$moment(date).format('YYYY-MM-DD') : '';\n      };\n\n      (0, _project.getProjectById)(req).then(function (_ref3) {\n        var data = _ref3.data;\n        _this3.project = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, data), {}, {\n          orgName: data.organization.name,\n          contractStartDate: formatDate(data.contractStartDate),\n          contractFinishDate: formatDate(data.contractFinishDate),\n          realStartDate: formatDate(data.realStartDate),\n          computeFinishDate: formatDate(data.computeFinishDate)\n        });\n      });\n    },\n    getBillFlow: function getBillFlow() {\n      var _this4 = this;\n\n      // 获取流程数据\n      var _this$firstForm = this.firstForm,\n          state = _this$firstForm.state,\n          billFlow = _this$firstForm.billFlow;\n      var req = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, this.firstForm), {}, {\n        state: state || 0\n      });\n      if (billFlow) req.billFlowId = billFlow.id;\n      delete req.billFlow;\n      (0, _ProjectCompleteManage.GetBillFlow)(req).then(function (_ref4) {\n        var data = _ref4.data,\n            success = _ref4.success,\n            message = _ref4.message;\n\n        if (success) {\n          _this4.firstForm.billFlow = data.billFlow;\n\n          _this4.setActive(2);\n        } else {\n          _this4.$message.error(message);\n        }\n      });\n    },\n\n    /**\r\n     * 修改填报进度\r\n     */\n    setActive: function setActive(active) {\n      this.active = active;\n    },\n\n    /**\r\n     * 下一步\r\n     */\n    nextStep: function nextStep(formName) {\n      var _this5 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _this5.getBillFlow();\n        }\n      });\n    },\n    // 作废\n    invalidForm: function invalidForm() {\n      var _this6 = this;\n\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        return (0, _ProjectCompleteManage.DeleteProjectCompleteManage)({\n          id: _this6.firstForm.id\n        });\n      }).then(function () {\n        _this6.$message.success('操作成功');\n\n        _this6.back();\n      });\n    },\n\n    /**\r\n     * 提交表单\r\n     * @param {Number} state 提交类型，0：保存；1：提交\r\n     */\n    submitForm: function submitForm(state) {\n      var _this7 = this;\n\n      var req = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, this.firstForm), {}, {\n        state: state\n      });\n      delete req.number;\n      delete req.orgStr;\n\n      if (this.firstForm.billFlow) {\n        // 获取流程组件中的数据\n        var billFlow = this.$refs.flowSelect.getBillFlow();\n\n        if (!billFlow) {\n          return false;\n        }\n\n        req.billFlow = billFlow;\n      } else {\n        this.$message.error('流程数据不能为空');\n        return;\n      }\n\n      if (req.id) {\n        (0, _ProjectCompleteManage.PutProjectCompleteManage)(req).then(function (res) {\n          _this7.$message.success('保存成功');\n\n          _this7.back();\n        });\n      } else {\n        (0, _ProjectCompleteManage.AddProjectCompleteManage)(req).then(function () {\n          _this7.$message.success('提交成功');\n\n          _this7.back();\n        });\n      }\n    },\n\n    /**\r\n     * 返回上一页，并关闭当前页\r\n     */\n    back: function back() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    }\n  }\n};\nexports.default = _default;",null]}