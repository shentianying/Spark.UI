{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\invoice\\invoiceEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\invoice\\invoiceEdit.vue","mtime":1635216068732},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _invoice = require(\"@/api/cggl/invoice\");\n\nvar _index = _interopRequireDefault(require(\"@/components/OrgSelect/index2\"));\n\nvar _flowSelect = _interopRequireDefault(require(\"@/components/Flow/flowSelect\"));\n\nvar _UpFile = _interopRequireDefault(require(\"@/components/UpLoad/UpFile\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'CGInvoiceEdit',\n  components: {\n    OrgSelect2: _index.default,\n    FlowSelect: _flowSelect.default,\n    UpFile: _UpFile.default\n  },\n  data: function data() {\n    return {\n      ruleForm: {\n        id: 0,\n        // name: '',\n        type: null,\n        invoiceNumber: '',\n        // 发票号码\n        invoicingDate: null,\n        // 开票日期\n        orgId: null,\n        amount: null,\n        state: 0,\n        remark: '',\n        supplierId: null,\n        contractId: null,\n        invoiceDetail: [],\n        fileList: []\n      },\n      loading: false,\n      activate: false,\n      active: 0,\n      list: [],\n      list2: [],\n      contractIdAndsupplierId: '',\n      invoiceTypes: [],\n      // 发票类型 字典数据\n      contractList: [],\n      // 合同列表\n      supplierList: [],\n      // 供应商列表\n      multipleSelection: [],\n      // 选中列表\n      orgStr: '',\n      billFlow: null,\n      total: 0,\n      dialogTableVisible: false,\n      pageTotal: 0,\n      currentPage: 1,\n      pageSize: this.utils.getPersonalSettings().pageSize,\n      spanArr: [],\n      rules: {\n        orgId: [{\n          required: true,\n          message: '请选择',\n          trigger: 'change'\n        }],\n        type: [{\n          required: true,\n          message: '请选择',\n          trigger: 'change'\n        }],\n        amount: [{\n          required: true,\n          type: 'number',\n          message: '请输入',\n          trigger: 'blur'\n        }],\n        invoiceNumber: [{\n          required: true,\n          message: '请输入',\n          trigger: 'blur'\n        }],\n        contractIdAndsupplierId: [{\n          required: false,\n          message: '请选择',\n          trigger: ['blur', 'change']\n        }],\n        invoicingDate: [{\n          type: 'string',\n          required: true,\n          message: '请选择',\n          trigger: ['blur', 'change']\n        }]\n      }\n    };\n  },\n  watch: {\n    'ruleForm.orgId': {\n      handler: function handler(value, oldvalue) {\n        var _this = this;\n\n        // console.log('变化：', value, oldvalue)\n        if (!oldvalue) {\n          this.$refs['ruleForm'].validateField('orgId', function (valid) {});\n        }\n\n        if (value && !oldvalue) {\n          this.getContractList(value).then(function (data) {\n            _this.contractList = data;\n          });\n        }\n\n        if (value && oldvalue) {\n          this.getContractList(value).then(function (data) {\n            if (data.length === 0) {\n              _this.$message.info('该项目中没有合同信息');\n            }\n\n            _this.contractList = data;\n\n            _this.clearData();\n          });\n        }\n      },\n      deep: true\n    }\n  },\n  activated: function activated() {\n    if (this.$route.params.id) {\n      // this.ruleForm.orgId = null // 刷新 org 列表\n      this.initData();\n      this.refreshRouterName = this.$route.params.refreshRouterName;\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    (0, _invoice.initiInvoiceEdit)().then(function (res) {\n      var invoiceTypes = res.invoiceTypes;\n      _this2.invoiceTypes = invoiceTypes;\n    });\n\n    if (!this.$route.params.id) {\n      this.active = 0;\n      this.activate = true;\n    }\n  },\n  methods: {\n    clearData: function clearData() {\n      this.list2 = []; // 清空供应商 和 合同\n\n      this.supplierList = [];\n      this.ruleForm.supplierId = null;\n      this.ruleForm.contractId = null;\n      this.contractIdAndsupplierId = '';\n    },\n    initData: function initData() {\n      var _this3 = this;\n\n      // 有参数id 就是编辑\n      if (this.$route.query.id) {\n        this.ruleForm.id = this.$route.query.id;\n        this.loading = true;\n        this.activate = false;\n        (0, _invoice.getInvoiceById)({\n          id: this.ruleForm.id\n        }).then(function (response) {\n          return _this3.setData(response);\n        });\n      }\n    },\n    setData: function setData(response) {\n      var _this4 = this;\n\n      var data = response.data;\n\n      if (data) {\n        if (data.state > 0) {\n          this.$message.info('单据已在审批阶段，无法制单');\n          this.closeThePage();\n          return;\n        }\n      } // 填充 明细列表\n\n\n      var invoiceDetails = data.invoiceDetail.map(function (m) {\n        return m.storageInDetail;\n      });\n      this.list2 = invoiceDetails;\n      this.getSpanArr(this.list2);\n      this.sumStorage(this.list2); // 获取 设计下单 数据\n\n      if (data) {\n        // 设计下单制单 保存 状态\n        if (data.state === 0) {\n          this.ruleForm = data;\n          this.getContractList(data.orgId).then(function (res) {\n            _this4.contractList = res;\n          });\n          this.ruleForm.fileList = data.upFile;\n          this.contractIdAndsupplierId = data.contractId + '|' + data.supplierId;\n        } else {\n          // state\n          this.loading = false;\n          this.closeThePage();\n        }\n      }\n\n      this.loading = false; // loading 状态关闭\n\n      this.activate = true; // 加载部门组件\n      // console.log('this.ruleForm:', this.ruleForm)\n      // console.log('this.data:', data)\n      // console.log('this.contractIdAndsupplierId:', this.contractIdAndsupplierId)\n    },\n    closeThePage: function closeThePage() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    },\n    submitForm: function submitForm(state) {\n      var _this5 = this;\n\n      var newObj = JSON.parse(JSON.stringify(this.ruleForm)); // 设计下单状态\n\n      newObj.state = state;\n      var invoiceDetail = [];\n      this.list2.forEach(function (e) {\n        // 从已经保存的数据中查找 入库明细,如果 find后有数据，就是已经存在的数据，否则是 新增的数据\n        var findInvoiceDetail = newObj.invoiceDetail.find(function (f) {\n          return f.storageInDetailId === e.id;\n        });\n        var iid = 0;\n\n        if (findInvoiceDetail) {\n          iid = findInvoiceDetail.idf;\n        }\n\n        invoiceDetail.push({\n          id: iid,\n          invoiceId: newObj.id,\n          storageInDetailId: e.id\n        });\n      });\n      newObj.invoiceDetail = invoiceDetail; // 获取流程组件中的数据\n\n      if (state === 1) {\n        // 如果是提交，验证流程人员的完整信息\n        var checkBillFlow = this.$refs.flowSelect.checkBillFlow();\n\n        if (!checkBillFlow) {\n          this.$message('流程错误，流程中审批人员不能为空');\n          return false;\n        }\n      }\n\n      var billFlow = this.$refs.flowSelect.getBillFlow();\n      newObj.billFlow = billFlow; // console.log('提交的数据：', newObj)\n      // 保存单据\n\n      this.loading = true;\n\n      if (this.ruleForm.id) {\n        (0, _invoice.putInvoice)(newObj).then(function (response) {\n          if (response.errorMsg) {\n            // 验证错误\n            _this5.$alert(\"\".concat(response.errorMsg.replace(/；/g, '；<br />')), {\n              dangerouslyUseHTMLString: true\n            });\n\n            return;\n          }\n\n          _this5.$message(response.message);\n\n          _this5.loading = false;\n\n          _this5.closeThePage();\n        }).catch(function () {\n          _this5.loading = false;\n        });\n      } else {\n        (0, _invoice.addInvoice)(newObj).then(function (response) {\n          if (response.errorMsg) {\n            // 验证错误\n            _this5.$alert(\"\".concat(response.errorMsg.replace(/；/g, '；<br />')), {\n              dangerouslyUseHTMLString: true\n            });\n          } else {\n            _this5.$message(response.message);\n\n            _this5.loading = false;\n\n            _this5.closeThePage();\n          }\n        }).catch(function () {\n          _this5.loading = false;\n        });\n      }\n    },\n    previous: function previous() {\n      // 上一步\n      this.active = 0;\n      this.billFlow = null;\n    },\n    cancel: function cancel() {\n      var _this6 = this;\n\n      // 作废\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this6.loading = true;\n        (0, _invoice.deleteInvoice)({\n          id: _this6.ruleForm.id\n        }).then(function (response) {\n          _this6.$message(response.message);\n\n          _this6.loading = false;\n\n          _this6.closeThePage();\n        });\n      }).catch(function () {});\n    },\n    getDynamicFlow: function getDynamicFlow() {\n      var _this7 = this;\n\n      this.$refs['ruleForm'].validate(function (valid) {\n        if (valid) {\n          var newObj = JSON.parse(JSON.stringify(_this7.ruleForm));\n\n          if ((_this7.list2 || []).length <= 0) {\n            _this7.$alert('请选择入库明细单');\n\n            return false;\n          }\n\n          if (_this7.ruleForm.amount < _this7.total) {\n            _this7.$alert('开票金额必须大于已选金额');\n\n            return false;\n          }\n\n          _this7.loading = true;\n          (0, _invoice.getBillFlow)(newObj).then(function (response) {\n            _this7.loading = false;\n\n            if (response.success) {\n              _this7.billFlow = response.data.billFlow;\n              _this7.active = 1;\n            } else {\n              _this7.$message(response.message);\n            }\n          }).catch(function () {\n            _this7.loading = false;\n          });\n        }\n      });\n    },\n    // 选择\n    selectStorage: function selectStorage(scope) {\n      if (scope.row.invoiceId > 0) {\n        this.$alert('已开过发票，请不要重复开');\n        return false;\n      }\n\n      var storageInDetail = this.list.find(function (f) {\n        return f.id === scope.row.id;\n      });\n      this.list.splice(scope.$index, 1);\n\n      if (this.list2.some(function (s) {\n        return s.id === scope.row.id;\n      })) {\n        this.$alert('已存在，不能重复添加');\n        return;\n      } else {\n        this.list2.push(storageInDetail);\n      }\n\n      this.sumStorage(this.list2);\n    },\n    // 移除\n    removeStorage: function removeStorage(scope) {\n      // const storageInDetail = this.list2.find(f => f.id === scope.row.id)\n      this.list2.splice(scope.$index, 1); // this.list.push(storageInDetail)\n      // 计算总金额\n\n      this.sumStorage(this.list2);\n    },\n    selectContract: function selectContract(value) {\n      var contractId = Number(value.split('|')[0]);\n      var supplierId = Number(value.split('|')[1]); // this.supplierList = []\n      // var contract = this.contractList.find(f => f.contractId === contractId && f.supplierId === supplierId)\n      // this.supplierList.push({ id: contract.supplierId, name: contract.supplierName })\n\n      this.ruleForm.contractId = contractId;\n      this.ruleForm.supplierId = supplierId; // // 清空选中列表\n\n      this.list2 = [];\n    },\n    getStorageInDetailList: function getStorageInDetailList() {\n      var _this8 = this;\n\n      var postData = {};\n      postData.contractId = this.ruleForm.contractId;\n      postData.supplierId = this.ruleForm.supplierId;\n      postData.currentPage = this.currentPage;\n      postData.pageSize = this.pageSize;\n\n      if (this.ruleForm.id > 0) {\n        postData.invoiceId = this.ruleForm.id;\n      }\n\n      this.loading = true;\n      return new Promise(function (resolve, reject) {\n        (0, _invoice.getStorageInDetailListByContractId)(postData).then(function (res) {\n          _this8.loading = false;\n          var storageInDetailList = res.storageInDetailList,\n              count = res.count;\n          _this8.list = storageInDetailList;\n\n          _this8.getSpanArr(_this8.list); // 合并单元格\n\n\n          _this8.pageTotal = count;\n          resolve();\n        });\n      });\n    },\n    sumStorage: function sumStorage(arr) {\n      var _this9 = this;\n\n      // 计算金额\n      this.total = 0;\n      arr.map(function (m) {\n        return m.taxInclusiveAmount;\n      }).forEach(function (e) {\n        _this9.total += e;\n      });\n    },\n    selectStorageDetail: function selectStorageDetail() {\n      var _this10 = this;\n\n      if (!this.ruleForm.orgId) {\n        this.$alert('请先选择项目');\n        return;\n      }\n\n      if (!this.ruleForm.contractId) {\n        this.$alert('请先选择合同');\n        return;\n      } // 清空弹出选择的值\n      // this.ruleForm.contractId = null\n\n\n      this.list = [];\n      this.dialogTableVisible = true; // this.contractId = value\n\n      this.getStorageInDetailList().then(function (r) {\n        _this10.list2.forEach(function (row) {\n          _this10.$refs.multipleTable.toggleRowSelection(_this10.list.find(function (f) {\n            return f.id === row.id;\n          }));\n        });\n      }); // getContractListByOrgId({ orgId: this.ruleForm.orgId }).then(res => {\n      //   const { data } = res\n      //   this.contractList = data\n      //   this.dialogTableVisible = true\n      // })\n    },\n    sizeChange: function sizeChange(val) {\n      var _this11 = this;\n\n      this.pageSize = val;\n      this.getStorageInDetailList().then(function (r) {\n        _this11.list2.forEach(function (row) {\n          _this11.$refs.multipleTable.toggleRowSelection(_this11.list.find(function (f) {\n            return f.id === row.id;\n          }));\n        });\n      });\n    },\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.multipleSelection = val;\n      this.sumStorage(this.multipleSelection);\n    },\n    sureSelected: function sureSelected() {\n      // 弹窗关闭前\n      this.list2 = this.multipleSelection;\n      this.getSpanArr(this.list2); // this.multipleSelection = []\n\n      this.$refs.multipleTable.clearSelection();\n      this.sumStorage(this.list2);\n      this.dialogTableVisible = false;\n    },\n    getSpanArr: function getSpanArr(data) {\n      // data就是我们从后台拿到的数据\n      this.spanArr = [];\n\n      for (var i = 0; i < data.length; i++) {\n        if (i === 0) {\n          this.spanArr.push(1);\n          this.pos = 0;\n        } else {\n          // 判断当前元素与上一个元素是否相同\n          if (data[i].Number === data[i - 1].Number) {\n            this.spanArr[this.pos] += 1;\n            this.spanArr.push(0);\n          } else {\n            this.spanArr.push(1);\n            this.pos = i;\n          }\n        } // console.log(this.spanArr)\n\n      }\n    },\n    objectSpanMethod: function objectSpanMethod(_ref) {\n      var row = _ref.row,\n          column = _ref.column,\n          rowIndex = _ref.rowIndex,\n          columnIndex = _ref.columnIndex;\n\n      // if (columnIndex === 0 || columnIndex === 1) {\n      if (columnIndex === 1) {\n        var _row = this.spanArr[rowIndex];\n\n        var _col = _row > 0 ? 1 : 0; // console.log(`rowspan:${_row} colspan:${_col}`)\n\n\n        return {\n          // [0,0] 表示这一行不显示， [2,1]表示行的合并数\n          rowspan: _row,\n          colspan: _col\n        };\n      }\n    },\n    objectSpanMethod2: function objectSpanMethod2(_ref2) {\n      var row = _ref2.row,\n          column = _ref2.column,\n          rowIndex = _ref2.rowIndex,\n          columnIndex = _ref2.columnIndex;\n\n      // if (columnIndex === 0 || columnIndex === 1) {\n      if (columnIndex === 0) {\n        var _row = this.spanArr[rowIndex];\n\n        var _col = _row > 0 ? 1 : 0; // console.log(`rowspan:${_row} colspan:${_col}`)\n\n\n        return {\n          // [0,0] 表示这一行不显示， [2,1]表示行的合并数\n          rowspan: _row,\n          colspan: _col\n        };\n      }\n    },\n    getContractList: function getContractList(orgId) {\n      return new Promise(function (resolve, reject) {\n        (0, _invoice.getContractListByOrgId)({\n          orgId: orgId\n        }).then(function (res) {\n          var data = res.data;\n          resolve(data);\n        });\n      });\n    }\n  }\n};\nexports.default = _default;",null]}