{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\swcb\\businessCostAttitude.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\swcb\\businessCostAttitude.vue","mtime":1624071363327},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _businessCost = require(\"@/api/cggl/businessCost\");\n\nvar _index = _interopRequireDefault(require(\"@/components/OrgSelect/index2\"));\n\nvar _flowDisplay = _interopRequireDefault(require(\"@/components/Flow/flowDisplay\"));\n\nvar _flowAttitude = _interopRequireDefault(require(\"@/components/Flow/flowAttitude\"));\n\nvar _UpFile = _interopRequireDefault(require(\"@/components/UpLoad/UpFile\"));\n\nvar _pikazExcelJs = require(\"pikaz-excel-js\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'BusinessCostAttitude',\n  components: {\n    OrgSelect2: _index.default,\n    FlowAttitude: _flowAttitude.default,\n    FlowDisplay: _flowDisplay.default,\n    UpFile: _UpFile.default,\n    ExcelExport: _pikazExcelJs.ExcelExport\n  },\n  data: function data() {\n    return {\n      ruleForm: {\n        id: 0,\n        number: '',\n        orgId: null,\n        remark: '',\n        state: 0,\n        billFlowId: 0,\n        organization: null\n      },\n      loading: false,\n      isLoad: false,\n      orgStr: '',\n      // showbuttons: false,\n      activate: false,\n      dialogTableVisible: false,\n      dialogTitle: '保存',\n      dialogWidth: '70%',\n      comName: 'BusinessDetailAdd',\n      currentRow: null,\n      listIndex: 0,\n      list: [],\n      fileList: [],\n      // 上传文件列表\n      billFlow: null,\n      attitudePara: {},\n      columnShow: {\n        unit2: true,\n        brand: true,\n        model: true,\n        spec: true,\n        thickness: true,\n        texture: true,\n        surfaceTreatment: true,\n        designNumber: true\n      },\n      rules: {// orgId: [{ required: true, message: '请输入', trigger: 'change' }],\n        // planType: [{ required: true, message: '请输入', trigger: 'blur' }]\n      },\n      sheet: [{\n        // title: '材料导入模板',\n        tHeader: ['材料名称', '单位', '数量', '单价', '总金额', '备注', '辅单位', '品牌/产地', '型号', '规格/尺寸', '厚度', '材质', '表面处理/工艺、色号', '设计编号'],\n        table: [],\n        keys: ['CategoryName', 'Unit', 'Quantity', 'Price', 'Amount', 'Remark', 'Unit2', 'Brand', 'Model', 'Spec', 'Thickness', 'Texture', 'SurfaceTreatment', 'DesignNumber'],\n        sheetName: '商务成本材料明细'\n      }],\n      cols: []\n    };\n  },\n  activated: function activated() {\n    if (this.$route.params.id) {\n      this.ruleForm.orgId = null; // 刷新 org 列表\n\n      this.initData();\n      this.refreshRouterName = this.$route.params.refreshRouterName;\n    }\n  },\n  mounted: function mounted() {\n    if (!this.$route.params.id) {\n      this.activate = true;\n    } // getDictionaryList({ type: 'cgglPlanType' }).then(response => {\n    //   const { data } = response\n    //   this.planTypeList = data\n    // })\n\n  },\n  methods: {\n    initData: function () {\n      var _initData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // 有参数id 就是编辑\n                if (this.$route.query.id) {\n                  this.id = this.$route.query.id;\n                }\n\n                if (!this.id) {\n                  _context.next = 6;\n                  break;\n                }\n\n                this.loading = true;\n                this.activate = false; // 销毁\n\n                _context.next = 6;\n                return (0, _businessCost.getBusinessCostBillAttitudeById)({\n                  id: this.id\n                }).then(function (response) {\n                  return _this.setData(response);\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function initData() {\n        return _initData.apply(this, arguments);\n      }\n\n      return initData;\n    }(),\n    setData: function setData(response) {\n      var _this2 = this;\n\n      // 验证\n      if (!response.success) {\n        this.$alert(response.message, {\n          callback: function callback(action) {\n            _this2.closeThePage();\n          }\n        });\n      }\n\n      var businessCostData = response.businessCostData,\n          billFlowData = response.billFlowData,\n          orgStr = response.orgStr; // 检查当前 状态 是否有特殊操作，有就跳转\n\n      var filterOption = billFlowData.billFlowNode.filter(function (f) {\n        return f.isCurrentState;\n      });\n\n      if (filterOption) {// if (filterOption[0].option > 0) {\n        //   alert('当前节点有特殊操作')\n        // }\n      }\n\n      this.orgStr = orgStr; // 填充参数\n\n      this.ruleForm = {\n        id: businessCostData.id,\n        number: businessCostData.number,\n        orgId: businessCostData.orgId,\n        remark: businessCostData.remark,\n        state: businessCostData.state,\n        billFlowId: businessCostData.billFlowId,\n        createUserName: businessCostData.createUserName,\n        submitUserName: businessCostData.submitUserName,\n        lastEditUserName: businessCostData.lastEditUserName,\n        createDate: businessCostData.createDate,\n        submitDate: businessCostData.submitDate,\n        lastEditDate: businessCostData.lastEditDate // organization: planData.organization\n\n      }; // 填充 明细列表\n\n      this.list = businessCostData.businessCostDetails;\n      this.billFlow = billFlowData;\n      this.attitudePara = {\n        formId: billFlowData.formId,\n        billFlowId: businessCostData.billFlowId,\n        planId: businessCostData.id\n      };\n      this.isLoad = true; // 加载审批组件\n\n      this.setColumnShow();\n      this.loading = false; // loading 状态关闭\n\n      this.activate = true; // 加载部门组件\n    },\n    updateFlow: function updateFlow(data) {\n      var _this3 = this;\n\n      // 修改计划单据state状态\n      this.loading = true;\n      this.billFlow = null;\n      (0, _businessCost.putBusinessCostState)({\n        billId: data.billId,\n        state: data.state\n      }).then(function (response) {\n        _this3.loading = false; // 重新加载 流程\n        // this.billFlow = data\n\n        _this3.closeThePage();\n      });\n    },\n    closeThePage: function closeThePage() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    },\n    dialogClose: function dialogClose(data, state) {\n      this.addMaterial(data, state);\n      this.setColumnShow();\n      this.dialogTableVisible = false;\n    },\n    showFileList: function showFileList(fileList) {\n      // console.log('fileList:', fileList)\n      this.dialogTitle = '附件列表';\n      this.comName = 'UpFile';\n      this.dialogWidth = '50%';\n      this.fileList = fileList;\n      this.dialogTableVisible = true;\n    },\n    setColumnShow: function setColumnShow() {\n      // 设置列的显示。列中，都没有值，就隐藏\n      var modelunit2 = false;\n      var modelbrand = false;\n      var modelmodel = false;\n      var modelspec = false;\n      var modelthickness = false;\n      var modeltexture = false;\n      var modelsurfaceTreatment = false;\n      var modeldesignNumber = false;\n\n      var _iterator = (0, _createForOfIteratorHelper2.default)(this.list),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var row = _step.value;\n\n          if (row.unit2) {\n            modelunit2 = true;\n          }\n\n          if (row.brand) {\n            modelbrand = true;\n          }\n\n          if (row.model) {\n            modelmodel = true;\n          }\n\n          if (row.spec) {\n            modelspec = true;\n          }\n\n          if (row.thickness) {\n            modelthickness = true;\n          }\n\n          if (row.texture) {\n            modeltexture = true;\n          }\n\n          if (row.surfaceTreatment) {\n            modelsurfaceTreatment = true;\n          }\n\n          if (row.designNumber) {\n            modeldesignNumber = true;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      this.columnShow['unit2'] = modelunit2;\n      this.columnShow['brand'] = modelbrand;\n      this.columnShow['model'] = modelmodel;\n      this.columnShow['spec'] = modelspec;\n      this.columnShow['thickness'] = modelthickness;\n      this.columnShow['texture'] = modeltexture;\n      this.columnShow['surfaceTreatment'] = modelsurfaceTreatment;\n      this.columnShow['designNumber'] = modeldesignNumber;\n    },\n    beforeStart: function beforeStart(bookType, filename, sheet) {\n      var data = sheet;\n      var exportData = [];\n      this.list.forEach(function (e) {\n        console.log(e);\n        var m = {};\n        m.CategoryName = e.name;\n        m.Unit = e.unit;\n        m.Quantity = e.quantity;\n        m.Price = e.price;\n        m.Amount = e.amount;\n        m.Remark = e.remark;\n        m.Unit2 = e.propertyList.find(function (f) {\n          return f.materialField === 'unit2';\n        }).nameArray;\n        m.Brand = e.propertyList.find(function (f) {\n          return f.materialField === 'brand';\n        }).nameArray;\n        m.Model = e.propertyList.find(function (f) {\n          return f.materialField === 'model';\n        }).nameArray;\n        m.Spec = e.propertyList.find(function (f) {\n          return f.materialField === 'spec';\n        }).nameArray;\n        m.Thickness = e.propertyList.find(function (f) {\n          return f.materialField === 'thickness';\n        }).nameArray;\n        m.Texture = e.propertyList.find(function (f) {\n          return f.materialField === 'texture';\n        }).nameArray;\n        m.SurfaceTreatment = e.propertyList.find(function (f) {\n          return f.materialField === 'surfaceTreatment';\n        }).nameArray;\n        m.DesignNumber = e.propertyList.find(function (f) {\n          return f.materialField === 'designNumber';\n        }).nameArray;\n        exportData.push(m);\n      });\n      data[0].table = exportData;\n    },\n    onError: function onError(err) {\n      this.$message.info('导出失败：' + err);\n    }\n  }\n};\nexports.default = _default;",null]}