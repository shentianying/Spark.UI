{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\fpgl\\InvoiceReimburse\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\fpgl\\InvoiceReimburse\\edit.vue","mtime":1635749455629},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.set\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/toConsumableArray\"));\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/objectSpread2\"));\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _babelHelperVueJsxMergeProps = _interopRequireDefault(require(\"@vue/babel-helper-vue-jsx-merge-props\"));\n\nvar _Select = _interopRequireDefault(require(\"@/components/SearchBar/form/Select\"));\n\nvar _flowSelect = _interopRequireDefault(require(\"@/components/Flow/flowSelect\"));\n\nvar _MyForm = _interopRequireDefault(require(\"@/components/MyForm\"));\n\nvar _TableEx = _interopRequireDefault(require(\"@/components/TableEx\"));\n\nvar _utils = require(\"@/utils\");\n\nvar _validate = require(\"@/utils/validate\");\n\nvar _accountSet = require(\"@/api/xtgl/accountSet\");\n\nvar _InvoiceReimburse = require(\"@/api/cwgl/InvoiceReimburse\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default2 = {\n  name: 'InvoiceReimburseEdit',\n  components: {\n    FlowSelect: _flowSelect.default,\n    MyForm: _MyForm.default,\n    TableEx: _TableEx.default\n  },\n  data: function data() {\n    var _this = this;\n\n    var h = this.$createElement;\n    return {\n      reimburseTypeDisable: false,\n      //  报销类型选择工人发票时, 项目营销费用选中 否 并且禁止修改\n      addbtnLoad: false,\n      // 提交按钮loading状态\n      size: 'mini',\n      inputPlaceholder: '请输入',\n      selectPlaceholder: '请选择',\n      tableSelect: '请选择',\n      active: 1,\n      // 提交进度 1: 编辑信息 2: 编辑审批流程\n      firstForm: {\n        id: 0,\n        // 新增为0\n        companyId: '',\n        // 公司id\n        number: '',\n        // 新增时,编号后端生成\n        orgId: '',\n        // 部门id\n        accountId: '',\n        // 账套id\n        personId: '',\n        // 人员id\n        reimburseType: 1,\n        // 报销类型\n        invoiceType: 1,\n        // 发票类型 默认电子发票\n        invoiceDate: '',\n        // 发票日期\n        invoiceCategory: 318,\n        // 发票类别 默认招待费 : id318\n        costPlanId: '',\n        // 费用计划id\n        entertainmentPlanId: '',\n        // 招待费计划id\n        isNonCash: 0,\n        // 是否现报销\n        personNumber: '',\n        // 工号\n        personName: '',\n        // 姓名\n        bussinessInfoId: '',\n        // 业务工程信息编号\n        isBussinessFee: 1,\n        // 是否是项目营销费用\n        applicationAmount: '',\n        // 申请金额\n        // entertainmentPlanDetails: [], // 招待费计划详细数据列表\n        summary: '',\n        // 用途\n        remark: '',\n        // 备注\n        fileList: [],\n        // 附件\n        invoiceFileList: [],\n        // 发票附件\n        invoiceReimburseDetails: [],\n        // 发票明细\n        state: 0,\n        // 状态\n        billFlow: null // 单据流程\n\n      },\n      firstRules: {\n        reimburseType: [{\n          required: true,\n          message: '请选择报销类型',\n          trigger: 'change'\n        }],\n        orgId: [{\n          required: true,\n          message: '请选择部门',\n          trigger: 'change'\n        }],\n        accountId: [{\n          required: true,\n          message: '请选择账套信息',\n          trigger: 'change'\n        }],\n        invoiceType: [{\n          required: true,\n          message: '请选择发票类型',\n          trigger: 'change'\n        }],\n        invoiceDate: [{\n          required: true,\n          message: '请选择发票日期',\n          trigger: 'change'\n        }],\n        invoiceCategory: [{\n          required: true,\n          message: '请选择发票类别',\n          trigger: 'change'\n        }],\n        personId: [{\n          required: true,\n          message: '请选择工号',\n          trigger: 'change'\n        }],\n        summary: [{\n          required: true,\n          message: '请填写事由',\n          trigger: 'change'\n        }],\n        applicationAmount: [{\n          required: true,\n          message: '请输入金额',\n          trigger: 'change'\n        }, {\n          validator: _validate.validate.money,\n          message: '金额格式不正确',\n          trigger: 'change'\n        }, {\n          validator: _validate.validate.max_amount,\n          message: '超过所能存储的最大金额',\n          trigger: 'change'\n        }],\n        bussinessInfoId: [{\n          required: true,\n          message: '请选择业务工程信息',\n          trigger: 'change'\n        }]\n      },\n      filter: {\n        isBussinessFeeList: [{\n          label: '否',\n          value: 0\n        }, {\n          label: '是',\n          value: 1\n        }],\n        isNonCashList: [{\n          label: '否',\n          value: 0\n        }, {\n          label: '是',\n          value: 1\n        }],\n        allInvoiceCategoryList: [],\n        invoiceCategoryList: [],\n        // 发票类别列表\n        invoiceTypeList: [],\n        // 发票类型列表\n        reimburseTypeList: [],\n        // 发票报销类型\n        accountList: [],\n        taxList: [],\n        // 税率的列表\n        secondList: [] // 表格二级选项\n\n      },\n      // 发票表格\n      invoiceReimburseTable: {\n        columns: [{\n          label: '序号',\n          // 表头\n          minWidth: '50',\n          // 最小宽度\n          format: function format(val, _format, row, column, scoped) {\n            return \"0\".concat(scoped.$index + 1);\n          }\n        }, {\n          render: function render(h) {\n            return h(\"el-table-column\", {\n              \"class\": 'TableExColumn',\n              \"attrs\": {\n                \"label\": '发票类别',\n                \"min-width\": '100',\n                \"show-overflow-tooltip\": true\n              },\n              \"scopedSlots\": {\n                default: function _default(scoped) {\n                  var secondList = _this.filter.secondList,\n                      size = _this.size,\n                      tableSelect = _this.tableSelect;\n\n                  if (_this.firstForm.state === 0) {\n                    return h(\"el-cascader\", (0, _babelHelperVueJsxMergeProps.default)([{}, {\n                      \"props\": {\n                        props: {\n                          value: 'id',\n                          label: 'name',\n                          emitPath: false\n                        },\n                        size: size,\n                        clearable: true,\n                        showAllLevels: false,\n                        collapseTags: true,\n                        options: secondList || [],\n                        placeholder: tableSelect\n                      }\n                    }, {\n                      \"on\": {\n                        \"change\": function change(val) {\n                          if (secondList[0].children) {\n                            var newList = secondList[0].children.filter(function (e) {\n                              return e.id === val;\n                            });\n\n                            if (newList.length === 0) {\n                              scoped.row.invoiceCategoryName = '';\n                            } else {\n                              var _newList$;\n\n                              scoped.row.invoiceCategoryName = (_newList$ = newList[0]) === null || _newList$ === void 0 ? void 0 : _newList$.name;\n                            }\n                          } else {\n                            var _secondList$;\n\n                            scoped.row.invoiceCategoryName = (_secondList$ = secondList[0]) === null || _secondList$ === void 0 ? void 0 : _secondList$.name;\n                          }\n                        }\n                      },\n                      \"model\": {\n                        value: scoped.row.invoiceCategory,\n                        callback: function callback($$v) {\n                          _this.$set(scoped.row, \"invoiceCategory\", $$v);\n                        }\n                      }\n                    }]));\n                  } else {\n                    return scoped.row.invoiceCategoryName;\n                  }\n                }\n              }\n            });\n          }\n        }, {\n          // label: '发票代码', // 表头\n          // minWidth: '100', // 最小宽度\n          // prop: 'invoiceCode'\n          render: function render(h) {\n            return h(\"el-table-column\", {\n              \"class\": 'TableExColumn',\n              \"attrs\": {\n                \"label\": '发票代码',\n                \"min-width\": '100',\n                \"show-overflow-tooltip\": true\n              },\n              \"scopedSlots\": {\n                default: function _default(_ref) {\n                  var row = _ref.row;\n                  var size = _this.size;\n\n                  if (_this.firstForm.state === 0) {\n                    return h(\"el-input\", {\n                      \"attrs\": {\n                        \"size\": size,\n                        \"placeholder\": '发票代号'\n                      },\n                      \"on\": {\n                        \"input\": function input($event) {\n                          row.invoiceCode = $event.replace(/[^\\d.]/g, '');\n                        }\n                      },\n                      \"model\": {\n                        value: row.invoiceCode,\n                        callback: function callback($$v) {\n                          _this.$set(row, \"invoiceCode\", $$v);\n                        }\n                      }\n                    });\n                  } else {\n                    return row.invoiceCode;\n                  }\n                }\n              }\n            });\n          }\n        }, {\n          // label: '票号', // 表头\n          // minWidth: '50', // 最小宽度\n          // prop: 'invoiceNum'\n          render: function render(h) {\n            return h(\"el-table-column\", {\n              \"class\": 'TableExColumn',\n              \"attrs\": {\n                \"label\": '票号',\n                \"min-width\": '100',\n                \"show-overflow-tooltip\": true\n              },\n              \"scopedSlots\": {\n                default: function _default(_ref2) {\n                  var row = _ref2.row;\n                  var size = _this.size;\n\n                  if (_this.firstForm.state === 0) {\n                    return h(\"el-input\", {\n                      \"attrs\": {\n                        \"size\": size,\n                        \"placeholder\": '票号'\n                      },\n                      \"on\": {\n                        \"input\": function input($event) {\n                          row.invoiceNum = $event.replace(/[^\\d.]/g, '');\n                        }\n                      },\n                      \"model\": {\n                        value: row.invoiceNum,\n                        callback: function callback($$v) {\n                          _this.$set(row, \"invoiceNum\", $$v);\n                        }\n                      }\n                    });\n                  } else {\n                    return row.invoiceNum;\n                  }\n                }\n              }\n            });\n          }\n        }, {\n          // label: '金额(含税)', // 表头\n          // minWidth: '120', // 最小宽度\n          // prop: 'applicationAmount'\n          render: function render(h) {\n            return h(\"el-table-column\", {\n              \"class\": 'TableExColumn',\n              \"attrs\": {\n                \"label\": '申请金额(含税)',\n                \"min-width\": '100',\n                \"show-overflow-tooltip\": true\n              },\n              \"scopedSlots\": {\n                default: function _default(_ref3) {\n                  var row = _ref3.row;\n                  var size = _this.size;\n\n                  if (_this.firstForm.state === 0) {\n                    return h(\"el-input\", {\n                      \"attrs\": {\n                        \"size\": size,\n                        \"placeholder\": '金额'\n                      },\n                      \"on\": {\n                        \"input\": function input($event) {\n                          row.applicationAmount = $event.replace(/[^\\d.]/g, '');\n                        },\n                        \"blur\": function blur() {\n                          return _this.calculateAmount(row);\n                        }\n                      },\n                      \"model\": {\n                        value: row.applicationAmount,\n                        callback: function callback($$v) {\n                          _this.$set(row, \"applicationAmount\", $$v);\n                        }\n                      }\n                    });\n                  } else {\n                    return (0, _utils.formatMoney)(row.applicationAmount, 2, 0);\n                  }\n                }\n              }\n            });\n          }\n        }, {\n          // label: '税率', // 表头\n          // minWidth: '50', // 最小宽度\n          // prop: 'tax'\n          render: function render(h) {\n            return h(\"el-table-column\", {\n              \"class\": 'TableExColumn',\n              \"attrs\": {\n                \"label\": '税率',\n                \"min-width\": '100',\n                \"show-overflow-tooltip\": true\n              },\n              \"scopedSlots\": {\n                default: function _default(_ref4) {\n                  var row = _ref4.row;\n                  var size = _this.size,\n                      taxList = _this.filter.taxList;\n\n                  if (_this.firstForm.state === 0) {\n                    return h(_Select.default, {\n                      \"attrs\": {\n                        \"value\": row.tax,\n                        \"options\": taxList,\n                        \"size\": size\n                      },\n                      \"on\": {\n                        \"change\": function change(val) {\n                          if (row.applicationAmount) {\n                            row.taxAmount = +row.applicationAmount * val;\n                            row.excludeTaxAmount = row.applicationAmount - row.taxAmount;\n                          } else {\n                            row.tax = '';\n\n                            _this.$message('请先输入金额');\n\n                            return;\n                          }\n                        }\n                      },\n                      \"model\": {\n                        value: row.tax,\n                        callback: function callback($$v) {\n                          _this.$set(row, \"tax\", $$v);\n                        }\n                      }\n                    });\n                  } else {\n                    return row.tax;\n                  }\n                }\n              }\n            });\n          }\n        }, {\n          align: 'right',\n          label: '税额',\n          // 表头\n          minWidth: '80',\n          // 最小宽度\n          format: 'money',\n          prop: 'taxAmount'\n        }, {\n          align: 'right',\n          label: '金额(不含税)',\n          // 表头\n          minWidth: '120',\n          // 最小宽度\n          format: 'money',\n          prop: 'excludeTaxAmount'\n        }, {\n          // label: '备注', // 表头\n          // minWidth: '50', // 最小宽度\n          // prop: 'remark'\n          render: function render(h) {\n            return h(\"el-table-column\", {\n              \"class\": 'TableExColumn',\n              \"attrs\": {\n                \"label\": '备注',\n                \"min-width\": '100',\n                \"show-overflow-tooltip\": true\n              },\n              \"scopedSlots\": {\n                default: function _default(_ref5) {\n                  var row = _ref5.row;\n                  var size = _this.size;\n\n                  if (_this.firstForm.state === 0) {\n                    return h(\"el-input\", {\n                      \"attrs\": {\n                        \"size\": size,\n                        \"placeholder\": '备注'\n                      },\n                      \"model\": {\n                        value: row.remark,\n                        callback: function callback($$v) {\n                          _this.$set(row, \"remark\", $$v);\n                        }\n                      }\n                    });\n                  } else {\n                    return row.remark;\n                  }\n                }\n              }\n            });\n          }\n        }],\n        list: [{\n          id: 0,\n          invoiceReimburseId: 0,\n          invoiceCategory: 0,\n          invoiceCategoryName: '',\n          // 发票类别名称\n          invoiceCode: '',\n          invoiceNum: '',\n          // 票号\n          applicationAmount: '',\n          tax: '',\n          taxAmount: '',\n          excludeTaxAmount: '',\n          remark: ''\n        }]\n      },\n      bussinessInfo: {\n        // 选择的工程信息相关\n        number: ''\n      }\n    };\n  },\n  computed: {\n    disabled: function disabled() {\n      return false;\n    },\n    title: function title() {\n      var active = this.active;\n      return active === 2 ? '审批流程' : '发票报销';\n    },\n    formNodeData: function formNodeData() {\n      var inputPlaceholder = this.inputPlaceholder,\n          selectPlaceholder = this.selectPlaceholder,\n          reimburseTypeDisable = this.reimburseTypeDisable,\n          firstForm = this.firstForm,\n          _this$filter = this.filter,\n          isBussinessFeeList = _this$filter.isBussinessFeeList,\n          reimburseTypeList = _this$filter.reimburseTypeList,\n          accountList = _this$filter.accountList,\n          invoiceTypeList = _this$filter.invoiceTypeList,\n          invoiceCategoryList = _this$filter.invoiceCategoryList,\n          isNonCashList = _this$filter.isNonCashList,\n          disabled = this.disabled,\n          bussinessInfo = this.bussinessInfo;\n      return [{\n        label: '报销类型:',\n        keyword: 'reimburseType',\n        component: 'Select',\n        props: {\n          propsLabel: 'name',\n          placeholder: selectPlaceholder,\n          options: reimburseTypeList\n        }\n      }, {\n        label: '编号:',\n        keyword: 'number',\n        props: {\n          disabled: true,\n          placeholder: '系统自动生成'\n        }\n      }, {\n        label: '部门:',\n        keyword: 'orgId',\n        component: 'OrgSelect',\n        props: {\n          placeholder: selectPlaceholder\n        }\n      }, {\n        label: '账套:',\n        keyword: 'accountId',\n        component: 'Select',\n        props: {\n          propsValue: 'id',\n          propsLabel: 'name',\n          placeholder: selectPlaceholder,\n          options: accountList\n        }\n      }, {\n        label: '发票类型:',\n        keyword: 'invoiceType',\n        component: 'Select',\n        props: {\n          propsLabel: 'name',\n          placeholder: selectPlaceholder,\n          options: invoiceTypeList\n        }\n      }, {\n        label: '发票日期:',\n        keyword: 'invoiceDate',\n        component: 'el-date-picker',\n        props: {\n          type: 'date',\n          placeholder: '选择日期',\n          valueFormat: 'yyyy-MM-dd'\n        }\n      }, {\n        label: '发票类别:',\n        keyword: 'invoiceCategory',\n        component: 'Select',\n        props: {\n          propsLabel: 'name',\n          propsValue: 'id',\n          placeholder: selectPlaceholder,\n          options: invoiceCategoryList\n        }\n      }, {\n        label: '招待费计划号:',\n        if: firstForm.invoiceCategory === 318,\n        keyword: 'entertainmentPlanId',\n        component: 'EntertainmentPlanSelect',\n        props: {\n          propsLabel: 'number',\n          placeholder: selectPlaceholder\n        }\n      }, {\n        label: '费用计划号:',\n        if: firstForm.invoiceCategory !== 318,\n        keyword: 'costPlanId',\n        component: 'CostPlanSelect',\n        props: {\n          propsLabel: 'number',\n          placeholder: selectPlaceholder\n        }\n      }, {\n        label: '非现报销:',\n        monopolize: true,\n        if: (0, _utils.hasPower)('INVOICEREIMBURSEEDIT'),\n        keyword: 'isNonCash',\n        component: 'Select',\n        props: {\n          placeholder: selectPlaceholder,\n          options: isNonCashList\n        }\n      }, {\n        label: '工号:',\n        keyword: 'personId',\n        component: 'PersonSelect',\n        props: {\n          propsLabel: 'number',\n          multiple: false,\n          placeholder: selectPlaceholder\n        }\n      }, {\n        label: '姓名:',\n        keyword: 'personName',\n        props: {\n          disabled: true,\n          placeholder: '自动带出'\n        }\n      }, {\n        label: '项目营销费用:',\n        keyword: 'isBussinessFee',\n        component: 'Select',\n        props: {\n          disabled: reimburseTypeDisable,\n          placeholder: selectPlaceholder,\n          options: isBussinessFeeList\n        }\n      }, {\n        label: '金额:',\n        keyword: 'applicationAmount',\n        props: {\n          disabled: true,\n          placeholder: '自动计算'\n        }\n      }, {\n        label: '业务信息工程:',\n        if: firstForm.isBussinessFee === 1,\n        keyword: 'bussinessInfoId',\n        component: 'BussinessInfoSelect',\n        props: {\n          placeholder: selectPlaceholder\n        }\n      }, {\n        label: '业务信息编号:',\n        if: firstForm.isBussinessFee === 1,\n        value: bussinessInfo.number,\n        props: {\n          disabled: true,\n          placeholder: '自动带出'\n        }\n      }, {\n        label: '事由:',\n        keyword: 'summary',\n        props: {\n          placeholder: inputPlaceholder,\n          type: 'textarea'\n        }\n      }, {\n        label: '备注:',\n        keyword: 'remark',\n        props: {\n          placeholder: inputPlaceholder,\n          type: 'textarea'\n        }\n      }, {\n        label: '发票附件:',\n        keyword: 'invoiceFileList',\n        component: 'UpFile',\n        props: {\n          isUpfile: !disabled,\n          isDelete: !disabled,\n          fileSize: 100,\n          isPreview: true\n        }\n      }, {\n        label: '其他附件:',\n        keyword: 'fileList',\n        component: 'UpFile',\n        props: {\n          isUpfile: !disabled,\n          isDelete: !disabled,\n          fileSize: 100,\n          isPreview: true\n        }\n      }];\n    }\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    next(function (vm) {\n      var newId = vm.$route.query.id;\n      var oldId = vm.firstForm.id;\n      var type = vm.$route.query.type;\n      vm.InitInvoiceReimburseSelect();\n\n      if (type === 'edit' && newId !== oldId) {\n        // 说明是打开另一个单子的编辑页面\n        vm.firstForm.id = newId;\n        vm.initForm();\n        vm.initDataById(newId);\n        vm.active = 1;\n      } else {\n        var form = vm.firstForm;\n        var _vm$$store$state$user = vm.$store.state.user,\n            _vm$$store$state$user2 = _vm$$store$state$user.info,\n            uid = _vm$$store$state$user2.uid,\n            userName = _vm$$store$state$user2.userName,\n            name = _vm$$store$state$user2.name,\n            selectOrgId = _vm$$store$state$user.selectOrgId;\n        vm.user = {\n          id: uid,\n          number: userName,\n          name: name\n        };\n        form.companyId = selectOrgId;\n        form.personName = name;\n        form.personNumber = userName;\n        form.personId = uid;\n\n        if (type === 'add' && oldId) {\n          vm.initForm();\n          vm.active = 1;\n        }\n      }\n    });\n  },\n  methods: {\n    // 根据部门id获取账套信息\n    getAccount: function getAccount(id) {\n      var _this2 = this;\n\n      (0, _accountSet.getAccountSetByOrgId)({\n        orgId: id\n      }).then(function (res) {\n        _this2.filter.accountList = res.data;\n\n        if (_this2.filter.accountList.length === 1) {\n          _this2.firstForm.accountId ? '' : _this2.firstForm.accountId = _this2.filter.accountList[0].id;\n        }\n      });\n    },\n    initForm: function initForm() {\n      var _this3 = this;\n\n      Object.assign(this.$data.firstForm, this.$options.data().firstForm);\n      this.$nextTick(function () {\n        _this3.$refs.firstForm.clearValidate();\n\n        _this3.$data.invoiceReimburseTable.list = [{\n          id: 0,\n          invoiceReimburseId: 0,\n          invoiceCategory: 0,\n          invoiceCategoryName: '',\n          // 发票类别名称\n          invoiceCode: '',\n          invoiceNum: '',\n          // 票号\n          applicationAmount: '',\n          tax: '',\n          taxAmount: '',\n          excludeTaxAmount: '',\n          remark: ''\n        }];\n      });\n    },\n    // 获取人员工号信息\n    selectPerson: function selectPerson(user) {\n      this.firstForm.personNumber = user.number;\n      this.firstForm.personName = user.name;\n    },\n    // 获取业务信息编号\n    getBussinessInfo: function getBussinessInfo(row) {\n      this.bussinessInfo = row;\n    },\n    // 报销类型选择工人发票时, 项目营销费用固定选中否 并且禁止修改\n    setIsBussinessFee: function setIsBussinessFee(val) {\n      if (val === 2) {\n        this.reimburseTypeDisable = true;\n        this.firstForm.isBussinessFee = 0;\n      } else {\n        this.reimburseTypeDisable = false;\n        this.firstForm.isBussinessFee = 1;\n      }\n    },\n\n    /*\r\n      初始化选择框数据\r\n    */\n    InitInvoiceReimburseSelect: function InitInvoiceReimburseSelect() {\n      var _this4 = this;\n\n      (0, _InvoiceReimburse.InitInvoiceReimburse)().then(function (res) {\n        _this4.filter.reimburseTypeList = res.reimburseTypeList; // 报销类型\n\n        _this4.filter.invoiceTypeList = res.invoiceTypeList; // 发票类型\n\n        _this4.filter.invoiceCategoryList = res.invoiceCategoryList.filter(function (e) {\n          return e.pId === 0;\n        }); // 发票类别\n\n        var tmp = res.invoiceCategoryList.map(function (item) {\n          return (0, _objectSpread2.default)((0, _objectSpread2.default)({}, item), {}, {\n            pid: item.pId\n          });\n        });\n        _this4.filter.allInvoiceCategoryList = _this4.utils.getTree(0, tmp);\n        res.taxList.forEach(function (e) {\n          e.label = e.name;\n        });\n        _this4.filter.taxList = res.taxList; // 默认的业务招待费筛选二级选项\n\n        _this4.filterSelect(_this4.firstForm.invoiceCategory);\n      });\n    },\n    // 通过发票类别筛选表格的发票类别选项\n    filterSelect: function filterSelect(val) {\n      var _this5 = this;\n\n      if (val === 318) {\n        this.firstForm.isBussinessFee = 1;\n      } else {\n        this.firstForm.isBussinessFee = 0;\n      }\n\n      this.filter.secondList = this.filter.allInvoiceCategoryList.filter(function (e) {\n        return e.id === val;\n      });\n      var labelName = '';\n\n      if (!this.filter.secondList[0].children) {\n        labelName = this.filter.secondList[0].name;\n      }\n\n      this.tableSelect = this.filter.secondList[0].name;\n      this.$nextTick(function () {\n        _this5.invoiceReimburseTable.list = _this5.invoiceReimburseTable.list.map(function (item) {\n          return (0, _objectSpread2.default)((0, _objectSpread2.default)({}, item), {}, {\n            invoiceCategory: val,\n            invoiceCategoryName: labelName\n          });\n        });\n      });\n    },\n\n    /**\r\n     * @description: 根据id获取数据并且初始化选项框数据\r\n     */\n    initDataById: function initDataById(id) {\n      var _this6 = this;\n\n      (0, _InvoiceReimburse.GetInvoiceReimburseById)({\n        id: id\n      }).then(function (res) {\n        var form = _this6.firstForm;\n\n        for (var key in form) {\n          if (Object.hasOwnProperty.call(form, key)) {\n            form[key] = res.data[key] || form[key];\n          }\n        }\n\n        form.isBussinessFee = Number(form.isBussinessFee);\n        form.isNonCash = Number(form.isNonCash);\n        _this6.bussinessInfo = res.data.bussinessInfo ? res.data.bussinessInfo : {\n          number: ''\n        };\n        _this6.invoiceReimburseTable.list = res.data.invoiceReimburseDetails;\n        _this6.filter.secondList = _this6.filter.allInvoiceCategoryList.filter(function (e) {\n          return e.id === res.data.invoiceCategory;\n        });\n        form.billFlow = res.billFlowData;\n        form.fileList = res.data.upFile;\n        form.invoiceFileList = res.data.invoiceUpFile;\n\n        _this6.getAccount(form.orgId);\n      });\n    },\n\n    /*\r\n     *下一步\r\n     */\n    nextStep: function nextStep(formName) {\n      var _this7 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          // 组装招待费计划信息\n          // 设置flag 只要有一项没填 就设置为false\n          var flage = true;\n          var messageType = 1;\n\n          _this7.invoiceReimburseTable.list.forEach(function (e) {\n            if (e.invoiceCategoryName === '' || e.applicationAmount === '' || e.invoiceNum === '' || e.invoiceCode === '' || e.tax === '') {\n              flage = false;\n              messageType = 1;\n            }\n\n            delete e.id;\n          }); // 判断是票号和发票代码是否都重复\n\n\n          if (!_this7.formatCope(_this7.invoiceReimburseTable.list, 'invoiceCode') && !_this7.formatCope(_this7.invoiceReimburseTable.list, 'invoiceNum')) {\n            flage = false;\n            messageType = 2;\n          }\n\n          if (!flage) {\n            messageType === 1 ? _this7.$message('请将申请信息填写完整!') : _this7.$message('发票代码和票号不能都重复!');\n            return false;\n          }\n\n          _this7.getBillFlow();\n        }\n      });\n    },\n    getBillFlow: function getBillFlow() {\n      var _this8 = this;\n\n      // 组装招待费计划信息\n      this.firstForm.invoiceReimburseDetails = (0, _toConsumableArray2.default)(this.invoiceReimburseTable.list); // 获取流程数据\n\n      var _this$firstForm = this.firstForm,\n          state = _this$firstForm.state,\n          billFlow = _this$firstForm.billFlow;\n      var req = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, this.firstForm), {}, {\n        state: state || 0\n      });\n      if (billFlow) req.billFlowId = billFlow.id;\n      delete req.billFlow;\n      delete req.number;\n      (0, _InvoiceReimburse.GetBillFlow)(req).then(function (_ref6) {\n        var data = _ref6.data,\n            success = _ref6.success,\n            message = _ref6.message;\n\n        if (success) {\n          _this8.firstForm.billFlow = data.billFlow;\n\n          _this8.setActive(2);\n        } else {\n          _this8.$message.error(message);\n        }\n      });\n    },\n\n    /**\r\n     * 修改填报进度\r\n     */\n    setActive: function setActive(active) {\n      if (active === 1) {\n        this.invoiceReimburseTable.list.forEach(function (e, i) {\n          e.id = i;\n        });\n      }\n\n      this.active = active;\n    },\n\n    /**\r\n     * 提交表单\r\n     * @param {Number} state 提交类型，0：保存；1：提交; 10000: 修改\r\n     */\n    submitForm: function submitForm(state) {\n      var _this9 = this;\n\n      var req = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, this.firstForm), {}, {\n        state: state\n      });\n      delete req.number;\n\n      if (this.firstForm.billFlow) {\n        // 获取流程组件中的数据\n        var billFlow = this.$refs.flowSelect.getBillFlow();\n\n        if (!billFlow) {\n          return false;\n        }\n\n        req.billFlow = billFlow;\n      } else {\n        this.$message.error('流程数据不能为空');\n        return;\n      }\n\n      if (req.id) {\n        (0, _InvoiceReimburse.PutInvoiceReimburse)(req).then(function (res) {\n          // 更新\n          _this9.$message.success('保存成功');\n\n          _this9.back();\n        });\n      } else {\n        this.addbtnLoad = true;\n        (0, _InvoiceReimburse.AddInvoiceReimburse)(req).then(function () {\n          // 添加\n          _this9.$message.success('提交成功');\n\n          _this9.back();\n        }).catch(function () {\n          _this9.addbtnLoad = false;\n        }).finally(function () {\n          _this9.addbtnLoad = false;\n        });\n      }\n    },\n    // 作废\n    invalidForm: function invalidForm() {\n      var _this10 = this;\n\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        return (0, _InvoiceReimburse.DeleteInvoiceReimburse)({\n          id: _this10.firstForm.id\n        });\n      }).then(function () {\n        _this10.$message.success('操作成功');\n\n        _this10.back();\n      });\n    },\n\n    /**\r\n     * 返回上一页，并关闭当前页\r\n     */\n    back: function back() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    },\n    // 添加table数据\n    addTable: function addTable() {\n      // 最后一条数据不能删掉 所以新增的一条数据的id 只能取list的最后一条数据的id+1; 直接取list.length会有问题\n      var length = this.invoiceReimburseTable.list.length - 1;\n      var id = this.invoiceReimburseTable.list[length].id + 1;\n      this.invoiceReimburseTable.list.push({\n        id: id,\n        invoiceReimburseId: 0,\n        invoiceCategory: 0,\n        invoiceCategoryName: '',\n        // 发票类别名称\n        invoiceCode: '',\n        invoiceNum: '',\n        // 票号\n        applicationAmount: '',\n        tax: '',\n        taxAmount: '',\n        excludeTaxAmount: '',\n        remark: ''\n      });\n    },\n    // 删除table数据\n    handleDel: function handleDel(row) {\n      var _this11 = this;\n\n      if (this.invoiceReimburseTable.list.length > 1) {\n        this.invoiceReimburseTable.list = this.invoiceReimburseTable.list.filter(function (e) {\n          if (e.id === row.id && e.applicationAmount !== '') {\n            _this11.firstForm.applicationAmount = Number(_this11.firstForm.applicationAmount) - Number(e.applicationAmount);\n          }\n\n          return e.id !== row.id;\n        });\n      }\n    },\n\n    /**\r\n     * 当金额输入框失去焦点后计算申请金额\r\n     */\n    calculateAmount: function calculateAmount(row) {\n      var allAmout = null;\n      this.invoiceReimburseTable.list.forEach(function (el) {\n        allAmout += +el.applicationAmount;\n      });\n      allAmout === 0 ? this.firstForm.applicationAmount = '' : this.firstForm.applicationAmount = allAmout;\n\n      if (this.firstForm.applicationAmount !== '' && row.tax !== '') {\n        row.taxAmount = +row.applicationAmount * row.tax;\n        row.excludeTaxAmount = +row.applicationAmount - row.taxAmount;\n      } else {\n        row.tax = '';\n        row.taxAmount = '';\n        row.excludeTaxAmount = '';\n      }\n    },\n\n    /* 判断数组中的某一项是否重复 */\n    formatCope: function formatCope(list, keyword) {\n      var keywordList = list.map(function (e) {\n        return e[keyword];\n      });\n      var newLst = (0, _toConsumableArray2.default)(new Set(keywordList));\n\n      if (keywordList.length === newLst.length) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }\n};\nexports.default = _default2;",null]}