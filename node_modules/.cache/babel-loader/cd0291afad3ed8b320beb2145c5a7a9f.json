{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\quotation\\quotationEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\quotation\\quotationEdit.vue","mtime":1628756195067},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.array.find\");\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _quotation = require(\"@/api/cggl/quotation\");\n\nvar _index = _interopRequireDefault(require(\"@/components/OrgSelect/index2\"));\n\nvar _person = require(\"@/api/rsgl/person\");\n\nvar _taskCheck = _interopRequireDefault(require(\"@/views/cggl/task/taskCheck\"));\n\nvar _dictionary = require(\"@/api/xtgl/dictionary\");\n\nvar _quotationSuppliersAdd = _interopRequireDefault(require(\"./quotationSuppliersAdd\"));\n\nvar _quotationSupplier = _interopRequireDefault(require(\"./quotationSupplier\"));\n\nvar _UpFile = _interopRequireDefault(require(\"@/components/UpLoad/UpFile\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'QuotationEdit',\n  components: {\n    OrgSelect2: _index.default,\n    CheckTask: _taskCheck.default,\n    QuotationSuppliersAdd: _quotationSuppliersAdd.default,\n    QuotationSupplier: _quotationSupplier.default,\n    UpFile: _UpFile.default\n  },\n  data: function data() {\n    return {\n      id: null,\n      fid: null,\n      ruleForm: {\n        orgId: null,\n        supplier_id: [],\n        state: 0,\n        taskId: null,\n        times: 1,\n        fileList: []\n      },\n      disabled: false,\n      loading: false,\n      dialogTableVisible: false,\n      dialogTitle: '保存',\n      dialogWidth: '70%',\n      currentRow: null,\n      fileList: [],\n      listIndex: 0,\n      list: [],\n      planTypeList: null,\n      billFlow: false,\n      orgKey: 0,\n      fileListKey: 0,\n      canSubmit: false,\n      columnShow: {\n        unit2: true,\n        brand: true,\n        model: true,\n        spec: true,\n        thickness: true,\n        texture: true,\n        surfaceTreatment: true,\n        designNumber: true\n      },\n      personList: [],\n      // 供应商-参标单位\n      suppliers: [],\n      // 填报方式\n      keyFillMode: 0,\n      fillModeOptions: [],\n      // 供应商星级\n      supplierRateOptions: [],\n      // 参标单位状态\n      quotationSupStateOptions: [],\n      // 多轮报价单\n      quotationList: [],\n      rules: {\n        // orgId: [{ required: true, message: '请选择', trigger: 'change' }],\n        supplierId: [{\n          required: true,\n          message: '请选择',\n          trigger: 'change'\n        }],\n        importType: [{\n          required: true,\n          message: '请选择',\n          trigger: 'blur'\n        }],\n        supplier_id: [{\n          required: true,\n          message: '请选择',\n          trigger: 'blur'\n        }],\n        taskNumber: [{\n          required: true,\n          message: '请选择',\n          trigger: 'blur'\n        }],\n        deadline: [{\n          required: true,\n          message: '请选择',\n          trigger: 'blur'\n        }] // executeStartDate: [{ required: true, message: '请选择', trigger: 'blur' }],\n        // executeEndDate: [{ required: true, message: '请选择', trigger: 'blur' }]\n\n      }\n    };\n  },\n  computed: {\n    getOrgList: function getOrgList() {\n      return this.$store.state.user.info.orgList;\n    }\n  },\n  watch: {// 'ruleForm.orgId': {\n    //   handler: function(value, oldvalue) {\n    //     if (!oldvalue) {\n    //       this.$refs['ruleForm'].validateField('orgId', (valid) => {})\n    //     }\n    //   }, deep: true\n    // }\n  },\n  activated: function activated() {// this.initData()\n  },\n  mounted: function mounted() {\n    this.initData();\n  },\n  methods: {\n    saveForm: function saveForm() {},\n    submitForm: function submitForm(formName, state) {\n      var _this = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var postData = {};\n          var newObj = JSON.parse(JSON.stringify(_this.ruleForm)); // 拼接材料明细参数\n\n          var arr1 = [];\n\n          _this.list.forEach(function (e) {\n            var item = {};\n            item.materialId = e.materialId;\n            item.planDetailId = e.planDetailId;\n            item.state = 0;\n            item.remark = e.remark;\n            arr1.push(item);\n          });\n\n          postData.fId = newObj.fId;\n          postData.orgId = newObj.orgId;\n          postData.taskId = newObj.taskId;\n          postData.useSpace = newObj.useSpace;\n          postData.executeUserId = newObj.executeUserId;\n          postData.executeStartDate = newObj.executeStartDate;\n          postData.executeEndDate = newObj.executeEndDate;\n          postData.deadline = newObj.deadline;\n          postData.times = newObj.times; // postData.planId = newObj.planId\n\n          postData.state = state;\n          postData.remark = newObj.remark;\n          postData.quotationDetails = arr1; // postData.quotationSuppliers = this.suppliers\n\n          _this.loading = true;\n\n          if (_this.id) {\n            postData.id = _this.id;\n          } // 判断供应商列表的填报方式都已填写\n          // var isWrite = true\n          // if (this.suppliers.length > 0) {\n          //   this.suppliers.forEach(e => {\n          //     if (!e.fillMode) {\n          //       this.$alert('请选择参标单位的填报方式！')\n          //       this.loading = false\n          //       isWrite = false\n          //     }\n          //   })\n          // }\n          // if (isWrite) {\n          // }\n\n\n          (0, _quotation.generateQuotation)(postData).then(function (response) {\n            _this.$message(response.message);\n\n            _this.loading = false; // this.setData(response)\n            // this.closeThePage()\n\n            _this.id = response.data;\n            (0, _quotation.getQuotationById)({\n              id: _this.id\n            }).then(function (response) {\n              _this.setData(response);\n            });\n          }).catch(function () {\n            _this.loading = false;\n          });\n        }\n      });\n    },\n    initData: function () {\n      var _initData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var fillmodes, supplierrates, quotationsupstates;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // 用户\n                (0, _person.getPersonList)().then(function (response) {\n                  _this2.personList = response.data;\n                }); // 数据初始化\n\n                if (this.$route.query.id) {\n                  this.id = this.$route.query.id;\n                } // 再次报价\n\n\n                if (this.$route.params.fid) {\n                  this.fid = this.$route.params.fid;\n                }\n\n                fillmodes = [];\n                supplierrates = [];\n                quotationsupstates = [];\n                (0, _dictionary.getDictionarysByTypes)({\n                  types: 'priceListImportType,supplierRate,quotationSupState'\n                }).then(function (response) {\n                  var data = response.data;\n                  data.forEach(function (element) {\n                    element.pid = element.pId;\n\n                    if (element.type === 'priceListImportType') {\n                      fillmodes.push(element);\n                    }\n\n                    if (element.type === 'supplierRate') {\n                      supplierrates.push(element);\n                    }\n\n                    if (element.type === 'quotationSupState') {\n                      quotationsupstates.push(element);\n                    }\n                  });\n                });\n                this.fillModeOptions = fillmodes;\n                this.supplierRateOptions = supplierrates;\n                this.quotationSupStateOptions = quotationsupstates;\n\n                if (this.id) {\n                  (0, _quotation.getQuotationById)({\n                    id: this.id\n                  }).then(function (response) {\n                    _this2.setData(response);\n                  });\n                }\n\n                if (this.fid) {\n                  (0, _quotation.getQuotationByFId)({\n                    fid: this.fid\n                  }).then(function (response) {\n                    _this2.setAgainData(response);\n                  });\n                }\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function initData() {\n        return _initData.apply(this, arguments);\n      }\n\n      return initData;\n    }(),\n    setAgainData: function setAgainData(response) {\n      this.loading = true;\n      var data = response.data,\n          quotationList = response.quotationList,\n          maxTimes = response.maxTimes;\n      var pom = [];\n      data.quotationDetails.forEach(function (e) {\n        pom.push({\n          id: e.id,\n          categoryId: e.material.categoryId,\n          category: {\n            id: e.material.categoryId,\n            name: e.material.materialCategory.name,\n            unit: e.material.materialCategory.unit\n          },\n          unit2: e.material.unit2,\n          brand: e.material.brand,\n          model: e.material.model,\n          spec: e.material.spec,\n          thickness: e.material.thickness,\n          texture: e.material.texture,\n          surfaceTreatment: e.material.surfaceTreatment,\n          designNumber: e.material.designNumber,\n          applicationQuantity: e.planDetail.applicationQuantity,\n          applicationQuantity2: e.planDetail.applicationQuantity2,\n          quantity: e.planDetail.quantity,\n          quantity2: e.planDetail.quantity2,\n          entryDate: e.planDetail.entryDate,\n          remark: e.remark,\n          materialId: e.materialId,\n          planDetailId: e.planDetailId\n        });\n      });\n      this.ruleForm = data;\n      this.ruleForm.taskNumber = data.cgTask.number;\n      this.ruleForm.times = maxTimes;\n      this.ruleForm.id = 0;\n      this.quotationList = quotationList;\n      this.list = pom;\n      this.orgKey++; // 项目组件重新加载\n\n      this.keyFillMode++; // 付款方式组件重新加载\n\n      this.loading = false; // loading 状态关闭\n\n      this.setColumnShow();\n    },\n    setData: function setData(response) {\n      var _this3 = this;\n\n      this.loading = true;\n      var data = response.data;\n\n      if (data.state > 0) {\n        this.closeThePage();\n      }\n\n      var pom = [];\n      data.quotationDetails.forEach(function (e) {\n        pom.push({\n          id: e.id,\n          categoryId: e.material.categoryId,\n          category: {\n            id: e.material.categoryId,\n            name: e.material.materialCategory.name,\n            unit: e.material.materialCategory.unit\n          },\n          unit2: e.material.unit2,\n          brand: e.material.brand,\n          model: e.material.model,\n          spec: e.material.spec,\n          thickness: e.material.thickness,\n          texture: e.material.texture,\n          surfaceTreatment: e.material.surfaceTreatment,\n          designNumber: e.material.designNumber,\n          applicationQuantity: e.planDetail.applicationQuantity,\n          applicationQuantity2: e.planDetail.applicationQuantity2,\n          quantity: e.planDetail.quantity,\n          quantity2: e.planDetail.quantity2,\n          entryDate: e.planDetail.entryDate,\n          remark: e.remark,\n          materialId: e.materialId,\n          planDetailId: e.planDetailId\n        });\n      }); // 填充参数\n\n      this.ruleForm = data;\n      this.quotationList = data.quotationList;\n      this.orgKey++; // 项目重新赋值\n\n      this.suppliers = data.supplier; // 是否可以提交\n\n      var isCan = false;\n      data.supplier.forEach(function (e) {\n        if (e.state >= 2) {\n          isCan = true;\n        }\n      });\n      this.canSubmit = isCan;\n      this.keyFillMode += 1;\n      this.suppliers.forEach(function (e) {\n        // if (e.state === 0) {\n        //   this.canSend = true\n        // } else {\n        //   this.disabled = true\n        // }\n        if (e.state !== 0) {\n          _this3.disabled = true;\n        }\n      }); // 填充 明细列表\n\n      this.list = pom;\n      this.loading = false; // loading 状态关闭\n\n      this.setColumnShow();\n    },\n    setColumnShow: function setColumnShow() {\n      // 设置列的显示。列中，都没有值，就隐藏\n      var modelunit2 = false;\n      var modelbrand = false;\n      var modelmodel = false;\n      var modelspec = false;\n      var modelthickness = false;\n      var modeltexture = false;\n      var modelsurfaceTreatment = false;\n      var modeldesignNumber = false;\n\n      var _iterator = (0, _createForOfIteratorHelper2.default)(this.list),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var row = _step.value;\n\n          if (row.unit2) {\n            modelunit2 = true;\n          }\n\n          if (row.brand) {\n            modelbrand = true;\n          }\n\n          if (row.model) {\n            modelmodel = true;\n          }\n\n          if (row.spec) {\n            modelspec = true;\n          }\n\n          if (row.thickness) {\n            modelthickness = true;\n          }\n\n          if (row.texture) {\n            modeltexture = true;\n          }\n\n          if (row.surfaceTreatment) {\n            modelsurfaceTreatment = true;\n          }\n\n          if (row.designNumber) {\n            modeldesignNumber = true;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      this.columnShow['unit2'] = modelunit2;\n      this.columnShow['brand'] = modelbrand;\n      this.columnShow['model'] = modelmodel;\n      this.columnShow['spec'] = modelspec;\n      this.columnShow['thickness'] = modelthickness;\n      this.columnShow['texture'] = modeltexture;\n      this.columnShow['surfaceTreatment'] = modelsurfaceTreatment;\n      this.columnShow['designNumber'] = modeldesignNumber;\n    },\n    closeThePage: function closeThePage() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    },\n    dialogClose: function dialogClose(data, state) {\n      this.addMaterial(data, state);\n      this.setColumnShow();\n      this.dialogTableVisible = false;\n    },\n    checkTask: function checkTask() {\n      this.dialogTitle = '选择任务单';\n      this.comName = 'CheckTask';\n      this.dialogWidth = '100%';\n\n      if (this.ruleForm.times > 1) {\n        this.currentRow = this.ruleForm;\n      }\n\n      this.fileList = [];\n      this.dialogTableVisible = true;\n    },\n    getRemotePerson: function getRemotePerson(query) {\n      var _this4 = this;\n\n      if (query.length > 0) {\n        query = query.trim();\n        setTimeout(function () {\n          (0, _person.getPersonList)({\n            name: query\n          }).then(function (response) {\n            _this4.personList = response.data;\n          });\n        }, 200);\n      } else {\n        (0, _person.getPersonList)().then(function (response) {\n          _this4.personList = response.data;\n        });\n      }\n    },\n    addMaterial: function addMaterial(data, state) {\n      var _this5 = this;\n\n      if (state === 'add') {\n        var times = this.ruleForm.times;\n        this.ruleForm = {\n          orgId: data.form.orgId,\n          taskNumber: data.form.number,\n          taskId: data.form.id,\n          executeUserId: data.form.buyerId,\n          planId: data.form.planId,\n          state: 0,\n          times: times\n        };\n        this.orgKey++;\n        var pom = [];\n        data.list.forEach(function (e) {\n          pom.push({\n            categoryId: e.categoryId,\n            category: e.category,\n            unit2: e.unit2,\n            brand: e.brand,\n            model: e.model,\n            spec: e.spec,\n            thickness: e.thickness,\n            texture: e.texture,\n            surfaceTreatment: e.surfaceTreatment,\n            designNumber: e.designNumber,\n            applicationQuantity: e.applicationQuantity,\n            applicationQuantity2: e.applicationQuantity2,\n            quantity: e.quantity,\n            quantity2: e.quantity2,\n            entryDate: e.entryDate,\n            remark: e.remark,\n            materialId: e.materialId,\n            planDetailId: e.id\n          });\n        });\n        this.list = pom;\n      } else if (state === 'addSuppliers') {\n        // 新增参标单位\n        data.list.forEach(function (e) {\n          var arr = {}; // arr.id = 0\n\n          arr.quotationId = _this5.id;\n          arr.supplierId = e.supplierId;\n          arr.state = 0;\n          arr.contacts = e.contacts;\n          arr.contactsPhone = e.contactsPhone; // arr.fillMode = null\n\n          arr.supplier = e;\n\n          _this5.suppliers.push(arr);\n        });\n        (0, _quotation.addQuotationSupplier)(this.suppliers).then(function (response) {\n          _this5.suppliers = response.data; // this.initData()\n          // this.$alert('添加成功！')\n        });\n      } else {\n        this.initData();\n      }\n    },\n    getSupplierRate: function getSupplierRate(rate) {\n      var supplierRate = this.supplierRateOptions.find(function (f) {\n        return f.value === rate;\n      });\n      return supplierRate.name;\n    },\n    addSupplier: function addSupplier() {\n      this.dialogTitle = '选择参标单位';\n      this.comName = 'QuotationSuppliersAdd';\n      this.currentRow = this.suppliers;\n      this.dialogWidth = '100%';\n      this.fileList = [];\n      this.dialogTableVisible = true;\n    },\n    del: function del(d) {\n      var _this6 = this;\n\n      // 删除数据库这一条数据\n      (0, _quotation.deleteQuotationSupplier)(d).then(function (response) {\n        _this6.suppliers = response.data; // this.initData()\n      });\n    },\n    getquotationSupState: function getquotationSupState(state) {\n      var quotationSupplier = this.quotationSupStateOptions.find(function (f) {\n        return f.value === state;\n      });\n      return quotationSupplier.name;\n    },\n    send: function send() {\n      var _this7 = this;\n\n      this.loading = true;\n      (0, _quotation.sendQuotationSupplier)(this.suppliers).then(function (response) {\n        _this7.suppliers = response.data;\n        _this7.loading = false;\n\n        _this7.initData();\n\n        _this7.$message.error(response.message);\n      });\n    },\n    fill: function fill(row) {\n      this.dialogTitle = row.row.supplier.name + '-填报';\n      this.comName = 'QuotationSupplier';\n      this.currentRow = row.row;\n      this.dialogWidth = '100%';\n      this.fileList = [];\n      this.dialogTableVisible = true;\n    },\n    attitude: function attitude() {\n      this.closeThePage();\n      this.$router.push({\n        name: 'QuotationAttitude',\n        query: {\n          id: this.id,\n          refreshRouterName: this.$route.name\n        },\n        params: {\n          id: this.id\n        }\n      });\n    },\n    detail: function detail(row) {\n      this.$router.push({\n        name: 'QuotationAttitude',\n        query: {\n          id: row.id,\n          refreshRouterName: this.$route.name\n        },\n        params: {\n          id: row.id\n        }\n      });\n    },\n    getOrgName: function getOrgName(id) {\n      var orgList = this.getOrgList.find(function (f) {\n        return f.id === id;\n      });\n\n      if (orgList) {\n        return orgList.name;\n      } else {\n        return '';\n      }\n    } // openTask(taskId) {\n    //   this.$router.push({ name: 'TaskDetail', query: { id: taskId, refreshRouterName: this.$route.name, tab: 'detail' }, params: { id: taskId, isCheck: false }})\n    // },\n\n  }\n};\nexports.default = _default;",null]}