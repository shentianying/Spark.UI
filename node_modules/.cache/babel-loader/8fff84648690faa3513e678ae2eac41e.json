{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\task\\taskDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\task\\taskDetail.vue","mtime":1627105574193},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _task = require(\"@/api/cggl/task\");\n\nvar _UpFile = _interopRequireDefault(require(\"@/components/UpLoad/UpFile\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'TaskDetail',\n  components: {\n    UpFile: _UpFile.default\n  },\n  data: function data() {\n    return {\n      ruleForm: {\n        number: '',\n        planId: null,\n        planNumber: '',\n        orgId: null,\n        orgStr: '',\n        materialTypeName: '',\n        buyerId: null,\n        fileList: [],\n        remark: ''\n      },\n      isCheck: false,\n      loading: false,\n      showbuttons: false,\n      loadFlow: false,\n      dialogTableVisible: false,\n      dialogTitle: '保存',\n      dialogWidth: '70%',\n      currentRow: null,\n      listIndex: 0,\n      list: [],\n      attitudePara: null,\n      fileList: [],\n      columnShow: {\n        unit2: true,\n        brand: true,\n        model: true,\n        spec: true,\n        thickness: true,\n        texture: true,\n        surfaceTreatment: true,\n        designNumber: true\n      },\n      rules: {// number: [{ required: true, message: '请输入', trigger: 'blur' }],\n        // buyerId: [{ required: true, message: '请输入', trigger: 'change' }]\n      }\n    };\n  },\n  computed: {\n    getOrgList: function getOrgList() {\n      return this.$store.state.user.info.orgList;\n    }\n  },\n  watch: {// 'ruleForm.orgId': {\n    //   handler: function(value, oldvalue) {\n    //     if (!oldvalue) {\n    //       this.$refs['ruleForm'].validateField('orgId', (valid) => {})\n    //     }\n    //   }, deep: true\n    // }\n  },\n  activated: function activated() {},\n  mounted: function mounted() {\n    this.initData();\n\n    if (this.$route.params.isCheck === true) {\n      this.isCheck = true;\n    }\n  },\n  methods: {\n    initData: function () {\n      var _initData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.$route.params.id) {\n                  this.loading = true;\n                  (0, _task.getCGTaskById)({\n                    id: this.$route.params.id\n                  }).then(function (response) {\n                    var data = response.data,\n                        orgStr = response.orgStr;\n                    _this.ruleForm = {\n                      number: data.number,\n                      person: data.person.name,\n                      orgId: data.orgId,\n                      orgStr: orgStr,\n                      fileList: data.upFile.filter(function (f) {\n                        return f.tableId === data.id;\n                      }),\n                      remark: data.remark\n                    };\n                    var pom = [];\n                    data.planDetails.forEach(function (e) {\n                      pom.push({\n                        id: e.id,\n                        categoryId: e.material.categoryId,\n                        category: {\n                          id: e.material.categoryId,\n                          name: e.material.materialCategory.name,\n                          unit: e.material.materialCategory.unit,\n                          isMain: e.material.materialCategory.isMain\n                        },\n                        unit: e.material.unit,\n                        unit2: e.material.unit2,\n                        brand: e.material.brand,\n                        model: e.material.model,\n                        spec: e.material.spec,\n                        thickness: e.material.thickness,\n                        texture: e.material.texture,\n                        surfaceTreatment: e.material.surfaceTreatment,\n                        designNumber: e.material.designNumber,\n                        applicationQuantity: e.applicationQuantity,\n                        applicationQuantity2: e.applicationQuantity2,\n                        quantity: e.quantity,\n                        quantity2: e.quantity2,\n                        entryDate: e.entryDate,\n                        remark: e.remark,\n                        state: e.state\n                      });\n                    });\n                    _this.list = pom;\n                  });\n                  this.loading = false;\n                  this.setColumnShow();\n                }\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function initData() {\n        return _initData.apply(this, arguments);\n      }\n\n      return initData;\n    }(),\n    closeThePage: function closeThePage() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    },\n    setColumnShow: function setColumnShow() {\n      // 设置列的显示。列中，都没有值，就隐藏\n      var modelunit2 = false;\n      var modelbrand = false;\n      var modelmodel = false;\n      var modelspec = false;\n      var modelthickness = false;\n      var modeltexture = false;\n      var modelsurfaceTreatment = false;\n      var modeldesignNumber = false;\n\n      var _iterator = (0, _createForOfIteratorHelper2.default)(this.list),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var row = _step.value;\n\n          if (row.unit2) {\n            modelunit2 = true;\n          }\n\n          if (row.brand) {\n            modelbrand = true;\n          }\n\n          if (row.model) {\n            modelmodel = true;\n          }\n\n          if (row.spec) {\n            modelspec = true;\n          }\n\n          if (row.thickness) {\n            modelthickness = true;\n          }\n\n          if (row.texture) {\n            modeltexture = true;\n          }\n\n          if (row.surfaceTreatment) {\n            modelsurfaceTreatment = true;\n          }\n\n          if (row.designNumber) {\n            modeldesignNumber = true;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      this.columnShow['unit2'] = modelunit2;\n      this.columnShow['brand'] = modelbrand;\n      this.columnShow['model'] = modelmodel;\n      this.columnShow['spec'] = modelspec;\n      this.columnShow['thickness'] = modelthickness;\n      this.columnShow['texture'] = modeltexture;\n      this.columnShow['surfaceTreatment'] = modelsurfaceTreatment;\n      this.columnShow['designNumber'] = modeldesignNumber;\n    },\n    // showFileList(fileList) {\n    //   this.dialogTitle = '附件列表'\n    //   this.comName = 'UpFile'\n    //   this.dialogWidth = '50%'\n    //   this.fileList = fileList\n    //   this.dialogTableVisible = true\n    // },\n    dialogClose: function dialogClose() {\n      this.initData();\n      this.dialogTableVisible = false;\n    },\n    check: function check() {\n      var _this2 = this;\n\n      this.loading = true;\n      (0, _task.checkCGTaskById)({\n        id: this.$route.params.id\n      }).then(function (response) {\n        if (response.result === 400) {\n          _this2.$alert(\"\".concat(response.msg.replace(/；/g, '；<br />')), {\n            dangerouslyUseHTMLString: true\n          });\n        } else {\n          _this2.$message(response.message);\n        }\n\n        _this2.loading = false;\n\n        _this2.closeThePage();\n      }).catch(function () {\n        _this2.loading = false;\n      });\n    }\n  }\n};\nexports.default = _default;",null]}