{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\zjgl\\shouKuan\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\zjgl\\shouKuan\\edit.vue","mtime":1630029466056},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/objectSpread2\"));\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _zjsk = require(\"@/api/cwgl/zjgl/zjsk.js\");\n\nvar _pikazExcelJs = require(\"pikaz-excel-js\");\n\nvar _validate = require(\"@/utils/validate\");\n\nvar _index = require(\"@/utils/index\");\n\nvar _person = require(\"@/api/rsgl/person\");\n\nvar _OrgSelect = _interopRequireDefault(require(\"@/components/SearchBar/OrgSelect\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'ShouKuanEdit',\n  // 局部注册的组件\n  components: {\n    ExcelImport: _pikazExcelJs.ExcelImport,\n    ExcelExport: _pikazExcelJs.ExcelExport,\n    TreeSelect: _OrgSelect.default\n  },\n  filters: {\n    /**\r\n     * @description: 时间过滤器\r\n     * @param {Date} val\r\n     * @return {String} 年-月-日\r\n     */\n    date: function date(val) {\n      return new Date(val).toLocaleDateString().replaceAll('/', '-');\n    }\n  },\n  // 组件状态值\n  data: function data() {\n    return {\n      size: 'mini',\n      // 整体大小\n      personList: [],\n      // 经手人组\n      skForm: {\n        id: '',\n        gatheringDate: '',\n        acceptanceList: [],\n        number: '',\n        // 收款编号\n        orgId: '',\n        // 部门\n        gatheringType: '',\n        // 收款类型\n        capitalType: '',\n        // 资金类型\n        date1: '',\n        // 收款日期\n        personId: '',\n        // 经手人ID\n        personName: '',\n        // 经手人\n        amount: '',\n        // 金额\n        bank: '',\n        // 银行\n        remark: '' // 备注\n\n      },\n      sheet: [{\n        // title: '材料计划导入模板',\n        tHeader: ['票号', '开票时间', '到期日期', '金额', '出票人', '付款人', '收款人', '付款行', '备注'],\n        table: [],\n        keys: ['string', 'datetime', 'datetime', 'decimal', 'string', 'string', 'string', 'string', 'string'],\n        sheetName: '材料明细'\n      }],\n      sklxData: [],\n      zjlxData: [],\n      // 验证规则\n      rules: {\n        orgId: [{\n          required: true,\n          message: '请选择部门',\n          trigger: 'blur'\n        }],\n        gatheringType: [{\n          required: true,\n          message: '请选择收款类型',\n          trigger: 'change'\n        }],\n        capitalType: [{\n          required: true,\n          message: '请选择资金类型',\n          trigger: 'change'\n        }],\n        gatheringDate: [{\n          type: 'date',\n          required: true,\n          message: '请选择日期',\n          trigger: 'blur'\n        }],\n        personId: [{\n          required: true,\n          message: '请选择经手人',\n          trigger: 'blur'\n        }],\n        amount: [{\n          required: true,\n          message: '请输入金额',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created: function created() {\n    this.skForm.id = this.$route.params.id;\n    this.getPersonList();\n\n    if (this.skForm.id) {\n      this.getskForm();\n    } else {\n      this.getOptions();\n    }\n  },\n  // 组件方法\n  methods: {\n    invalidGathering: function () {\n      var _invalidGathering = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                (0, _zjsk.InvalidGathering)(this.skForm.id).then(function (res) {\n                  _this.$message.success(res.message);\n                }).catch(function (err) {\n                  console.log(err); // this.$message.error(err.errorMsg || '操作失败')\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function invalidGathering() {\n        return _invalidGathering.apply(this, arguments);\n      }\n\n      return invalidGathering;\n    }(),\n    onSuccess: function onSuccess(d, file) {\n      var _this2 = this;\n\n      var data = d[0].data;\n      console.log('数据为空的字段data中不会有该字段:', data);\n\n      if (data.length) {\n        var postData = [];\n        var errorMessage = '';\n\n        var _iterator = (0, _createForOfIteratorHelper2.default)(data),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var e = _step.value;\n\n            if (!e.材料名称) {\n              errorMessage += '第' + e.__rowNum__ + '行，材料名称不能为空；';\n            }\n\n            if (!e.主数量) {\n              errorMessage += '第' + e.__rowNum__ + '行，主数量不能为空；';\n            } else {\n              if (!_validate.validateData.dbl(e.主数量.trim()).isSuccess) {\n                errorMessage += '第' + e.__rowNum__ + '行，主数量必须是数字；';\n              }\n            } // 辅单位不为空，辅数量不能为空\n\n\n            if (e.辅单位) {\n              if (!e.辅数量) {\n                errorMessage += '第' + e.__rowNum__ + '行，辅单位不为空，辅数量不能为空；';\n              } else {\n                if (!_validate.validateData.dbl(e.辅数量.trim()).isSuccess) {\n                  errorMessage += '第' + e.__rowNum__ + '行，辅数量必须是数字；';\n                }\n              }\n            }\n\n            if (!e.进场日期) {\n              errorMessage += '第' + e.__rowNum__ + '行，进场日期不能为空；';\n            } else {\n              var convertDate = (0, _index.formatExcelDate)(e.进场日期.trim()); // console.log('数字格式化后的日期：', convertDate)\n\n              if (!_validate.validateData.date(convertDate).isSuccess) {\n                errorMessage += '第' + e.__rowNum__ + '行，进场日期格式错误；';\n              }\n            }\n\n            this.loading = true;\n\n            if (errorMessage.length > 0) {\n              this.$alert(\"\".concat(errorMessage.replace(/；/g, '；<br />')), {\n                dangerouslyUseHTMLString: true\n              });\n              this.loading = false;\n              return;\n            }\n\n            var obj1 = {};\n            var obj2 = {};\n            var detailCols = ['ApplicationQuantity', 'ApplicationQuantity2', 'EntryDate', 'Remark'];\n            this.sheet[0].keys.forEach(function (v, i) {\n              var value = e[_this2.sheet[0].tHeader[i]]; // 清除空格 回车 换行符\n\n              if (value) {\n                value = (0, _index.cleanText)(value);\n              } else {\n                value = '';\n              } // console.log('v:' + v + ';value:' + value)\n\n\n              if (v === 'EntryDate') {\n                value = (0, _index.formatExcelDate)(e.进场日期);\n              }\n\n              if (detailCols.includes(v)) {\n                obj1[v] = value;\n              } else {\n                obj2[v] = value;\n              }\n            });\n            obj1['Material'] = obj2;\n            postData.push(obj1);\n          } // console.log('postData:', postData)\n          // 把数据推送到后端进行验证\n          // console.log('responseData:', response.data)\n\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        if (postData) {\n          // 拼接成数组对象\n          var _iterator2 = (0, _createForOfIteratorHelper2.default)(postData),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var item1 = _step2.value;\n              var _obj = {\n                categoryId: item1.material.categoryId,\n                category: {\n                  id: item1.material.categoryId,\n                  name: item1.material.categoryName\n                },\n                // unit: item1.material.unit,\n                unit2: item1.material.unit2,\n                brand: item1.material.brand,\n                model: item1.material.model,\n                spec: item1.material.spec,\n                thickness: item1.material.thickness,\n                texture: item1.material.texture,\n                surfaceTreatment: item1.material.surfaceTreatment,\n                designNumber: item1.material.designNumber,\n                applicationQuantity: item1.applicationQuantity,\n                applicationQuantity2: item1.applicationQuantity2,\n                quantity: item1.applicationQuantity,\n                quantity2: item1.applicationQuantity2,\n                entryDate: item1.entryDate,\n                remark: item1.remark // fileList: []\n\n              };\n              this.addMaterial(_obj, 'add');\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n\n          this.setColumnShow();\n        }\n      }\n    },\n\n    /**\r\n     * @description: 获取经手人列表\r\n     */\n    getPersonList: function getPersonList() {\n      var _this3 = this;\n\n      (0, _person.getPersonList)().then(function (response) {\n        _this3.personList = response.data;\n      });\n    },\n    // 获取资金类型、收款类型选项\n    getOptions: function () {\n      var _getOptions = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _yield$GetGatheringPa, capitalTypeOptions, gatheringTypeOptions;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _zjsk.GetGatheringPaging)({\n                  currentPage: 1,\n                  pageSize: 1\n                });\n\n              case 2:\n                _yield$GetGatheringPa = _context2.sent;\n                capitalTypeOptions = _yield$GetGatheringPa.capitalTypeOptions;\n                gatheringTypeOptions = _yield$GetGatheringPa.gatheringTypeOptions;\n                this.sklxData = gatheringTypeOptions;\n                this.zjlxData = capitalTypeOptions;\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getOptions() {\n        return _getOptions.apply(this, arguments);\n      }\n\n      return getOptions;\n    }(),\n    // 获取收款信息数据\n    getskForm: function getskForm() {\n      var _this4 = this;\n\n      (0, _zjsk.GetPaymentById)(this.skForm.id).then(function (res) {\n        var code = res.code,\n            data = res.data,\n            gatheringTypeOptions = res.gatheringTypeOptions,\n            capitalTypeOptions = res.capitalTypeOptions;\n\n        if (code === 200) {\n          for (var key in _this4.skForm) {\n            if (Object.hasOwnProperty.call(_this4.skForm, key)) {\n              _this4.skForm[key] = data[key];\n            }\n          }\n\n          if (Array.isArray(_this4.skForm.acceptanceList)) {\n            _this4.skForm.acceptanceList.forEach(function (ele) {\n              _this4.$set(ele, 'isEdit', false);\n\n              _this4.$set(ele, 'backups', JSON.stringify(ele));\n            });\n          }\n\n          _this4.sklxData = gatheringTypeOptions;\n          _this4.zjlxData = capitalTypeOptions;\n        }\n      }).catch(function (err) {\n        console.log(err); // this.$message.error(err.errorMsg)\n      });\n    },\n\n    /**\r\n     * 序号+0\r\n     * @params:{number||string}\r\n     * @return：index\r\n     */\n    indexMethod: function indexMethod(index) {\n      index = String(index + 1);\n      var length = index.length;\n\n      if (index.length < 2) {\n        for (var i = 0; i < 2 - length; i++) {\n          index = '0' + index;\n        }\n\n        return index;\n      } else {\n        return index;\n      }\n    },\n    handleEdit: function handleEdit(row) {\n      this.$set(row, 'isEdit', true);\n    },\n    handleSubmitEdit: function handleSubmitEdit(row) {\n      this.$set(row, 'isEdit', false);\n    },\n\n    /**\r\n     * @description: 列表行内编辑取消修改\r\n     * @param {*} row\r\n     * @return {*}\r\n     */\n    handleCancelEdit: function handleCancelEdit(row) {\n      Object.assign(row, JSON.parse(row.backups));\n    },\n    submitForm: function () {\n      var _submitForm = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var AcceptanceList, data, res;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                AcceptanceList = this.skForm.acceptanceList.map(function (item) {\n                  var tmp = (0, _objectSpread2.default)({}, item);\n                  delete tmp.isEdit;\n                  delete tmp.backups;\n                  return tmp;\n                });\n                data = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, this.skForm), {}, {\n                  AcceptanceList: AcceptanceList\n                });\n                delete data.acceptanceList;\n                _context3.next = 5;\n                return (0, _zjsk.SaveGathering)(data);\n\n              case 5:\n                res = _context3.sent;\n                this.$message.success(res.message);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function submitForm() {\n        return _submitForm.apply(this, arguments);\n      }\n\n      return submitForm;\n    }(),\n    cancelForm: function cancelForm(formName) {\n      // this.$router({name:\"\"})\n      this.$refs[formName].resetFields();\n    },\n    addRow: function addRow() {\n      var row = {\n        isEdit: false\n      };\n      this.$set(row, 'backups', JSON.stringify(row));\n      row.isEdit = true;\n      this.skForm.acceptanceList.push(row);\n    },\n    deleteRow: function deleteRow(index, rows) {\n      rows.splice(index, 1);\n    }\n  }\n};\nexports.default = _default;",null]}