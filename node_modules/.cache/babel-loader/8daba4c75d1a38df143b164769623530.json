{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\jcsj\\userResetPassWord.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\jcsj\\userResetPassWord.vue","mtime":1624071363351},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _person = require(\"@/api/rsgl/person\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'ResetPassWord',\n  props: {\n    obj: {\n      type: Object,\n      default: null\n    }\n  },\n  data: function data() {\n    var _this = this;\n\n    var validatePass = function validatePass(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else if (value.length < 6) {\n        callback(new Error('长度最少6个字符!'));\n      } else {\n        if (_this.ruleForm.newPassWord2 !== '') {\n          _this.$refs.ruleForm.validateField('newPassWord2');\n        }\n\n        callback();\n      }\n    };\n\n    var validatePass2 = function validatePass2(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== _this.ruleForm.newPassWord1) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      ruleForm: {\n        oldPassWord: '',\n        newPassWord1: '',\n        newPassWord2: ''\n      },\n      buttonLoading: false,\n      rules: {\n        oldPassWord: [{\n          required: true,\n          message: '不能为空',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          message: '长度最少6个字符',\n          trigger: 'blur'\n        }],\n        newPassWord1: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        newPassWord2: [{\n          validator: validatePass2,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.initData();\n  },\n  methods: {\n    submitForm: function submitForm(formName) {\n      var _this2 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _this2.buttonLoading = true;\n          var _this2$ruleForm = _this2.ruleForm,\n              oldPassWord = _this2$ruleForm.oldPassWord,\n              newPassWord1 = _this2$ruleForm.newPassWord1;\n          (0, _person.resetPassWord)({\n            oldPassWord: oldPassWord,\n            newPassWord: newPassWord1\n          }).then(function (response) {\n            _this2.$message(response.message);\n\n            _this2.buttonLoading = false;\n\n            _this2.resetForm();\n          }).catch(function () {\n            _this2.buttonLoading = false;\n          });\n        }\n      });\n    },\n    resetForm: function resetForm() {\n      this.$refs['ruleForm'].resetFields();\n    },\n    initData: function initData() {}\n  }\n};\nexports.default = _default;",null]}