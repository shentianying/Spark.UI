{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\ggzx\\grgl\\worker\\workerEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\ggzx\\grgl\\worker\\workerEdit.vue","mtime":1635749455678},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/objectSpread2\"));\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _worker = require(\"@/api/ggzx/worker\");\n\nvar _index = _interopRequireDefault(require(\"@/components/OrgSelect/index2\"));\n\nvar _UpFile = _interopRequireDefault(require(\"@/components/UpLoad/UpFile\"));\n\nvar _person = require(\"@/api/rsgl/person\");\n\nvar _selectPerson = _interopRequireDefault(require(\"@/components/Other/selectPerson\"));\n\nvar _TreeSelect = _interopRequireDefault(require(\"@/components/SearchBar/form/TreeSelect.vue\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'WorkerEdit',\n  components: {\n    OrgSelect2: _index.default,\n    UpFile: _UpFile.default,\n    SelectPerson: _selectPerson.default,\n    TreeSelect: _TreeSelect.default\n  },\n  data: function data() {\n    return {\n      size: 'mini',\n      // 整体大小\n      labelPosition: 'right',\n      // 对齐方式\n      loading: false,\n      workerForm: {\n        id: null,\n        orgId: null,\n        year: null,\n        number: '',\n        name: '',\n        contractNumber: '',\n        idNumber: '',\n        homeAddress: '',\n        gender: '',\n        nation: '',\n        age: 0,\n        workType: null,\n        workTypeList: [],\n        workerType: null,\n        idCardExpireStart: null,\n        idCardExpireEnd: null,\n        awBank: null,\n        account: '',\n        gongZhangId: null,\n        xiezhaorenId: null,\n        phoneNumber: '',\n        signUpDate: null,\n        workingAge: '',\n        signUpState: null,\n        isBD: false,\n        bdDate: null,\n        isWithInsurance: false,\n        insuranceDate: null,\n        isPause: false,\n        pauseReason: '',\n        isExit: false,\n        exitDate: null,\n        exitReason: '',\n        integrity: '',\n        isPhysicalExamination: false,\n        heartRate: '',\n        SBP: '',\n        DBP: '',\n        liverFunction: null,\n        lungFunction: null,\n        remark: '',\n        fileList: []\n      },\n      searchOptions: {\n        workTypes: [],\n        workerTypes: [],\n        awBanks: [],\n        signUpStates: [],\n        peStates: []\n      },\n      dialogTableVisible: false,\n      dialogTitle: '保存',\n      dialogWidth: '70%',\n      comName: 'ContractDetailCheck',\n      currentRow: null,\n      // 验证规则\n      rules: {// orgId: [{ required: true, message: '请选择部门', trigger: 'change' }],\n        // gatheringType: [\n        //   { required: true, message: '请选择收款类型', trigger: 'change' }\n        // ],\n        // capitalType: [\n        //   { required: true, message: '请选择资金类型', trigger: 'change' }\n        // ],\n        // gatheringDate: [\n        //   { required: true, message: '请选择日期', trigger: 'change' }\n        // ],\n        // personId: [\n        //   { required: true, message: '请选择经手人', trigger: 'change' }\n        // ],\n        // amount: [\n        //   { required: true, message: '请输入金额', trigger: 'change' },\n        //   { validator: validate.money, message: '金额格式不正确' },\n        //   { validator: validate.max_amount, message: '超过所能存储的最大金额' }\n        // ]\n      },\n      personList: [],\n      workTypeKey: 0,\n      orgKey: 0 // 项目\n\n    };\n  },\n  computed: {\n    getOrgList: function getOrgList() {\n      return this.$store.state.user.info.orgList;\n    }\n  },\n  watch: {// 'ruleForm.orgId': {\n    //   handler: function(value, oldvalue) {\n    //     if (value !== oldvalue && oldvalue !== null) {\n    //       this.list = []\n    //     }\n    //   }, deep: true\n    // }\n  },\n  activated: function activated() {\n    this.initData();\n  },\n  mounted: function mounted() {\n    this.initData();\n  },\n  methods: {\n    // 提交数据\n    submitForm: function submitForm() {\n      var _this = this;\n\n      this.$refs['ruleForm'].validate( /*#__PURE__*/function () {\n        var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee(valid) {\n          var data, res;\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!valid) {\n                    _context.next = 7;\n                    break;\n                  }\n\n                  data = (0, _objectSpread2.default)({}, _this.workerForm);\n                  _context.next = 4;\n                  return (0, _worker.saveData)(data);\n\n                case 4:\n                  res = _context.sent;\n\n                  _this.utils.closeAndRefresh(_this.$route.query.refreshRouterName);\n\n                  _this.$message.success(res.message);\n\n                case 7:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n    // 初始化\n    initData: function () {\n      var _initData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var id;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                id = this.$route.query.id;\n                this.workerForm.id = id;\n                this.getForm();\n                this.getOptions();\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function initData() {\n        return _initData.apply(this, arguments);\n      }\n\n      return initData;\n    }(),\n\n    /**\r\n     * 获取下拉选项\r\n     */\n    getOptions: function () {\n      var _getOptions = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var _this2 = this;\n\n        var _yield$getDefaultOpti, workOptions2, workerOptions, bankOptions, signUpStateOptions, peStateOptions;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return (0, _worker.getDefaultOptions)();\n\n              case 2:\n                _yield$getDefaultOpti = _context3.sent;\n                workOptions2 = _yield$getDefaultOpti.workOptions2;\n                workerOptions = _yield$getDefaultOpti.workerOptions;\n                bankOptions = _yield$getDefaultOpti.bankOptions;\n                signUpStateOptions = _yield$getDefaultOpti.signUpStateOptions;\n                peStateOptions = _yield$getDefaultOpti.peStateOptions;\n                this.searchOptions.workTypes = workOptions2;\n                this.searchOptions.workerTypes = workerOptions;\n                this.searchOptions.awBanks = bankOptions;\n                this.searchOptions.signUpStates = signUpStateOptions;\n                this.searchOptions.peStates = peStateOptions;\n                this.searchOptions.workTypes.forEach(function (element) {\n                  element.pid = element.pId;\n                });\n                (0, _person.getPersonList)().then(function (response) {\n                  _this2.personList = response.data;\n                }); // 组件重载\n\n                this.workTypeKey += 1;\n                this.orgKey += 1;\n\n              case 17:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getOptions() {\n        return _getOptions.apply(this, arguments);\n      }\n\n      return getOptions;\n    }(),\n\n    /**\r\n     * 获取表单数据\r\n     */\n    getForm: function getForm() {\n      var _this3 = this;\n\n      (0, _worker.getFormById)({\n        id: this.workerForm.id\n      }).then(function (res) {\n        var code = res.code,\n            data = res.data;\n\n        if (code === 200) {\n          for (var key in _this3.workerForm) {\n            if (Object.hasOwnProperty.call(_this3.workerForm, key)) {\n              _this3.workerForm[key] = data[key];\n            }\n          }\n\n          _this3.workerForm.fileList = data.upFile;\n        }\n      }).catch(function (err) {\n        console.log(err); // this.$message.error(err.errorMsg)\n      });\n    },\n    getRemotePerson: function getRemotePerson(query) {\n      var _this4 = this;\n\n      query = query.trim();\n\n      if (query !== '') {\n        this.loading = true;\n        setTimeout(function () {\n          (0, _person.getPersonList)().then(function (response) {\n            _this4.personList = response.data;\n            _this4.loading = false;\n          });\n        }, 200);\n      } else {\n        this.personList = [];\n      }\n    },\n    getPersons: function getPersons(personList) {\n      var _this5 = this;\n\n      if ((personList || []).length > 0) {\n        this.personList = personList.map(function (m) {\n          return {\n            id: m.id,\n            name: m.name\n          };\n        });\n        this.$nextTick(function () {\n          _this5.ruleForm.personId = personList[0].id;\n          _this5.ruleForm.personName = personList[0].name;\n        });\n      }\n    },\n    selectPerson: function selectPerson() {\n      // this.tempItem2 = item2\n      this.$refs.personRef1.openDialog();\n    },\n    selectGongZhang: function selectGongZhang() {\n      // this.tempItem2 = item2\n      this.$refs.personRef1.openDialog();\n    },\n    getGongZhangs: function getGongZhangs(personList) {\n      var _this6 = this;\n\n      if ((personList || []).length > 0) {\n        this.personList = personList.map(function (m) {\n          return {\n            id: m.id,\n            name: m.name\n          };\n        });\n        this.$nextTick(function () {\n          _this6.workerForm.gongZhangId = personList[0].id;\n        });\n      }\n    },\n    selectXieZhaoRen: function selectXieZhaoRen() {\n      // this.tempItem2 = item2\n      this.$refs.personRef2.openDialog();\n    },\n    getXieZhaoPeople: function getXieZhaoPeople(personList) {\n      var _this7 = this;\n\n      if ((personList || []).length > 0) {\n        this.personList = personList.map(function (m) {\n          return {\n            id: m.id,\n            name: m.name\n          };\n        });\n        this.$nextTick(function () {\n          _this7.workerForm.xiezhaorenId = personList[0].id;\n        });\n      }\n    }\n  }\n};\nexports.default = _default;",null]}