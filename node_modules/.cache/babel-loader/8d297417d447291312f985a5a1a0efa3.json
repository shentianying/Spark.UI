{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\quotation\\quotationSubmit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\quotation\\quotationSubmit.vue","mtime":1627292107402},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.array.find\");\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _quotation = require(\"@/api/cggl/quotation\");\n\nvar _dictionary = require(\"@/api/xtgl/dictionary\");\n\nvar _index = _interopRequireDefault(require(\"@/components/OrgSelect/index2\"));\n\nvar _flowAttitude = _interopRequireDefault(require(\"@/components/Flow/flowAttitude\"));\n\nvar _flowSelect = _interopRequireDefault(require(\"@/components/Flow/flowSelect\"));\n\nvar _flowDisplay = _interopRequireDefault(require(\"@/components/Flow/flowDisplay\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'QuotationSubmit',\n  components: {\n    OrgSelect2: _index.default,\n    FlowAttitude: _flowAttitude.default,\n    FlowSelect: _flowSelect.default,\n    FlowDisplay: _flowDisplay.default\n  },\n  data: function data() {\n    return {\n      ruleForm: {\n        orgId: null\n      },\n      loading: false,\n      activate: false,\n      dialogTableVisible: false,\n      dialogTitle: '保存',\n      dialogWidth: '70%',\n      currentRow: [],\n      list: [],\n      list2: [],\n      disabled: false,\n      // 发票种类\n      receiptTypes: [],\n      // 卸车费归属\n      otherPricePays: [],\n      fileList: [],\n      // 供应商\n      suppliers: [],\n      planTypeList: null,\n      columnShow: {\n        unit2: true,\n        brand: true,\n        model: true,\n        spec: true,\n        thickness: true,\n        texture: true,\n        surfaceTreatment: true,\n        designNumber: true\n      },\n      tableHeader: [],\n      // 流程\n      loadFlow: false,\n      billFlow: null,\n      attitudePara: null,\n      active: 0,\n      rules: {// orgId: [{ required: true, message: '请选择', trigger: 'change' }],\n        // recommendSupplierIds: [{ required: true, message: '请选择', trigger: 'blur' }]\n      },\n      isLoad: false\n    };\n  },\n  computed: {\n    getOrgList: function getOrgList() {\n      return this.$store.state.user.info.orgList;\n    }\n  },\n  watch: {},\n  activated: function activated() {},\n  mounted: function mounted() {\n    this.initData();\n  },\n  methods: {\n    initData: function () {\n      var _initData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                (0, _quotation.getQuotationAttitudeById)({\n                  id: this.$route.query.id\n                }).then(function (response) {\n                  _this.setData(response);\n                });\n                this.setColumnShow();\n                (0, _dictionary.getDictionarysByTypes)({\n                  types: 'receiptTypes,otherPricePays'\n                }).then(function (response) {\n                  var data = response.data;\n                  data.forEach(function (element) {\n                    element.pid = element.pId;\n\n                    if (element.type === 'receiptTypes') {\n                      _this.receiptTypes.push(element);\n                    }\n\n                    if (element.type === 'otherPricePays') {\n                      _this.otherPricePays.push(element);\n                    }\n                  });\n                  _this.keyreceiptType += 1;\n                  _this.keyotherPricePay += 1;\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function initData() {\n        return _initData.apply(this, arguments);\n      }\n\n      return initData;\n    }(),\n    setData: function setData(response) {\n      var _this2 = this;\n\n      var data = response.data; // 填充参数\n\n      this.ruleForm = data.ruleForm;\n      this.ruleForm.orgStr = data.orgStr;\n      this.ruleForm.supplierCheckNames = data.supplierCheckNames;\n      this.ruleForm.executeUserName = data.executeUserName;\n      this.ruleForm.recommendSupplierIds = data.recommendSupplierIds;\n      this.suppliers = data.recommendSupplier;\n      this.ruleForm.taskNumber = data.ruleForm.cgTask.number; // 填充 明细列表\n\n      this.list = data.tableData;\n      this.setColumnShow();\n      this.loading = false; // loading 状态关闭\n\n      this.activate = true; // 加载部门组件\n\n      if (data.ruleForm.state > 0) {\n        // 获取审批流程\n        this.disabled = true;\n        (0, _quotation.getBillFlowById)({\n          billFlowId: data.ruleForm.billFlowId\n        }).then(function (response2) {\n          var billFlowData = response2.billFlowData; // 检查当前 状态 是否有特殊操作，有就跳转\n\n          var filterOption = billFlowData.billFlowNode.filter(function (f) {\n            return f.isCurrentState;\n          });\n\n          if ((filterOption || []).length) {\n            if (filterOption[0].option > 0) {\n              // alert('当前节点有特殊操作')\n              _this2.disabled = false;\n            } else {\n              _this2.disabled = true;\n            }\n          }\n\n          _this2.billFlow = billFlowData;\n          _this2.attitudePara = {\n            formId: billFlowData.formId,\n            billFlowId: data.ruleForm.billFlowId,\n            planId: data.ruleForm.id\n          };\n          _this2.active = 3; // 审批\n\n          _this2.isLoad = true;\n        });\n      }\n    },\n    setColumnShow: function setColumnShow() {\n      // 设置列的显示。列中，都没有值，就隐藏\n      var modelunit2 = false;\n      var modelbrand = false;\n      var modelmodel = false;\n      var modelspec = false;\n      var modelthickness = false;\n      var modeltexture = false;\n      var modelsurfaceTreatment = false;\n      var modeldesignNumber = false;\n\n      var _iterator = (0, _createForOfIteratorHelper2.default)(this.list),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var row = _step.value;\n\n          if (row.unit2) {\n            modelunit2 = true;\n          }\n\n          if (row.brand) {\n            modelbrand = true;\n          }\n\n          if (row.model) {\n            modelmodel = true;\n          }\n\n          if (row.spec) {\n            modelspec = true;\n          }\n\n          if (row.thickness) {\n            modelthickness = true;\n          }\n\n          if (row.texture) {\n            modeltexture = true;\n          }\n\n          if (row.surfaceTreatment) {\n            modelsurfaceTreatment = true;\n          }\n\n          if (row.designNumber) {\n            modeldesignNumber = true;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      this.columnShow['unit2'] = modelunit2;\n      this.columnShow['brand'] = modelbrand;\n      this.columnShow['model'] = modelmodel;\n      this.columnShow['spec'] = modelspec;\n      this.columnShow['thickness'] = modelthickness;\n      this.columnShow['texture'] = modeltexture;\n      this.columnShow['surfaceTreatment'] = modelsurfaceTreatment;\n      this.columnShow['designNumber'] = modeldesignNumber;\n    },\n    getPrice: function getPrice(detail, materialId) {\n      var pri = detail.find(function (f) {\n        return f.materialId === materialId;\n      });\n      return pri.price;\n    },\n    getAmount: function getAmount(detail, materialId) {\n      var pri = detail.find(function (f) {\n        return f.materialId === materialId;\n      });\n      return pri.amount;\n    },\n    getSupplierSum: function getSupplierSum(detail) {\n      var result = {\n        taxInclusiveAmountSum: 0,\n        taxExclusiveAmountSum: 0\n      };\n      detail.forEach(function (e) {\n        result.taxInclusiveAmountSum += e.taxInclusiveAmount;\n        result.taxInclusiveAmountSum += e.taxInclusiveAmount;\n      });\n      return result;\n    },\n    // getSummaries(param) {\n    //   const { columns } = param\n    //   const sums = []\n    //   columns.forEach((index) => {\n    //     if (index === 0) {\n    //       sums[index] = '合计'\n    //       return\n    //     }\n    //     var i = 4\n    //     this.ruleForm.suppliers.forEach(e => {\n    //       i = i + 2\n    //       var sumAmount = 0\n    //       e.priceSupplierDetails.forEach(p => {\n    //         sumAmount += p.amount\n    //       })\n    //       if (index === i) {\n    //         sums[index] = sumAmount\n    //       }\n    //     })\n    //   })\n    //   return sums\n    // },\n    getreceiptType: function getreceiptType(id) {\n      var type = this.receiptTypes.find(function (f) {\n        return f.id === id;\n      });\n\n      if (type) {\n        return type.name;\n      } else {\n        return '';\n      }\n    },\n    getotherPricePay: function getotherPricePay(id) {\n      var type = this.otherPricePays.find(function (f) {\n        return f.id === id;\n      });\n\n      if (type) {\n        return type.name;\n      } else {\n        return '';\n      }\n    },\n    // 根据表单获取流程\n    getDynamicFlow: function getDynamicFlow() {\n      var _this3 = this;\n\n      if (this.ruleForm.recommendSupplierIds.length > 0) {\n        this.loading = true;\n        var newObj = JSON.parse(JSON.stringify(this.ruleForm));\n        var postData = {\n          id: newObj.id,\n          recommendSupplier: newObj.recommendSupplierIds.join(','),\n          orgId: newObj.orgId,\n          billFlowId: newObj.billFlowId\n        };\n        (0, _quotation.getBillFlow)(postData).then(function (response) {\n          _this3.loading = false;\n\n          if (response.success) {\n            _this3.billFlow = response.data.billFlow;\n            _this3.active = 1;\n          } else {\n            _this3.$message(response.message);\n          }\n        }).catch(function () {\n          _this3.loading = false;\n        });\n      } else {\n        this.$message.error('请选择建议中标单位');\n      }\n    },\n    submitForm: function submitForm(state) {\n      var _this4 = this;\n\n      this.$refs['ruleForm'].validate(function (valid) {\n        if (valid) {\n          _this4.loading = true;\n          var newObj = JSON.parse(JSON.stringify(_this4.ruleForm));\n          var postData = {\n            id: newObj.id,\n            recommendSupplier: newObj.recommendSupplierIds.join(','),\n            state: state\n          };\n\n          var billFlow = _this4.$refs.flowSelect.getBillFlow();\n\n          console.log('获取的billFlow:', billFlow);\n          postData.billFlow = billFlow;\n          (0, _quotation.quotationAttitude)(postData).then(function (response) {\n            if (response.errorMsg) {\n              // 验证错误\n              _this4.$alert(\"\".concat(response.errorMsg.replace(/；/g, '；<br />')), {\n                dangerouslyUseHTMLString: true\n              });\n            } else {\n              _this4.$message(response.message);\n\n              _this4.loading = false;\n\n              _this4.closeThePage();\n            }\n          }).catch(function () {\n            _this4.loading = false;\n          });\n        }\n      });\n    },\n    closeThePage: function closeThePage() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    },\n    updateFlow: function updateFlow() {\n      // 修改计划单据state状态\n      // this.loading = true\n      // this.billFlow = null\n      this.closeThePage(); // putQuotationState({ id: data.billId, state: data.state }).then()\n    },\n    openTask: function openTask(taskId) {\n      this.$router.push({\n        name: 'TaskDetail',\n        query: {\n          id: taskId,\n          refreshRouterName: this.$route.name,\n          tab: 'detail'\n        },\n        params: {\n          id: taskId,\n          isCheck: false\n        }\n      });\n    },\n    arraySpanMethod: function arraySpanMethod(_ref) {\n      var row = _ref.row,\n          column = _ref.column,\n          rowIndex = _ref.rowIndex,\n          columnIndex = _ref.columnIndex;\n\n      if (row.tax === '') {\n        if (columnIndex === 0) {\n          return [1, 4];\n        } else if (columnIndex === 1) {\n          return [0, 0];\n        } else if (columnIndex === 2) {\n          return [0, 0];\n        } else if (columnIndex === 3) {\n          return [0, 0];\n        }\n\n        if (column.label === '含税单价' && row.taxInclusiveAmount === '') {\n          return {\n            rowspan: 1,\n            colspan: 3\n          };\n        } else if (column.label === '税率' && row.taxInclusiveAmount === '') {\n          return {\n            rowspan: 1,\n            colspan: 0\n          }; // } else if (column.label === '不含税单价' && row.taxInclusiveAmount === '') {\n          //   return {\n          //     rowspan: 1,\n          //     colspan: 0\n          //   }\n        } else if (column.label === '含税金额' && row.taxInclusiveAmount === '') {\n          return {\n            rowspan: 1,\n            colspan: 0\n          };\n        } else if (column.label === '税额' && row.taxInclusiveAmount === '') {\n          return {\n            rowspan: 1,\n            colspan: 0\n          }; // } else if (column.label === '不含税金额' && row.taxInclusiveAmount === '') {\n          //   return {\n          //     rowspan: 1,\n          //     colspan: 0\n          //   }\n        }\n      }\n    },\n    previous: function previous() {\n      // 上一步\n      this.active = 0;\n      this.billFlow = null;\n    },\n    supplierChange: function supplierChange() {\n      this.$forceUpdate();\n    }\n  }\n};\nexports.default = _default;",null]}