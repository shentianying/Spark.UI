{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\components\\sendmsg.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\components\\sendmsg.vue","mtime":1625532149331},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nvar _message = require(\"@/api/xtgl/message\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: '',\n  components: {},\n  props: {\n    personArray: {\n      type: Array,\n      default: null\n    },\n    // 传过来的指定的用户数组 必须包含字段 id,name\n    billId: {\n      type: Number,\n      default: 0\n    },\n    billFlowId: {\n      type: Number,\n      default: 0\n    },\n    pageId: {\n      type: Number,\n      default: 0\n    }\n  },\n  data: function data() {\n    return {\n      state: 1,\n      content: '',\n      dialogTableVisible: false,\n      loading: false\n    };\n  },\n  watch: {\n    content: function content(value) {// if () {\n      //   this.popoverVisible = true\n      //   console.log('存在@符号')\n      // }\n    }\n  },\n  created: function created() {},\n  mounted: function mounted() {},\n  methods: {\n    addReminder: function addReminder() {\n      this.dialogTableVisible = true;\n    },\n    chooseUser: function chooseUser(text) {\n      this.content += \"@\".concat(text, \" \");\n      this.dialogTableVisible = false;\n    },\n    goSend: function goSend() {\n      var _this = this;\n\n      if (this.content.trim() === '') {\n        this.$alert('内容不能为空');\n        return false;\n      }\n\n      var reg = /@[\\u4e00-\\u9fa5]{0,}\\s/g; // 匹配@符号后面带中文加空格 的字符串\n\n      var arr = this.content.match(reg); // 获取匹配后的结果 数组\n\n      console.log('匹配的结果arr:', arr);\n\n      if (arr) {\n        // 根据姓名 找到 相对应的 Id 数组\n        var idArr = arr.map(function (m) {\n          return _this.personArray.find(function (f) {\n            return f.name === m.substring(1).trim();\n          }).id;\n        });\n        console.log('根据@姓名 找到的 id数组:', idArr);\n        var postData = [];\n\n        if (this.state === 1) {\n          // 公开,发送给全部人员\n          this.personArray.forEach(function (e) {\n            var item = {};\n\n            if (idArr.includes(e)) {\n              item.title = '有人公开@你了';\n            } else {\n              item.title = '公开信息';\n            }\n\n            item.content = _this.content;\n            item.receiverId = e.id;\n            item.type = 3;\n            item.billId = _this.billId;\n            item.billFlowId = _this.billFlowId;\n            item.pageId = _this.pageId;\n            postData.push(item);\n          });\n        }\n\n        if (this.state === 0) {\n          // 私密，发送给特定人员\n          idArr.forEach(function (e) {\n            var item = {};\n            item.title = '有人私密@你了';\n            item.content = _this.content;\n            item.type = 4;\n            item.receiverId = e;\n            item.billId = _this.billId;\n            item.billFlowId = _this.billFlowId;\n            item.pageId = _this.pageId;\n            postData.push(item);\n          });\n        }\n\n        this.loading = true;\n        (0, _message.sendRemind)(postData).then(function (res) {\n          _this.$message(res.message);\n\n          _this.loading = false;\n        }).catch(function () {\n          _this.loading = false;\n        });\n      }\n    }\n  }\n};\nexports.default = _default;",null]}