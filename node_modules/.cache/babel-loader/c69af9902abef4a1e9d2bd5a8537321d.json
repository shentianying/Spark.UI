{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\fpgl\\EntertainmentPlan\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\fpgl\\EntertainmentPlan\\edit.vue","mtime":1635839321801},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/objectSpread2\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/toConsumableArray\"));\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _SocialResourceSelect = _interopRequireDefault(require(\"@/components/SearchBar/form/SocialResourceSelect\"));\n\nvar _flowSelect = _interopRequireDefault(require(\"@/components/Flow/flowSelect\"));\n\nvar _MyForm = _interopRequireDefault(require(\"@/components/MyForm\"));\n\nvar _validate = require(\"@/utils/validate\");\n\nvar _TableEx = _interopRequireDefault(require(\"@/components/TableEx\"));\n\nvar _EntertainmentPlan = require(\"@/api/cwgl/EntertainmentPlan\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default2 = {\n  name: 'EntertainmentPlanEdit',\n  components: {\n    MyForm: _MyForm.default,\n    TableEx: _TableEx.default,\n    FlowSelect: _flowSelect.default\n  },\n  data: function data() {\n    var _this = this;\n\n    var h = this.$createElement;\n    return {\n      addbtnLoad: false,\n      // 提交按钮loading状态\n      size: 'mini',\n      inputPlaceholder: '请输入',\n      selectPlaceholder: '请选择',\n      active: 1,\n      // 提交进度 1: 编辑信息 2: 编辑审批流程\n      firstForm: {\n        id: 0,\n        // 新增为0\n        companyId: '',\n        // 公司id\n        number: '',\n        // 新增时,编号后端生成\n        orgId: '',\n        // 部门id\n        personId: '',\n        // 人员id\n        date: '',\n        // 日期\n        bussinessInfoId: '',\n        // 业务工程信息编号\n        isBussinessFee: 0,\n        // 是否是项目营销费用\n        applicationAmount: '',\n        // 申请金额\n        entertainmentPlanDetails: [],\n        // 招待费计划详细数据列表\n        summary: '',\n        // 用途\n        remark: '',\n        // 备注\n        // fileList: [], // 附件\n        state: 0,\n        // 状态\n        billFlow: null // 单据流程\n\n      },\n      firstRules: {\n        orgId: [{\n          required: true,\n          message: '请选择部门',\n          trigger: 'change'\n        }],\n        personId: [{\n          required: true,\n          message: '请输入姓名',\n          trigger: 'change'\n        }],\n        summary: [{\n          required: true,\n          message: '请输入事由',\n          trigger: 'change'\n        }],\n        isBussinessFee: [{\n          required: true,\n          message: '请选择是否为项目营销费用',\n          trigger: 'change'\n        }],\n        date: [{\n          required: true,\n          message: '请选择日期',\n          trigger: 'change'\n        }],\n        applicationAmount: [{\n          required: true,\n          message: '请输入金额',\n          trigger: 'change'\n        }, {\n          validator: _validate.validate.money,\n          message: '金额格式不正确',\n          trigger: 'change'\n        }, {\n          validator: _validate.validate.max_amount,\n          message: '超过所能存储的最大金额',\n          trigger: 'change'\n        }]\n      },\n      filter: {\n        isBussinessFeeList: [{\n          label: '否',\n          value: 0\n        }, {\n          label: '是',\n          value: 1\n        }]\n      },\n      bussinessInfo: {\n        // 选择的工程信息相关\n        number: ''\n      },\n      entertainmentPlantable: {\n        columns: [{\n          label: '序号',\n          minWidth: '80',\n          // 最小宽度\n          format: function format(val, _format, row, column, scoped) {\n            return \"0\".concat(scoped.$index + 1);\n          }\n        }, {\n          render: function render(h) {\n            return h(\"el-table-column\", {\n              \"attrs\": {\n                \"minWidth\": '180',\n                \"align\": 'center',\n                \"label\": '姓名'\n              },\n              \"scopedSlots\": {\n                default: function _default(_ref) {\n                  var row = _ref.row;\n\n                  if (_this.firstForm.state === 0) {\n                    return h(_SocialResourceSelect.default, {\n                      \"attrs\": {\n                        \"value\": row.socialResourceId,\n                        \"size\": 'mini',\n                        \"placeholder\": '输入关键字搜索'\n                      },\n                      \"on\": {\n                        \"select\": function select(val) {\n                          row.unit = val[0].company;\n                          row.position = val[0].position;\n                          row.name = val[0].name;\n                        },\n                        \"change\": function change(val) {\n                          if (val === '') {\n                            row.unit = '';\n                            row.position = '';\n                            row.name = '';\n                          }\n                        }\n                      },\n                      \"model\": {\n                        value: row.socialResourceId,\n                        callback: function callback($$v) {\n                          _this.$set(row, \"socialResourceId\", $$v);\n                        }\n                      }\n                    });\n                  } else {\n                    return row.name;\n                  }\n                }\n              }\n            });\n          }\n        }, {\n          label: '单位',\n          prop: 'unit',\n          minWidth: '180'\n        }, {\n          label: '职务',\n          prop: 'position',\n          minWidth: '180'\n        }, {\n          render: function render(h) {\n            return h(\"el-table-column\", {\n              \"attrs\": {\n                \"minWidth\": '120',\n                \"align\": 'center',\n                \"label\": '金额'\n              },\n              \"scopedSlots\": {\n                default: function _default(_ref2) {\n                  var row = _ref2.row;\n\n                  if (_this.firstForm.state === 0) {\n                    return h(\"el-input\", {\n                      \"attrs\": {\n                        \"size\": 'mini',\n                        \"placeholder\": '输入金额'\n                      },\n                      \"on\": {\n                        \"input\": function input($event) {\n                          row.applicationAmount = $event.replace(/[^\\d.]/g, '');\n                        },\n                        \"blur\": _this.calculateAmount\n                      },\n                      \"model\": {\n                        value: row.applicationAmount,\n                        callback: function callback($$v) {\n                          _this.$set(row, \"applicationAmount\", $$v);\n                        }\n                      }\n                    });\n                  } else {\n                    return row.applicationAmount;\n                  }\n                }\n              }\n            });\n          }\n        }, {\n          // label: '备注',\n          // prop: 'remark',\n          // minWidth: '180'\n          render: function render(h) {\n            return h(\"el-table-column\", {\n              \"attrs\": {\n                \"minWidth\": '120',\n                \"align\": 'center',\n                \"label\": '备注'\n              },\n              \"scopedSlots\": {\n                default: function _default(_ref3) {\n                  var row = _ref3.row;\n\n                  if (_this.firstForm.state === 0) {\n                    return h(\"el-input\", {\n                      \"attrs\": {\n                        \"size\": 'mini',\n                        \"placeholder\": '输入备注'\n                      },\n                      \"model\": {\n                        value: row.remark,\n                        callback: function callback($$v) {\n                          _this.$set(row, \"remark\", $$v);\n                        }\n                      }\n                    });\n                  } else {\n                    return row.remark;\n                  }\n                }\n              }\n            });\n          }\n        }],\n        list: [{\n          id: 1,\n          entertainmentPlanId: '',\n          // 详情id\n          socialResourceId: '',\n          // 社会资源id\n          name: '',\n          // 姓名\n          position: '',\n          // 职务\n          unit: '',\n          // 单位\n          applicationAmount: '',\n          // 申请金额\n          amount: '',\n          // 批准金额\n          remark: '' // 备注\n\n        }],\n        tbLoading: false\n      }\n    };\n  },\n  computed: {\n    disabled: function disabled() {\n      return false;\n    },\n    title: function title() {\n      var active = this.active;\n      return active === 2 ? '审批流程' : '招待费计划';\n    },\n    formNodeData: function formNodeData() {\n      var inputPlaceholder = this.inputPlaceholder,\n          selectPlaceholder = this.selectPlaceholder,\n          firstForm = this.firstForm,\n          isBussinessFeeList = this.filter.isBussinessFeeList,\n          bussinessInfo = this.bussinessInfo;\n      return [{\n        label: '编号:',\n        keyword: 'number',\n        props: {\n          disabled: true,\n          placeholder: '系统自动生成'\n        }\n      }, {\n        label: '部门:',\n        keyword: 'orgId',\n        component: 'OrgSelect',\n        props: {\n          placeholder: selectPlaceholder\n        }\n      }, {\n        label: '姓名:',\n        keyword: 'personId',\n        component: 'PersonSelect',\n        props: {\n          propsLabel: 'name',\n          multiple: false,\n          placeholder: selectPlaceholder\n        }\n      }, {\n        label: '日期:',\n        keyword: 'date',\n        component: 'el-date-picker',\n        props: {\n          type: 'date',\n          placeholder: '选择日期',\n          valueFormat: 'yyyy-MM-dd'\n        }\n      }, {\n        label: '项目营销费用:',\n        keyword: 'isBussinessFee',\n        component: 'Select',\n        props: {\n          placeholder: selectPlaceholder,\n          options: isBussinessFeeList\n        }\n      }, {\n        label: '金额:',\n        keyword: 'applicationAmount',\n        props: {\n          disabled: true,\n          placeholder: inputPlaceholder\n        }\n      }, {\n        label: '业务信息工程:',\n        if: firstForm.isBussinessFee === 1,\n        keyword: 'bussinessInfoId',\n        component: 'BussinessInfoSelect',\n        props: {\n          placeholder: selectPlaceholder\n        }\n      }, {\n        label: '业务信息编号:',\n        if: firstForm.isBussinessFee === 1,\n        value: bussinessInfo.number,\n        props: {\n          disabled: true,\n          placeholder: '自动带出'\n        }\n      }, {\n        label: '事由:',\n        keyword: 'summary',\n        props: {\n          placeholder: inputPlaceholder,\n          type: 'textarea'\n        }\n      }, {\n        label: '备注:',\n        keyword: 'remark',\n        props: {\n          placeholder: inputPlaceholder,\n          type: 'textarea'\n        }\n      }];\n    }\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    next(function (vm) {\n      var newId = vm.$route.query.id;\n      var oldId = vm.firstForm.id;\n      var type = vm.$route.query.type;\n\n      if (type === 'edit' && newId !== oldId) {\n        // 说明是打开另一个单子的编辑页面\n        vm.firstForm.id = newId;\n        vm.initForm();\n        vm.initDataById(newId);\n        vm.active = 1;\n      } else {\n        var form = vm.firstForm;\n        var _vm$$store$state$user = vm.$store.state.user,\n            _vm$$store$state$user2 = _vm$$store$state$user.info,\n            uid = _vm$$store$state$user2.uid,\n            userName = _vm$$store$state$user2.userName,\n            name = _vm$$store$state$user2.name,\n            selectOrgId = _vm$$store$state$user.selectOrgId;\n        vm.user = {\n          id: uid,\n          number: userName,\n          name: name\n        };\n        form.companyId = selectOrgId;\n        form.personId = uid;\n\n        if (type === 'add' && oldId) {\n          vm.initForm();\n          vm.active = 1;\n        }\n      }\n    });\n  },\n  methods: {\n    getBussinessInfo: function getBussinessInfo(row) {\n      this.bussinessInfo = row;\n    },\n    initForm: function initForm() {\n      var _this2 = this;\n\n      Object.assign(this.$data.firstForm, this.$options.data().firstForm);\n      this.$nextTick(function () {\n        _this2.$refs.firstForm.clearValidate();\n\n        _this2.$data.entertainmentPlantable.list = [{\n          id: 1,\n          entertainmentPlanId: '',\n          // 详情id\n          socialResourceId: '',\n          // 社会资源id\n          name: '',\n          // 姓名\n          position: '',\n          // 职务\n          unit: '',\n          // 单位\n          applicationAmount: '',\n          // 申请金额\n          amount: '',\n          // 批准金额\n          remark: '' // 备注\n\n        }];\n      });\n    },\n\n    /**\r\n     * @description: 根据id获取数据并且初始化选项框数据\r\n     */\n    initDataById: function initDataById(id) {\n      var _this3 = this;\n\n      (0, _EntertainmentPlan.GetDepositById)({\n        id: id\n      }).then(function (res) {\n        var form = _this3.firstForm;\n\n        for (var key in form) {\n          if (Object.hasOwnProperty.call(form, key)) {\n            form[key] = res.data[key] || form[key];\n          }\n        }\n\n        form.isBussinessFee = Number(form.isBussinessFee);\n        _this3.user = res.data.person;\n        _this3.bussinessInfo = res.data.bussinessInfo || {\n          number: ''\n        };\n        _this3.entertainmentPlantable.list = res.data.entertainmentPlanDetails;\n        form.billFlow = res.billFlowData;\n        form.fileList = res.data.upFile;\n      });\n    },\n\n    /*\r\n     *下一步\r\n     */\n    nextStep: function nextStep(formName) {\n      var _this4 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _this4.getBillFlow();\n        }\n      });\n    },\n    getBillFlow: function getBillFlow() {\n      var _this5 = this;\n\n      // 组装招待费计划信息\n      var flage = true;\n      this.entertainmentPlantable.list.forEach(function (e) {\n        if (e.applicationAmount === '' || e.socialResourceId === '') {\n          flage = false;\n        }\n\n        delete e.id;\n        delete e.entertainmentPlanId;\n      });\n\n      if (!flage) {\n        this.$message('请将申请信息填写完整!');\n        return false;\n      }\n\n      this.firstForm.entertainmentPlanDetails = (0, _toConsumableArray2.default)(this.entertainmentPlantable.list); // 获取流程数据\n\n      var _this$firstForm = this.firstForm,\n          state = _this$firstForm.state,\n          billFlow = _this$firstForm.billFlow;\n      var req = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, this.firstForm), {}, {\n        state: state || 0\n      });\n      if (billFlow) req.billFlowId = billFlow.id;\n      delete req.billFlow;\n      delete req.number;\n      (0, _EntertainmentPlan.GetBillFlow)(req).then(function (_ref4) {\n        var data = _ref4.data,\n            success = _ref4.success,\n            message = _ref4.message;\n\n        if (success) {\n          _this5.firstForm.billFlow = data.billFlow;\n\n          _this5.setActive(2);\n        } else {\n          _this5.$message.error(message);\n        }\n      });\n    },\n\n    /**\r\n     * 修改填报进度\r\n     */\n    setActive: function setActive(active) {\n      if (active === 1) {\n        this.entertainmentPlantable.list.forEach(function (e, i) {\n          e.id = i;\n        });\n      }\n\n      this.active = active;\n    },\n\n    /**\r\n     * 提交表单\r\n     * @param {Number} state 提交类型，0：保存；1：提交; 10000: 修改\r\n     */\n    submitForm: function submitForm(state) {\n      var _this6 = this;\n\n      var req = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, this.firstForm), {}, {\n        state: state\n      });\n      if (req.isBussinessFee === 0) req.bussinessInfoId = null;\n      delete req.number;\n\n      if (this.firstForm.billFlow) {\n        // 获取流程组件中的数据\n        var billFlow = this.$refs.flowSelect.getBillFlow();\n\n        if (!billFlow) {\n          return false;\n        }\n\n        req.billFlow = billFlow;\n      } else {\n        this.$message.error('流程数据不能为空');\n        return;\n      }\n\n      if (req.id) {\n        (0, _EntertainmentPlan.PutEntertainmentPlan)(req).then(function (res) {\n          // 更新\n          _this6.$message.success('保存成功');\n\n          _this6.back();\n        });\n      } else {\n        this.addbtnLoad = true;\n        (0, _EntertainmentPlan.AddEntertainmentPlan)(req).then(function () {\n          // 添加\n          _this6.$message.success('提交成功');\n\n          _this6.back();\n        }).catch(function () {\n          _this6.addbtnLoad = false;\n        }).finally(function () {\n          _this6.addbtnLoad = false;\n        });\n      }\n    },\n    // 作废\n    invalidForm: function invalidForm() {\n      var _this7 = this;\n\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        return (0, _EntertainmentPlan.DeleteEntertainmentPlan)({\n          id: _this7.firstForm.id\n        });\n      }).then(function () {\n        _this7.$message.success('操作成功');\n\n        _this7.back();\n      });\n    },\n\n    /**\r\n     * 返回上一页，并关闭当前页\r\n     */\n    back: function back() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    },\n\n    /**\r\n     * 添加招待费计划列表\r\n     */\n    addTable: function addTable() {\n      // 最后一条数据不能删掉 所以新增的一条数据的id 只能取list的最后一条数据的id+1; 直接取list.length会有问题\n      var length = this.entertainmentPlantable.list.length - 1;\n      var id = this.entertainmentPlantable.list[length].id + 1;\n      this.entertainmentPlantable.list.push({\n        id: id,\n        socialResourceId: '',\n        // 社会资源id\n        name: '',\n        // 姓名\n        position: '',\n        // 职务\n        unit: '',\n        // 单位\n        applicationAmount: '',\n        // 申请金额\n        amount: '',\n        // 批准金额\n        remark: '' // 备注\n\n      });\n    },\n\n    /**\r\n     * 删除招待费计划信息\r\n     */\n    handleDel: function handleDel(row) {\n      var _this8 = this;\n\n      // 删除选中的招待费计划信息\n      if (this.entertainmentPlantable.list.length > 1) {\n        this.entertainmentPlantable.list = this.entertainmentPlantable.list.filter(function (e) {\n          if (e.id === row.id && e.applicationAmount !== '') {\n            _this8.firstForm.applicationAmount = Number(_this8.firstForm.applicationAmount) - Number(e.applicationAmount);\n          }\n\n          return e.id !== row.id;\n        });\n      }\n    },\n\n    /**\r\n     * 当金额输入框失去焦点后计算申请金额\r\n     */\n    calculateAmount: function calculateAmount() {\n      var allAmout = 0;\n      this.entertainmentPlantable.list.forEach(function (el) {\n        allAmout += +el.applicationAmount;\n      });\n      this.firstForm.applicationAmount = allAmout;\n    }\n  }\n};\nexports.default = _default2;",null]}