{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\lcgl\\flowCenter\\formAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\lcgl\\flowCenter\\formAdd.vue","mtime":1629417814024},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nvar _form = require(\"@/api/xtgl/form\");\n\nvar _index = require(\"@/api/index\");\n\nvar _formFlowFieldAdd = _interopRequireDefault(require(\"./formFlowFieldAdd\"));\n\nvar _formStateAdd = _interopRequireDefault(require(\"./formStateAdd\"));\n\nvar _formStateOptionAdd = _interopRequireDefault(require(\"./formStateOptionAdd\"));\n\nvar _index2 = _interopRequireDefault(require(\"@/components/OrgSelect/index2\"));\n\nvar _page = require(\"@/api/xtgl/page\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'AddPost',\n  components: {\n    FormFlowFieldAdd: _formFlowFieldAdd.default,\n    OrgSelect2: _index2.default,\n    FormStateOptionAdd: _formStateOptionAdd.default,\n    FormStateAdd: _formStateAdd.default\n  },\n  props: {\n    obj: {\n      type: Object,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      ruleForm: {\n        name: '',\n        value: '',\n        needCheckup: true,\n        inUse: true,\n        pageId: 0,\n        formFlowField: [],\n        formState: []\n      },\n      dialogTableVisible: false,\n      dialogTitle: '保存',\n      comName: '',\n      currentRow: null,\n      listLoading: false,\n      buttonLoading: false,\n      treeList: null,\n      editRowIndex: 0,\n      rowOptionIndex: 0,\n      // selectTable: '',\n      property: null,\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入',\n          trigger: 'blur'\n        }],\n        value: [{\n          required: true,\n          message: '请输入',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: {\n    getFormValue: function getFormValue() {\n      return this.formValue1 + '.' + this.formValue2;\n    }\n  },\n  mounted: function mounted() {\n    this.initData();\n  },\n  methods: {\n    submitForm: function submitForm(formName) {\n      var _this = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var newObj = JSON.parse(JSON.stringify(_this.ruleForm));\n          _this.buttonLoading = true;\n\n          if (_this.obj) {\n            (0, _form.putForm)(newObj).then(function (response) {\n              _this.$message(response.message);\n\n              _this.buttonLoading = false;\n\n              _this.$emit('dialogClose');\n            }).catch(function () {\n              _this.buttonLoading = false;\n            });\n          } else {\n            (0, _form.addForm)(newObj).then(function (response) {\n              _this.$message(response.message);\n\n              _this.buttonLoading = false;\n\n              _this.$emit('dialogClose');\n            }).catch(function () {\n              _this.buttonLoading = false;\n            });\n          }\n        }\n      });\n    },\n    // 表单字段\n    addFormFlowField: function addFormFlowField() {\n      this.comName = 'FormFlowFieldAdd';\n      this.currentRow = null;\n      this.dialogTableVisible = true;\n    },\n    editFormFlowField: function editFormFlowField(scope) {\n      this.comName = 'FormFlowFieldAdd';\n      this.currentRow = scope.row;\n      this.editRowIndex = scope.$index;\n      this.dialogTableVisible = true;\n    },\n    delFormFlowField: function delFormFlowField(scope) {\n      this.ruleForm.formFlowField.splice(scope.$index, 1);\n    },\n    dialogCloseFormFlowField: function dialogCloseFormFlowField(data, state) {\n      if (state === 'add') {\n        this.ruleForm.formFlowField.push(data);\n      } else if (state === 'update') {\n        this.ruleForm.formFlowField.splice(this.editRowIndex, 1, data);\n      }\n\n      this.dialogTableVisible = false;\n    },\n    // 表单状态\n    addFormState: function addFormState() {\n      this.comName = 'FormStateAdd';\n      this.currentRow = null;\n      this.dialogTableVisible = true;\n    },\n    editFormState: function editFormState(scope) {\n      this.comName = 'FormStateAdd';\n      this.currentRow = scope.row;\n      this.editRowIndex = scope.$index;\n      this.dialogTableVisible = true;\n    },\n    delFormState: function delFormState(scope) {\n      this.ruleForm.formState.splice(scope.$index, 1);\n    },\n    dialogCloseFormState: function dialogCloseFormState(data, state) {\n      if (state === 'add') {\n        this.ruleForm.formState.push(data);\n      } else if (state === 'update') {\n        this.ruleForm.formState.splice(this.editRowIndex, 1, data);\n      }\n\n      this.dialogTableVisible = false;\n    },\n    addFormStateOption: function addFormStateOption(itemIndex) {\n      this.comName = 'FormStateOptionAdd';\n      this.currentRow = null;\n      this.editRowIndex = itemIndex;\n      this.dialogTableVisible = true;\n    },\n    editFormStateOption: function editFormStateOption(itemIndex, item, optionIndex) {\n      this.comName = 'FormStateOptionAdd';\n      this.currentRow = item;\n      this.editRowIndex = itemIndex;\n      this.rowOptionIndex = optionIndex;\n      this.dialogTableVisible = true;\n    },\n    delFormStateOption: function delFormStateOption(items, index) {\n      items.splice(index, 1); // this.ruleForm.formState[this.editRowIndex].formStateOption.splice(index, 1)\n    },\n    dialogCloseFormStateOption: function dialogCloseFormStateOption(data, state) {\n      if (state === 'add') {\n        this.ruleForm.formState[this.editRowIndex].formStateOption.push(data);\n      } else if (state === 'update') {\n        this.ruleForm.formState[this.editRowIndex].formStateOption.splice(this.rowOptionIndex, 1, data);\n      }\n\n      this.dialogTableVisible = false;\n    },\n    initData: function initData() {\n      var _this2 = this;\n\n      this.listLoading = true;\n      (0, _page.GetAllList)().then(function (response) {\n        _this2.treeList = response.data;\n        _this2.listLoading = false;\n      }).catch(function () {\n        _this2.listLoading = false;\n      });\n\n      if (this.obj) {\n        var newObj = JSON.parse(JSON.stringify(this.obj));\n\n        if (newObj.formState.length) {\n          newObj.formState = newObj.formState.sort(function (a, b) {\n            return a.value - b.value;\n          });\n        }\n\n        this.ruleForm = newObj;\n      } else {\n        this.ruleForm.formState = [{\n          formId: 0,\n          name: '制单',\n          value: 0,\n          formStateOption: [],\n          isCheckup: false,\n          isFlowNode: true,\n          inUse: true\n        }, {\n          formId: 0,\n          name: '审核',\n          value: 1,\n          formStateOption: [],\n          isCheckup: true,\n          isFlowNode: true,\n          inUse: true\n        }, {\n          formId: 0,\n          name: '完成',\n          value: 10000,\n          formStateOption: [],\n          isCheckup: false,\n          isFlowNode: true,\n          inUse: true\n        }];\n      }\n    },\n    loadTableField: function loadTableField() {\n      var _this3 = this;\n\n      var _value = this.ruleForm.value.trim();\n\n      if (_value === '') {\n        this.$alert('表单值不能为空！');\n        return;\n      }\n\n      var reg = /^[A-Z]+$/;\n      var strIndex = -1; // 获取第一个大写字母位置\n\n      for (var i = 0; i < _value.length; i++) {\n        if (reg.test(_value.charAt(i)) && strIndex === -1) {\n          strIndex = i;\n        }\n      }\n\n      if (strIndex === -1) {\n        this.$alert('必须有一个大写字母：表单值格式：cgglPlan');\n        return;\n      } // 拼接 后台类的 命名空间: cgglPlan => cggl.Plan\n\n\n      var cnstr = _value.substring(0, strIndex).toUpperCase() + '.' + _value.substring(strIndex);\n\n      this.buttonLoading = true;\n      setTimeout(function () {\n        (0, _index.getClassInfo)({\n          cn: cnstr\n        }).then(function (response) {\n          var data = response.data;\n\n          if (data) {\n            _this3.$message('加载成功');\n\n            _this3.property = data.property;\n          } else {\n            _this3.property = null;\n\n            _this3.$message('加载失败');\n          }\n\n          _this3.buttonLoading = false;\n        }).catch(function () {\n          _this3.buttonLoading = false;\n        });\n      }, 1000);\n    }\n  }\n};\nexports.default = _default;",null]}