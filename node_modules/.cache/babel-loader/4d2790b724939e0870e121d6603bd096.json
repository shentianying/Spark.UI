{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\gckgl\\gathering\\projectGatheringSplit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\gckgl\\gathering\\projectGatheringSplit.vue","mtime":1631085070765},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nvar _projectGathering = require(\"@/api/xmgl/projectGathering\");\n\nvar _validate = require(\"@/utils/validate\");\n\nvar _selectProject = _interopRequireDefault(require(\"@/components/Other/xmgl/selectProject\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'ProjectGatheringSplit',\n  components: {\n    SelectProject: _selectProject.default\n  },\n  filters: {\n    /**\r\n     * @description: 时间过滤器\r\n     * @param {Date} val\r\n     * @return {String} 年-月-日\r\n     */\n    date: function date(val) {\n      return new Date(val).toLocaleDateString().replaceAll('/', '-');\n    }\n  },\n  data: function data() {\n    return {\n      type: '',\n      // edit：编辑 add:新增\n      ruleForm: {\n        id: 0,\n        number: '',\n        orgId: null,\n        companyId: this.$store.state.user.selectOrgId,\n        projectId: null,\n        gatheringType: '',\n        capitalType: '',\n        gatheringDate: new Date(),\n        personId: this.$store.state.user.uid,\n        gatheringAmount: '',\n        remark: '',\n        state: 0,\n        splitOrgId: null,\n        splitCompanyProjectId: null,\n        splitCompanyAmount: '',\n        splitProjectAmount: '',\n        groupManageFee: '',\n        bank: ''\n      },\n      projectGatheringId: null,\n      projectName: '',\n      loading: false,\n      rules: {\n        splitCompanyProjectId: [{\n          required: true,\n          message: '请选择项目',\n          trigger: 'change'\n        }],\n        splitOrgId: [{\n          required: true,\n          message: '请总公司地区',\n          trigger: 'change'\n        }],\n        splitCompanyAmount: [{\n          required: true,\n          message: '请输入金额',\n          trigger: 'change'\n        }, {\n          validator: _validate.validate.money,\n          message: '金额格式不正确'\n        }],\n        splitProjectAmount: [{\n          required: true,\n          message: '请输入金额',\n          trigger: 'change'\n        }, {\n          validator: _validate.validate.money,\n          message: '金额格式不正确'\n        }],\n        groupManageFee: [{\n          validator: _validate.validate.money,\n          message: '金额格式不正确',\n          required: false,\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  activated: function activated() {\n    if (this.$route.params.id) {\n      this.initData();\n      this.refreshRouterName = this.$route.params.refreshRouterName;\n    }\n  },\n  mounted: function mounted() {\n    if (!this.$route.params.id) {\n      this.active = 0;\n      this.initData();\n      this.refreshRouterName = this.$route.params.refreshRouterName;\n    }\n  },\n  methods: {\n    submitForm: function submitForm(formName, state) {\n      var _this = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var newObj = JSON.parse(JSON.stringify(_this.ruleForm));\n          _this.loading = true;\n\n          if (state === 1) {\n            (0, _projectGathering.splitProjectGathering)(newObj).then(function (response) {\n              if (response.errorMsg) {\n                // 验证错误\n                _this.$alert(\"\".concat(response.errorMsg.replace(/；/g, '；<br />')), {\n                  dangerouslyUseHTMLString: true\n                });\n\n                return;\n              }\n\n              _this.$message(response.message);\n\n              _this.loading = false;\n\n              _this.closeThePage();\n            }).catch(function () {\n              _this.loading = false;\n            });\n          } else if (state === 0) {\n            (0, _projectGathering.handInputProjectGathering)(newObj).then(function (response) {\n              if (response.errorMsg) {\n                // 验证错误\n                _this.$alert(\"\".concat(response.errorMsg.replace(/；/g, '；<br />')), {\n                  dangerouslyUseHTMLString: true\n                });\n\n                return;\n              }\n\n              _this.$message(response.message);\n\n              _this.loading = false;\n\n              _this.closeThePage();\n            }).catch(function () {\n              _this.loading = false;\n            });\n          }\n        }\n      });\n    },\n    initData: function initData() {\n      var _this2 = this;\n\n      this.projectGatheringId = this.$route.query.id;\n\n      if (this.projectGatheringId) {\n        (0, _projectGathering.getProjectGatheringWithSplitById)({\n          id: this.projectGatheringId\n        }).then(function (response) {\n          var data = response.data,\n              gatheringType = response.gatheringType,\n              capitalType = response.capitalType;\n          _this2.ruleForm = data;\n          _this2.ruleForm.capitalType = capitalType.name;\n          _this2.ruleForm.gatheringType = gatheringType.name;\n          _this2.projectName = data.project.name;\n        });\n      }\n    },\n    closeThePage: function closeThePage() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    },\n    selectProject: function selectProject() {\n      this.$refs.projectRef.openDialog();\n    },\n    getProject: function getProject(data) {\n      if (data.length > 0) {\n        this.ruleForm.projectId = data[0].id;\n        this.projectName = data[0].name;\n        this.ruleForm.orgId = data[0].orgId;\n      }\n    }\n  }\n};\nexports.default = _default;",null]}