{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\material\\category.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\material\\category.vue","mtime":1624696722975},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _material = require(\"@/api/cggl/material\");\n\nvar _addMaterial = _interopRequireDefault(require(\"./components/addMaterial\"));\n\nvar _addMCPItem = _interopRequireDefault(require(\"./components/addMCPItem\"));\n\nvar _addRangeMCP = _interopRequireDefault(require(\"./components/addRangeMCP\"));\n\nvar _copyTo = _interopRequireDefault(require(\"./components/copyTo\"));\n\nvar _addMaterialCategoryProperty = _interopRequireDefault(require(\"./components/addMaterialCategoryProperty\"));\n\nvar _index = require(\"@/utils/index\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'MaterialCategory',\n  components: {\n    AddMaterial: _addMaterial.default,\n    AddMaterialCategoryProperty: _addMaterialCategoryProperty.default,\n    AddMCPItem: _addMCPItem.default,\n    AddRangeMCP: _addRangeMCP.default,\n    CopyTo: _copyTo.default\n  },\n  data: function data() {\n    return {\n      list: null,\n      listLoading: false,\n      dialogTableVisible: false,\n      dialogTitle: '保存',\n      tableList: [],\n      tableListLoading: false,\n      total: 0,\n      currentPage: 1,\n      pageSize: 10,\n      currentRow: null,\n      // currentCategoryName: '',\n      currentCategory: null,\n      checkedNodes: [],\n      comName: 'AddMaterial',\n      pid: 0,\n      buttonLoading: false,\n      expandIds: [],\n      filterText: '',\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      },\n      companyId: this.$store.state.user.selectOrgId\n    };\n  },\n  watch: {\n    filterText: function filterText(val) {\n      this.$refs.tree.filter(val);\n    }\n  },\n  mounted: function mounted() {\n    this.getCategory();\n  },\n  methods: {\n    getCategory: function getCategory() {\n      var _this = this;\n\n      (0, _material.getAllMaterialCategory)().then(function (response) {\n        response.data.forEach(function (element) {\n          element.pid = element.pId;\n          element.label = element.number + ' ' + element.name;\n          delete element.pId;\n        });\n        _this.list = (0, _index.getTree)(0, response.data);\n      });\n    },\n    addCategoryClose: function addCategoryClose(pid) {\n      this.expandIds = [pid];\n      this.dialogTableVisible = false;\n      this.getCategory();\n    },\n    addItemClose: function addItemClose() {\n      this.dialogTableVisible = false;\n\n      if (this.currentRow) {\n        this.getProperty(this.currentRow.categoryId);\n      } // this.getProperty(this.currentCategory.categoryId)\n\n    },\n    addProClose: function addProClose() {\n      this.dialogTableVisible = false;\n\n      if (this.currentCategory) {\n        this.getProperty(this.currentCategory.id);\n      }\n    },\n    filterNode: function filterNode(value, data) {\n      if (!value) return true;\n      return data.label.indexOf(value) !== -1;\n    },\n    addCategory: function addCategory() {\n      this.dialogTitle = '添加类别';\n      this.currentRow = null;\n      this.pid = 0;\n      this.comName = 'AddMaterial';\n      this.dialogTableVisible = true;\n    },\n    handleEdit: function handleEdit(row) {\n      this.dialogTitle = '编辑属性 - ' + this.currentCategory.label;\n      this.currentRow = row;\n      this.comName = 'AddMCPItem';\n      this.dialogTableVisible = true;\n    },\n    remove: function remove(node, data) {\n      var _this2 = this;\n\n      // console.log('node:', node)\n      // console.log('data:', data)\n      if (node.childNodes.length) {\n        this.$message.warning('请先删除下级类别');\n        return;\n      }\n\n      this.$confirm('是否确定删除?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        (0, _material.deleteMaterialCategory)({\n          id: data.id\n        }).then(function (response) {\n          _this2.getCategory();\n\n          _this2.$message(response.message);\n        });\n      }).catch(function () {\n        _this2.$message.info('已取消');\n      });\n    },\n    update: function update(data) {\n      this.dialogTitle = '类别名称修改';\n      this.comName = 'AddMaterial';\n      this.currentRow = data;\n      this.dialogTableVisible = true;\n    },\n    handleNodeClick: function handleNodeClick(data, node) {\n      // console.log('node节点信息:', node)\n      this.currentRow = null;\n\n      if (node.level === 3) {\n        this.currentCategory = data;\n        this.getProperty(data.id);\n        this.currentRow = data;\n      } else {\n        // this.$message('必须是三级目录')\n        this.currentCategory = null;\n        this.tableList = [];\n      }\n    },\n    getProperty: function getProperty(categoryId) {\n      var _this3 = this;\n\n      this.tableListLoading = true;\n      (0, _material.getMaterialCategoryPropertyByCategoryId)({\n        categoryId: categoryId\n      }).then(function (response) {\n        _this3.tableList = response.data;\n        _this3.tableListLoading = false;\n      }).catch(function () {\n        _this3.tableListLoading = false;\n      });\n    },\n    AddPropertyforCategory: function AddPropertyforCategory() {\n      if (this.currentRow === null) {\n        this.$message.warning('请选中');\n        return false;\n      }\n\n      this.comName = 'AddMaterialCategoryProperty';\n      this.dialogTableVisible = true;\n    },\n    handleDel: function handleDel(row) {\n      var _this4 = this;\n\n      this.$confirm('是否确定删除？', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        (0, _material.DeleteMaterialCategoryProperty)({\n          id: row.id\n        }).then(function (response) {\n          _this4.getProperty(row.categoryId);\n\n          _this4.$message.success(response.message);\n        });\n      }).catch(function () {\n        _this4.$message.info('已取消删除');\n      });\n    },\n    addPro: function addPro() {\n      // 获取所有子节点\n      var nodes = this.$refs.tree.getCheckedNodes(true, false);\n\n      if (!nodes.length) {\n        this.$message.warning('请选择节点，可多选');\n        return false;\n      }\n\n      this.dialogTitle = '批量添加属性';\n      this.checkedNodes = nodes;\n      this.comName = 'AddRangeMCP';\n      this.dialogTableVisible = true;\n    },\n    copyTo: function copyTo() {\n      // 获取所有子节点\n      var nodes = this.$refs.tree.getCheckedNodes(true, false);\n\n      if (!nodes.length) {\n        this.$message.warning('请选择要复制的节点，可多选');\n        return false;\n      }\n\n      this.dialogTitle = '批量复制属性';\n      this.checkedNodes = nodes;\n      this.comName = 'CopyTo';\n      this.dialogTableVisible = true;\n    }\n  }\n};\nexports.default = _default;",null]}