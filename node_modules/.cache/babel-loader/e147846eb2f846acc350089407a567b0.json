{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\ywgl\\bussiness\\bussinessInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\ywgl\\bussiness\\bussinessInfo.vue","mtime":1636089866497},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _bussinessInfo = require(\"@/api/ywgl/bussinessInfo\");\n\nvar _SearchBar = _interopRequireDefault(require(\"@/components/SearchBar\"));\n\nvar _TableEx = _interopRequireDefault(require(\"@/components/TableEx\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'BussinessInfo',\n  components: {\n    SearchBar: _SearchBar.default,\n    TableEx: _TableEx.default\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      size: 'mini',\n      // 整体大小 medium / small / mini\n      labelWidth: '100px',\n      searchData: require(\"./searchData\").default(),\n      // 渲染搜索栏数据\n      lastSearch: null,\n      // 最近一次搜索的数据\n      filter: {\n        // 过滤数据\n        type: 2,\n        types: [{\n          label: '我发起的',\n          value: 0\n        }, {\n          label: '立项审批',\n          value: 1\n        }, {\n          label: '在跟踪',\n          value: 2\n        }, {\n          label: '合同签订',\n          value: 3\n        }, {\n          label: '失标总结',\n          value: 4\n        }, {\n          label: '总结完成',\n          value: 5\n        }, {\n          label: '合同履约',\n          value: 6\n        }, {\n          label: '列表',\n          value: 7\n        }],\n        areaList: [],\n        // 区域\n        cooperationModeList: [],\n        // 合作模式\n        marketCategoryList: [],\n        professionalTypeList: [],\n        progressList: [],\n        trackDepthList: [],\n        informationSourceList: [],\n        housePropertyList: [],\n        developerList: [],\n        personList: [],\n        dockPersonList: [],\n        reliableLevelList: [],\n        trackLevelList: [],\n        traceLevelList: [],\n        importantTypeList: [],\n        projectStatusList: [] // 立项状态\n\n      },\n\n      /* 列表数据相关 */\n      table: {\n        // columns注释在 @/components/TableEx/index.vue\n        columns: [{\n          label: '编号',\n          // 表头\n          prop: 'number',\n          // 渲染的属性\n          class: 'link',\n          // class\n          width: '150',\n          // 宽度\n          click: function click(row) {\n            _this.handleDetail(row.id);\n          }\n        }, {\n          label: '组织机构',\n          prop: 'orgName',\n          width: '120'\n        }, {\n          label: '专业类型',\n          prop: 'professionalType',\n          width: '100'\n        }, {\n          label: '工程名称',\n          prop: 'projectName',\n          minWidth: '120'\n        }, {\n          label: '发包单位',\n          prop: 'developer',\n          minWidth: '120'\n        }, {\n          align: 'right',\n          label: '预估造价(万元)',\n          prop: 'cost',\n          format: 'money',\n          minWidth: '120'\n        }, {\n          label: '可靠级别',\n          prop: 'reliableLevel',\n          width: '100'\n        }, {\n          label: '重要',\n          prop: 'isImportant',\n          width: '100',\n          format: function format(val) {\n            return val ? '<i class=\"el-icon-check\" />' : '';\n          }\n        }, {\n          label: '营销经理',\n          prop: 'manager',\n          minWidth: '120'\n        }, {\n          label: '跟踪级别',\n          prop: 'traceLevel',\n          minWidth: '120'\n        }, {\n          label: '进展',\n          prop: 'progress',\n          minWidth: '120'\n        }, {\n          label: '暂定开工日期',\n          prop: 'startDate',\n          format: 'date',\n          minWidth: '120'\n        }, {\n          label: '状态',\n          prop: 'formStateName',\n          minWidth: '80'\n        }, {\n          label: '跟踪人',\n          prop: 'trackPerson',\n          minWidth: '100'\n        }],\n        list: [],\n        exLoading: false,\n        // 导出loading\n        tbLoading: false,\n        // table loading\n        total: 0,\n        currentPage: 1,\n        pageSize: this.utils.getPersonalSettings().pageSize\n      }\n    };\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    next(function (vm) {\n      vm.fetchData();\n    });\n  },\n  methods: {\n    fetchData: function fetchData(type) {\n      var _this2 = this;\n\n      // SearchBar 事件类型 重置:reset  搜索:search\n      switch (type) {\n        case 'filter':\n          this.table.currentPage = 1;\n          break;\n\n        case 'reset':\n        case 'search':\n          this.table.currentPage = 1;\n          this.lastSearch = null;\n          break;\n      }\n\n      this.table.tbLoading = true;\n      this.getTable().then(function (res) {\n        return _this2.parseServeDate(res);\n      }).finally(function () {\n        _this2.table.tbLoading = false;\n      });\n    },\n    parseServeDate: function parseServeDate(res) {\n      var _data$, _data$$billFlow, _data$$billFlow$form;\n\n      var data = res.data,\n          count = res.count,\n          cityList = res.cityList,\n          managementiStateList = res.managementiStateList,\n          marketCategoryList = res.marketCategoryList,\n          professionalTypeList = res.professionalTypeList,\n          progressList = res.progressList,\n          trackDepthList = res.trackDepthList,\n          informationSourceList = res.informationSourceList,\n          projectPropertyList = res.projectPropertyList,\n          dockPersonList = res.dockPersonList,\n          importantTypeList = res.importantTypeList,\n          reliableLevelList = res.reliableLevelList,\n          trackLevelList = res.trackLevelList,\n          formState = res.formState;\n      this.$refs['SearchBar'].setData('area', 'options', cityList, 'init');\n      this.$refs['SearchBar'].setData('cooperationMode', 'options', managementiStateList, 'init');\n      this.$refs['SearchBar'].setData('marketCategory', 'options', marketCategoryList, 'init');\n      this.$refs['SearchBar'].setData('professionalType', 'options', professionalTypeList, 'init');\n      this.$refs['SearchBar'].setData('progress', 'options', progressList, 'init');\n      this.$refs['SearchBar'].setData('trackDepth', 'options', trackDepthList, 'init');\n      this.$refs['SearchBar'].setData('informationSource', 'options', informationSourceList, 'init');\n      this.$refs['SearchBar'].setData('houseProperty', 'options', projectPropertyList, 'init');\n      this.$refs['SearchBar'].setData('dockPerson', 'options', dockPersonList, 'init');\n      this.$refs['SearchBar'].setData('isImportant', 'options', importantTypeList, 'init');\n      this.$refs['SearchBar'].setData('reliableLevel', 'options', reliableLevelList, 'init');\n      this.$refs['SearchBar'].setData('trackLevel', 'options', trackLevelList, 'init');\n      this.$refs['SearchBar'].setData('state', 'options', formState, 'init');\n      this.$refs['SearchBar'].setData('projectStatus', 'options', (_data$ = data[0]) === null || _data$ === void 0 ? void 0 : (_data$$billFlow = _data$.billFlow) === null || _data$$billFlow === void 0 ? void 0 : (_data$$billFlow$form = _data$$billFlow.form) === null || _data$$billFlow$form === void 0 ? void 0 : _data$$billFlow$form.formState, 'init');\n      this.table.list = data;\n      this.table.total = count;\n    },\n\n    /**\r\n     * @description: 获取列表数据、搜索数据\r\n     * @return {*}\r\n     */\n    getTable: function getTable() {\n      var currentPage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.table.currentPage;\n      var pageSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.table.pageSize;\n      // 获取请求参数\n      var postData = this.getSearchData();\n      postData.type = this.filter.type;\n      postData.currentPage = currentPage;\n      postData.pageSize = pageSize; // 请求开始\n\n      return (0, _bussinessInfo.getBussinessInfoPaging)(postData);\n    },\n\n    /**\r\n     * @description: 搜索栏数据转换\r\n     * @return {Object} request数据\r\n     */\n    getSearchData: function getSearchData() {\n      var _this3 = this;\n\n      if (this.lastSearch === null) {\n        this.lastSearch = {};\n        this.searchData.forEach(function (item) {\n          var value = item.value,\n              transformType = item.transformType,\n              name = item.name;\n\n          if (transformType === 'property-serial') {\n            value.forEach(function (ele, index) {\n              var serial = index + 1;\n              _this3.lastSearch[name + serial] = ele;\n            });\n          } else {\n            _this3.lastSearch[name] = value;\n          }\n        });\n      }\n\n      return this.lastSearch;\n    },\n    handleAdd: function handleAdd() {\n      this.$router.push({\n        name: 'BussinessInfoEdit',\n        query: {\n          refreshRouterName: this.$route.name\n        }\n      });\n    },\n    handleEdit: function handleEdit(row) {\n      this.$router.push({\n        name: 'BussinessInfoAttitude',\n        query: {\n          id: row.id,\n          refreshRouterName: this.$route.name\n        },\n        params: {\n          id: row.id\n        }\n      });\n    },\n    handleAttitude: function handleAttitude(row) {\n      this.$router.push({\n        name: 'BussinessInfoAttitude',\n        query: {\n          id: row.id,\n          refreshRouterName: this.$route.name\n        },\n        params: {\n          id: row.id\n        }\n      });\n    },\n    handleReply: function handleReply(row) {\n      this.$router.push({\n        name: 'BussinessInfoReply',\n        query: {\n          id: row.id,\n          refreshRouterName: this.$route.name\n        },\n        params: {\n          id: row.id\n        }\n      });\n    },\n    handleDetail: function handleDetail(id) {\n      this.$router.push({\n        name: 'BussinessInfoDetail',\n        query: {\n          id: id,\n          refreshRouterName: this.$route.name\n        },\n        params: {\n          id: id\n        }\n      });\n    }\n  }\n};\nexports.default = _default;",null]}