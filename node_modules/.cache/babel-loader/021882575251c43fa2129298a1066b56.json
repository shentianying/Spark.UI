{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\gckgl\\gathering\\projectGatheringDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\gckgl\\gathering\\projectGatheringDetail.vue","mtime":1635749455693},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _projectGathering = require(\"@/api/xmgl/projectGathering\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'ProjectGatheringDetail',\n  components: {},\n  data: function data() {\n    return {\n      type: '',\n      // edit：编辑 add:新增\n      ruleForm: {\n        id: 0,\n        number: '',\n        orgId: null,\n        companyId: this.$store.state.user.selectOrgId,\n        projectId: null,\n        gatheringType: '',\n        capitalType: '',\n        gatheringDate: new Date(),\n        personId: this.$store.state.user.uid,\n        gatheringAmount: '',\n        remark: '',\n        state: 0,\n        splitOrgId: null,\n        splitCompanyProjectId: null,\n        splitCompanyAmount: '',\n        splitProjectAmount: '',\n        groupManageFee: '',\n        bank: ''\n      },\n      projectGatheringId: null,\n      orgName: '',\n      splitOrgName: '',\n      splitCompanyProject: '',\n      loading: false,\n      rules: {}\n    };\n  },\n  activated: function activated() {\n    console.log('activated');\n\n    if (this.$route.params.id) {\n      console.log(this.$route.params.id);\n      this.initData();\n      this.refreshRouterName = this.$route.params.refreshRouterName;\n    }\n  },\n  mounted: function mounted() {\n    if (!this.$route.params.id) {\n      this.active = 0;\n      this.initData();\n      this.refreshRouterName = this.$route.params.refreshRouterName;\n    }\n  },\n  methods: {\n    initData: function initData() {\n      var _this = this;\n\n      console.log(this.$route.query.id);\n      this.projectGatheringId = this.$route.query.id;\n\n      if (this.projectGatheringId) {\n        (0, _projectGathering.getProjectGatheringDetailById)({\n          id: this.projectGatheringId\n        }).then(function (response) {\n          var data = response.data,\n              orgName = response.orgName,\n              splitOrgName = response.splitOrgName,\n              splitCompanyProject = response.splitCompanyProject,\n              gatheringType = response.gatheringType,\n              capitalType = response.capitalType;\n          _this.ruleForm = data;\n          _this.orgName = orgName;\n          _this.splitOrgName = splitOrgName;\n          _this.splitCompanyProject = splitCompanyProject;\n          _this.ruleForm.capitalType = capitalType.name;\n          _this.ruleForm.gatheringType = gatheringType.name;\n        });\n      }\n    },\n    closeThePage: function closeThePage() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    }\n  }\n};\nexports.default = _default;",null]}