{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\zjgl\\Acceptance\\details.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\zjgl\\Acceptance\\details.vue","mtime":1635749455631},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _Acceptance = require(\"@/api/cwgl/zjgl/Acceptance.js\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'ChengDuiXinXiDetails',\n  data: function data() {\n    return {\n      id: '',\n      size: 'mini',\n      loading: false,\n      gatheringId: '',\n      state: -1,\n      expendId: '',\n      infoList: [{\n        label: '票号',\n        value: '',\n        name: 'ticketNumber'\n      }, {\n        label: '相关单据',\n        value: '',\n        name: 'btn'\n      }, {\n        label: '部门',\n        value: '',\n        name: 'orgName'\n      }, {\n        label: '承兑类型',\n        value: '',\n        name: 'capitalType'\n      }, {\n        label: '开票日期',\n        value: '',\n        name: 'ticketDate'\n      }, {\n        label: '到期日期',\n        value: '',\n        name: 'expiration'\n      }, {\n        label: '金额',\n        value: '',\n        name: 'amount'\n      }, {\n        label: '付款行',\n        value: '',\n        name: 'bank'\n      }, {\n        label: '出票人',\n        value: '',\n        name: 'drawer'\n      }, {\n        label: '付款人',\n        value: '',\n        name: 'payer'\n      }, {\n        label: '收款人',\n        value: '',\n        name: 'payee',\n        monopolize: true\n      }, {\n        label: '收款日期',\n        value: '',\n        name: 'gatheringDate'\n      }, {\n        label: '支付日期',\n        value: '',\n        name: 'expendDate'\n      }, {\n        label: '备注',\n        value: '',\n        name: 'remark'\n      }, {\n        label: '状态',\n        value: '',\n        name: 'stateName'\n      }, {\n        label: '制单人',\n        value: '',\n        name: 'createUserName'\n      }, {\n        label: '制单时间',\n        value: '',\n        name: 'createDate'\n      }, {\n        label: '更新人',\n        value: '',\n        name: 'lastEditUserName'\n      }, {\n        label: '更新时间',\n        value: '',\n        name: 'lastEditDate'\n      }]\n    };\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    next(function (vm) {\n      vm.initDat();\n    });\n  },\n  methods: {\n    /**\r\n     * @description: 初始化数据\r\n     */\n    initDat: function initDat() {\n      var id = this.$route.query.id;\n\n      if (id) {\n        this.id = id;\n        this.fetchData();\n      }\n    },\n\n    /**\r\n     * @description: 获取列表数据、搜索数据\r\n     * @return {*}\r\n     */\n    fetchData: function () {\n      var _fetchData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var res, dateList;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.loading = true;\n                _context.prev = 1;\n                _context.next = 4;\n                return (0, _Acceptance.GetAcceptDetailById)(this.id);\n\n              case 4:\n                res = _context.sent;\n                this.expendId = res.data.expendId;\n                this.gatheringId = res.data.gatheringId;\n                this.state = res.data.state;\n                dateList = ['gatheringDate', 'ticketDate', 'expiration', 'expendDate'];\n                res.data.amount = this.utils.formatMoney(res.data.amount, 2, 0);\n                this.infoList.forEach(function (item) {\n                  if (dateList.includes(item.name) && res.data[item.name]) {\n                    item.value = new Date(res.data[item.name]).toLocaleDateString().replaceAll('/', '-');\n                  } else {\n                    item.value = res.data[item.name];\n                  }\n                });\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](1);\n                console.log('fetchData:请求列表数据失败，错误信息：', _context.t0);\n\n              case 16:\n                _context.prev = 16;\n                this.loading = false;\n                return _context.finish(16);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 13, 16, 19]]);\n      }));\n\n      function fetchData() {\n        return _fetchData.apply(this, arguments);\n      }\n\n      return fetchData;\n    }(),\n    ensureAcceptDetail: function ensureAcceptDetail() {\n      var _this = this;\n\n      (0, _Acceptance.EnsureAcceptDetail)(this.id).then(function (res) {\n        _this.$message.success(res.message);\n\n        _this.goBack();\n      });\n    },\n    handleShouZhi: function handleShouZhi(type, id) {\n      this.$router.push({\n        name: 'ShouZhiMessage',\n        query: {\n          type: type,\n          id: id,\n          refreshRouterName: this.$route.name\n        }\n      });\n    },\n\n    /**\r\n     * 取消并返回上一页\r\n     */\n    goBack: function goBack() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    }\n  }\n};\nexports.default = _default;",null]}