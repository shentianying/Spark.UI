{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\zjgl\\FundAllocation\\details.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\zjgl\\FundAllocation\\details.vue","mtime":1635749455636},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/objectSpread2\"));\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _FundAllocation = require(\"@/api/cwgl/zjgl/FundAllocation.js\");\n\nvar _flowDisplay = _interopRequireDefault(require(\"@/components/Flow/flowDisplay\"));\n\nvar _flowAttitude = _interopRequireDefault(require(\"@/components/Flow/flowAttitude\"));\n\nvar _AcceptanceCheckList = _interopRequireDefault(require(\"@/components/Other/AcceptanceCheckList\"));\n\nvar _Detailsedit = _interopRequireDefault(require(\"@/components/Detailsedit\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// 未支出承兑单弹窗\nvar _default = {\n  name: 'ZiJinDiaoBoDetails',\n  components: {\n    // UpFile,\n    FlowDisplay: _flowDisplay.default,\n    FlowAttitude: _flowAttitude.default,\n    AcceptanceCheckList: _AcceptanceCheckList.default,\n    Detailsedit: _Detailsedit.default\n  },\n  data: function data() {\n    return {\n      size: 'mini',\n      activeNames: ['0', '1', '2'],\n      // 展开的折叠面板\n      dialogVisible: false,\n      // 显示未支出承兑选择框\n      loading: false,\n      // 请求未完成\n      myDetails: null,\n      // 详情数据\n      showPayButton: false,\n      // 是否显示支付按钮\n      billFlowData: null,\n      // 流程信息\n      attitudePara: null,\n      // 审批信息\n      // _或$开头的变量不会被代理,访问方式this.$data._value\n      // eslint-disable-next-line vue/no-reserved-keys\n      _capitalTypeList: null // 资金形式列表\n\n    };\n  },\n  computed: {\n    /**\r\n     * 详情各字段计算\r\n     */\n    infoList: function infoList() {\n      var _stateArr$;\n\n      var _this$myDetails = this.myDetails,\n          number = _this$myDetails.number,\n          amount = _this$myDetails.amount,\n          remark = _this$myDetails.remark,\n          capitalType = _this$myDetails.capitalType,\n          orgStr = _this$myDetails.orgStr,\n          orgInStr = _this$myDetails.orgInStr,\n          createUserName = _this$myDetails.createUserName,\n          createDate = _this$myDetails.createDate,\n          payer = _this$myDetails.payer,\n          payDate = _this$myDetails.payDate,\n          lastEditUserName = _this$myDetails.lastEditUserName,\n          lastEditDate = _this$myDetails.lastEditDate,\n          state = _this$myDetails.state,\n          formState = this.billFlowData.form.formState,\n          _capitalTypeList = this.$data._capitalTypeList;\n      var stateArr = formState.filter(function (item) {\n        return item.value === state;\n      });\n      return [{\n        label: '编号',\n        value: number,\n        monopolize: true\n      }, {\n        label: '调出部门',\n        value: orgStr\n      }, {\n        label: '调入部门',\n        value: orgInStr\n      }, {\n        label: '资金形式',\n        value: _capitalTypeList && _capitalTypeList.find(function (v) {\n          return v.value === capitalType;\n        }).name\n      }, {\n        label: '金额',\n        value: this.utils.formatMoney(amount, 2, 0)\n      }, {\n        label: '备注',\n        value: remark,\n        monopolize: true\n      }, {\n        label: '制单人',\n        value: createUserName\n      }, {\n        label: '制单日期',\n        value: createDate\n      }, {\n        label: '支付人',\n        value: payer === null || payer === void 0 ? void 0 : payer.name\n      }, {\n        label: '支付日期',\n        value: payDate\n      }, {\n        label: '更新人',\n        value: lastEditUserName\n      }, {\n        label: '更新日期',\n        value: lastEditDate\n      }, {\n        label: '状态',\n        value: (_stateArr$ = stateArr[0]) === null || _stateArr$ === void 0 ? void 0 : _stateArr$.name\n      }];\n    },\n\n    /**\r\n     * 判断是否是承兑\r\n     */\n    isChengdui: function isChengdui() {\n      var capitalType = this.myDetails.capitalType;\n      return capitalType === 2 || capitalType === 3;\n    },\n\n    /**\r\n     * 计算是否显示审批表单\r\n     */\n    showForm: function showForm() {\n      var state = this.myDetails.state;\n      return state === 1 || state === 1000;\n    }\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    next(function (vm) {\n      vm.initDat();\n    });\n  },\n  methods: {\n    /**\r\n     * @description: 初始化数据\r\n     */\n    initDat: function initDat() {\n      var id = this.$route.query.id;\n      this.myId = id;\n      this.fetchData();\n      this.getCapitalList();\n    },\n\n    /**\r\n     * 提交审批意见以后的回调函数\r\n     */\n    updateFlow: function updateFlow() {\n      // 直接返回\n      this.goBack();\n    },\n\n    /**\r\n     * 获取调拨详情信息\r\n     */\n    fetchData: function () {\n      var _fetchData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        var _yield$GetFundAllocat, billFlowData, data, orgInStr, orgStr, showPayButton;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.myId) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                this.loading = true;\n                _context.prev = 3;\n                _context.next = 6;\n                return (0, _FundAllocation.GetFundAllocationById)(this.myId);\n\n              case 6:\n                _yield$GetFundAllocat = _context.sent;\n                billFlowData = _yield$GetFundAllocat.billFlowData;\n                data = _yield$GetFundAllocat.data;\n                orgInStr = _yield$GetFundAllocat.orgInStr;\n                orgStr = _yield$GetFundAllocat.orgStr;\n                showPayButton = _yield$GetFundAllocat.showPayButton;\n                this.billFlowData = billFlowData;\n                this.myDetails = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, data), {}, {\n                  orgInStr: orgInStr,\n                  orgStr: orgStr\n                });\n                this.showPayButton = showPayButton;\n                this.attitudePara = {\n                  formId: billFlowData.formId,\n                  billFlowId: data.billFlowId,\n                  planId: data.id\n                };\n                this.$nextTick(function () {\n                  if (showPayButton) {\n                    _this.$refs.flowAttitude.ruleForm.content = '支付';\n                  }\n                });\n                _context.next = 22;\n                break;\n\n              case 19:\n                _context.prev = 19;\n                _context.t0 = _context[\"catch\"](3);\n                console.log('fetchData:请求列表数据失败，错误信息：', _context.t0);\n\n              case 22:\n                _context.prev = 22;\n                this.loading = false;\n                return _context.finish(22);\n\n              case 25:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 19, 22, 25]]);\n      }));\n\n      function fetchData() {\n        return _fetchData.apply(this, arguments);\n      }\n\n      return fetchData;\n    }(),\n\n    /**\r\n     * 获取资金形式列表\r\n     */\n    getCapitalList: function getCapitalList() {\n      var _this2 = this;\n\n      (0, _FundAllocation.InitiFundAllocation)().then(function (_ref) {\n        var capitalTypeList = _ref.capitalTypeList;\n        _this2.$data._capitalTypeList = capitalTypeList;\n      });\n    },\n\n    /**\r\n     * 点确定支付按钮\r\n     */\n    wantToPay: function wantToPay() {\n      var _this3 = this;\n\n      if (this.isChengdui) {\n        this.$refs['acceptanceLIst'].params.orgids = [this.myDetails.orgId];\n        this.dialogVisible = true;\n      } else {\n        this.$confirm('确定要支付吗?', '提示', {\n          type: 'warning'\n        }).then(function () {\n          _this3.payIt();\n        });\n      }\n    },\n\n    /**\r\n     * 支付\r\n     * @param {Array} list 非必填,当是承兑类型的时候传过来的\r\n     */\n    payIt: function payIt(list) {\n      var _this4 = this;\n\n      var _this$myDetails2 = this.myDetails,\n          id = _this$myDetails2.id,\n          orgId = _this$myDetails2.orgId,\n          orgIdIn = _this$myDetails2.orgIdIn,\n          capitalType = _this$myDetails2.capitalType,\n          amount = _this$myDetails2.amount,\n          remark = _this$myDetails2.remark,\n          billFlowId = _this$myDetails2.billFlowId,\n          state = _this$myDetails2.state;\n      var req = {\n        id: id,\n        orgId: orgId,\n        orgIdIn: orgIdIn,\n        capitalType: capitalType,\n        amount: amount,\n        remark: remark,\n        BillFlowId: billFlowId,\n        state: state\n      };\n      if (list) req.acceptance = list.map(function (v) {\n        return {\n          id: v.id\n        };\n      });\n      var attitudeData = this.$refs.flowAttitude.getPostData();\n      attitudeData.content = '审批支付';\n      this.loading = true;\n      (0, _FundAllocation.PayFor)({\n        attitude: attitudeData,\n        fundAllocation: req\n      }).then(function (res) {\n        if (res.success) {\n          _this4.$message.success(res.message);\n\n          _this4.goBack(); // 跳转\n\n        } else {\n          _this4.$message.error(res.message);\n        }\n\n        _this4.loading = false;\n      }).catch(function () {\n        _this4.loading = false;\n      });\n    },\n\n    /**\r\n     * 确认选取承兑\r\n     */\n    cdCheck: function cdCheck(list) {\n      var orgId = this.myDetails.orgId;\n      var sum = this.utils.sum(list.map(function (v) {\n        return v.amount;\n      })).toFixed(2);\n      var amount = this.myDetails.amount.toFixed(2);\n\n      if (sum !== amount) {\n        this.$message.error('选择承兑票金额与调拨单金额不一致');\n      } else if (list.find(function (v) {\n        return v.orgId !== orgId;\n      })) {\n        this.$message.error('承兑部门与调出部门不一致');\n      } else {\n        this.payIt(list);\n      }\n    },\n    goBack: function goBack() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    }\n  }\n};\nexports.default = _default;",null]}