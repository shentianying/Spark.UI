{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\rsgl\\gwc\\postPool.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\rsgl\\gwc\\postPool.vue","mtime":1624677220862},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _postPool = require(\"@/api/rsgl/postPool\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'PostPool',\n  components: {},\n  data: function data() {\n    return {\n      list: [],\n      listLoading: false,\n      total: 0,\n      currentPage: 1,\n      pageSize: 10,\n      currentRow: null,\n      buttonLoading: false,\n      searchText: '',\n      categoryList: []\n    };\n  },\n  activated: function activated() {\n    if (this.$route.params.refresh) {\n      this.fetchData();\n    }\n  },\n  mounted: function mounted() {\n    this.fetchData();\n  },\n  methods: {\n    fetchData: function fetchData() {\n      var _this = this;\n\n      this.listLoading = true;\n      var postData = {};\n      postData.currentPage = this.currentPage;\n      postData.pageSize = this.pageSize;\n      postData.name = this.searchText;\n      (0, _postPool.getPostPoolPaging)(postData).then(function (response) {\n        var data = response.data,\n            count = response.count,\n            categoryList = response.categoryList;\n        _this.list = data;\n        _this.total = count;\n        _this.categoryList = categoryList;\n        _this.listLoading = false; // console.log(data)\n      });\n    },\n    handleAdd: function handleAdd(row) {\n      this.$router.push({\n        name: 'PostPoolEdit',\n        query: {\n          refreshRouterName: this.$route.name\n        },\n        params: {\n          type: 3\n        }\n      });\n    },\n    handleEdit: function handleEdit(row) {\n      this.$router.push({\n        name: 'PostPoolEdit',\n        query: {\n          id: row.id,\n          refreshRouterName: this.$route.name\n        },\n        params: {\n          id: row.id\n        }\n      });\n    },\n    handleDetail: function handleDetail(row) {\n      this.$router.push({\n        name: 'PostPoolDetail',\n        query: {\n          id: row.id,\n          refreshRouterName: this.$route.name\n        },\n        params: {\n          id: row.id\n        }\n      });\n    },\n    sizeChange: function sizeChange(val) {\n      this.pageSize = val;\n      this.fetchData();\n    },\n    goSearch: function goSearch() {\n      this.fetchData();\n    }\n  }\n};\nexports.default = _default;",null]}