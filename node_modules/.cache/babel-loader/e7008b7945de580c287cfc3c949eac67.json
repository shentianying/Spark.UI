{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\qxgl\\pageAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\qxgl\\pageAdd.vue","mtime":1626852980489},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _page = require(\"@/api/xtgl/page\");\n\nvar _index = require(\"@/utils/index\");\n\nvar _vueTreeselect = _interopRequireDefault(require(\"@riophae/vue-treeselect\"));\n\nrequire(\"@riophae/vue-treeselect/dist/vue-treeselect.css\");\n\nvar _svgIcons = _interopRequireDefault(require(\"@/utils/svg-icons\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import OrgSelect2 from '@/components/OrgSelect/index2'\n// import the component\n// import the styles\nvar _default = {\n  name: 'AddPage',\n  components: {\n    // OrgSelect2\n    Treeselect: _vueTreeselect.default\n  },\n  props: {\n    obj: {\n      type: Object,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      ruleForm: {\n        pid: 0,\n        sort: '',\n        routerName: '',\n        routerRedirect: 'noRedirect',\n        routerPath: '',\n        routerComponent: '',\n        routerIcon: '',\n        routerTitle: '',\n        routerHidden: 'false',\n        // 默认显示\n        isPage: true\n      },\n      svgIcons: _svgIcons.default,\n      treeList: null,\n      buttonLoading: false,\n      isLoad: false,\n      rules: {// path: [{ required: true, message: '请输入活动名称', trigger: 'blur' }],\n        // name: [{ required: true, message: '请输入路由名称', trigger: 'blur' }],\n        // component: [\n        //   { required: true, message: '请选择活动区域', trigger: 'blur' }\n        // ]\n      }\n    };\n  },\n  wathch: {},\n  mounted: function mounted() {\n    this.initData();\n    this.initTree();\n  },\n  methods: {\n    submitForm: function submitForm(formName) {\n      var _this = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var newObj = JSON.parse(JSON.stringify(_this.ruleForm));\n          newObj.routerHidden = newObj.routerHidden === 'true'; // newObj.isPage = newObj.isPage === 'true'\n\n          _this.buttonLoading = true;\n\n          if (_this.obj) {\n            newObj.id = _this.obj.id;\n            (0, _page.update)(newObj).then(function (response) {\n              _this.$message(response.message);\n\n              _this.buttonLoading = true;\n\n              _this.$emit('dialogClose');\n            }).catch(function () {\n              _this.buttonLoading = false;\n            });\n          } else {\n            (0, _page.add)(newObj).then(function (response) {\n              _this.$message(response.message);\n\n              _this.buttonLoading = true;\n\n              _this.$emit('dialogClose');\n            }).catch(function () {\n              _this.buttonLoading = false;\n            });\n          }\n        }\n      });\n    },\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    initData: function initData() {\n      if (this.obj) {\n        var newObj = JSON.parse(JSON.stringify(this.obj));\n        newObj.routerHidden = newObj.routerHidden ? 'true' : 'false';\n        this.ruleForm = newObj;\n        console.log('传过来的数据：', newObj);\n      }\n    },\n    initTree: function initTree() {\n      var _this2 = this;\n\n      this.listLoading = true;\n      (0, _page.GetAllList)().then(function (response) {\n        response.data.forEach(function (ele) {\n          ele.label = ele.routerTitle;\n        }); // this.treeList = response.data\n\n        _this2.isLoad = true; // console.log('树形结构：', this.treeList)\n\n        var result = (0, _index.getTree)(0, response.data);\n        _this2.treeList = [{\n          id: 0,\n          pid: 0,\n          label: '一级根目录',\n          children: result\n        }];\n        _this2.listLoading = false;\n      });\n    }\n  }\n};\nexports.default = _default;",null]}