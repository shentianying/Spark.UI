{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\byj\\Imprest\\ApplicationDetails.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\byj\\Imprest\\ApplicationDetails.vue","mtime":1635749455621},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/toConsumableArray\"));\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _Impresst = require(\"@/api/cwgl/Impresst.js\");\n\nvar _CapitalSelect = _interopRequireDefault(require(\"@/components/SearchBar/form/CapitalSelect\"));\n\nvar _flowDisplay = _interopRequireDefault(require(\"@/components/Flow/flowDisplay\"));\n\nvar _flowAttitude = _interopRequireDefault(require(\"@/components/Flow/flowAttitude\"));\n\nvar _Detailsedit = _interopRequireDefault(require(\"@/components/Detailsedit\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'ImprestApplicationDetails',\n  components: {\n    FlowDisplay: _flowDisplay.default,\n    FlowAttitude: _flowAttitude.default,\n    Detailsedit: _Detailsedit.default,\n    CapitalSelect: _CapitalSelect.default\n  },\n  data: function data() {\n    return {\n      type: 'details',\n      // 审核:approval 详情:details 支付:pay\n      size: 'mini',\n      capitalType: 1,\n      amount: '',\n      filter: {\n        stateOptions: [// 状态数组\n        ]\n      },\n      activeNames: ['0', '1', '2'],\n      // 展开的折叠面板\n      saveLoading: false,\n      payLoading: false,\n      myDetails: null,\n      // 详情数据\n      billFlowData: null,\n      // 流程信息\n      attitudePara: null,\n      // 审批信息\n      showPayButton: false\n    };\n  },\n  computed: {\n    /**\r\n     * 详情各字段计算\r\n     */\n    infoList: function infoList() {\n      var _this = this;\n\n      var _this$myDetails = this.myDetails,\n          orgStr = _this$myDetails.orgStr,\n          imprestType = _this$myDetails.imprestType,\n          capitalType = _this$myDetails.capitalType,\n          _this$myDetails$data = _this$myDetails.data,\n          person = _this$myDetails$data.person,\n          number = _this$myDetails$data.number,\n          amount = _this$myDetails$data.amount,\n          isBalanceAdjust = _this$myDetails$data.isBalanceAdjust,\n          applicationAmount = _this$myDetails$data.applicationAmount,\n          bank = _this$myDetails$data.bank,\n          account = _this$myDetails$data.account,\n          remark = _this$myDetails$data.remark,\n          summary = _this$myDetails$data.summary,\n          upFile = _this$myDetails$data.upFile,\n          createUserName = _this$myDetails$data.createUserName,\n          createDate = _this$myDetails$data.createDate,\n          lastEditUserName = _this$myDetails$data.lastEditUserName,\n          lastEditDate = _this$myDetails$data.lastEditDate,\n          payoutUserName = _this$myDetails$data.payoutUserName,\n          payoutDate = _this$myDetails$data.payoutDate,\n          submitUserName = _this$myDetails$data.submitUserName,\n          submitDate = _this$myDetails$data.submitDate,\n          state = _this$myDetails$data.state;\n\n      var m = function m(val) {\n        return _this.utils.formatMoney(val, 2, 0);\n      }; // const d = (dataStr) => dataStr ? this.$moment(dataStr).format('YYYY-MM-DD') : dataStr\n\n\n      var a = this.utils.amountInWords;\n      var info = [{\n        label: '制单人',\n        value: createUserName\n      }, {\n        label: '制单时间',\n        value: createDate\n      }, {\n        label: '提交人',\n        value: submitUserName\n      }, {\n        label: '提交时间',\n        value: submitDate\n      }, {\n        label: '支付人',\n        value: payoutUserName\n      }, {\n        label: '支付时间',\n        value: payoutDate\n      }, {\n        label: '更新人',\n        value: lastEditUserName\n      }, {\n        label: '更新时间',\n        value: lastEditDate\n      }, {\n        label: '状态',\n        value: this.filter.stateOptions.find(function (item) {\n          return item.value === state;\n        }).name\n      }];\n      return [{\n        label: '编号',\n        value: number\n      }, {\n        label: '部门',\n        value: orgStr\n      }, {\n        label: '工号',\n        value: person.number\n      }, {\n        label: '姓名',\n        value: person.name\n      }, {\n        label: '申请金额',\n        value: m(applicationAmount)\n      }, {\n        label: '金额大写',\n        value: a(applicationAmount)\n      }, {\n        label: '批准金额',\n        value: m(amount)\n      }, {\n        label: '金额大写',\n        value: a(amount)\n      }, {\n        label: '类别',\n        value: imprestType\n      }, {\n        label: '余额调整',\n        value: isBalanceAdjust ? '是' : '否'\n      }, {\n        label: '用途',\n        value: summary\n      }, {\n        label: '开户行',\n        value: bank\n      }, {\n        label: '账号',\n        value: account\n      }, {\n        label: '支付方式',\n        value: capitalType\n      }, {\n        label: '备注',\n        value: remark,\n        monopolize: true\n      }, {\n        label: '附件',\n        value: upFile || [],\n        component: 'UpFile',\n        monopolize: true\n      }].concat((0, _toConsumableArray2.default)(state === 10000 ? info : []));\n    }\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    next(function (vm) {\n      vm.initData();\n    });\n  },\n  // watch: {\n  //   '$route.query.type'(val) {\n  //     this.type = val\n  //   }\n  // },\n  methods: {\n    // 作废\n    invalidForm: function invalidForm() {\n      var _this2 = this;\n\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        return (0, _Impresst.DeleteImprestAppliaction)({\n          id: _this2.myId\n        });\n      }).then(function () {\n        _this2.$message.success('操作成功');\n\n        _this2.back();\n      });\n    },\n    saveFlow: function saveFlow() {\n      var _this3 = this;\n\n      this.$confirm('是否确定保存？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        var attitude = _this3.$refs.flowAttitude.getPostData();\n\n        if (attitude.attitudeType === 1 || attitude.attitudeType === 2) {\n          if (!_this3.amount) {\n            return _this3.$message.error('请填写批准金额');\n          }\n\n          if (Number(_this3.amount) > _this3.myDetails.data.applicationAmount) {\n            return _this3.$message.error('批准金额不能大于申请金额');\n          }\n        }\n\n        _this3.saveLoading = true;\n        (0, _Impresst.CheckImprestAppliaction)({\n          attitude: attitude,\n          id: _this3.myDetails.data.id,\n          amount: _this3.amount\n        }).then(function (res) {\n          if (res.code === 200) {\n            _this3.$message.success(res.message);\n\n            _this3.goBack(); // 跳转\n\n          } else {\n            _this3.$message.error(res.message);\n          }\n        }).finally(function () {\n          _this3.saveLoading = false;\n        });\n      });\n    },\n    wantToPay2: function wantToPay2() {\n      var _this4 = this;\n\n      this.$confirm('确定要支付吗?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this4.payLoading = true;\n        var id = _this4.myDetails.data.id;\n\n        var attitudeData = _this4.$refs.flowAttitude.getPostData();\n\n        (0, _Impresst.PayFor)({\n          attitude: attitudeData,\n          id: id,\n          capitalType: _this4.capitalType\n        }).then(function (res) {\n          if (res.code === 200) {\n            _this4.$message.success(res.message);\n\n            _this4.goBack(); // 跳转\n\n          } else {\n            _this4.$message.error(res.message);\n          }\n        }).finally(function () {\n          _this4.payLoading = false;\n        });\n      });\n    },\n\n    /**\r\n     * @description: 初始化数据\r\n     */\n    initData: function initData() {\n      var _this$$route$query = this.$route.query,\n          id = _this$$route$query.id,\n          type = _this$$route$query.type;\n      this.type = type;\n      this.myId = id;\n      this.fetchData();\n    },\n\n    /**\r\n     * 提交审批意见以后的回调函数\r\n     */\n    updateFlow: function updateFlow() {\n      // 直接返回\n      this.goBack();\n    },\n\n    /**\r\n     * 获取详情信息\r\n     */\n    fetchData: function () {\n      var _fetchData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this5 = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.myId) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                (0, _Impresst.GetImprestAppliactionAttitudeById)({\n                  id: this.myId\n                }).then(function (res) {\n                  var _res$billFlowData, _res$billFlowData$for, _res$data;\n\n                  _this5.billFlowData = res.billFlowData;\n                  _this5.filter.stateOptions = ((_res$billFlowData = res.billFlowData) === null || _res$billFlowData === void 0 ? void 0 : (_res$billFlowData$for = _res$billFlowData.form) === null || _res$billFlowData$for === void 0 ? void 0 : _res$billFlowData$for.formState) || [];\n                  _this5.myDetails = res;\n                  _this5.capitalType = res.capitalType || _this5.capitalType;\n                  _this5.amount = (res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.amount) || '';\n                  _this5.showPayButton = res.showPayButton;\n                  _this5.attitudePara = {\n                    formId: res.billFlowData.formId,\n                    billFlowId: res.data.billFlowId,\n                    planId: res.data.id\n                  };\n\n                  _this5.$nextTick(function () {\n                    _this5.$refs['flowAttitude'].ruleForm.content = res.showPayButton ? '已支付' : '';\n                  });\n                }).catch(function (e) {\n                  console.log('fetchData:请求列表数据失败，错误信息：', e);\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function fetchData() {\n        return _fetchData.apply(this, arguments);\n      }\n\n      return fetchData;\n    }(),\n\n    /**\r\n     * 作废\r\n     */\n    // deleteIt() {\n    //   this.$confirm('作废以后将无法编辑和审批，是否确定作废？', '提示', {\n    //     type: 'warning'\n    //   }).then(() => {\n    //     return DeleteImprestAppliaction({ id: this.myId })\n    //   }).then((res) => {\n    //     this.$message.success(res.message)\n    //     this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\n    //   }).catch(err => {\n    //     console.log(err)\n    //     // this.$message.error(err.errorMsg || '操作失败')\n    //   })\n    // },\n    goBack: function goBack() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    }\n  }\n};\nexports.default = _default;",null]}