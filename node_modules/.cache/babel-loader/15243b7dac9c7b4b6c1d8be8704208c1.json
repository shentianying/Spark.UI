{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Projects\\spark\\Spark.UI\\src\\store\\modules\\user.js","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\store\\modules\\user.js","mtime":1624956947728},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _user = require(\"@/api/xtgl/user\");\n\nvar _message = require(\"@/api/xtgl/message\");\n\nvar _role = require(\"@/api/xtgl/role\");\n\nvar _auth = require(\"@/utils/auth\");\n\nvar _router = require(\"@/router\");\n\n// import { logout, getInfo, refreshToken } from '@/api/rsgl/person'\nvar getDefaultState = function getDefaultState() {\n  return {\n    token: (0, _auth.getToken)(),\n    name: '',\n    avatar: '',\n    menus: [],\n    uid: 0,\n    info: {},\n    selectOrgId: 0,\n    // 当前选中的公司id\n    noReadCount: 0\n  };\n};\n\nvar state = getDefaultState();\nvar mutations = {\n  RESET_STATE: function RESET_STATE(state) {\n    Object.assign(state, getDefaultState());\n  },\n  SET_TOKEN: function SET_TOKEN(state, token) {\n    state.token = token;\n  },\n  SET_NAME: function SET_NAME(state, name) {\n    state.name = name;\n  },\n  SET_AVATAR: function SET_AVATAR(state, avatar) {\n    state.avatar = avatar;\n  },\n  SET_MENUS: function SET_MENUS(state, menus) {\n    state.menus = menus;\n  },\n  SET_UID: function SET_UID(state, uid) {\n    state.uid = uid;\n  },\n  SET_INFO: function SET_INFO(state, info) {\n    state.info = info;\n  },\n  SET_NOREADCOUNT: function SET_NOREADCOUNT(state, noReadCount) {\n    state.noReadCount = noReadCount;\n  },\n  SET_SELECTORGID: function SET_SELECTORGID(state, selectOrgId) {\n    state.selectOrgId = selectOrgId;\n  }\n};\nvar actions = {\n  // user login\n  login: function login(_ref, userInfo) {\n    var commit = _ref.commit;\n    var number = userInfo.number,\n        password = userInfo.password;\n    return new Promise(function (resolve, reject) {\n      (0, _user.login)({\n        number: number.trim(),\n        passWord: password\n      }).then(function (response) {\n        var token = response.data.token;\n        var tokenScheme = 'Bearer ' + token;\n        commit('SET_TOKEN', tokenScheme);\n        (0, _auth.setToken)(tokenScheme);\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // 自动登录\n  checkMessage: function checkMessage(_ref2, msgInfo) {\n    var commit = _ref2.commit;\n    var id = msgInfo.id,\n        str = msgInfo.str;\n    return new Promise(function (resolve, reject) {\n      (0, _message.checkMessage)({\n        id: id,\n        str: str\n      }).then(function (response) {\n        var token = response.data.token;\n        var tokenScheme = 'Bearer ' + token;\n        commit('SET_TOKEN', tokenScheme);\n        (0, _auth.setToken)(tokenScheme);\n        resolve({\n          pageId: response.pageId,\n          billId: response.billId,\n          billFlowId: response.billFlowId\n        });\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // get user info\n  getInfo: function getInfo(_ref3) {\n    var commit = _ref3.commit,\n        state = _ref3.state;\n    return new Promise(function (resolve, reject) {\n      (0, _user.getInfo)().then(function (response) {\n        var _response$data = response.data,\n            info = _response$data.info,\n            pageList = _response$data.pageList,\n            noReadCount = _response$data.noReadCount;\n\n        if (!response.data) {\n          reject('验证失败，请重新登录');\n        }\n\n        commit('SET_NAME', info.name);\n        commit('SET_MENUS', pageList);\n        commit('SET_UID', info.uid);\n        commit('SET_INFO', info);\n        commit('SET_NOREADCOUNT', noReadCount);\n        commit('SET_SELECTORGID', info.userOrg.find(function (f) {\n          return f.selected;\n        }).companyId);\n        resolve(response.data);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // user logout\n  logout: function logout(_ref4) {\n    var commit = _ref4.commit,\n        state = _ref4.state;\n    return new Promise(function (resolve, reject) {\n      (0, _user.logout)(state.token).then(function () {\n        (0, _auth.removeToken)(); // must remove  token  first\n\n        (0, _router.resetRouter)();\n        commit('RESET_STATE');\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // remove token\n  resetToken: function resetToken(_ref5) {\n    var commit = _ref5.commit;\n    return new Promise(function (resolve) {\n      (0, _auth.removeToken)(); // must remove  token  first\n\n      commit('RESET_STATE');\n      resolve();\n    });\n  },\n  refreshToken: function refreshToken(_ref6) {\n    var commit = _ref6.commit;\n    return new Promise(function (resolve) {\n      (0, _user.refreshToken)().then(function (response) {});\n    });\n  },\n  toggleOrg: function toggleOrg(_ref7, selectOrgId) {\n    var commit = _ref7.commit,\n        state = _ref7.state;\n    return new Promise(function (resolve, reject) {\n      (0, _role.putUserOrganizationSelected)({\n        userId: state.uid,\n        companyId: selectOrgId\n      }).then(function (response) {\n        commit('SET_SELECTORGID', selectOrgId);\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  }\n};\nvar _default = {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};\nexports.default = _default;",null]}