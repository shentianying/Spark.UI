{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\storage\\storageIn\\storageInDetailCheck.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\storage\\storageIn\\storageInDetailCheck.vue","mtime":1635216068750},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.regexp.search\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _storageIn = require(\"@/api/cggl/storageIn\");\n\nvar _supplier = require(\"@/api/cggl/supplier\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import OrgSelect2 from '@/components/OrgSelect/index2'\nvar _default = {\n  name: 'StorageInDetailCheck',\n  components: {// OrgSelect2\n  },\n  props: {\n    obj: {\n      type: Object,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      ruleForm: {},\n      search: {\n        number: '',\n        orgIds: [],\n        states: [],\n        supplierIds: [],\n        categoryName: ''\n      },\n      total: 0,\n      currentPage: 1,\n      pageSize: this.utils.getPersonalSettings().pageSize,\n      loading: false,\n      list: [],\n      fileList: [],\n      multipleSelection: [],\n      suppliers: [],\n      columnShow: {\n        unit2: true,\n        brand: true,\n        model: true,\n        spec: true,\n        thickness: true,\n        texture: true,\n        surfaceTreatment: true,\n        designNumber: true\n      },\n      rules: {// number: [{ required: true, message: '请输入', trigger: 'change' }]\n      }\n    };\n  },\n  computed: {},\n  watch: {},\n  activated: function activated() {},\n  mounted: function mounted() {\n    this.fetchData();\n  },\n  methods: {\n    fetchData: function () {\n      var _fetchData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        var postData;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.loading = true;\n                postData = {};\n                postData.currentPage = this.currentPage;\n                postData.pageSize = this.pageSize;\n                postData.number = this.search.number;\n                postData.orgIds = this.search.orgIds;\n\n                if (this.obj && this.obj.orgId) {\n                  postData.orgIds.push(this.obj.orgId);\n                }\n\n                postData.states = this.search.states;\n                postData.states.push(10000); // 已入库的材料\n\n                postData.supplierIds = this.search.supplierIds;\n                postData.categoryName = this.search.categoryName;\n                (0, _storageIn.getStorageInDetailPaging)(postData).then(function (response) {\n                  var data = response.data,\n                      count = response.count;\n                  _this.list = data;\n                  var rows = _this.obj.datalist;\n\n                  _this.$refs.multipleTable.clearSelection();\n\n                  if (rows) {\n                    _this.$nextTick(function () {\n                      var _this2 = this;\n\n                      this.list.forEach(function (e) {\n                        var row = rows.find(function (f) {\n                          return f.storageInDetail.id === e.id;\n                        });\n\n                        if (row) {\n                          _this2.$refs.multipleTable.toggleRowSelection(e, true);\n                        } else {\n                          _this2.$refs.multipleTable.toggleRowSelection(e, false);\n                        }\n                      });\n                    });\n                  }\n\n                  _this.setColumnShow();\n\n                  _this.total = count;\n                  _this.loading = false;\n                });\n                (0, _supplier.getSupplierInfo)().then(function (response) {\n                  _this.supplier = response.data;\n                });\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function fetchData() {\n        return _fetchData.apply(this, arguments);\n      }\n\n      return fetchData;\n    }(),\n    setColumnShow: function setColumnShow() {\n      // 设置列的显示。列中，都没有值，就隐藏\n      var modelunit2 = false;\n      var modelbrand = false;\n      var modelmodel = false;\n      var modelspec = false;\n      var modelthickness = false;\n      var modeltexture = false;\n      var modelsurfaceTreatment = false;\n      var modeldesignNumber = false;\n\n      var _iterator = (0, _createForOfIteratorHelper2.default)(this.list),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var row = _step.value;\n\n          if (row.material.unit2) {\n            modelunit2 = true;\n          }\n\n          if (row.material.brand) {\n            modelbrand = true;\n          }\n\n          if (row.material.model) {\n            modelmodel = true;\n          }\n\n          if (row.material.spec) {\n            modelspec = true;\n          }\n\n          if (row.material.thickness) {\n            modelthickness = true;\n          }\n\n          if (row.material.texture) {\n            modeltexture = true;\n          }\n\n          if (row.material.surfaceTreatment) {\n            modelsurfaceTreatment = true;\n          }\n\n          if (row.material.designNumber) {\n            modeldesignNumber = true;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      this.columnShow['unit2'] = modelunit2;\n      this.columnShow['brand'] = modelbrand;\n      this.columnShow['model'] = modelmodel;\n      this.columnShow['spec'] = modelspec;\n      this.columnShow['thickness'] = modelthickness;\n      this.columnShow['texture'] = modeltexture;\n      this.columnShow['surfaceTreatment'] = modelsurfaceTreatment;\n      this.columnShow['designNumber'] = modeldesignNumber;\n    },\n    // 多选框选中数据\n    handleSelectionChange: function handleSelectionChange(selection) {\n      this.multipleSelection = selection;\n    },\n    check: function check() {\n      if (this.multipleSelection.length <= 0) {\n        this.$message.error('请选择材料');\n      } else {\n        var data = {\n          list: this.multipleSelection\n        };\n        this.$emit('dialogClose', data, 'check');\n      }\n    },\n    // handleCurrentChange(val) {\n    //   this.loading = true\n    //   this.ruleForm = val\n    //   getContractDetailsById({ contractId: val.id }).then(response => {\n    //     const { data } = response\n    //     this.list = data\n    //     this.setColumnShow()\n    //     this.loading = false\n    //   })\n    // },\n    sizeChange: function sizeChange(val) {\n      this.pageSize = val;\n      this.fetchData();\n    }\n  }\n};\nexports.default = _default;",null]}