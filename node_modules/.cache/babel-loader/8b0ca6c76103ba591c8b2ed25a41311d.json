{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\material\\components\\addMaterial.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\material\\components\\addMaterial.vue","mtime":1624071363317},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/es6.set\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.array.from\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nvar _material = require(\"@/api/cggl/material\");\n\nvar _index = _interopRequireDefault(require(\"@/components/OrgSelect/index2\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import OrgSelect from '@/components/OrgSelect/index'\nvar _default = {\n  name: 'AddMaterial',\n  components: {\n    OrgSelect2: _index.default // OrgSelect\n\n  },\n  props: {\n    obj: {\n      type: Object,\n      default: null\n    },\n    pid: {\n      type: Number,\n      default: 0\n    }\n  },\n  data: function data() {\n    return {\n      ruleForm: {\n        name: '',\n        unit: '',\n        isMain: true,\n        pid: 0\n      },\n      list: null,\n      show: false,\n      selectData: null,\n      buttonLoading: false,\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入',\n          trigger: 'blur'\n        }],\n        pid: [{\n          required: true,\n          message: '请选择',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  watch: {\n    'ruleForm.pid': {\n      handler: function handler(value, oldvalue) {\n        if (!oldvalue) {\n          this.$refs['ruleForm'].validateField('pid', function (valid) {});\n        }\n\n        if (value && this.list) {\n          this.showMain(value);\n        }\n      },\n      deep: true\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    (0, _material.getAllMaterialCategory)().then(function (response) {\n      var data = response.data;\n      data.forEach(function (e) {\n        // e.label = e.name\n        e.pid = e.pId;\n      }); // var arr = [{ id: 0, pid: 0, label: '根节点' }]\n      // if (data.length) { arr[0].children = data }\n      // this.list = arr\n\n      _this.list = data.filter(function (f) {\n        return f.level !== 3;\n      });\n\n      if (_this.obj) {\n        // console.log(this.obj.pid)\n        // this.selectData = this.obj.pid\n        _this.ruleForm.pid = _this.obj.pid;\n\n        _this.showMain(_this.ruleForm.pid);\n      }\n    });\n  },\n  mounted: function mounted() {\n    this.initData();\n  },\n  methods: {\n    submitForm: function submitForm(formName) {\n      var _this2 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var newObj = JSON.parse(JSON.stringify(_this2.ruleForm));\n\n          if (_this2.obj) {\n            _this2.buttonLoading = true;\n            (0, _material.putMaterialCategory)(newObj).then(function (response) {\n              _this2.$message(response.message);\n\n              _this2.buttonLoading = false;\n\n              _this2.$emit('addCategoryClose', _this2.ruleForm.pid);\n            }).catch(function () {\n              _this2.buttonLoading = false;\n            });\n          } else {\n            var postData = {};\n\n            var cnaArr = _this2.ruleForm.name.split('\\n').filter(function (a) {\n              return a.trim();\n            }); // 分割并且去掉空行\n\n\n            postData.categoryNameArray = Array.from(new Set(cnaArr)); // ES6 去掉重复项\n\n            postData.pid = _this2.ruleForm.pid;\n            postData.unit = _this2.ruleForm.unit;\n            postData.isMain = _this2.ruleForm.isMain;\n            _this2.buttonLoading = true;\n            (0, _material.addRangMaterialCategory)(postData).then(function (response) {\n              _this2.$message(response.message);\n\n              _this2.buttonLoading = false;\n\n              _this2.$emit('addCategoryClose', _this2.ruleForm.pid);\n            }).catch(function () {\n              _this2.buttonLoading = false;\n            });\n          }\n        }\n      });\n    },\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    initData: function initData() {\n      if (this.obj) {\n        var newObj = JSON.parse(JSON.stringify(this.obj)); // console.log('传过来的newObj:', newObj)\n\n        this.ruleForm = newObj;\n      }\n    },\n    showMain: function showMain(pid) {\n      // 显示受控主材\n      if (pid) {\n        var l = this.list.find(function (f) {\n          return f.id === pid;\n        }).level;\n\n        if (l === 2) {\n          this.show = true;\n        } else {\n          this.ruleForm.unit = '';\n          this.show = false;\n        }\n      }\n    }\n  }\n};\nexports.default = _default;",null]}