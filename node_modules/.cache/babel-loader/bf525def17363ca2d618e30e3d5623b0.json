{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\project\\projectDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\project\\projectDetail.vue","mtime":1629341501421},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _project = require(\"@/api/xmgl/project\");\n\nvar _UpFile = _interopRequireDefault(require(\"@/components/UpLoad/UpFile\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'ProjectDetail',\n  components: {\n    UpFile: _UpFile.default\n  },\n  data: function data() {\n    return {\n      ruleForm: {\n        orgId: 0,\n        managementiState: 0,\n        inUse: true,\n        organization: {\n          name: ''\n        },\n        zbFileList: [],\n        tbFileList: [],\n        sghtFileList: [],\n        bchtFileList: [],\n        psjlFileList: [],\n        zbtzsFileList: []\n      },\n      engPropertiesName: '',\n      managementiStateName: '',\n      structureName: '',\n      informationSourceName: '',\n      taxTypeName: '',\n      projectPropertyName: '',\n      proPropertiesName: '',\n      stateName: '',\n      projectId: null,\n      projectLXList: [],\n      listLoading: false,\n      activeTab: 'projectInfo',\n      tabsInfo: [{\n        name: 'projectInfo',\n        selected: false,\n        label: '项目信息'\n      }, {\n        name: 'constructionPlan',\n        selected: false,\n        label: '施工策划'\n      }, {\n        name: 'projectPlan',\n        selected: false,\n        label: '项目计划'\n      }, {\n        name: 'projectProgress',\n        selected: false,\n        label: '项目进展'\n      }, {\n        name: 'projectExpenses',\n        selected: false,\n        label: '项目支出'\n      }, {\n        name: 'projectMoney',\n        selected: false,\n        label: '项目资金'\n      }, {\n        name: 'managePlan',\n        selected: false,\n        label: '经营策划'\n      }, {\n        name: 'projectCost',\n        selected: false,\n        label: '项目成本'\n      }, {\n        name: 'projectContract',\n        selected: false,\n        label: '合同履约'\n      }, {\n        name: 'projectLaborCost',\n        selected: false,\n        label: '项目人工费统计'\n      }],\n      rules: {}\n    };\n  },\n  created: function created() {},\n  mounted: function mounted() {\n    this.initData();\n  },\n  activated: function activated() {},\n  methods: {\n    initData: function initData() {\n      var _this = this;\n\n      this.projectId = this.$route.query.id;\n\n      if (this.projectId) {\n        this.listLoading = true;\n        (0, _project.getProjectWithLXById)({\n          id: this.projectId\n        }).then(function (response) {\n          var data = response.data,\n              dictionaries = response.dictionaries,\n              lxList = response.lxList;\n          _this.ruleForm = data;\n          _this.ruleForm.zbFileList = data.zbUpFile;\n          _this.ruleForm.tbFileList = data.tbUpFile;\n          _this.ruleForm.sghtFileList = data.sghtUpFile;\n          _this.ruleForm.bchtFileList = data.bchtUpFile;\n          _this.ruleForm.psjlFileList = data.psjlUpFile;\n          _this.ruleForm.zbtzsFileList = data.zbtzsUpFile;\n          _this.projectLXList = lxList;\n          dictionaries.forEach(function (element) {\n            if (element.type === 'engProperties') {\n              _this.engPropertiesName = element.name;\n            }\n\n            if (element.type === 'managementiState') {\n              _this.managementiStateName = element.name;\n            }\n\n            if (element.type === 'structureType') {\n              _this.structureName = element.name;\n            }\n\n            if (element.type === 'informationSource') {\n              _this.informationSourceName = element.name;\n            }\n\n            if (element.type === 'taxType') {\n              _this.taxTypeName = element.name;\n            }\n\n            if (element.type === 'projectProperty') {\n              _this.projectPropertyName = element.name;\n            }\n\n            if (element.type === 'proProperties') {\n              _this.proPropertiesName = element.name;\n            }\n\n            if (element.type === 'projectState') {\n              _this.stateName = element.name;\n            }\n          });\n          _this.listLoading = false;\n        });\n      }\n    },\n    closeThePage: function closeThePage() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    },\n    // 解决 一次打开 多个选项卡一次性 加载 所有数据的问题\n    setSelected: function setSelected(tag) {\n      // this.tabsInfo[Number(tag.index)].selected = true  //如果有上面或中间不显示的tab，跳转tab时会不显示，index会重新排序\n      this.tabsInfo.find(function (f) {\n        return f.name === tag.name;\n      }).selected = true;\n    },\n    getFormState: function getFormState(row) {\n      if (!row.billFlow) {\n        return '流程空';\n      }\n\n      var formState = row.billFlow.form.formState;\n      this.formState = formState;\n      var state = row.state;\n      if (state === -1) return '作废';\n      var obj = formState.find(function (f) {\n        return f.value === state;\n      });\n\n      if (obj) {\n        return obj.name;\n      } else {\n        return '状态不详';\n      }\n    },\n    getPerson: function getPerson(bfn) {\n      if (bfn) {\n        var arr = bfn.filter(function (f) {\n          return f.isCurrentState && !f.isChecked;\n        });\n        return arr.map(function (m) {\n          return m.person.name;\n        }).join('、');\n      }\n    },\n    viewProjectLX: function viewProjectLX(id) {\n      this.$router.push({\n        name: 'ProjectLXDetail',\n        query: {\n          id: id,\n          refreshRouterName: this.$route.name\n        },\n        params: {\n          id: id\n        }\n      });\n    }\n  }\n};\nexports.default = _default;",null]}