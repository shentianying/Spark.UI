{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\gckgl\\gathering\\projectGatheringEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\gckgl\\gathering\\projectGatheringEdit.vue","mtime":1632281613139},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nvar _projectGathering = require(\"@/api/xmgl/projectGathering\");\n\nvar _validate = require(\"@/utils/validate\");\n\nvar _selectProject = _interopRequireDefault(require(\"@/components/Other/xmgl/selectProject\"));\n\nvar _CapitalSelect = _interopRequireDefault(require(\"@/components/SearchBar/form/CapitalSelect\"));\n\nvar _PersonSelect = _interopRequireDefault(require(\"@/components/SearchBar/form/PersonSelect\"));\n\nvar _index = _interopRequireDefault(require(\"@/components/OrgSelect/index2\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'ProjectGatheringEdit',\n  components: {\n    SelectProject: _selectProject.default,\n    CapitalSelect: _CapitalSelect.default,\n    PersonSelect: _PersonSelect.default,\n    OrgSelect2: _index.default\n  },\n  data: function data() {\n    return {\n      type: '',\n      // edit：编辑 add:新增\n      ruleForm: {\n        id: 0,\n        number: '',\n        orgId: null,\n        companyId: this.$store.state.user.selectOrgId,\n        projectId: null,\n        gatheringType: '',\n        capitalType: '',\n        gatheringDate: new Date(),\n        personId: this.$store.state.user.uid,\n        gatheringAmount: '',\n        remark: '',\n        state: 0\n      },\n      orgList: [],\n      keyOrg: 0,\n      gatheringTypeList: [],\n      capitalTypeList: [],\n      projectGatheringId: null,\n      projectName: '',\n      loading: false,\n      rules: {\n        orgId: [{\n          required: true,\n          message: '请选择项目',\n          trigger: 'change'\n        }],\n        projectId: [{\n          required: true,\n          message: '请选择项目',\n          trigger: 'change'\n        }],\n        gatheringType: [{\n          required: true,\n          message: '请选择收款类型',\n          trigger: 'change'\n        }],\n        capitalType: [{\n          required: true,\n          message: '请选择资金类型',\n          trigger: 'change'\n        }],\n        gatheringDate: [{\n          required: true,\n          message: '请选择日期',\n          trigger: 'change'\n        }],\n        personId: [{\n          required: true,\n          message: '请选择经手人',\n          trigger: 'change'\n        }],\n        gatheringAmount: [{\n          required: true,\n          message: '请输入金额',\n          trigger: 'change'\n        }, {\n          validator: _validate.validate.money,\n          message: '金额格式不正确'\n        }]\n      }\n    };\n  },\n  activated: function activated() {\n    if (this.$route.params.id) {\n      this.initData();\n      this.refreshRouterName = this.$route.params.refreshRouterName;\n    }\n  },\n  mounted: function mounted() {\n    if (!this.$route.params.id) {\n      this.active = 0;\n      this.initData();\n      this.refreshRouterName = this.$route.params.refreshRouterName;\n    }\n  },\n  methods: {\n    submitForm: function submitForm(formName, state) {\n      var _this = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var newObj = JSON.parse(JSON.stringify(_this.ruleForm));\n          newObj.state = state;\n          _this.loading = true;\n\n          if (_this.projectGatheringId) {\n            (0, _projectGathering.putProjectGathering)(newObj).then(function (response) {\n              if (response.errorMsg) {\n                // 验证错误\n                _this.$alert(\"\".concat(response.errorMsg.replace(/；/g, '；<br />')), {\n                  dangerouslyUseHTMLString: true\n                });\n\n                return;\n              }\n\n              _this.$message(response.message);\n\n              _this.loading = false;\n\n              _this.closeThePage();\n            }).catch(function () {\n              _this.loading = false;\n            });\n          } else {\n            (0, _projectGathering.addProjectGathering)(newObj).then(function (response) {\n              if (response.errorMsg) {\n                // 验证错误\n                _this.$alert(\"\".concat(response.errorMsg.replace(/；/g, '；<br />')), {\n                  dangerouslyUseHTMLString: true\n                });\n\n                return;\n              }\n\n              _this.$message(response.message);\n\n              _this.loading = false;\n\n              _this.closeThePage();\n            }).catch(function () {\n              _this.loading = false;\n            });\n          }\n        }\n      });\n    },\n    initData: function initData() {\n      var _this2 = this;\n\n      var _this$$route$query = this.$route.query,\n          type = _this$$route$query.type,\n          id = _this$$route$query.id;\n\n      if (!type) {\n        return;\n      }\n\n      this.projectGatheringId = id;\n      this.type = type;\n\n      if (this.type === 'edit') {\n        (0, _projectGathering.getProjectGatheringById)({\n          id: this.projectGatheringId\n        }).then(function (response) {\n          var data = response.data,\n              gatheringTypeList = response.gatheringTypeList,\n              orgList = response.orgList;\n          _this2.gatheringTypeList = gatheringTypeList;\n          _this2.orgList = orgList;\n          _this2.ruleForm = data;\n          _this2.keyOrg += 1;\n          _this2.projectName = data.project.name;\n        });\n      } else {\n        this.ruleForm.state = 0;\n        this.$refs['ruleForm'] && this.$refs['ruleForm'].resetFields();\n        this.getOptions();\n      }\n    },\n    // 获取资金类型、收款类型选项\n    getOptions: function () {\n      var _getOptions = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _yield$initProjectGat, gatheringTypeList, capitalTypeList, orgList;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _projectGathering.initProjectGathering)();\n\n              case 2:\n                _yield$initProjectGat = _context.sent;\n                gatheringTypeList = _yield$initProjectGat.gatheringTypeList;\n                capitalTypeList = _yield$initProjectGat.capitalTypeList;\n                orgList = _yield$initProjectGat.orgList;\n                this.gatheringTypeList = gatheringTypeList;\n                this.capitalTypeList = capitalTypeList;\n                this.orgList = orgList;\n                this.keyOrg += 1;\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getOptions() {\n        return _getOptions.apply(this, arguments);\n      }\n\n      return getOptions;\n    }(),\n    cancel: function cancel() {\n      var _this3 = this;\n\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this3.loading = true;\n        (0, _projectGathering.deleteProjectGathering)({\n          id: _this3.ruleForm.id\n        }).then(function (response) {\n          _this3.$message(response.message);\n\n          _this3.loading = false;\n\n          _this3.closeThePage();\n        });\n      }).catch(function () {});\n    },\n    closeThePage: function closeThePage() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    },\n    selectProject: function selectProject() {\n      this.$refs.projectRef.openDialog();\n    },\n    getProject: function getProject(data) {\n      if (data.length > 0) {\n        this.ruleForm.projectId = data[0].id;\n        this.projectName = data[0].name;\n        this.ruleForm.orgId = data[0].orgId;\n        this.keyOrg += 1;\n      }\n    }\n  }\n};\nexports.default = _default;",null]}