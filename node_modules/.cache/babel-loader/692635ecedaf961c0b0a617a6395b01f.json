{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\zjgl\\CapitalReport\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\zjgl\\CapitalReport\\index.vue","mtime":1630917455355},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _CapitalReport = require(\"@/api/cwgl/zjgl/CapitalReport.js\");\n\nvar _searchData = _interopRequireDefault(require(\"./searchData\"));\n\nvar _pikazExcelJs = require(\"pikaz-excel-js\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import SearchBar from '@/components/SearchBar'\nvar _default = {\n  name: 'YuEBiaoBiao',\n  components: {\n    // SearchBar,\n    ExcelExport: _pikazExcelJs.ExcelExport\n  },\n  data: function data() {\n    return {\n      searchData: _searchData.default,\n      // 渲染搜索栏数据\n      size: 'mini',\n      filename: '余额报表',\n      exLoading: false,\n      sheet: [],\n\n      /* 列表数据相关 */\n      table: {\n        list: [],\n        countRow: [],\n        // 统计行\n        loading: false\n      }\n    };\n  },\n  created: function created() {\n    this.fetchData();\n  },\n  methods: {\n    /**\r\n     * @description: 获取列表数据、搜索数据\r\n     * @return {*}\r\n     */\n    fetchData: function () {\n      var _fetchData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var postData, response, data, countRow;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.table.loading = true;\n                _context.prev = 1;\n                // 获取请求参数\n                postData = this.getSearchData();\n                console.log('fetchData:请求数据', postData); // 请求开始\n\n                _context.next = 6;\n                return (0, _CapitalReport.GetCapitalReport)(postData);\n\n              case 6:\n                response = _context.sent;\n                data = response.data; // 列表数据初始化\n\n                countRow = data.splice(-1, 1);\n                this.table.list = [data, countRow];\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](1);\n                console.log('fetchData:请求列表数据失败，错误信息：', _context.t0);\n\n              case 15:\n                _context.prev = 15;\n                this.table.loading = false;\n                return _context.finish(15);\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 12, 15, 18]]);\n      }));\n\n      function fetchData() {\n        return _fetchData.apply(this, arguments);\n      }\n\n      return fetchData;\n    }(),\n\n    /**\r\n     * @description: 设置表格名字\r\n     */\n    setFname: function setFname() {\n      var date = this.utils.parseTime(new Date());\n      date = date.replace(' ', '_');\n      date = date.replace(':', '_');\n      this.filename = this.filename + date;\n    },\n\n    /**\r\n     * @description:表格导出功能\r\n     */\n    exportExcel: function () {\n      var _exportExcel = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var postData, _yield$GetCapitalRepo, data;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                this.exLoading = true;\n                postData = this.getSearchData();\n                _context2.next = 5;\n                return (0, _CapitalReport.GetCapitalReport)(postData);\n\n              case 5:\n                _yield$GetCapitalRepo = _context2.sent;\n                data = _yield$GetCapitalRepo.data;\n                this.sheet = [{\n                  sheetName: '承兑信息列表',\n                  keys: ['orgName', 'amount_wy', 'amount_yhcd', 'amount_sycd', 'amount_dw', 'amount_hj', 'amount_jk', 'amount_dzf', 'amount_ksy'],\n                  tHeader: ['公司', '银行', '银行承兑', '商业承兑', '抵物', '合计', '其中借款', '待支付', '可使用'],\n                  table: data\n                }];\n                this.setFname();\n                this.$refs.excelExport.pikaExportExcel();\n                _context2.next = 16;\n                break;\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n                this.onError('获取表格数据失败！');\n\n              case 16:\n                _context2.prev = 16;\n                this.exLoading = false;\n                return _context2.finish(16);\n\n              case 19:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 12, 16, 19]]);\n      }));\n\n      function exportExcel() {\n        return _exportExcel.apply(this, arguments);\n      }\n\n      return exportExcel;\n    }(),\n\n    /**\r\n     * @description: excel导出错误处理\r\n     */\n    onError: function onError(err) {\n      this.$message.info('导出失败：' + err);\n    },\n\n    /**\r\n     * @description: 搜索栏数据转换\r\n     * @return {Object} request数据\r\n     */\n    getSearchData: function getSearchData() {\n      var data = {};\n      this.searchData.forEach(function (item) {\n        data[item.name] = item.value;\n      });\n      return data;\n    },\n    setConutRow: function setConutRow(params) {\n      var _this = this;\n\n      var countRow = [];\n\n      if (this.table.countRow.length) {\n        var _this$table$countRow$ = this.table.countRow[0],\n            orgName = _this$table$countRow$.orgName,\n            amount_wy = _this$table$countRow$.amount_wy,\n            amount_yhcd = _this$table$countRow$.amount_yhcd,\n            amount_sycd = _this$table$countRow$.amount_sycd,\n            amount_dw = _this$table$countRow$.amount_dw,\n            amount_hj = _this$table$countRow$.amount_hj,\n            amount_jk = _this$table$countRow$.amount_jk,\n            amount_dzf = _this$table$countRow$.amount_dzf,\n            amount_ksy = _this$table$countRow$.amount_ksy; // console.log(orgName)\n\n        countRow = [orgName, amount_wy, amount_yhcd, amount_sycd, amount_dw, amount_hj, amount_jk, amount_dzf, amount_ksy];\n      }\n\n      return countRow.map(function (v) {\n        return typeof v === 'number' ? _this.utils.formatMoney(v) : v;\n      });\n    },\n    tableRowClassName: function tableRowClassName(_ref) {\n      var row = _ref.row,\n          rowIndex = _ref.rowIndex;\n\n      // console.log(lastIndex, rowIndex)\n      if ((rowIndex + 1) % 2 === 0) {\n        return 'table-bg';\n      }\n\n      return '';\n    },\n\n    /**\r\n     * @description: 路由到详情\r\n     * @param {Object} row\r\n     * @param {String} routerName 路由的name\r\n     * @param {Number|String} capitalType 资金类型\r\n     */\n    handleDetails: function handleDetails(row, routerName, capitalType) {\n      var orgId = row.orgId,\n          orgName = row.orgName;\n      var query = {\n        orgId: orgId,\n        orgName: orgName,\n        capitalType: capitalType,\n        refreshRouterName: this.$route.name\n      };\n      this.$router.push({\n        name: routerName,\n        query: query\n      });\n    },\n\n    /**\r\n     * @description: 搜索回调\r\n     */\n    handelSearch: function handelSearch() {\n      this.fetchData();\n    }\n  }\n};\nexports.default = _default;",null]}