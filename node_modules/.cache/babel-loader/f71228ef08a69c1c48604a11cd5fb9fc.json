{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\ggzx\\grgl\\workerBlacklist\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\ggzx\\grgl\\workerBlacklist\\index.vue","mtime":1635749455680},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _workerBlacklist = require(\"@/api/ggzx/workerBlacklist\");\n\nvar _edit = _interopRequireDefault(require(\"./edit\"));\n\nvar _SearchBar = _interopRequireDefault(require(\"@/components/SearchBar\"));\n\nvar _searchData = _interopRequireDefault(require(\"./searchData\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'WorkerBlacklist',\n  components: {\n    Edit: _edit.default,\n    SearchBar: _SearchBar.default\n  },\n  data: function data() {\n    return {\n      list: null,\n      listLoading: false,\n      dialogTableVisible: false,\n      dialogTitle: '工人黑名单',\n      total: 0,\n      currentPage: 1,\n      pageSize: this.utils.getPersonalSettings().pageSize,\n      currentRow: null,\n      comName: 'Edit',\n      searchData: _searchData.default\n    };\n  },\n  activated: function activated() {\n    if (this.$route.params.refresh) {\n      this.fetchData();\n    }\n  },\n  mounted: function mounted() {\n    this.fetchData();\n  },\n  methods: {\n    fetchData: function fetchData() {\n      var _this = this;\n\n      this.listLoading = true;\n      var postData = this.getSearchData();\n      postData.currentPage = this.currentPage;\n      postData.pageSize = this.pageSize;\n      (0, _workerBlacklist.getBlacklistPaging)(postData).then(function (response) {\n        var data = response.data,\n            count = response.count;\n        _this.list = data;\n        _this.total = count;\n        _this.listLoading = false;\n      });\n    },\n    dialogClose: function dialogClose() {\n      this.dialogTableVisible = false;\n      this.fetchData();\n    },\n    handleAdd: function handleAdd() {\n      this.currentRow = null;\n      this.dialogTableVisible = true; // this.$router.push({ name: 'WorkerBlacklistEdit', query: { refreshRouterName: this.$route.name }})\n    },\n    handleEdit: function handleEdit(row) {\n      this.currentRow = row;\n      this.dialogTableVisible = true; // this.$router.push({ name: 'WorkerBlacklistEdit', query: { id: row.id, refreshRouterName: this.$route.name, tab: 'edit' }, params: { id: row.id }})\n    },\n    handleDelete: function handleDelete(row) {\n      var _this2 = this;\n\n      this.$confirm('确定要移除吗?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this2.listLoading = true;\n        (0, _workerBlacklist.deleteData)({\n          id: row.id\n        }).then(function (res) {\n          if (res.code === 200) {\n            _this2.$message.success(res.message);\n\n            _this2.listLoading = false;\n          } else {\n            _this2.$message.error(res.message);\n\n            _this2.listLoading = false;\n          }\n        }).finally(function () {\n          _this2.listLoading = false;\n        });\n      });\n    },\n    // attitude(row) {\n    //   this.$router.push({ name: 'TargetCostAttitude', query: { id: row.id, refreshRouterName: this.$route.name }, params: { id: row.id }})\n    // },\n    sizeChange: function sizeChange(val) {\n      this.pageSize = val;\n      this.fetchData();\n    },\n    // radioChange(value) {\n    //   // 清空条件\n    //   this.search = {\n    //     workerName: '',\n    //     idNumber: ''\n    //   }\n    //   // 填充数据\n    //   this.fetchData()\n    // },\n\n    /**\r\n     * @description: 搜索栏数据转换\r\n     * @return {Object} request数据\r\n     */\n    getSearchData: function getSearchData() {\n      var lastSearch = {};\n      this.searchData.forEach(function (item) {\n        var value = item.value,\n            transformType = item.transformType,\n            name = item.name;\n\n        if (transformType === 'property-serial') {\n          value.forEach(function (ele, index) {\n            var serial = index + 1;\n            lastSearch[name + serial] = ele;\n          });\n        } else {\n          lastSearch[name] = value;\n        }\n      });\n      return lastSearch;\n    },\n\n    /**\r\n     * @description: 搜索回调\r\n     */\n    handelSearch: function handelSearch() {\n      this.currentPage = 1; // 返回第一页\n\n      this.fetchData();\n    }\n  }\n};\nexports.default = _default;",null]}