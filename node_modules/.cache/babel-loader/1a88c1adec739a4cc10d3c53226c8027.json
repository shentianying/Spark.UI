{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\htly\\ProjectSettle\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\htly\\ProjectSettle\\edit.vue","mtime":1633684104561},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/objectSpread2\"));\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _flowSelect = _interopRequireDefault(require(\"@/components/Flow/flowSelect\"));\n\nvar _validate = require(\"@/utils/validate\");\n\nvar _ProjectSettle = require(\"@/api/xmgl/ProjectSettle.js\");\n\nvar _project = require(\"@/api/xmgl/project.js\");\n\nvar _projectOutput = require(\"@/api/xmgl/projectOutput.js\");\n\nvar _MyForm = _interopRequireDefault(require(\"@/components/MyForm\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'ProjectSettleEdit',\n  components: {\n    FlowSelect: _flowSelect.default,\n    MyForm: _MyForm.default\n  },\n  data: function data() {\n    return {\n      size: 'mini',\n      inputPlaceholder: '请输入',\n      selectPlaceholder: '请选择',\n      active: 1,\n      // 提交进度 1: 编辑信息 2: 编辑审批流程\n      firstForm: {\n        projectId: null,\n        // 项目id\n        companyId: 2,\n        // 中南装饰的\n        id: 0,\n        // 新增为0\n        number: '',\n        // 新增时,编号后端生成\n        orgId: '',\n        // 部门id\n        orgName: '',\n        // 部门名称\n        settleDate: '',\n        // 审定日期\n        settleAmount: '',\n        // 审定值\n        firstSupplyAmount: '',\n        // 甲供材\n        isReport: false,\n        // 有无报告\n        remark: '',\n        // 备注\n        fileList: [],\n        // 附件\n        state: 0,\n        // 状态\n        billFlow: [] // 单据流程\n\n      },\n      firstRules: {\n        projectId: [{\n          required: true,\n          message: '请选择项目'\n        }],\n        settleDate: [{\n          required: true,\n          message: '请选择审定日期'\n        }],\n        settleAmount: [{\n          required: true,\n          message: '请输入审定值金额'\n        }],\n        firstSupplyAmount: [{\n          required: true,\n          message: '请输入甲供材金额',\n          trigger: 'change'\n        }, {\n          validator: _validate.validate.money,\n          message: '金额格式不正确'\n        }, {\n          validator: _validate.validate.max_amount,\n          message: '超过所能存储的最大金额'\n        }]\n      },\n      project: {},\n      // 项目数据\n      output: {} // 外部产值\n\n    };\n  },\n  computed: {\n    title: function title() {\n      var active = this.active;\n      return active === 2 ? '审批流程' : '项目结算';\n    },\n\n    /**\r\n     * 处理form表单的数据\r\n     */\n    formNodeData: function formNodeData() {\n      var _this = this;\n\n      var h = this.$createElement;\n      var _this$project = this.project,\n          area = _this$project.area,\n          contractDuration = _this$project.contractDuration,\n          orgName = _this$project.orgName,\n          _this$output = this.output,\n          externalOutputs = _this$output.externalOutputs,\n          internalOutputs = _this$output.internalOutputs,\n          receivableAccounts = this.receivableAccounts,\n          externalOutputAdjust = this.externalOutputAdjust,\n          internalOutputAdjust = this.internalOutputAdjust;\n      return [{\n        label: '编码:',\n        monopolize: true,\n        keyword: 'number',\n        props: {\n          disabled: true,\n          placeholder: '系统自动生成'\n        }\n      }, {\n        label: '项目:',\n        keyword: 'projectId',\n        component: 'ProjectSelect',\n        props: {\n          projectState: [2]\n        }\n      }, {\n        label: '组织机构:',\n        value: orgName,\n        props: {\n          disabled: true,\n          placeholder: '请选择有项目的部门'\n        }\n      }, {\n        label: '审定日期:',\n        keyword: 'settleDate',\n        component: 'el-date-picker',\n        props: {\n          type: 'date',\n          placeholder: '请选择',\n          valueFormat: 'yyyy-MM-dd'\n        }\n      }, {\n        label: '审定值:',\n        keyword: 'settleAmount',\n        component: 'Input',\n        props: {\n          unit: '元'\n        }\n      }, {\n        label: '建筑面积:',\n        value: area,\n        component: 'Input',\n        props: {\n          disabled: true,\n          placeholder: '自动带出',\n          unit: '㎡'\n        }\n      }, {\n        label: '合同工期:',\n        value: contractDuration,\n        props: {\n          disabled: true,\n          placeholder: '自动带出'\n        }\n      }, {\n        label: '甲供材:',\n        keyword: 'firstSupplyAmount',\n        props: {\n          placeholder: '甲供材金额未计入结算额的应填0'\n        }\n      }, {\n        label: '开累应收款:',\n        value: receivableAccounts,\n        props: {\n          disabled: true,\n          placeholder: '自动计算'\n        }\n      }, {\n        label: '开累外部产值:',\n        value: externalOutputs,\n        props: {\n          disabled: true,\n          placeholder: '自动带出'\n        }\n      }, {\n        label: '外部产值调整:',\n        value: externalOutputAdjust,\n        props: {\n          disabled: true,\n          placeholder: '自动计算'\n        }\n      }, {\n        label: '开累内部产值:',\n        value: internalOutputs,\n        props: {\n          disabled: true,\n          placeholder: '自动带出'\n        }\n      }, {\n        label: '内部产值调整:',\n        value: internalOutputAdjust,\n        props: {\n          disabled: true,\n          placeholder: '自动带出'\n        }\n      }, {\n        label: '报告:',\n        monopolize: true,\n        render: function render(h) {\n          return h(\"el-checkbox\", {\n            \"model\": {\n              value: _this.firstForm.isReport,\n              callback: function callback($$v) {\n                _this.$set(_this.firstForm, \"isReport\", $$v);\n              }\n            }\n          }, [\"\\u65E0\\u62A5\\u544A\"]);\n        }\n      }, {\n        label: '备注:',\n        keyword: 'remark',\n        monopolize: true,\n        props: {\n          type: 'textarea'\n        }\n      }, {\n        label: '附件:',\n        monopolize: true,\n        keyword: 'fileList',\n        component: 'UpFile',\n        width: '100%',\n        props: {\n          isUpfile: true,\n          isDelete: true\n        }\n      }];\n    },\n\n    /**\r\n     * 计算质保数组\r\n     */\n    warrantyList: function warrantyList() {\n      var _this2 = this;\n\n      return ['一', '二', '三', '四'].map(function (v, i) {\n        return {\n          label: \"\".concat(v, \"\\u9636\\u6BB5\"),\n          rate: _this2.project[\"warrantyRate\".concat(i + 1)],\n          days: _this2.project[\"warrantyDays\".concat(i + 1)]\n        };\n      });\n    },\n\n    /**\r\n     * 开累应收款 = 审定值 - 甲供材 - 质保金\r\n     * 质保金 = 审定值*（四个阶段的质保比例）/100\r\n     */\n    receivableAccounts: function receivableAccounts() {\n      var _this$firstForm = this.firstForm,\n          settleAmount = _this$firstForm.settleAmount,\n          _this$firstForm$first = _this$firstForm.firstSupplyAmount,\n          firstSupplyAmount = _this$firstForm$first === void 0 ? 0 : _this$firstForm$first;\n      var _this$project2 = this.project,\n          warrantyRate1 = _this$project2.warrantyRate1,\n          warrantyRate2 = _this$project2.warrantyRate2,\n          warrantyRate3 = _this$project2.warrantyRate3,\n          warrantyRate4 = _this$project2.warrantyRate4;\n      var warrantyAmount = settleAmount * (warrantyRate1 + warrantyRate2 + warrantyRate3 + warrantyRate4) / 100;\n      if (settleAmount) return settleAmount - firstSupplyAmount - warrantyAmount;\n      return '';\n    },\n\n    /**\r\n     * 外部产值调整 = 审定值 - 开累外部产值\r\n     */\n    externalOutputAdjust: function externalOutputAdjust() {\n      var settleAmount = this.firstForm.settleAmount;\n      var _this$output$external = this.output.externalOutputs,\n          externalOutputs = _this$output$external === void 0 ? 0 : _this$output$external;\n      if (settleAmount) return settleAmount - externalOutputs;else return '';\n    },\n\n    /**\r\n     * 内部产值调整 = 审定值 - 开累内部产值\r\n     */\n    internalOutputAdjust: function internalOutputAdjust() {\n      var settleAmount = this.firstForm.settleAmount;\n      var _this$output$internal = this.output.internalOutputs,\n          internalOutputs = _this$output$internal === void 0 ? 0 : _this$output$internal;\n      if (settleAmount) return settleAmount - internalOutputs;else return '';\n    }\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    next(function (vm) {\n      var newId = vm.$route.query.id;\n      var oldId = vm.firstForm.id;\n\n      if (newId && newId !== oldId) {\n        // 说明是打开另一个单子的编辑页面\n        vm.firstForm.id = newId;\n        vm.initDataById(newId);\n        vm.active = 1;\n      } else if (!newId && oldId) {\n        // 说明是打开一个新建页面\n        // 将data数据初始成定义时的状态\n        Object.assign(vm.$data, vm.$options.data());\n        vm.$nextTick(function () {\n          vm.$refs.firstForm.resetFields();\n        });\n      }\n    });\n  },\n  methods: {\n    /**\r\n     * 处理项目选择器选择事件\r\n     */\n    handelProjectSelect: function handelProjectSelect(val) {\n      Object.assign(this.firstForm, {\n        orgId: val.orgId,\n        companyId: val.companyId\n      });\n      this.getProjectMessage();\n      this.getOutput();\n    },\n\n    /**\r\n     * @description: 根据id获取数据\r\n     */\n    initDataById: function initDataById(id) {\n      var _this3 = this;\n\n      (0, _ProjectSettle.GetProjectSettleById)({\n        id: id\n      }).then(function (_ref) {\n        var data = _ref.data,\n            billFlowData = _ref.billFlowData;\n        Object.keys(_this3.firstForm).forEach(function (key) {\n          if (Object.hasOwnProperty.call(data, key)) {\n            _this3.firstForm[key] = data[key] || _this3.firstForm[key];\n          }\n        });\n        Object.assign(_this3.firstForm, {\n          fileList: data.upFile,\n          billFlow: billFlowData,\n          completDate: _this3.$moment(data.completDate).format('YYYY-MM-DD')\n        });\n\n        _this3.getProjectMessage();\n      });\n    },\n\n    /**\r\n     * 根据id获取项目信息\r\n     */\n    getProjectMessage: function getProjectMessage() {\n      var _this4 = this;\n\n      var req = {\n        id: this.firstForm.projectId\n      };\n\n      var formatDate = function formatDate(date) {\n        return date ? _this4.$moment(date).format('YYYY-MM-DD') : '';\n      };\n\n      (0, _project.getProjectById)(req).then(function (_ref2) {\n        var data = _ref2.data;\n        _this4.project = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, data), {}, {\n          orgName: data.organization.name,\n          contractStartDate: formatDate(data.contractStartDate),\n          contractFinishDate: formatDate(data.contractFinishDate),\n          realStartDate: formatDate(data.realStartDate),\n          computeFinishDate: formatDate(data.computeFinishDate)\n        });\n      });\n    },\n\n    /**\r\n     * 获取外部产值\r\n     */\n    getOutput: function getOutput() {\n      var _this5 = this;\n\n      var req = {\n        id: this.firstForm.projectId\n      };\n      (0, _projectOutput.GetProjectOutputSumById)(req).then(function (_ref3) {\n        var externalOutputs = _ref3.externalOutputs,\n            internalOutputs = _ref3.internalOutputs;\n        _this5.output = {\n          externalOutputs: externalOutputs,\n          internalOutputs: internalOutputs\n        };\n      });\n    },\n    getBillFlow: function getBillFlow() {\n      var _this6 = this;\n\n      // 获取流程数据\n      var _this$firstForm2 = this.firstForm,\n          state = _this$firstForm2.state,\n          billFlow = _this$firstForm2.billFlow;\n      var req = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, this.firstForm), {}, {\n        state: state || 0\n      });\n      if (billFlow) req.billFlowId = billFlow.id;\n      delete req.billFlow;\n      (0, _ProjectSettle.GetBillFlow)(req).then(function (_ref4) {\n        var data = _ref4.data,\n            success = _ref4.success,\n            message = _ref4.message;\n\n        if (success) {\n          _this6.firstForm.billFlow = data.billFlow;\n\n          _this6.setActive(2);\n        } else {\n          _this6.$message.error(message);\n        }\n      });\n    },\n\n    /**\r\n     * 修改填报进度\r\n     */\n    setActive: function setActive(active) {\n      this.active = active;\n    },\n\n    /**\r\n     * 下一步\r\n     */\n    nextStep: function nextStep(formName) {\n      var _this7 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _this7.getBillFlow();\n        }\n      });\n    },\n    // 作废\n    invalidForm: function invalidForm() {\n      var _this8 = this;\n\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        return (0, _ProjectSettle.DeleteProjectSettle)({\n          id: _this8.firstForm.id\n        });\n      }).then(function () {\n        _this8.$message.success('操作成功');\n\n        _this8.back();\n      });\n    },\n\n    /**\r\n     * 提交表单\r\n     * @param {Number} state 提交类型，0：保存；1：提交\r\n     */\n    submitForm: function submitForm(state) {\n      var _this9 = this;\n\n      var receivableAccounts = this.receivableAccounts,\n          _this$output2 = this.output,\n          externalOutputs = _this$output2.externalOutputs,\n          internalOutputs = _this$output2.internalOutputs,\n          externalOutputAdjust = this.externalOutputAdjust,\n          internalOutputAdjust = this.internalOutputAdjust;\n      var req = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, this.firstForm), {}, {\n        isReport: !this.firstForm.isReport,\n        receivableAccounts: receivableAccounts,\n        externalOutputs: externalOutputs,\n        internalOutputs: internalOutputs,\n        externalOutputAdjust: externalOutputAdjust,\n        internalOutputAdjust: internalOutputAdjust,\n        state: state\n      });\n      delete req.number;\n      delete req.orgName;\n\n      if (this.firstForm.billFlow) {\n        // 获取流程组件中的数据\n        var billFlow = this.$refs.flowSelect.getBillFlow();\n\n        if (!billFlow) {\n          return false;\n        }\n\n        req.billFlow = billFlow;\n      } else {\n        this.$message.error('流程数据不能为空');\n        return;\n      }\n\n      if (req.id) {\n        (0, _ProjectSettle.PutProjectSettle)(req).then(function () {\n          _this9.$message.success('保存成功');\n\n          _this9.back();\n        });\n      } else {\n        (0, _ProjectSettle.AddProjectSettle)(req).then(function () {\n          _this9.$message.success('提交成功');\n\n          _this9.back();\n        });\n      }\n    },\n\n    /**\r\n     * 返回上一页，并关闭当前页\r\n     */\n    back: function back() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    }\n  }\n};\nexports.default = _default;",null]}