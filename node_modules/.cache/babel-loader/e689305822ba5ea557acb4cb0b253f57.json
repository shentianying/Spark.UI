{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\jcsj\\organizationAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\jcsj\\organizationAdd.vue","mtime":1630736284834},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nvar _organization = require(\"@/api/xtgl/organization\");\n\nvar _accountSet = require(\"@/api/xtgl/accountSet\");\n\nvar _index = _interopRequireDefault(require(\"@/components/OrgSelect/index2\"));\n\nvar _dictionary = require(\"@/api/xtgl/dictionary\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'AddOrganization',\n  components: {\n    OrgSelect2: _index.default\n  },\n  props: {\n    obj: {\n      type: Object,\n      default: null\n    },\n    pid: {\n      type: Number,\n      default: 0\n    }\n  },\n  data: function data() {\n    return {\n      ruleForm: {\n        name: '',\n        shortName: '',\n        accountSetIds: [],\n        categoryId: '',\n        sort: '',\n        optional: true,\n        isProject: false,\n        isSum: false,\n        inUse: true,\n        pid: 0\n      },\n      options: [],\n      categoryList: [],\n      orgId: null,\n      buttonLoading: false,\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入组织机构名称',\n          trigger: 'blur'\n        }],\n        accountSetIds: [{\n          type: 'array',\n          required: true,\n          message: '请至少选择一个公司',\n          trigger: 'blur'\n        }],\n        categoryId: [{\n          required: true,\n          message: '请选择类别',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.initData();\n  },\n  methods: {\n    submitForm: function submitForm(formName) {\n      var _this = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var newObj = JSON.parse(JSON.stringify(_this.ruleForm));\n          newObj.accountSetIds = newObj.accountSetIds.join();\n          delete newObj.label; // newObj.pid = this.orgId || 0\n          // console.log('要传出去的值：', newObj)\n\n          if (_this.obj) {\n            _this.buttonLoading = true;\n            (0, _organization.putOrganization)(newObj).then(function (response) {\n              _this.$message(response.message);\n\n              _this.buttonLoading = false;\n\n              _this.$emit('dialogClose');\n            }).catch(function () {\n              _this.buttonLoading = false;\n            });\n          } else {\n            (0, _organization.addOrganization)(newObj).then(function (response) {\n              _this.$message(response.message);\n\n              _this.buttonLoading = false;\n\n              _this.$emit('dialogClose');\n            }).catch(function () {\n              _this.buttonLoading = false;\n            });\n          }\n        }\n      });\n    },\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    initData: function initData() {\n      var _this2 = this;\n\n      (0, _dictionary.getDictionaryList)({\n        type: 'postPoolCategory'\n      }).then(function (response) {\n        var data = response.data;\n        _this2.categoryList = data;\n      });\n\n      if (this.obj) {\n        this.orgChange(this.obj.pid);\n        var newObj = JSON.parse(JSON.stringify(this.obj));\n        newObj.accountSetIds = newObj.accountSetIds.split(',').map(function (item) {\n          return Number(item);\n        });\n        this.ruleForm = newObj;\n      } else {\n        this.orgChange(0);\n      }\n    },\n    orgChange: function orgChange(data) {\n      var _this3 = this;\n\n      (0, _accountSet.getAccountSetByOrgId)({\n        orgId: data\n      }).then(function (response) {\n        _this3.options = response.data;\n      });\n    }\n  }\n};\nexports.default = _default;",null]}