{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\ggzx\\grgl\\workerRegister\\detail.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\ggzx\\grgl\\workerRegister\\detail.vue","mtime":1635749455682},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _workerRegister = require(\"@/api/ggzx/workerRegister\");\n\nvar _UpFile = _interopRequireDefault(require(\"@/components/UpLoad/UpFile\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'WorkerRegisterDetail',\n  components: {\n    UpFile: _UpFile.default\n  },\n  data: function data() {\n    return {\n      id: null,\n      ruleForm: {\n        id: 0,\n        number: '',\n        orgId: null,\n        registerDate: null,\n        remark: '',\n        fileList: []\n      },\n      list: [],\n      loading: false,\n      orgStr: '',\n      dialogTableVisible: false,\n      dialogTitle: '保存',\n      dialogWidth: '70%',\n      comName: 'PlanDetailAdd',\n      currentRow: null,\n      billFlow: null,\n      isLoad: false,\n      attitudePara: {},\n      rules: {}\n    };\n  },\n  watch: {},\n  activated: function activated() {},\n  mounted: function mounted() {\n    this.initData();\n  },\n  methods: {\n    initData: function () {\n      var _initData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.$route.query.id) {\n                  this.id = this.$route.query.id;\n                }\n\n                if (!this.id) {\n                  _context.next = 5;\n                  break;\n                }\n\n                this.loading = true;\n                _context.next = 5;\n                return (0, _workerRegister.getFormById)({\n                  id: this.id\n                }).then(function (response) {\n                  return _this.setData(response);\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function initData() {\n        return _initData.apply(this, arguments);\n      }\n\n      return initData;\n    }(),\n    setData: function setData(response) {\n      console.log(response);\n      var data = response.data,\n          orgStr = response.orgStr;\n      this.ruleForm = data;\n      this.ruleForm.fileList = data.upFile;\n      this.list = data.workerRegisterDetails;\n      this.orgStr = orgStr; // this.billFlow = billFlowData\n      // this.attitudePara = { formId: billFlowData.formId, billFlowId: data.billFlowId, planId: data.id }\n\n      this.isLoad = true;\n      this.loading = false; // loading 状态关闭\n    },\n    closeThePage: function closeThePage() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    },\n    updateFlow: function updateFlow() {\n      this.closeThePage();\n    }\n  }\n};\nexports.default = _default;",null]}