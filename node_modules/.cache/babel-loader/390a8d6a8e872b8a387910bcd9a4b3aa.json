{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\jhgl\\planEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\jhgl\\planEdit.vue","mtime":1628756195059},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _plan = require(\"@/api/cggl/plan\");\n\nvar _dictionary = require(\"@/api/xtgl/dictionary\");\n\nvar _planDetailAdd = _interopRequireDefault(require(\"./planDetailAdd\"));\n\nvar _targetCostDetailAll = _interopRequireDefault(require(\"./targetCostDetailAll\"));\n\nvar _index = _interopRequireDefault(require(\"@/components/OrgSelect/index2\"));\n\nvar _flowSelect = _interopRequireDefault(require(\"@/components/Flow/flowSelect\"));\n\nvar _flowAttitude = _interopRequireDefault(require(\"@/components/Flow/flowAttitude\"));\n\nvar _pikazExcelJs = require(\"pikaz-excel-js\");\n\nvar _UpFile = _interopRequireDefault(require(\"@/components/UpLoad/UpFile\"));\n\nvar _validate = require(\"@/utils/validate\");\n\nvar _index2 = require(\"@/utils/index\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import FlowDisplay from '@/components/Flow/flowDisplay'\nvar _default = {\n  name: 'PlanEdit',\n  components: {\n    PlanDetailAdd: _planDetailAdd.default,\n    TargetCostDetailAll: _targetCostDetailAll.default,\n    OrgSelect2: _index.default,\n    ExcelExport: _pikazExcelJs.ExcelExport,\n    ExcelImport: _pikazExcelJs.ExcelImport,\n    FlowSelect: _flowSelect.default,\n    // FlowDisplay,\n    FlowAttitude: _flowAttitude.default,\n    UpFile: _UpFile.default\n  },\n  data: function data() {\n    return {\n      ruleForm: {\n        id: 0,\n        number: '',\n        orgId: null,\n        planType: '',\n        materialType: '',\n        realNumber: '',\n        remark: '',\n        state: 0,\n        billFlowId: 0,\n        organization: null,\n        fileList: []\n      },\n      loading: false,\n      // showbuttons: false,\n      activate: false,\n      active: 0,\n      dialogTableVisible: false,\n      dialogTitle: '保存',\n      dialogWidth: '70%',\n      comName: 'PlanDetailAdd',\n      currentRow: null,\n      listIndex: 0,\n      list: [],\n      // fileList: [], // 上传文件列表\n      planTypeList: [],\n      materialTypeList: [],\n      billFlow: null,\n      attitudePara: null,\n      loadFlow: false,\n      columnShow: {\n        unit2: true,\n        brand: true,\n        model: true,\n        spec: true,\n        thickness: true,\n        texture: true,\n        surfaceTreatment: true,\n        designNumber: true\n      },\n      sheet: [{\n        // title: '材料计划导入模板',\n        tHeader: ['材料名称', '品牌/产地', '型号', '规格/尺寸', '厚度', '材质', '表面处理/工艺、色号', '设计编号', '主数量', '辅单位', '辅数量', '进场日期', '备注'],\n        table: [],\n        keys: ['CategoryName', 'Brand', 'Model', 'Spec', 'Thickness', 'Texture', 'SurfaceTreatment', 'DesignNumber', 'ApplicationQuantity', 'Unit2', 'ApplicationQuantity2', 'EntryDate', 'Remark'],\n        sheetName: '材料明细'\n      }],\n      rules: {\n        orgId: [{\n          required: true,\n          message: '请输入',\n          trigger: 'change'\n        }],\n        planType: [{\n          required: true,\n          message: '请输入',\n          trigger: 'blur'\n        }],\n        materialType: [{\n          required: true,\n          message: '请输入',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  watch: {\n    'ruleForm.orgId': {\n      handler: function handler(value, oldvalue) {\n        if (!oldvalue) {\n          this.$refs['ruleForm'].validateField('orgId', function (valid) {});\n        }\n      },\n      deep: true\n    }\n  },\n  activated: function activated() {\n    if (this.$route.params.id) {\n      this.ruleForm.orgId = null; // 刷新 org 列表\n\n      this.initData();\n      this.refreshRouterName = this.$route.params.refreshRouterName;\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    if (!this.$route.params.id) {\n      this.active = 0;\n      this.activate = true;\n      this.ruleForm.orgId = null; // 刷新 org 列表\n\n      this.initData();\n      this.refreshRouterName = this.$route.params.refreshRouterName;\n    }\n\n    (0, _dictionary.getDictionarysByTypes)({\n      types: 'cgglPlanType,materialType'\n    }).then(function (response) {\n      var data = response.data;\n      data.forEach(function (element) {\n        element.pid = element.pId;\n\n        if (element.type === 'cgglPlanType') {\n          _this.planTypeList.push(element);\n        }\n\n        if (element.type === 'materialType') {\n          _this.materialTypeList.push(element);\n        }\n      });\n    });\n  },\n  methods: {\n    // 根据表单获取流程\n    getDynamicFlow: function getDynamicFlow() {\n      var _this2 = this;\n\n      this.$refs['ruleForm'].validate(function (valid) {\n        if (valid) {\n          var newObj = JSON.parse(JSON.stringify(_this2.ruleForm)); // 拼接材料明细参数\n\n          var arr1 = [];\n\n          _this2.list.forEach(function (e) {\n            var m = {};\n            m.categoryId = e.categoryId;\n            m.categoryName = e.category.name; // m.unit = e.unit\n\n            m.unit2 = e.unit2;\n            m.brand = e.brand;\n            m.model = e.model;\n            m.spec = e.spec;\n            m.thickness = e.thickness;\n            m.texture = e.texture;\n            m.surfaceTreatment = e.surfaceTreatment;\n            m.designNumber = e.designNumber;\n            var item = {};\n            item.material = m; // item.fileList = []\n            // if (e.fileList.length) {\n            //   item.fileList = e.fileList.map(m => { return { id: m.id, addFlag: m.addFlag } })\n            // }\n\n            item.id = e.id;\n            item.isMain = e.category.isMain;\n            item.applicationQuantity = e.applicationQuantity;\n            item.applicationQuantity2 = e.applicationQuantity2;\n            item.quantity = e.quantity;\n            item.quantity2 = e.quantity2;\n            item.entryDate = e.entryDate;\n            item.remark = e.remark;\n            item.materialId = e.targetCostMaterialId;\n            arr1.push(item);\n          });\n\n          if (arr1.length === 0) {\n            _this2.$message('计划明细不能为空！');\n\n            return;\n          }\n\n          newObj.planDetail = arr1;\n          _this2.loading = true; // 验证信息\n\n          (0, _plan.checkPlanData)(newObj).then(function (response) {\n            if (response.result === 400) {\n              _this2.$alert(\"\".concat(response.msg.replace(/；/g, '；<br />')), {\n                dangerouslyUseHTMLString: true\n              });\n            } else {\n              (0, _plan.getBillFlow)(response.data).then(function (response) {\n                _this2.loading = false;\n\n                if (response.success) {\n                  _this2.billFlow = response.data.billFlow;\n                  _this2.active = 1;\n                } else {\n                  _this2.$message(response.message);\n                }\n              }).catch(function () {\n                _this2.loading = false;\n              });\n            }\n\n            _this2.loading = false;\n            console.log(response);\n          }).catch(function () {\n            _this2.loading = false;\n          });\n        }\n      });\n    },\n    submitForm: function submitForm(state) {\n      var _this3 = this;\n\n      this.$refs['ruleForm'].validate(function (valid) {\n        if (valid) {\n          var newObj = JSON.parse(JSON.stringify(_this3.ruleForm)); // 计划状态\n\n          newObj.state = state; // 拼接材料明细参数\n\n          var arr1 = [];\n\n          _this3.list.forEach(function (e) {\n            var m = {};\n            m.categoryId = e.categoryId;\n            m.categoryName = e.category.name; // m.unit = e.category.unit\n\n            m.unit2 = e.unit2;\n            m.brand = e.brand;\n            m.model = e.model;\n            m.spec = e.spec;\n            m.thickness = e.thickness;\n            m.texture = e.texture;\n            m.surfaceTreatment = e.surfaceTreatment;\n            m.designNumber = e.designNumber;\n            var item = {};\n            item.material = m; // item.fileList = []\n            // if (e.fileList.length) {\n            //   item.fileList = e.fileList.map(m => { return { id: m.id, addFlag: m.addFlag } })\n            // }\n\n            item.id = e.id;\n            item.applicationQuantity = e.applicationQuantity;\n            item.applicationQuantity2 = e.applicationQuantity2;\n            item.quantity = e.quantity;\n            item.quantity2 = e.quantity2;\n            item.entryDate = e.entryDate;\n            item.remark = e.remark;\n            item.materialId = e.targetCostMaterialId;\n            item.state = 0;\n            arr1.push(item);\n          });\n\n          newObj.planDetail = arr1; // 获取流程组件中的数据\n\n          if (state === 1) {\n            // 如果是提交，验证流程人员的完整信息\n            var checkBillFlow = _this3.$refs.flowSelect.checkBillFlow();\n\n            if (!checkBillFlow) {\n              _this3.$message('流程错误，流程中审批人员不能为空');\n\n              return false;\n            }\n          }\n\n          var billFlow = _this3.$refs.flowSelect.getBillFlow();\n\n          newObj.billFlow = billFlow; // console.log('AddPlan===> newObj :', newObj)\n          // 保存单据\n\n          _this3.loading = true;\n\n          if (_this3.id) {\n            (0, _plan.putPlan)(newObj).then(function (response) {\n              if (response.errorMsg) {\n                // 验证错误\n                _this3.$alert(\"\".concat(response.errorMsg.replace(/；/g, '；<br />')), {\n                  dangerouslyUseHTMLString: true\n                });\n\n                return;\n              }\n\n              _this3.$message(response.message);\n\n              _this3.loading = false;\n\n              _this3.closeThePage();\n            }).catch(function () {\n              _this3.loading = false;\n            });\n          } else {\n            (0, _plan.addPlan)(newObj).then(function (response) {\n              if (response.errorMsg) {\n                // 验证错误\n                _this3.$alert(\"\".concat(response.errorMsg.replace(/；/g, '；<br />')), {\n                  dangerouslyUseHTMLString: true\n                });\n              } else {\n                _this3.$message(response.message);\n\n                _this3.loading = false;\n\n                _this3.closeThePage();\n              }\n            }).catch(function () {\n              _this3.loading = false;\n            });\n          }\n        }\n      });\n    },\n    previous: function previous() {\n      // 上一步\n      this.active = 0;\n      this.billFlow = null;\n    },\n    initData: function () {\n      var _initData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this4 = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // 有参数id 就是编辑\n                if (this.$route.query.id) {\n                  this.id = this.$route.query.id;\n                }\n\n                if (!this.id) {\n                  _context.next = 6;\n                  break;\n                }\n\n                this.loading = true;\n                this.activate = false; // 销毁部门组件\n\n                _context.next = 6;\n                return (0, _plan.getPlanById)({\n                  id: this.id\n                }).then(function (response) {\n                  return _this4.setData(response);\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function initData() {\n        return _initData.apply(this, arguments);\n      }\n\n      return initData;\n    }(),\n    setData: function setData(response) {\n      var data = response.data;\n      var pom = [];\n      data.planDetail.forEach(function (e) {\n        pom.push({\n          id: e.id,\n          categoryId: e.material.categoryId,\n          category: {\n            id: e.material.categoryId,\n            name: e.material.materialCategory.name,\n            unit: e.material.materialCategory.unit,\n            isMain: e.material.materialCategory.isMain\n          },\n          // unit: e.material.unit,\n          unit2: e.material.unit2,\n          brand: e.material.brand,\n          model: e.material.model,\n          spec: e.material.spec,\n          thickness: e.material.thickness,\n          texture: e.material.texture,\n          surfaceTreatment: e.material.surfaceTreatment,\n          designNumber: e.material.designNumber,\n          applicationQuantity: e.applicationQuantity,\n          applicationQuantity2: e.applicationQuantity2,\n          quantity: e.quantity,\n          quantity2: e.quantity2,\n          entryDate: e.entryDate,\n          remark: e.remark,\n          targetCostMaterialId: e.materialId // fileList: data.upFile.filter(f => f.tableId === e.id)\n\n        });\n      }); // 填充参数\n      // if (!data.fileList) {\n      //   data.fileList = []\n      // }\n\n      this.ruleForm = {\n        id: data.id,\n        number: data.number,\n        orgId: data.orgId,\n        planType: data.planType,\n        materialType: data.materialType,\n        realNumber: data.realNumber,\n        remark: data.remark,\n        state: data.state,\n        billFlowId: data.billFlowId,\n        fileList: data.upFile.filter(function (f) {\n          return f.tableId === data.id;\n        }),\n        organization: data.organization\n      }; // 填充 明细列表\n\n      this.list = pom; // this.billFlow = data.billFlow\n\n      this.setColumnShow();\n      this.loading = false; // loading 状态关闭\n      // 如果 存在单据和 流程Id 就加载审批组件\n\n      if (data.id && data.billFlowId) {\n        this.attitudePara = {\n          planId: data.id,\n          billFlowId: data.billFlowId\n        };\n        this.loadFlow = true; // 加载审批组件\n      }\n\n      this.activate = true; // 加载部门组件\n    },\n    closeThePage: function closeThePage() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    },\n    dialogClose: function dialogClose(data, state) {\n      this.addMaterial(data, state);\n      this.setColumnShow();\n      this.dialogTableVisible = false;\n    },\n    // showFileList(fileList) {\n    //   this.dialogTitle = '附件列表'\n    //   this.comName = 'UpFile'\n    //   this.dialogWidth = '50%'\n    //   this.fileList = fileList\n    //   this.dialogTableVisible = true\n    // },\n    addMaterial: function addMaterial(data, state) {\n      if (data) {\n        if (state === 'add') {\n          this.list.push(data);\n        } else if (state === 'update') {\n          this.list.splice(this.listIndex, 1, data);\n        } else if (state === 'addList') {\n          // data.forEach(e => {\n          //   this.list.push(e)\n          // })\n          this.list = data;\n        }\n      }\n    },\n    setColumnShow: function setColumnShow() {\n      // 设置列的显示。列中，都没有值，就隐藏\n      var modelunit2 = false;\n      var modelbrand = false;\n      var modelmodel = false;\n      var modelspec = false;\n      var modelthickness = false;\n      var modeltexture = false;\n      var modelsurfaceTreatment = false;\n      var modeldesignNumber = false;\n\n      var _iterator = (0, _createForOfIteratorHelper2.default)(this.list),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var row = _step.value;\n\n          if (row.unit2) {\n            modelunit2 = true;\n          }\n\n          if (row.brand) {\n            modelbrand = true;\n          }\n\n          if (row.model) {\n            modelmodel = true;\n          }\n\n          if (row.spec) {\n            modelspec = true;\n          }\n\n          if (row.thickness) {\n            modelthickness = true;\n          }\n\n          if (row.texture) {\n            modeltexture = true;\n          }\n\n          if (row.surfaceTreatment) {\n            modelsurfaceTreatment = true;\n          }\n\n          if (row.designNumber) {\n            modeldesignNumber = true;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      this.columnShow['unit2'] = modelunit2;\n      this.columnShow['brand'] = modelbrand;\n      this.columnShow['model'] = modelmodel;\n      this.columnShow['spec'] = modelspec;\n      this.columnShow['thickness'] = modelthickness;\n      this.columnShow['texture'] = modeltexture;\n      this.columnShow['surfaceTreatment'] = modelsurfaceTreatment;\n      this.columnShow['designNumber'] = modeldesignNumber;\n    },\n    edit: function edit(d) {\n      this.currentRow = d.row; // console.log('edit=>d.row:', d.row)\n\n      this.listIndex = d.$index;\n      this.dialogTitle = '编辑材料';\n      this.comName = 'PlanDetailAdd';\n      this.dialogWidth = '70%';\n      this.dialogTableVisible = true;\n    },\n    add: function add() {\n      this.currentRow = null;\n      this.dialogTitle = '添加材料';\n      this.comName = 'PlanDetailAdd';\n      this.dialogWidth = '70%';\n      this.dialogTableVisible = true;\n    },\n    checkMaterials: function checkMaterials() {\n      var data = {\n        orgId: this.ruleForm.orgId,\n        datalist: this.list\n      };\n      this.currentRow = data;\n      this.dialogTitle = '选择主材';\n      this.comName = 'TargetCostDetailAll';\n      this.dialogWidth = '100%';\n      this.dialogTableVisible = true;\n    },\n    del: function del(d) {\n      // 页面删除\n      this.list.splice(d.$index, 1);\n    },\n    onError: function onError(err) {\n      this.$message.info('导出失败：' + err);\n    },\n    onSuccess: function onSuccess(d, file) {\n      var _this5 = this;\n\n      var data = d[0].data; // console.log('数据为空的字段data中不会有该字段:', data)\n\n      if (data.length) {\n        var postData = [];\n        var errorMessage = '';\n\n        var _iterator2 = (0, _createForOfIteratorHelper2.default)(data),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var e = _step2.value;\n\n            if (!e.材料名称) {\n              errorMessage += '第' + e.__rowNum__ + '行，材料名称不能为空；';\n            }\n\n            if (!e.主数量) {\n              errorMessage += '第' + e.__rowNum__ + '行，主数量不能为空；';\n            } else {\n              if (!_validate.validateData.dbl(e.主数量.trim()).isSuccess) {\n                errorMessage += '第' + e.__rowNum__ + '行，主数量必须是数字；';\n              }\n            } // 辅单位不为空，辅数量不能为空\n\n\n            if (e.辅单位) {\n              if (!e.辅数量) {\n                errorMessage += '第' + e.__rowNum__ + '行，辅单位不为空，辅数量不能为空；';\n              } else {\n                if (!_validate.validateData.dbl(e.辅数量.trim()).isSuccess) {\n                  errorMessage += '第' + e.__rowNum__ + '行，辅数量必须是数字；';\n                }\n              }\n            }\n\n            if (!e.进场日期) {\n              errorMessage += '第' + e.__rowNum__ + '行，进场日期不能为空；';\n            } else {\n              var convertDate = (0, _index2.formatExcelDate)(e.进场日期.trim()); // console.log('数字格式化后的日期：', convertDate)\n\n              if (!_validate.validateData.date(convertDate).isSuccess) {\n                errorMessage += '第' + e.__rowNum__ + '行，进场日期格式错误；';\n              }\n            }\n\n            this.loading = true;\n\n            if (errorMessage.length > 0) {\n              this.$alert(\"\".concat(errorMessage.replace(/；/g, '；<br />')), {\n                dangerouslyUseHTMLString: true\n              });\n              this.loading = false;\n              return;\n            }\n\n            var obj1 = {};\n            var obj2 = {};\n            var detailCols = ['ApplicationQuantity', 'ApplicationQuantity2', 'EntryDate', 'Remark'];\n            this.sheet[0].keys.forEach(function (v, i) {\n              var value = e[_this5.sheet[0].tHeader[i]]; // 清除空格 回车 换行符\n\n              if (value) {\n                value = (0, _index2.cleanText)(value);\n              } else {\n                value = '';\n              } // console.log('v:' + v + ';value:' + value)\n\n\n              if (v === 'EntryDate') {\n                value = (0, _index2.formatExcelDate)(e.进场日期);\n              }\n\n              if (detailCols.includes(v)) {\n                obj1[v] = value;\n              } else {\n                obj2[v] = value;\n              }\n            });\n            obj1['Material'] = obj2;\n            postData.push(obj1);\n          } // console.log('postData:', postData)\n          // 把数据推送到后端进行验证\n\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        (0, _plan.checkPlanDetail)(postData).then(function (response) {\n          _this5.loading = false;\n\n          if (response.code === 200) {\n            // console.log('responseData:', response.data)\n            if (response.data) {\n              var _data = response.data; // 拼接成数组对象\n\n              var _iterator3 = (0, _createForOfIteratorHelper2.default)(_data),\n                  _step3;\n\n              try {\n                for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                  var item1 = _step3.value;\n                  var obj2 = {\n                    categoryId: item1.material.categoryId,\n                    category: {\n                      id: item1.material.categoryId,\n                      name: item1.material.categoryName\n                    },\n                    // unit: item1.material.unit,\n                    unit2: item1.material.unit2,\n                    brand: item1.material.brand,\n                    model: item1.material.model,\n                    spec: item1.material.spec,\n                    thickness: item1.material.thickness,\n                    texture: item1.material.texture,\n                    surfaceTreatment: item1.material.surfaceTreatment,\n                    designNumber: item1.material.designNumber,\n                    applicationQuantity: item1.applicationQuantity,\n                    applicationQuantity2: item1.applicationQuantity2,\n                    quantity: item1.applicationQuantity,\n                    quantity2: item1.applicationQuantity2,\n                    entryDate: item1.entryDate,\n                    remark: item1.remark // fileList: []\n\n                  };\n\n                  _this5.addMaterial(obj2, 'add');\n                }\n              } catch (err) {\n                _iterator3.e(err);\n              } finally {\n                _iterator3.f();\n              }\n\n              _this5.setColumnShow();\n            } else {\n              _this5.$alert(\"\".concat(response.msg.replace(/；/g, '；<br />')), {\n                dangerouslyUseHTMLString: true\n              });\n            }\n          }\n        }).catch(function () {\n          _this5.loading = false;\n        });\n      } else {\n        this.$message.info('模板中数据不能为空');\n      }\n    },\n    cancel: function cancel() {\n      var _this6 = this;\n\n      // 作废\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this6.loading = true;\n        (0, _plan.deletePlan)({\n          id: _this6.ruleForm.id\n        }).then(function (response) {\n          _this6.$message(response.message);\n\n          _this6.loading = false;\n\n          _this6.closeThePage();\n        });\n      }).catch(function () {});\n    },\n    getMainMaterial: function getMainMaterial(isMain) {\n      if (isMain === true) {\n        return '是';\n      } else {\n        return '否';\n      }\n    }\n  }\n};\nexports.default = _default;",null]}