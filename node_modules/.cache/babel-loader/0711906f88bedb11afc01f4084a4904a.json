{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\zjgl\\Acceptance\\shouZhi.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\zjgl\\Acceptance\\shouZhi.vue","mtime":1630891145118},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/toConsumableArray\"));\n\nvar _Gathering = require(\"@/api/cwgl/zjgl/Gathering.js\");\n\nvar _Expend = require(\"@/api/cwgl/zjgl/Expend.js\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// monopolize\nvar _default = {\n  name: 'ShouZhiMessage',\n  data: function data() {\n    return {\n      type: 'shou',\n      // shou:收款 zhi:支出\n      id: '',\n      table: {\n        list: [],\n        loading: false\n      },\n      infoList: []\n    };\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    next(function (vm) {\n      vm.initData();\n    });\n  },\n  methods: {\n    /**\r\n     * @description: 初始化数据\r\n     */\n    initData: function initData() {\n      // 获取路由信息 shou:收款 zhi:支出\n      var _this$$route$query = this.$route.query,\n          type = _this$$route$query.type,\n          id = _this$$route$query.id;\n\n      if (!type) {\n        return;\n      }\n\n      this.type = type;\n      this.id = id;\n      var tmp1 = [];\n      var tmp2 = [];\n\n      if (this.type === 'shou') {\n        // 支出 摘要 summary\n        tmp1 = [{\n          label: '部门',\n          value: '',\n          name: 'orgName',\n          monopolize: true\n        }];\n        tmp2 = [{\n          label: '收款日期',\n          value: '',\n          name: 'gatheringDate'\n        }, {\n          label: '收款类型',\n          value: '',\n          name: 'gatheringTypeName'\n        }, {\n          label: '收款银行',\n          value: '',\n          name: 'bank'\n        }];\n      } else {\n        tmp1 = [{\n          label: '部门',\n          value: '',\n          name: 'orgName'\n        }, {\n          label: '摘要',\n          value: '',\n          name: 'summary'\n        }];\n        tmp2 = [{\n          label: '支出日期',\n          value: '',\n          name: 'expendDate'\n        }, {\n          label: '支出类型',\n          value: '',\n          name: 'expendTypeName',\n          monopolize: true\n        }];\n      }\n\n      this.infoList = [{\n        label: '编号',\n        value: '',\n        name: 'number'\n      }, {\n        label: '源头',\n        value: '',\n        name: 'pageName'\n      }].concat((0, _toConsumableArray2.default)(tmp1), [{\n        label: '金额',\n        value: '',\n        name: 'amount'\n      }, {\n        label: '经手人',\n        value: '',\n        name: 'personName'\n      }, {\n        label: '资金形式',\n        value: '',\n        name: 'capitalTypeName'\n      }], (0, _toConsumableArray2.default)(tmp2), [{\n        label: '备注',\n        value: '',\n        name: 'remark',\n        monopolize: true\n      }, {\n        label: '制单人',\n        value: '',\n        name: 'createUserName'\n      }, {\n        label: '制单时间',\n        value: '',\n        name: 'createDate'\n      }, {\n        label: '更新人',\n        value: '',\n        name: 'lastEditUserName'\n      }, {\n        label: '更新时间',\n        value: '',\n        name: 'lastEditDate'\n      }]);\n      this.fetchData();\n    },\n\n    /**\r\n     * @description: 数据获取\r\n     */\n    fetchData: function () {\n      var _fetchData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var func, res, dateList;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.table.loading = true;\n                _context.prev = 1;\n                // To do\n                func = this.type === 'shou' ? _Gathering.GetPaymentById : _Expend.GetExpendById;\n                _context.next = 5;\n                return func(this.id);\n\n              case 5:\n                res = _context.sent;\n                this.table.list = res.data.acceptanceList;\n                dateList = ['gatheringDate', 'expendDate'];\n                res.data.amount = this.utils.formatMoney(res.data.amount, 2, 4);\n                this.infoList.forEach(function (item) {\n                  if (dateList.includes(item.name) && res.data[item.name]) {\n                    item.value = new Date(res.data[item.name]).toLocaleDateString().replaceAll('/', '-');\n                  } else {\n                    item.value = res.data[item.name];\n                  }\n                });\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](1);\n                console.log('fetchData:请求列表数据失败，错误信息：', _context.t0);\n\n              case 15:\n                _context.prev = 15;\n                this.table.loading = false;\n                return _context.finish(15);\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 12, 15, 18]]);\n      }));\n\n      function fetchData() {\n        return _fetchData.apply(this, arguments);\n      }\n\n      return fetchData;\n    }()\n  }\n};\nexports.default = _default;",null]}