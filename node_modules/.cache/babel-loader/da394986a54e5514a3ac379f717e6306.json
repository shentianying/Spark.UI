{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\fbgl\\fbht\\SubcontractAssesment\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\fbgl\\fbht\\SubcontractAssesment\\edit.vue","mtime":1635844823967},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/objectSpread2\"));\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _flowSelect = _interopRequireDefault(require(\"@/components/Flow/flowSelect\"));\n\nvar _MyForm = _interopRequireDefault(require(\"@/components/MyForm\"));\n\nvar _validate = require(\"@/utils/validate\");\n\nvar _subcontractAssesment = require(\"@/api/fbgl/subcontractAssesment.js\");\n\nvar _UpFile = _interopRequireDefault(require(\"@/components/UpLoad/UpFile\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import { hasPower } from '@/utils'\nvar _default = {\n  name: 'SubcontractAssesmentEdit',\n  components: {\n    MyForm: _MyForm.default,\n    FlowSelect: _flowSelect.default,\n    UpFile: _UpFile.default\n  },\n  data: function data() {\n    var _this = this;\n\n    var date = function date(rule, value, callback) {\n      var _this$firstForm = _this.firstForm,\n          contractStartDate = _this$firstForm.contractStartDate,\n          contractFinishDate = _this$firstForm.contractFinishDate;\n\n      if (contractStartDate && contractFinishDate) {\n        if (new Date(contractStartDate).getTime() > new Date(contractFinishDate).getTime()) {\n          return callback(new Error('开工日期要早于竣工日期'));\n        }\n      }\n\n      return callback();\n    };\n\n    return {\n      size: 'mini',\n      inputPlaceholder: '请输入',\n      selectPlaceholder: '请选择',\n      active: 1,\n      // 提交进度 1: 编辑信息 2: 编辑审批流程\n      firstForm: {\n        id: 0,\n        // 新增为0\n        companyId: '',\n        // 公司id\n        number: '',\n        // 合同号\n        orgId: '',\n        // 部门id\n        name: '',\n        // 合同名称\n        subcontractType: 1,\n        // 合同类型\n        sourceSubcontractId: '',\n        // 初始合同Id（补充合同时必填）\n        isSeal: 1,\n        // 是否用章\n        projectId: '',\n        // 项目ID\n        subcontractorId: '',\n        // 分包单位id\n        subcontractPeopleId: '',\n        // 分包人id\n        secondParty: '',\n        // 乙方代表\n        contractStartDate: '',\n        // 合同开工日期\n        contractFinishDate: '',\n        // 合同竣工日期\n        contractDuration: '',\n        // 合同工期\n        contractAmount: '',\n        // 合同额\n        inDeAmount: '',\n        // 增减额\n        taxRate: '',\n        // 开票税率\n        repairYear: '',\n        // 保修年限\n        progressPaymentScale: '',\n        // 进度款付款比例\n        settleReportScale: '',\n        // 结算上报比例\n        acceptenceScale: '',\n        // 竣工验收比例\n        settlePaymentScale: '',\n        // 结算付款比例\n        subPart: '',\n        // 分包部位\n        paymentTerms: '',\n        // 付款条件\n        remark: '',\n        // 备注\n        fileList: [],\n        // 附件\n        listFileList: [],\n        // 施工合同及清单扫描件\n        authorizationFileList: [],\n        // 授权委托书\n        state: 0,\n        // 状态\n        billFlow: null // 单据流程\n\n      },\n      firstRules: {\n        orgId: [{\n          required: true,\n          message: '请选择部门',\n          trigger: 'change'\n        }],\n        name: [{\n          required: true,\n          message: '请输入合同名称',\n          trigger: 'change'\n        }],\n        subcontractType: [{\n          required: true,\n          message: '请选择合同类别',\n          trigger: 'change'\n        }],\n        isSeal: [{\n          required: true,\n          message: '请选择是否用章',\n          trigger: 'change'\n        }],\n        projectId: [{\n          required: true,\n          message: '请选择项目',\n          trigger: 'change'\n        }],\n        subcontractorId: [{\n          required: true,\n          message: '请选择分包单位',\n          trigger: 'change'\n        }],\n        subcontractPeopleId: [{\n          required: true,\n          message: '请选择代理人',\n          trigger: 'change'\n        }],\n        secondParty: [{\n          required: true,\n          message: '请输入乙方代表',\n          trigger: 'change'\n        }],\n        contractStartDate: [{\n          required: true,\n          message: '请选择合同开工日期',\n          trigger: 'change'\n        }, {\n          validator: date,\n          trigger: 'change'\n        }],\n        contractFinishDate: [{\n          required: true,\n          message: '请选择合同竣工日期',\n          trigger: 'change'\n        }, {\n          validator: date,\n          trigger: 'change'\n        }],\n        contractAmount: [{\n          required: true,\n          message: '请输入金额',\n          trigger: 'change'\n        }, {\n          validator: _validate.validate.money,\n          message: '金额格式不正确',\n          trigger: 'change'\n        }, {\n          validator: _validate.validate.max_amount,\n          message: '超过所能存储的最大金额',\n          trigger: 'change'\n        }],\n        taxRate: [{\n          required: true,\n          message: '请输入开票税率',\n          trigger: 'change'\n        }, {\n          validator: _validate.validate.money,\n          message: '数字格式不正确',\n          trigger: 'change'\n        }, {\n          validator: _validate.validate.max_amount,\n          message: '超过所能存储的最大值',\n          trigger: 'change'\n        }],\n        repairYear: [{\n          required: true,\n          message: '请输入保修年限',\n          trigger: 'change'\n        }, {\n          validator: _validate.validate.number,\n          message: '数字格式不正确',\n          trigger: 'change'\n        }],\n        progressPaymentScale: [{\n          required: true,\n          message: '请输入进度款付款比例',\n          trigger: 'change'\n        }, {\n          validator: _validate.validate.money,\n          message: '数字格式不正确',\n          trigger: 'change'\n        }, {\n          validator: _validate.validate.max_amount,\n          message: '超过所能存储的最大值',\n          trigger: 'change'\n        }],\n        settleReportScale: [{\n          required: true,\n          message: '请输入结算上报比例',\n          trigger: 'change'\n        }, {\n          validator: _validate.validate.money,\n          message: '数字格式不正确',\n          trigger: 'change'\n        }, {\n          validator: _validate.validate.max_amount,\n          message: '超过所能存储的最大值',\n          trigger: 'change'\n        }],\n        acceptenceScale: [{\n          required: true,\n          message: '请输入竣工验收比例',\n          trigger: 'change'\n        }, {\n          validator: _validate.validate.money,\n          message: '数字格式不正确',\n          trigger: 'change'\n        }, {\n          validator: _validate.validate.max_amount,\n          message: '超过所能存储的最大值',\n          trigger: 'change'\n        }],\n        settlePaymentScale: [{\n          required: true,\n          message: '请输入结算付款比例',\n          trigger: 'change'\n        }, {\n          validator: _validate.validate.money,\n          message: '数字格式不正确',\n          trigger: 'change'\n        }, {\n          validator: _validate.validate.max_amount,\n          message: '超过所能存储的最大值',\n          trigger: 'change'\n        }]\n      },\n      filter: {\n        subcontractTypeList: [],\n        isSealList: [{\n          name: '是',\n          value: 1\n        }, {\n          name: '否',\n          value: 0\n        }]\n      },\n      subcontractor: {},\n      project: {}\n    };\n  },\n  computed: {\n    disabled: function disabled() {\n      return this.firstForm.subcontractType === 2;\n    },\n    title: function title() {\n      var active = this.active;\n      return active === 2 ? '审批流程' : '分包合同';\n    },\n    formNodeData: function formNodeData() {\n      var inputPlaceholder = this.inputPlaceholder,\n          selectPlaceholder = this.selectPlaceholder,\n          subcontractor = this.subcontractor,\n          _this$filter = this.filter,\n          subcontractTypeList = _this$filter.subcontractTypeList,\n          isSealList = _this$filter.isSealList,\n          firstForm = this.firstForm,\n          disabled = this.disabled,\n          project = this.project; // console.log(firstForm.isSeal)\n\n      return [{\n        label: '合同号:',\n        keyword: 'number',\n        props: {\n          disabled: true,\n          placeholder: '系统自动生成'\n        }\n      }, {\n        label: '合同名称:',\n        keyword: 'name',\n        props: {\n          placeholder: inputPlaceholder\n        }\n      }, {\n        label: '合同类别:',\n        keyword: 'subcontractType',\n        component: 'Select',\n        props: {\n          propsLabel: 'name',\n          placeholder: selectPlaceholder,\n          options: subcontractTypeList\n        }\n      }, {\n        label: '是否用章:',\n        keyword: 'isSeal',\n        component: 'Select',\n        props: {\n          propsLabel: 'name',\n          placeholder: selectPlaceholder,\n          options: isSealList\n        }\n      }, {\n        label: '主合同号:',\n        monopolize: true,\n        if: firstForm.subcontractType === 2,\n        component: 'SubcontractSelect',\n        keyword: 'sourceSubcontractId',\n        props: {\n          placeholder: inputPlaceholder\n        }\n      }, {\n        label: '项目:',\n        keyword: 'projectId',\n        component: 'ProjectSelect',\n        props: {\n          disabled: disabled,\n          placeholder: selectPlaceholder\n        }\n      }, {\n        label: '组织机构:',\n        value: project.orgId,\n        component: 'OrgSelect',\n        props: {\n          disabled: true,\n          placeholder: '请选择项目'\n        }\n      }, {\n        label: '分包单位:',\n        keyword: 'subcontractorId',\n        component: 'SubcontractorSelect',\n        props: {\n          propsLabel: 'name',\n          disabled: disabled,\n          placeholder: inputPlaceholder\n        }\n      }, {\n        label: '法定代表人:',\n        value: subcontractor.corporation,\n        props: {\n          disabled: true,\n          placeholder: '请选择分包单位'\n        }\n      }, {\n        label: '代理人:',\n        keyword: 'subcontractPeopleId',\n        component: 'SubcontractPeopleSelect',\n        props: {\n          disabled: disabled,\n          placeholder: inputPlaceholder\n        }\n      }, {\n        label: '乙方代表:',\n        keyword: 'secondParty',\n        props: {\n          disabled: disabled,\n          placeholder: inputPlaceholder\n        }\n      }, {\n        label: '合同开工日期:',\n        keyword: 'contractStartDate',\n        component: 'el-date-picker',\n        props: {\n          disabled: disabled,\n          type: 'date',\n          placeholder: '选择日期',\n          valueFormat: 'yyyy-MM-dd'\n        }\n      }, {\n        label: '合同竣工日期:',\n        keyword: 'contractFinishDate',\n        component: 'el-date-picker',\n        props: {\n          disabled: disabled,\n          type: 'date',\n          placeholder: '选择日期',\n          valueFormat: 'yyyy-MM-dd'\n        }\n      }, {\n        label: '合同工期:',\n        keyword: 'contractDuration',\n        props: {\n          disabled: true,\n          placeholder: '自动计算'\n        }\n      }, {\n        label: '合同额:',\n        keyword: 'contractAmount',\n        props: {\n          placeholder: inputPlaceholder\n        }\n      }, {\n        label: '开票税率:',\n        keyword: 'taxRate',\n        props: {\n          placeholder: inputPlaceholder\n        }\n      }, {\n        label: '保修年限:',\n        keyword: 'repairYear',\n        props: {\n          placeholder: inputPlaceholder\n        }\n      }, {\n        label: '进度款付款比例:',\n        keyword: 'progressPaymentScale',\n        props: {\n          placeholder: inputPlaceholder\n        }\n      }, {\n        label: '结算上报比例:',\n        keyword: 'settleReportScale',\n        props: {\n          placeholder: inputPlaceholder\n        }\n      }, {\n        label: '竣工验收比例:',\n        keyword: 'acceptenceScale',\n        props: {\n          placeholder: inputPlaceholder\n        }\n      }, {\n        label: '结算付款比例:',\n        keyword: 'settlePaymentScale',\n        props: {\n          placeholder: inputPlaceholder\n        }\n      }, {\n        label: '分包部位:',\n        keyword: 'subPart',\n        props: {\n          placeholder: inputPlaceholder,\n          type: 'textarea'\n        }\n      }, {\n        label: '付款条款:',\n        keyword: 'paymentTerms',\n        props: {\n          placeholder: inputPlaceholder,\n          type: 'textarea'\n        }\n      }, {\n        label: '备注:',\n        monopolize: true,\n        keyword: 'remark',\n        props: {\n          placeholder: inputPlaceholder,\n          type: 'textarea'\n        }\n      } // { label: '附件:', monopolize: true, keyword: 'fileList', component: 'UpFile', width: '100%', props: { isUpfile: !disabled, isDelete: !disabled, fileSize: 100, isPreview: true }}\n      ];\n    }\n  },\n  watch: {\n    'firstForm.contractStartDate': function firstFormContractStartDate() {\n      this.calcContractDuration();\n    },\n    'firstForm.contractFinishDate': function firstFormContractFinishDate() {\n      this.calcContractDuration();\n    }\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    next(function (vm) {\n      vm.initSelect();\n      var newId = vm.$route.query.id;\n      var oldId = vm.firstForm.id;\n      var type = vm.$route.query.type;\n\n      if (type === 'edit' && newId !== oldId) {\n        // 说明是打开另一个单子的编辑页面\n        vm.firstForm.id = newId;\n        vm.initForm();\n        vm.initDataById(newId);\n        vm.active = 1;\n      } else {\n        var form = vm.firstForm;\n        var _vm$$store$state$user = vm.$store.state.user,\n            _vm$$store$state$user2 = _vm$$store$state$user.info,\n            uid = _vm$$store$state$user2.uid,\n            userName = _vm$$store$state$user2.userName,\n            name = _vm$$store$state$user2.name,\n            selectOrgId = _vm$$store$state$user.selectOrgId;\n        vm.user = {\n          id: uid,\n          number: userName,\n          name: name\n        };\n        form.companyId = selectOrgId;\n        form.personId = uid;\n\n        if (type === 'add' && oldId) {\n          vm.initForm();\n          vm.active = 1;\n        }\n      }\n    });\n  },\n  methods: {\n    sourceSubcontractIdSelect: function sourceSubcontractIdSelect(subcontract) {\n      // console.log(subcontract)\n      var contractStartDate = subcontract.contractStartDate,\n          contractFinishDate = subcontract.contractFinishDate,\n          projectId = subcontract.projectId,\n          subcontractPeopleId = subcontract.subcontractPeopleId,\n          subcontractorId = subcontract.subcontractorId,\n          corporation = subcontract.corporation,\n          orgName = subcontract.orgName,\n          secondParty = subcontract.secondParty;\n      this.firstForm = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, this.firstForm), {}, {\n        contractStartDate: contractStartDate,\n        contractFinishDate: contractFinishDate,\n        projectId: projectId,\n        subcontractPeopleId: subcontractPeopleId,\n        subcontractorId: subcontractorId,\n        secondParty: secondParty\n      });\n      this.subcontractor = {\n        id: subcontractorId,\n        corporation: corporation\n      };\n      this.project.orgStr = orgName; // project,subcontractor\n    },\n    calcContractDuration: function calcContractDuration() {\n      var _this$firstForm2 = this.firstForm,\n          contractStartDate = _this$firstForm2.contractStartDate,\n          contractFinishDate = _this$firstForm2.contractFinishDate;\n      var day = 1000 * 60 * 60 * 24;\n      var res = Math.ceil((new Date(new Date(contractFinishDate) - 1 + day) - new Date(contractStartDate)) / day);\n      this.firstForm.contractDuration = isNaN(res) ? '' : res;\n    },\n    subcontractPeopleIdSelect: function subcontractPeopleIdSelect(subcontractPeople) {\n      console.log(subcontractPeople);\n    },\n    projectIdSelect: function projectIdSelect(project) {\n      this.project = project;\n      this.firstForm.orgId = project.orgId;\n    },\n    subcontractorIdSelect: function subcontractorIdSelect(subcontractor) {\n      console.log(subcontractor);\n      this.subcontractor = subcontractor;\n    },\n    initForm: function initForm() {\n      var _this2 = this;\n\n      Object.assign(this.$data.firstForm, this.$options.data().firstForm);\n      this.$nextTick(function () {\n        _this2.$refs.firstForm.clearValidate();\n      });\n    },\n\n    /**\r\n     * @description: 初始化选项框数据\r\n     */\n    initSelect: function initSelect() {\n      var _this3 = this;\n\n      (0, _subcontractAssesment.InitSubcontractAssesment)().then(function (res) {\n        _this3.filter.subcontractTypeList = res.subcontractTypeList;\n      });\n    },\n\n    /**\r\n     * @description: 根据id获取数据并且初始化选项框数据\r\n     */\n    initDataById: function initDataById(id) {\n      var _this4 = this;\n\n      (0, _subcontractAssesment.GetSubcontractAssesmentById)({\n        id: id\n      }).then(function (res) {\n        var form = _this4.firstForm;\n\n        for (var key in form) {\n          if (Object.hasOwnProperty.call(form, key)) {\n            if (key === 'isSeal') {\n              // console.log(11111111)\n              form[key] = typeof res.data[key] === 'boolean' ? Number(res.data[key]) : form[key];\n            } else {\n              form[key] = res.data[key] || form[key];\n            }\n          }\n        }\n\n        _this4.subcontractor = res.data.subcontractor;\n        _this4.project = res.data.project;\n        form.billFlow = res.billFlowData; // form.fileList = res.data.upFile\n\n        form.fileList = res.data.upFile;\n        form.listFileList = res.data.listUpFile;\n        form.authorizationFileList = res.data.authorizationUpFile;\n      });\n    },\n    getBillFlow: function getBillFlow() {\n      var _this5 = this;\n\n      // 获取流程数据\n      var _this$firstForm3 = this.firstForm,\n          state = _this$firstForm3.state,\n          billFlow = _this$firstForm3.billFlow;\n      var req = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, this.firstForm), {}, {\n        state: state || 0\n      });\n      if (billFlow) req.billFlowId = billFlow.id;\n      delete req.billFlow;\n      delete req.number;\n      (0, _subcontractAssesment.GetBillFlow)(req).then(function (_ref) {\n        var data = _ref.data,\n            success = _ref.success,\n            message = _ref.message;\n\n        if (success) {\n          _this5.firstForm.billFlow = data.billFlow;\n\n          _this5.setActive(2);\n        } else {\n          _this5.$message.error(message);\n        }\n      });\n    },\n\n    /**\r\n     * 修改填报进度\r\n     */\n    setActive: function setActive(active) {\n      this.active = active;\n    },\n\n    /**\r\n     * 下一步\r\n     */\n    nextStep: function nextStep(formName) {\n      var _this6 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _this6.getBillFlow();\n        }\n      });\n    },\n    // 作废\n    invalidForm: function invalidForm() {\n      var _this7 = this;\n\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        return (0, _subcontractAssesment.DeleteSubcontractSignSet)({\n          id: _this7.firstForm.id\n        });\n      }).then(function () {\n        _this7.$message.success('操作成功');\n\n        _this7.back();\n      });\n    },\n\n    /**\r\n     * 提交表单\r\n     * @param {Number} state 提交类型，0：保存；1：提交; 10000: 修改\r\n     */\n    submitForm: function submitForm(state) {\n      var _this8 = this;\n\n      var req = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, this.firstForm), {}, {\n        state: state\n      });\n      delete req.number;\n\n      if (this.firstForm.billFlow) {\n        // 获取流程组件中的数据\n        var billFlow = this.$refs.flowSelect.getBillFlow();\n\n        if (!billFlow) {\n          return false;\n        }\n\n        req.billFlow = billFlow;\n      } else {\n        this.$message.error('流程数据不能为空');\n        return;\n      }\n\n      if (req.id) {\n        (0, _subcontractAssesment.PutSubcontractAssesment)(req).then(function (res) {\n          // 更新\n          _this8.$message.success('保存成功');\n\n          _this8.back();\n        });\n      } else {\n        (0, _subcontractAssesment.AddSubcontractAssesment)(req).then(function () {\n          // 添加\n          _this8.$message.success('提交成功');\n\n          _this8.back();\n        });\n      }\n    },\n\n    /**\r\n     * 返回上一页，并关闭当前页\r\n     */\n    back: function back() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    }\n  }\n};\nexports.default = _default;",null]}