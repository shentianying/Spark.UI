{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\ywgl\\SocialResource\\details.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\ywgl\\SocialResource\\details.vue","mtime":1635839421444},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _socialResource = require(\"@/api/ywgl/socialResource.js\");\n\nvar _SocialResourceSelect = _interopRequireDefault(require(\"@/components/SearchBar/form/SocialResourceSelect\"));\n\nvar _Detailsedit = _interopRequireDefault(require(\"@/components/Detailsedit\"));\n\nvar _TableEx = _interopRequireDefault(require(\"@/components/TableEx\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default2 = {\n  name: 'SocialResourceDetails',\n  components: {\n    Detailsedit: _Detailsedit.default,\n    TableEx: _TableEx.default // UpFile\n\n  },\n  data: function data() {\n    var _this = this;\n\n    var h = this.$createElement;\n    return {\n      size: 'mini',\n      activeNames: ['0', '1', '2'],\n      // 展开的折叠面板\n      loading: false,\n      // 请求未完成\n      myDetails: null,\n      // 详情数据\n\n      /* 列表数据相关 */\n      relationTable: {\n        // 关系列表\n        columns: [{\n          label: '序号',\n          // 表头\n          minWidth: '80',\n          // 最小宽度\n          format: function format(val, _format, row, column, scoped) {\n            return scoped.$index + 1;\n          }\n        }, {\n          render: function render(h) {\n            return h(\"el-table-column\", {\n              \"attrs\": {\n                \"minWidth\": '120',\n                \"align\": 'center',\n                \"label\": '姓名'\n              },\n              \"scopedSlots\": {\n                default: function _default(_ref) {\n                  var row = _ref.row;\n\n                  if (_this.type === 1) {\n                    return h(_SocialResourceSelect.default, {\n                      \"attrs\": {\n                        \"value\": row.toId,\n                        \"size\": 'mini',\n                        \"placeholder\": '输入关键字搜索'\n                      },\n                      \"on\": {\n                        \"select\": function select(val) {\n                          row.socialResource.company = val[0].company;\n                          row.socialResource.position = val[0].position;\n                          row.socialResource.name = val[0].name;\n                          console.log(row);\n                        },\n                        \"change\": function change(val) {\n                          if (val === '') {\n                            row.socialResource.company = '';\n                            row.socialResource.position = '';\n                            row.socialResource.name = '';\n                          }\n                        }\n                      },\n                      \"model\": {\n                        value: row.toId,\n                        callback: function callback($$v) {\n                          _this.$set(row, \"toId\", $$v);\n                        }\n                      }\n                    });\n                  } else {\n                    return row.socialResource.name;\n                  }\n                }\n              }\n            });\n          }\n        }, {\n          label: '所在单位',\n          prop: 'socialResource.company',\n          minWidth: '120'\n        }, {\n          label: '职务',\n          prop: 'socialResource.position',\n          minWidth: '120'\n        }, {\n          render: function render(h) {\n            return h(\"el-table-column\", {\n              \"attrs\": {\n                \"minWidth\": '120',\n                \"align\": 'center',\n                \"label\": '与本人关系'\n              },\n              \"scopedSlots\": {\n                default: function _default(_ref2) {\n                  var row = _ref2.row;\n\n                  if (_this.type === 1) {\n                    return h(\"el-input\", {\n                      \"attrs\": {\n                        \"size\": 'mini',\n                        \"placeholder\": '输入关系'\n                      },\n                      \"model\": {\n                        value: row.relationship,\n                        callback: function callback($$v) {\n                          _this.$set(row, \"relationship\", $$v);\n                        }\n                      }\n                    });\n                  } else {\n                    return row.relationship;\n                  }\n                }\n              }\n            });\n          }\n        }, {\n          render: function render(h) {\n            return h(\"el-table-column\", {\n              \"attrs\": {\n                \"minWidth\": '120',\n                \"align\": 'center',\n                \"label\": '备注'\n              },\n              \"scopedSlots\": {\n                default: function _default(_ref3) {\n                  var row = _ref3.row;\n\n                  if (_this.type === 1) {\n                    return h(\"el-input\", {\n                      \"attrs\": {\n                        \"size\": 'mini',\n                        \"placeholder\": '输入备注'\n                      },\n                      \"model\": {\n                        value: row.remark,\n                        callback: function callback($$v) {\n                          _this.$set(row, \"remark\", $$v);\n                        }\n                      }\n                    });\n                  } else {\n                    return row.remark;\n                  }\n                }\n              }\n            });\n          }\n        }],\n        list: [{\n          id: 0,\n          fromId: this.myId,\n          toId: '',\n          socialResource: {\n            name: '',\n            // 姓名\n            position: '',\n            // 职务\n            company: '' // 单位\n\n          },\n          relationship: '',\n          // 与本人关系\n          remark: '' // 备注\n\n        }],\n        loading: false\n      }\n    };\n  },\n  computed: {\n    /**\r\n     * 详情各字段计算\r\n     */\n    infoList: function infoList() {\n      var _this$myDetails$data = this.myDetails.data,\n          name = _this$myDetails$data.name,\n          sex = _this$myDetails$data.sex,\n          birthYear = _this$myDetails$data.birthYear,\n          companyTel = _this$myDetails$data.companyTel,\n          company = _this$myDetails$data.company,\n          companyType = _this$myDetails$data.companyType,\n          position = _this$myDetails$data.position,\n          companyAddress = _this$myDetails$data.companyAddress,\n          homeAddress = _this$myDetails$data.homeAddress,\n          homeTel = _this$myDetails$data.homeTel,\n          email = _this$myDetails$data.email,\n          qq = _this$myDetails$data.qq,\n          interest = _this$myDetails$data.interest,\n          study = _this$myDetails$data.study,\n          work = _this$myDetails$data.work,\n          resources = _this$myDetails$data.resources,\n          inUse = _this$myDetails$data.inUse,\n          remark = _this$myDetails$data.remark,\n          upFile = _this$myDetails$data.upFile,\n          createUserName = _this$myDetails$data.createUserName,\n          createDate = _this$myDetails$data.createDate,\n          lastEditUserName = _this$myDetails$data.lastEditUserName,\n          lastEditDate = _this$myDetails$data.lastEditDate;\n      return [{\n        label: '姓名',\n        value: name\n      }, {\n        label: '性别',\n        value: sex\n      }, {\n        label: '出生年份',\n        value: birthYear\n      }, {\n        label: '电话',\n        value: companyTel\n      }, {\n        label: '工作单位',\n        value: company\n      }, {\n        label: '单位性质',\n        value: companyType\n      }, {\n        label: '职务',\n        value: position\n      }, {\n        label: '单位地址',\n        value: companyAddress\n      }, {\n        label: '现居住地',\n        value: homeAddress\n      }, {\n        label: '家庭电话',\n        value: homeTel\n      }, {\n        label: 'Email',\n        value: email\n      }, {\n        label: 'QQ',\n        value: qq\n      }, {\n        label: '个人喜好',\n        value: interest,\n        monopolize: true\n      }, {\n        label: '学习经历',\n        value: study,\n        monopolize: true\n      }, {\n        label: '工作经历',\n        value: work,\n        monopolize: true\n      }, {\n        label: '资源关系',\n        value: resources,\n        monopolize: true\n      }, {\n        label: '备注',\n        value: remark,\n        monopolize: true\n      }, {\n        label: '附件',\n        value: upFile || [],\n        component: 'UpFile',\n        monopolize: true\n      }, {\n        label: '制单人',\n        value: createUserName\n      }, {\n        label: '制单时间',\n        value: createDate\n      }, {\n        label: '更新人',\n        value: lastEditUserName\n      }, {\n        label: '更新时间',\n        value: lastEditDate\n      }, {\n        label: '状态',\n        value: inUse ? '正常' : '禁用'\n      }];\n    }\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    next(function (vm) {\n      vm.initDat();\n    });\n  },\n  methods: {\n    /**\r\n     * @description: 初始化数据\r\n     */\n    initDat: function initDat() {\n      var _this$$route$query = this.$route.query,\n          id = _this$$route$query.id,\n          type = _this$$route$query.type;\n      this.myId = id;\n      this.type = type;\n\n      if (this.type === 1) {\n        this.tag = true;\n      } else {\n        this.tag = false;\n      }\n\n      this.fetchData();\n    },\n\n    /**\r\n     * 获取详情信息\r\n     */\n    fetchData: function () {\n      var _fetchData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.myId) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                this.loading = true;\n                (0, _socialResource.getSocialResourceById)({\n                  id: this.myId\n                }).then(function (res) {\n                  _this2.myDetails = res;\n                  _this2.relationTable.list = res.linkList;\n                }).catch(function (e) {\n                  console.log('fetchData:请求列表数据失败，错误信息：', e);\n                }).finally(function () {\n                  _this2.loading = false;\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function fetchData() {\n        return _fetchData.apply(this, arguments);\n      }\n\n      return fetchData;\n    }(),\n    goBack: function goBack() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    },\n    handleGraph: function handleGraph(id) {\n      this.$router.push({\n        name: 'Relation',\n        query: {\n          id: id,\n          refreshRouterName: this.$route.name\n        }\n      });\n    },\n    saveTable: function saveTable(id) {\n      var _this3 = this;\n\n      var req = {\n        relationTable: this.relationTable.list,\n        id: id\n      };\n      var flage = true;\n      var same = false;\n      this.relationTable.list.forEach(function (e) {\n        if (e.toId === '' || e.relationship === '') {\n          flage = false;\n        }\n\n        if (e.fromId === e.toId) {\n          same = true;\n        }\n      });\n\n      if (!flage) {\n        this.$message('请将关系信息填写完整!');\n        return false;\n      }\n\n      if (same) {\n        this.$message('请不要选择其本人!');\n        return false;\n      }\n\n      this.loading = true;\n      (0, _socialResource.SaveRelationship)(req).then(function (res) {\n        // 更新\n        _this3.$message.success('保存成功');\n\n        _this3.loading = false;\n\n        _this3.goBack();\n      }).catch(function () {\n        _this3.loading = false;\n      });\n    },\n\n    /**\r\n     * 添加关系\r\n     */\n    addTable: function addTable() {\n      // 最后一条数据不能删掉 所以新增的一条数据的id 只能取list的最后一条数据的id+1; 直接取list.length会有问题\n      // const length = this.relationTable.list.length - 1\n      // const id = length < 0 ? 0 : this.relationTable.list[length].id + 1\n      this.relationTable.list.push({\n        id: 0,\n        fromId: this.myId,\n        toId: '',\n        socialResource: {\n          name: '',\n          // 姓名\n          position: '',\n          // 职务\n          company: '' // 单位\n\n        },\n        relationship: '',\n        // 与本人关系\n        remark: '' // 备注\n\n      });\n    },\n\n    /**\r\n     * 删除关系信息\r\n     */\n    handleDel: function handleDel(row) {\n      // 删除选中的信息\n      if (this.relationTable.list.length > 1) {\n        // this.relationTable.list = this.relationTable.list.filter(e => {\n        //   return e.id !== row.id\n        // })\n        this.relationTable.list.splice(row.$index + 1, 1);\n      }\n    }\n  }\n};\nexports.default = _default2;",null]}