{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\jcsj\\components\\userCheckupOrganization.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\jcsj\\components\\userCheckupOrganization.vue","mtime":1624672557638},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nvar _index = require(\"@/utils/index\");\n\nvar _role = require(\"@/api/xtgl/role\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import { getOrganizationList } from '@/api/xtgl/organization'\n// getUserCheckupOrganization\nvar _default = {\n  name: 'UserCheckupOrganization',\n  components: {},\n  props: {\n    id: {\n      type: Number,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      list: null,\n      buttonLoading: false,\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      },\n      userRole: [],\n      selectRoleId: null,\n      // 下拉列表选中的角色\n      UserCheckupOrganizationList: []\n    };\n  },\n  activated: function activated() {\n    if (this.$route.params.id) {\n      this.fetchData();\n      this.refreshRouterName = this.$route.params.refreshRouterName;\n    }\n  },\n  mounted: function mounted() {\n    this.fetchData();\n  },\n  methods: {\n    fetchData: function () {\n      var _fetchData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        var postData;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.buttonLoading = true;\n                postData = {};\n                postData.personId = this.id;\n                _context.next = 5;\n                return (0, _role.initUserCheckupOrganization)(postData).then(function (response) {\n                  var data1 = response.data1,\n                      data2 = response.data2,\n                      data3 = response.data3; // 组织机构列表\n\n                  _this.list = (0, _index.getTree)(0, data2); // 初始化信息\n\n                  data1.forEach(function (e) {\n                    e.id = e.organizationId;\n                  });\n                  _this.UserCheckupOrganizationList = data1;\n                  _this.userRole = data3; // 绑定用户角色\n\n                  _this.selectRoleId = data3[0].roleId; // 设置下拉角色的默认值\n\n                  _this.buttonLoading = false;\n                });\n\n              case 5:\n                // 初始化 审核范围 的值\n                this.$nextTick(function () {\n                  _this.$refs.tree.setCheckedNodes(_this.UserCheckupOrganizationList.filter(function (f) {\n                    return f.roleId === _this.selectRoleId;\n                  }));\n                }); //   await getOrganizationList().then(response => {\n                //     this.list = getTree(0, response.data)\n                //     this.buttonLoading = false\n                //   })\n                //   var postData = {}\n                //   postData.personId = this.id\n                //   await getUserCheckupOrganization(postData).then(response => {\n                //     const { data } = response\n                //     data.forEach(e => {\n                //       e.id = e.organizationId\n                //     })\n                //     this.$refs.tree.setCheckedNodes(response.data)\n                //   })\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function fetchData() {\n        return _fetchData.apply(this, arguments);\n      }\n\n      return fetchData;\n    }(),\n    handleAdd: function handleAdd() {\n      this.currentRow = null;\n      this.pid = 0;\n      this.dialogTableVisible = true;\n    },\n    closeThePage: function closeThePage() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    },\n    save: function save() {\n      var _this2 = this;\n\n      var nodes = this.$refs.tree.getCheckedNodes();\n      var postData = {};\n      postData.personId = this.id;\n      postData.orgIds = nodes.length > 0 ? nodes.map(function (m) {\n        return m.id;\n      }).toString() : '';\n      postData.roleId = this.selectRoleId;\n      this.buttonLoading = true;\n      (0, _role.addUserCheckupOrganization)(postData).then(function (response) {\n        _this2.$message(response.message);\n\n        _this2.buttonLoading = false;\n      }).catch(function () {\n        _this2.buttonLoading = false;\n      });\n    },\n    changeRole: function changeRole() {\n      var _this3 = this;\n\n      this.$refs.tree.setCheckedNodes(this.UserCheckupOrganizationList.filter(function (f) {\n        return f.roleId === _this3.selectRoleId;\n      }));\n    }\n  }\n};\nexports.default = _default;",null]}