{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\rsgl\\rygw\\personPostEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\rsgl\\rygw\\personPostEdit.vue","mtime":1627280659692},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _postPool = require(\"@/api/rsgl/postPool\");\n\nvar _personPost = require(\"@/api/rsgl/personPost\");\n\nvar _person = require(\"@/api/rsgl/person\");\n\nvar _personPostDetailEdit = _interopRequireDefault(require(\"./personPostDetailEdit\"));\n\nvar _index = _interopRequireDefault(require(\"@/components/OrgSelect/index2\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'PersonPostEdit',\n  components: {\n    PersonPostDetailEdit: _personPostDetailEdit.default,\n    OrgSelect2: _index.default\n  },\n  data: function data() {\n    return {\n      ruleForm: {\n        personId: null,\n        postId: 0,\n        orgId: null,\n        postPoolDetailId: null,\n        roleId: null,\n        positionId: null,\n        isMain: true,\n        inUse: true\n      },\n      changeFlag: false,\n      number: '',\n      name: '',\n      listLoading: false,\n      loading: false,\n      dialogTableVisible: false,\n      dialogTitle: '保存',\n      dialogWidth: '70%',\n      comName: 'PersonPostDetailEdit',\n      currentRow: null,\n      userVal: null,\n      postList: [],\n      roleList: [],\n      positionList: null,\n      PersonPostList: [],\n      mainPersonPostId: null,\n      rules: {\n        postPoolDetailId: [{\n          required: true,\n          message: '必填',\n          trigger: 'blur'\n        }],\n        positionId: [{\n          required: true,\n          message: '必填',\n          trigger: 'blur'\n        }],\n        roleId: [{\n          required: true,\n          message: '必填',\n          trigger: 'blur'\n        }],\n        orgId: [{\n          required: true,\n          message: '必填',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  watch: {},\n  activated: function activated() {\n    var _this = this;\n\n    if (this.$route.params.id) {\n      (0, _person.getPersonById)({\n        id: this.$route.query.id\n      }).then(function (response) {\n        var data = response.data;\n        _this.number = data.number;\n        _this.name = data.name;\n        _this.ruleForm.orgId = data.organizationId;\n\n        _this.initData(data.organizationId);\n      });\n      this.refreshRouterName = this.$route.params.refreshRouterName;\n    }\n  },\n  methods: {\n    submitForm: function submitForm() {\n      var _this2 = this;\n\n      this.$refs['ruleForm'].validate(function (valid) {\n        if (valid) {\n          var newObj = JSON.parse(JSON.stringify(_this2.ruleForm));\n          newObj.personId = _this2.$route.query.id; // 保存数据\n\n          if (_this2.mainPersonPostId) {\n            _this2.loading = true;\n            (0, _personPost.putPersonPost)(newObj).then(function (response) {\n              if (response.errorMsg) {\n                // 验证错误\n                _this2.$alert(\"\".concat(response.errorMsg.replace(/；/g, '；<br />')), {\n                  dangerouslyUseHTMLString: true\n                });\n\n                return;\n              }\n\n              _this2.$message(response.message);\n\n              _this2.loading = false;\n\n              _this2.closeThePage();\n            }).catch(function () {\n              _this2.loading = false;\n            });\n          } else {\n            (0, _personPost.addPersonPost)(newObj).then(function (response) {\n              if (response.errorMsg) {\n                // 验证错误\n                _this2.$alert(\"\".concat(response.errorMsg.replace(/；/g, '；<br />')), {\n                  dangerouslyUseHTMLString: true\n                });\n\n                return;\n              }\n\n              _this2.$message(response.message);\n\n              _this2.loading = false;\n\n              _this2.closeThePage();\n            }).catch(function () {\n              _this2.loading = false;\n            });\n          }\n        }\n      });\n    },\n    fetchData: function fetchData() {\n      var _this3 = this;\n\n      if (this.$route.query.id !== 0) {\n        this.listLoading = true;\n        (0, _personPost.getAllPersonPostById)({\n          id: this.$route.query.id\n        }).then(function (response) {\n          var data = response.data,\n              data2 = response.data2;\n\n          if (data === null) {\n            _this3.ruleForm.personId = _this3.$route.query.id;\n\n            _this3.$message({\n              message: '主岗位为空请填写！',\n              type: 'warning'\n            });\n          } else {\n            _this3.ruleForm.id = data.id;\n            _this3.ruleForm.personId = data.personId;\n\n            if (data.positionId !== 0) {\n              _this3.ruleForm.positionId = data.positionId;\n            }\n\n            _this3.ruleForm.isMain = data.isMain;\n            _this3.ruleForm.inUse = data.inUse;\n            _this3.mainPersonPostId = data.id;\n\n            if (data.orgId === _this3.ruleForm.orgId) {\n              _this3.ruleForm.postPoolDetailId = data.postPoolDetailId;\n              _this3.ruleForm.postId = data.postId;\n              _this3.ruleForm.roleId = data.roleId;\n            }\n          }\n\n          _this3.PersonPostList = data2;\n          _this3.listLoading = false;\n        });\n      }\n    },\n    initData: function initData(val) {\n      var _this4 = this;\n\n      (0, _personPost.getPersonPostEditInit)({\n        orgId: val\n      }).then(function (response) {\n        var data1 = response.data1,\n            data2 = response.data2,\n            data3 = response.data3;\n        _this4.postList = data1;\n        _this4.roleList = data2;\n        _this4.positionList = data3;\n\n        _this4.fetchData();\n      });\n    },\n    getPostList: function getPostList(setVal) {\n      var _this5 = this;\n\n      (0, _postPool.getPostListByOrgId)({\n        id: setVal\n      }).then(function (response) {\n        var data = response.data;\n        _this5.postList = data;\n      });\n    },\n    closeThePage: function closeThePage() {\n      this.$store.dispatch('tagsView/delView', this.$route); // this.$router.go(-1)\n\n      this.$router.push({\n        name: 'PersonEdit',\n        query: {\n          id: this.ruleForm.personId,\n          refreshRouterName: 'Person'\n        },\n        params: {\n          id: this.ruleForm.personId\n        }\n      });\n    },\n    dialogClose: function dialogClose() {\n      this.dialogTableVisible = false;\n      this.fetchData();\n    },\n    editPersonPost: function editPersonPost(d) {\n      this.userVal = this.$route.params.id;\n      this.currentRow = d.row;\n      this.dialogTitle = '编辑岗位信息';\n      this.comName = 'PersonPostDetailEdit';\n      this.dialogTableVisible = true;\n    },\n    addPersonPost: function addPersonPost() {\n      this.userVal = this.$route.params.id;\n      this.currentRow = null;\n      this.dialogTitle = '添加岗位信息';\n      this.comName = 'PersonPostDetailEdit';\n      this.dialogTableVisible = true;\n    },\n    delPersonPost: function delPersonPost(d) {\n      var _this6 = this;\n\n      // 页面删除\n      this.$confirm('此操作将永久删除该岗位信息, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        (0, _personPost.deletePersonPost)({\n          id: d.row.id\n        }).then(function (response) {\n          if (response.errorMsg) {\n            // 验证错误\n            _this6.$alert(\"\".concat(response.errorMsg.replace(/；/g, '；<br />')), {\n              dangerouslyUseHTMLString: true\n            });\n\n            return;\n          }\n\n          _this6.$message(response.message);\n\n          _this6.loading = false;\n\n          _this6.fetchData();\n        }).catch(function () {\n          _this6.loading = false;\n        });\n      }).catch(function () {\n        _this6.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    postChange: function postChange(val) {\n      var _this7 = this;\n\n      (0, _postPool.getPostPoolDetailById)({\n        id: val\n      }).then(function (response) {\n        var data = response.data;\n        _this7.ruleForm.postId = data.postId;\n        _this7.ruleForm.roleId = data.roleId;\n      });\n    },\n    orgChange: function orgChange(val) {\n      if (this.changeFlag) {\n        if (val) {\n          this.ruleForm.postPoolDetailId = null;\n          this.ruleForm.roleId = null;\n          this.getPostList(val);\n        }\n      } else {\n        this.changeFlag = true;\n      }\n    },\n    editRange: function editRange() {\n      this.$router.push({\n        name: 'UserFrame',\n        query: {\n          id: this.$route.query.id,\n          refreshRouterName: 'Person',\n          tab: 'userOrg',\n          showTag: 0\n        },\n        params: {\n          id: this.$route.query.id\n        }\n      });\n    }\n  }\n};\nexports.default = _default;",null]}