{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\zggl\\organization\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\zggl\\organization\\index.vue","mtime":1633659850880},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/objectSpread2\"));\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _workerOrg = require(\"@/api/zggl/workerOrg\");\n\nvar _SearchBar = _interopRequireDefault(require(\"@/components/SearchBar\"));\n\nvar _searchData = _interopRequireDefault(require(\"./searchData\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'WorkerOrg',\n  components: {\n    SearchBar: _SearchBar.default\n  },\n  data: function data() {\n    return {\n      size: 'mini',\n      searchData: _searchData.default,\n      // 渲染搜索栏数据\n\n      /* 列表数据相关 */\n      table: {\n        list: [],\n        loading: false\n      }\n    };\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    next(function (vm) {\n      vm.fetchData();\n    });\n  },\n  methods: {\n    /**\r\n     * @description: 获取列表数据、搜索数据\r\n     * @return {*}\r\n     */\n    fetchData: function () {\n      var _fetchData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var postData, response, data, default_options, personTypeOptions, postTypeOptions;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.table.loading = true;\n                _context.prev = 1;\n                // 获取请求参数\n                postData = this.getSearchData(); // 请求开始\n\n                _context.next = 5;\n                return (0, _workerOrg.getWorkerOrganizationList)((0, _objectSpread2.default)({}, postData));\n\n              case 5:\n                response = _context.sent;\n                data = response.data; // 初始化数据获取\n\n                _context.next = 9;\n                return (0, _workerOrg.getDefaultOptions)();\n\n              case 9:\n                default_options = _context.sent;\n                personTypeOptions = default_options.personTypeOptions, postTypeOptions = default_options.postTypeOptions;\n                personTypeOptions.forEach(function (ele) {\n                  // 人员类别选项数据转换\n                  ele.label = ele.name;\n                });\n                postTypeOptions.forEach(function (ele) {\n                  // 职务选项数据转换\n                  ele.label = ele.name;\n                }); // 搜索栏数据初始化\n\n                this.searchData = this.searchData.map(function (item) {\n                  item.options = item.name === 'posts' ? postTypeOptions : item.options;\n                  return item;\n                }); // 列表数据初始化\n\n                this.table.list = data;\n                _context.next = 20;\n                break;\n\n              case 17:\n                _context.prev = 17;\n                _context.t0 = _context[\"catch\"](1);\n                console.log('fetchData:请求列表数据失败，错误信息：', _context.t0);\n\n              case 20:\n                _context.prev = 20;\n                this.table.loading = false;\n                return _context.finish(20);\n\n              case 23:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 17, 20, 23]]);\n      }));\n\n      function fetchData() {\n        return _fetchData.apply(this, arguments);\n      }\n\n      return fetchData;\n    }(),\n\n    /**\r\n     * @description: 搜索栏数据转换\r\n     * @return {Object} request数据\r\n     */\n    getSearchData: function getSearchData() {\n      var data = {};\n      this.searchData.forEach(function (item) {\n        // if (item.name === 'year') {\n        //   data['year'] = new Date(item.value).getFullYear()\n        // } else {\n        //   data[item.name] = item.value\n        // }\n        data[item.name] = item.value;\n      });\n      return data;\n    },\n\n    /**\r\n     * @description: 搜索回调\r\n     */\n    handelSearch: function handelSearch() {\n      this.fetchData();\n    },\n\n    /**\r\n     * @description: 路由到详情页\r\n     * @param {*} row\r\n     */\n    handleDetails: function handleDetails(row) {\n      this.$router.push({\n        name: 'WorkerOrgDetails',\n        query: {\n          id: row.id,\n          refreshRouterName: this.$route.name\n        }\n      });\n    },\n\n    /**\r\n     * @description: table编辑\r\n     * @param {Object} id\r\n     */\n    handleEdit: function handleEdit(id) {\n      this.$router.push({\n        name: 'WorkerOrgEdit',\n        query: {\n          id: id,\n          refreshRouterName: this.$route.name\n        }\n      });\n    }\n  }\n};\nexports.default = _default;",null]}