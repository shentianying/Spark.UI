{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\jcsj\\dictionary.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\jcsj\\dictionary.vue","mtime":1629255194278},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.set\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/toConsumableArray\"));\n\nvar _dictionary = require(\"@/api/xtgl/dictionary\");\n\nvar _dictionaryEdit = _interopRequireDefault(require(\"./dictionaryEdit\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import { getTree } from '@/utils/index'\nvar _default = {\n  name: 'Dictionary',\n  components: {\n    DictionaryEdit: _dictionaryEdit.default\n  },\n  data: function data() {\n    return {\n      list: [],\n      listLoading: false,\n      dialogTableVisible: false,\n      currentRow: null,\n      postTypeList: [],\n      total: 0,\n      currentPage: 1,\n      pageSize: 10,\n      searchText: '',\n      comName: 'DictionaryEdit'\n    };\n  },\n  mounted: function mounted() {\n    this.fetchData();\n  },\n  methods: {\n    fetchData: function fetchData() {\n      var _this = this;\n\n      this.listLoading = true;\n      var postData = {};\n      postData.currentPage = this.currentPage;\n      postData.pageSize = this.pageSize;\n      postData.type = this.searchText;\n      (0, _dictionary.getDictionaryPaging)(postData).then(function (response) {\n        var data1 = response.data1,\n            data2 = response.data2,\n            count = response.count;\n        _this.list = data1;\n        _this.total = count; // data2\n\n        if (data2) {\n          var newTypeList = (0, _toConsumableArray2.default)(new Set(data2.map(function (m) {\n            return m.type;\n          }))); // 类型 去重\n\n          newTypeList = newTypeList.map(function (m) {\n            return {\n              type: m\n            };\n          });\n          newTypeList.forEach(function (e) {\n            var findData = data2.find(function (f) {\n              return f.type === e.type && f.typeName !== '';\n            });\n\n            if (findData) {\n              e.typeName = findData.typeName;\n            } else {\n              e.typeName = '';\n            }\n          });\n          _this.postTypeList = newTypeList;\n        }\n\n        _this.listLoading = false;\n      });\n    },\n    dialogClose: function dialogClose() {\n      this.dialogTableVisible = false;\n      this.fetchData();\n    },\n    handleDelete: function handleDelete() {},\n    sizeChange: function sizeChange(val) {\n      this.pageSize = val;\n      this.fetchData();\n    },\n    handleEdit: function handleEdit(row) {\n      this.currentRow = row;\n      this.dialogTableVisible = true;\n    },\n    handleAdd: function handleAdd() {\n      this.currentRow = null;\n      this.dialogTableVisible = true;\n    },\n    goSearch: function goSearch() {\n      this.fetchData();\n    }\n  }\n};\nexports.default = _default;",null]}