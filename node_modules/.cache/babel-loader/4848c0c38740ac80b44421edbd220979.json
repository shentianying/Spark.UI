{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\jcsj\\accountSet.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\jcsj\\accountSet.vue","mtime":1635216068842},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _accountSet = require(\"@/api/xtgl/accountSet\");\n\nvar _accountSetAdd = _interopRequireDefault(require(\"./accountSetAdd\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'AccountSet',\n  components: {\n    AccountSetAdd: _accountSetAdd.default\n  },\n  data: function data() {\n    return {\n      list: null,\n      listLoading: true,\n      dialogTableVisible: false,\n      dialogTitle: '保存',\n      total: 0,\n      currentPage: 1,\n      pageSize: this.utils.getPersonalSettings().pageSize,\n      currentRow: null\n    };\n  },\n  mounted: function mounted() {\n    this.fetchData();\n  },\n  methods: {\n    fetchData: function fetchData() {\n      var _this = this;\n\n      this.listLoading = true;\n      var postData = {};\n      postData.currentPage = this.currentPage;\n      postData.pageSize = this.pageSize;\n      postData.isMenu = true;\n      (0, _accountSet.getAccountSet)(postData).then(function (response) {\n        _this.list = response.data;\n        _this.listLoading = false;\n      }).catch(function () {\n        _this.listLoading = false;\n      });\n    },\n    dialogClose: function dialogClose() {\n      this.dialogTableVisible = false;\n      this.fetchData();\n    },\n    handleAdd: function handleAdd() {\n      this.currentRow = null;\n      this.dialogTableVisible = true;\n    },\n    handleEdit: function handleEdit(row) {\n      this.currentRow = row;\n      this.dialogTableVisible = true;\n    } // handleDelete() {\n    //   if (!this.currentRow) {\n    //     this.$message.warning('请选中行')\n    //     return false\n    //   }\n    //   this.$confirm('是否继续?', '提示', {\n    //     confirmButtonText: '确定',\n    //     cancelButtonText: '取消',\n    //     type: 'warning'\n    //   }).then(() => {\n    //     deleteAccountSet({ id: this.currentRow.id }).then(response => {\n    //       this.fetchData()\n    //       this.$message.success('删除成功')\n    //     })\n    //   }).catch(() => {\n    //     this.$message.success('已经取消删除')\n    //   })\n    // },\n    // handleCurrentChange(val) {\n    //   this.currentRow = val\n    // }\n\n  }\n};\nexports.default = _default;",null]}