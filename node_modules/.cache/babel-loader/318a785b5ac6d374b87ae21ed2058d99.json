{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\zjgl\\FundAllocation\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\zjgl\\FundAllocation\\edit.vue","mtime":1635216068779},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/objectSpread2\"));\n\nvar _FundAllocation = require(\"@/api/cwgl/zjgl/FundAllocation.js\");\n\nvar _flowSelect = _interopRequireDefault(require(\"@/components/Flow/flowSelect\"));\n\nvar _validate = require(\"@/utils/validate\");\n\nvar _MyForm = _interopRequireDefault(require(\"@/components/MyForm\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'ZiJinDiaoBoEdit',\n  components: {\n    FlowSelect: _flowSelect.default,\n    MyForm: _MyForm.default\n  },\n  data: function data() {\n    return {\n      size: 'mini',\n      active: 1,\n      // 提交进度 1: 编辑信息 2: 编辑审批流程\n      dialogParam: {\n        // dialog的配置参数集合\n        title: '选择承兑',\n        // 标题\n        show: false,\n        // 是否显示\n        type: 1 // 显示类型，1：承兑信息\n\n      },\n      zjdbForm: {\n        id: 0,\n        billFlow: null,\n        // 流程数据\n        orgId: '',\n        // 调出部门\n        orgIdIn: '',\n        // 调入部门\n        number: '',\n        // 收款编号\n        capitalType: '',\n        // 资金形式id\n        remark: '',\n        // 备注\n        amount: '',\n        // 金额\n        state: 0 // 状态 0:制单;1:审批;1000:支付;10000:完成;-1:作废\n\n      },\n      zjxsData: [],\n      // 资金形式下拉\n      cdmxData: [],\n      // 承兑明细列表\n      zjcdDate: [],\n      // 未承兑列表\n      cdParams: {\n        currentPage: 1,\n        pageSize: this.utils.getPersonalSettings().pageSize,\n        ticketNumber: '',\n        orgids: []\n      },\n      // 验证规则\n      rules: {\n        orgId: [{\n          required: true,\n          message: '请选择调入部门',\n          trigger: 'change'\n        }],\n        orgIdIn: [{\n          required: true,\n          message: '请选择调出部门',\n          trigger: 'change'\n        }],\n        capitalType: [{\n          required: true,\n          message: '请选择资金形式',\n          trigger: 'change'\n        }],\n        amount: [{\n          required: true,\n          message: '请输入金额',\n          trigger: 'blur'\n        }, {\n          validator: _validate.validate.money,\n          message: '金额格式不正确',\n          trigger: 'blur'\n        }, {\n          validator: _validate.validate.max_amount,\n          message: '超过所能存储的最大金额'\n        }]\n      }\n    };\n  },\n  computed: {\n    /**\r\n     * 计算是否是承兑\r\n     */\n    isChengdui: function isChengdui() {\n      var capitalType = this.zjdbForm.capitalType;\n      return capitalType === 2 || capitalType === 3;\n    },\n    title: function title() {\n      var active = this.active;\n      return active === 2 ? '审批流程' : '资金调拨信息';\n    },\n\n    /**\r\n     * 处理form表单的数据\r\n     */\n    formNodeData: function formNodeData() {\n      return [{\n        label: '编码:',\n        keyword: 'number',\n        monopolize: true,\n        props: {\n          disabled: true,\n          placeholder: '系统自动生成'\n        }\n      }, {\n        label: '调出部门:',\n        keyword: 'orgId',\n        component: 'OrgSelect',\n        props: {\n          dataMode: 1,\n          collapseTags: true,\n          showAllLevels: false,\n          filterable: true,\n          expandTrigger: 'hover',\n          placeholder: '请选择调出部门',\n          checkStrictly: true\n        }\n      }, {\n        label: '调入部门:',\n        keyword: 'orgIdIn',\n        component: 'OrgSelect',\n        props: {\n          dataMode: 1,\n          collapseTags: true,\n          showAllLevels: false,\n          filterable: true,\n          expandTrigger: 'hover',\n          placeholder: '请选择调入部门',\n          checkStrictly: true\n        }\n      }, {\n        label: '资金形式:',\n        keyword: 'capitalType',\n        component: 'CapitalSelect',\n        props: {\n          multiple: false,\n          showAllLevels: false\n        }\n      }, {\n        label: '金额:',\n        keyword: 'amount'\n      }, {\n        label: '备注:',\n        keyword: 'remark',\n        monopolize: true,\n        props: {\n          type: 'textarea'\n        }\n      }];\n    }\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    next(function (vm) {\n      var newId = vm.$route.query.id;\n      var oldId = vm.zjdbForm.id;\n\n      if (newId && newId !== oldId) {\n        // 说明是打开另一个单子的编辑页面\n        vm.zjdbForm.id = newId;\n        vm.getZjdbForm();\n        vm.active = 1;\n      } else if (!newId && oldId) {\n        // 说明是打开一个新建页面\n        Object.assign(vm.$data, vm.$options.data());\n        vm.$nextTick(function () {\n          var _vm$$refs$ruleForm;\n\n          (_vm$$refs$ruleForm = vm.$refs['ruleForm']) === null || _vm$$refs$ruleForm === void 0 ? void 0 : _vm$$refs$ruleForm.resetFields();\n        });\n      }\n    });\n  },\n  methods: {\n    /**\r\n     * 修改填报进度\r\n     */\n    setActive: function setActive(active) {\n      this.active = active;\n    },\n\n    /**\r\n     * 下一步\r\n     */\n    nextStep: function nextStep(formName) {\n      var _this = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          // 获取流程数据\n          var _this$zjdbForm = _this.zjdbForm,\n              state = _this$zjdbForm.state,\n              billFlow = _this$zjdbForm.billFlow;\n          var req = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, _this.zjdbForm), {}, {\n            state: state || 0\n          });\n          if (billFlow) req.billFlowId = billFlow.id;\n          delete req.billFlow;\n          delete req.number;\n          (0, _FundAllocation.GetBillFlow)(req).then(function (_ref) {\n            var data = _ref.data,\n                success = _ref.success,\n                message = _ref.message;\n\n            if (success) {\n              _this.zjdbForm.billFlow = data.billFlow;\n\n              _this.setActive(2);\n            } else {\n              _this.$message.error(message);\n            }\n          });\n        }\n      });\n    },\n\n    /**\r\n     * 当选择承兑以后金额变成0\r\n     */\n    capitalTypeChange: function capitalTypeChange() {\n      if (this.isChengdui) this.zjdbForm.amount = 0;\n    },\n\n    /**\r\n     * 获取资金调拨数据\r\n     */\n    getZjdbForm: function getZjdbForm() {\n      var _this2 = this;\n\n      (0, _FundAllocation.GetFundAllocationById)(this.zjdbForm.id).then(function (res) {\n        if (res.code === 200) {\n          for (var key in _this2.zjdbForm) {\n            _this2.zjdbForm[key] = res.data[key];\n          }\n\n          _this2.zjdbForm.billFlow = res.billFlowData;\n          console.log(_this2.zjdbForm, 110);\n        }\n      });\n    },\n    // 作废\n    invalidForm: function invalidForm() {\n      var _this3 = this;\n\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        return (0, _FundAllocation.DeleteFundAllocation)(_this3.zjdbForm.id);\n      }).then(function () {\n        _this3.$message.success('操作成功');\n\n        _this3.back();\n      });\n    },\n\n    /**\r\n     * 提交表单\r\n     * @param {Number} state 提交类型，0：保存；1：提交\r\n     */\n    submitForm: function submitForm(state) {\n      var _this4 = this;\n\n      var req = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, this.zjdbForm), {}, {\n        state: state\n      });\n      delete req.number;\n\n      if (this.zjdbForm.billFlow) {\n        // 获取流程组件中的数据\n        var billFlow = this.$refs.flowSelect.getBillFlow();\n\n        if (!billFlow) {\n          return false;\n        }\n\n        req.billFlow = billFlow;\n      } else {\n        this.$message.error('流程数据不能为空');\n        return;\n      }\n\n      if (req.id) {\n        (0, _FundAllocation.PutFundAllocation)(req).then(function (res) {\n          _this4.$message.success('保存成功');\n\n          _this4.back();\n        });\n      } else {\n        (0, _FundAllocation.AddFundAllocation)(req).then(function () {\n          _this4.$message.success('提交成功');\n\n          _this4.back();\n        });\n      }\n    },\n\n    /**\r\n     * 返回上一页，并关闭当前页\r\n     */\n    back: function back() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    }\n  }\n};\nexports.default = _default;",null]}