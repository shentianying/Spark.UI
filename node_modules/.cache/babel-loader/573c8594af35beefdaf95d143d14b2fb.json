{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\ggzx\\grgl\\worker\\transfer\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\ggzx\\grgl\\worker\\transfer\\edit.vue","mtime":1635749455675},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/objectSpread2\"));\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _workerTransfer = require(\"@/api/ggzx/workerTransfer\");\n\nvar _UpFile = _interopRequireDefault(require(\"@/components/UpLoad/UpFile\"));\n\nvar _flowSelect = _interopRequireDefault(require(\"@/components/Flow/flowSelect\"));\n\nvar _flowDisplay = _interopRequireDefault(require(\"@/components/Flow/flowDisplay\"));\n\nvar _flowAttitude = _interopRequireDefault(require(\"@/components/Flow/flowAttitude\"));\n\nvar _index = _interopRequireDefault(require(\"@/components/OrgSelect/index2\"));\n\nvar _selectWorker = _interopRequireDefault(require(\"@/components/Other/ggzx/selectWorker2.vue\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'WorkerTransferEdit',\n  components: {\n    UpFile: _UpFile.default,\n    FlowSelect: _flowSelect.default,\n    FlowDisplay: _flowDisplay.default,\n    FlowAttitude: _flowAttitude.default,\n    OrgSelect2: _index.default,\n    SelectWorker2: _selectWorker.default\n  },\n  data: function data() {\n    return {\n      id: null,\n      ruleForm: {\n        id: 0,\n        number: '',\n        orgInId: null,\n        orgOutId: null,\n        workerId: null,\n        worker: {\n          id: null,\n          number: '',\n          name: ''\n        },\n        date: null,\n        remark: '',\n        fileList: []\n      },\n      workerList: [],\n      orgIdList: [],\n      disabled: false,\n      loading: false,\n      activate: true,\n      active: 0,\n      dialogTableVisible: false,\n      dialogTitle: '保存',\n      dialogWidth: '70%',\n      comName: 'PlanDetailAdd',\n      currentRow: null,\n      billFlow: null,\n      isLoad: false,\n      attitudePara: {},\n      fileListKey: 0,\n      orgOutKey: 0,\n      rules: {\n        orgInId: [{\n          required: true,\n          message: '请选择',\n          trigger: 'change'\n        }],\n        orgOutId: [{\n          required: true,\n          message: '请选择',\n          trigger: 'change'\n        }],\n        date: [{\n          required: true,\n          message: '请选择',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  watch: {\n    // 'ruleForm.exitDate': {\n    //   handler: function(value, oldvalue) {\n    //     if (value !== oldvalue && oldvalue !== null) {\n    //       this.list.forEach(e => {\n    //         e.exitDate = value\n    //       })\n    //     }\n    //   }, deep: true\n    // }\n    'ruleForm.orgOutId': {\n      handler: function handler(value, oldvalue) {\n        if (value !== null) {\n          var ids = [];\n          ids.push(value);\n          this.orgIdList = ids;\n        }\n      },\n      deep: true\n    }\n  },\n  activated: function activated() {},\n  mounted: function mounted() {\n    this.initData();\n  },\n  methods: {\n    initData: function () {\n      var _initData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.$route.query.id) {\n                  this.id = this.$route.query.id;\n                }\n\n                if (!this.id) {\n                  _context.next = 6;\n                  break;\n                }\n\n                this.loading = true;\n                this.activate = false; // 销毁部门组件\n\n                _context.next = 6;\n                return (0, _workerTransfer.getFormById)({\n                  id: this.id\n                }).then(function (response) {\n                  return _this.setData(response);\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function initData() {\n        return _initData.apply(this, arguments);\n      }\n\n      return initData;\n    }(),\n    setData: function setData(response) {\n      this.fileListKey++;\n      var data = response.data;\n      this.ruleForm = data;\n      this.ruleForm.fileList = data.upFile;\n      var workers = [];\n      workers.push(this.ruleForm.worker);\n      this.workerList = workers; // this.billFlow = billFlowData\n      // this.attitudePara = { formId: billFlowData.formId, billFlowId: data.billFlowId, planId: data.id }\n\n      this.isLoad = true;\n      this.loading = false; // loading 状态关闭\n\n      this.activate = true; // 加载部门组件\n    },\n    closeThePage: function closeThePage() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    },\n    updateFlow: function updateFlow() {\n      this.closeThePage();\n    },\n    // 根据表单获取流程\n    getDynamicFlow: function getDynamicFlow() {\n      var _this2 = this;\n\n      this.$refs['ruleForm'].validate(function (valid) {\n        if (valid) {\n          _this2.loading = true;\n          var postData = (0, _objectSpread2.default)({}, _this2.ruleForm);\n          console.log(postData);\n          (0, _workerTransfer.getBillFlow)(postData).then(function (response) {\n            _this2.loading = false;\n\n            if (response.success) {\n              _this2.billFlow = response.data.billFlow;\n              _this2.active = 1;\n            } else {\n              _this2.$message(response.message);\n            }\n          }).catch(function () {\n            _this2.loading = false;\n          });\n        }\n      });\n    },\n    previous: function previous() {\n      // 上一步\n      this.active = 0;\n      this.billFlow = null;\n    },\n    submitForm: function submitForm(state) {\n      var _this3 = this;\n\n      // 提交审批流程\n      this.$refs['ruleForm'].validate(function (valid) {\n        if (valid) {\n          _this3.loading = true;\n          _this3.ruleForm.state = state;\n\n          var billFlow = _this3.$refs.flowSelect.getBillFlow();\n\n          console.log('获取的billFlow:', billFlow);\n          _this3.ruleForm.billFlow = billFlow;\n          var newObj = JSON.parse(JSON.stringify(_this3.ruleForm));\n          var postdata = {\n            id: newObj.id,\n            orgInId: newObj.orgInId,\n            orgOutId: newObj.orgOutId,\n            workerId: newObj.worker.id,\n            date: newObj.date,\n            remark: newObj.remark,\n            fileList: newObj.fileList,\n            state: newObj.state,\n            billFlow: billFlow\n          };\n          (0, _workerTransfer.saveData)(postdata).then(function (response) {\n            _this3.closeThePage();\n          });\n        }\n      });\n    },\n\n    /**\r\n     * 选择工人\r\n     */\n    checkWorker: function checkWorker() {\n      var _this4 = this;\n\n      this.$refs['ruleForm'].validate(function (valid) {\n        if (valid) {\n          _this4.$refs.workerRef.openDialog();\n        }\n      });\n    },\n    getPersons: function getPersons(personList) {\n      if ((personList || []).length > 0) {\n        // const data = []\n        // personList.forEach(person => {\n        //   data.push({\n        //     worker: {\n        //       id: person.id,\n        //       year: person.year,\n        //       number: person.number,\n        //       name: person.name,\n        //       organization: person.organization,\n        //       idNumber: person.idNumber\n        //     },\n        //     exitReason: this.ruleForm.exitReason,\n        //     exitDate: this.ruleForm.exitDate,\n        //     remark: ''\n        //   })\n        // })\n        // this.list = data\n        this.ruleForm.worker = personList[0];\n        this.ruleForm.orgOutId = personList[0].organization.id;\n        this.ruleForm.workerId = personList[0].id;\n        var workers = [];\n        workers.push(personList[0]);\n        this.workerList = workers;\n        this.orgOutKey++;\n      }\n    },\n    cancel: function cancel() {\n      var _this5 = this;\n\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this5.loading = true;\n        (0, _workerTransfer.deleteData)({\n          id: _this5.ruleForm.id\n        }).then(function (response) {\n          _this5.$message(response.message);\n\n          _this5.loading = false;\n\n          _this5.closeThePage();\n        });\n      }).catch(function () {});\n    }\n  }\n};\nexports.default = _default;",null]}