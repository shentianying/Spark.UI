{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\ggzx\\grgl\\workerWhitelist\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\ggzx\\grgl\\workerWhitelist\\edit.vue","mtime":1635749455688},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _workerWhitelist = require(\"@/api/ggzx/workerWhitelist\");\n\nvar _worker = require(\"@/api/ggzx/worker\");\n\nvar _UpFile = _interopRequireDefault(require(\"@/components/UpLoad/UpFile\"));\n\nvar _validate = require(\"@/utils/validate\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default2 = {\n  name: 'WorkerWhitelistEdit',\n  components: {\n    UpFile: _UpFile.default\n  },\n  props: {\n    obj: {\n      type: Object,\n      default: null\n    },\n    list: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      ruleForm: {\n        id: 0,\n        year: null,\n        number: '',\n        name: '',\n        idNumber: '',\n        type: null,\n        reason: '',\n        fileList: [],\n        remark: ''\n      },\n      whitelistTypeList: null,\n      yearList: [],\n      disabled: false,\n      buttonLoading: false,\n      isLoad: false,\n      rules: {\n        // path: [{ required: true, message: '请输入活动名称', trigger: 'blur' }],\n        year: [{\n          required: true,\n          message: '请选择',\n          trigger: 'blur'\n        }],\n        idNumber: [{\n          required: true,\n          message: '请输入',\n          trigger: 'blur'\n        }],\n        reason: [{\n          required: true,\n          message: '请输入',\n          trigger: 'blur'\n        }] // component: [\n        //   { required: true, message: '请选择活动区域', trigger: 'blur' }\n        // ]\n\n      }\n    };\n  },\n  wathch: {},\n  mounted: function mounted() {\n    this.initData();\n  },\n  methods: {\n    submitForm: function submitForm(formName) {\n      var _this = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          if (!_validate.validateData.idCode(_this.ruleForm.idNumber).isSuccess) {\n            _this.$message.error(_validate.validateData.idCode(_this.ruleForm.idNumber).msg);\n\n            return false;\n          } else {\n            var newObj = JSON.parse(JSON.stringify(_this.ruleForm));\n            _this.buttonLoading = true;\n            var postData = {\n              id: newObj.id,\n              year: newObj.year,\n              number: newObj.number,\n              name: newObj.name,\n              idNumber: newObj.idNumber,\n              type: newObj.type,\n              reason: newObj.reason,\n              remark: newObj.remark,\n              fileList: newObj.fileList\n            };\n            (0, _workerWhitelist.saveData)(postData).then(function (response) {\n              _this.$message(response.message);\n\n              _this.buttonLoading = false;\n\n              _this.$emit('dialogClose');\n            }).catch(function () {\n              _this.buttonLoading = false;\n            });\n          }\n        }\n      });\n    },\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    initData: function initData() {\n      var _this2 = this;\n\n      if (this.obj) {\n        var newObj = JSON.parse(JSON.stringify(this.obj)); // this.ruleForm = newObj\n\n        (0, _workerWhitelist.getFormById)({\n          id: newObj.id\n        }).then(function (response) {\n          return _this2.setData(response);\n        });\n      }\n\n      this.whitelistTypeList = this.list;\n      (0, _worker.getDefaultOptions)().then(function (op) {\n        var yearOptions = op.yearOptions;\n        _this2.yearList = yearOptions;\n      });\n    },\n    setData: function setData(response) {\n      this.fileListKey++;\n      this.buttonLoading = true;\n      var data = response.data,\n          fileList = response.fileList;\n      this.ruleForm = data;\n      this.ruleForm.fileList = fileList;\n      this.disabled = true;\n      this.buttonLoading = false;\n    },\n    handleDelete: function handleDelete(id) {\n      var _this3 = this;\n\n      this.$confirm('确定要移除吗?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this3.buttonLoading = true;\n        (0, _workerWhitelist.deleteData)({\n          id: id\n        }).then(function (res) {\n          if (res.code === 200) {\n            _this3.$message.success(res.message);\n\n            _this3.buttonLoading = false;\n\n            _this3.$emit('dialogClose');\n          } else {\n            _this3.$message.error(res.message);\n\n            _this3.buttonLoading = false;\n\n            _this3.$emit('dialogClose');\n          }\n        }).finally(function () {\n          _this3.listLoading = false;\n        });\n      });\n    }\n  }\n};\nexports.default = _default2;",null]}