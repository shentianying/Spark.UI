{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\mbcb\\targetCostDetailAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\mbcb\\targetCostDetailAdd.vue","mtime":1627105574179},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.array.find\");\n\nvar _material = require(\"@/api/cggl/material\");\n\nvar _index = require(\"@/utils/index\");\n\nvar _validate = require(\"@/utils/validate\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'TargetCostDetailAdd',\n  components: {},\n  props: {\n    obj: {\n      type: Object,\n      default: null\n    } // swcbDetails: {\n    //   type: Array,\n    //   default: null\n    // }\n\n  },\n  data: function data() {\n    return {\n      ruleForm: {\n        categoryId: null,\n        category: null,\n        unit: '',\n        unit2: '',\n        brand: '',\n        model: '',\n        spec: '',\n        thickness: '',\n        texture: '',\n        surfaceTreatment: '',\n        designNumber: '',\n        // fileList: [],\n        targetCostQuantity: null,\n        targetCostPrice: null,\n        targetCostAmount: null,\n        // businessCostDetailId: null,\n        remark: '',\n        businessCostDetail: null // confirmTime: null,\n        // processOrgId: null,\n        // processUser: null,\n        // enteredQuantity: null\n\n      },\n      buttonLoading: false,\n      comName: '',\n      list: null,\n      categoryList: null,\n      categoryPropertyList: null,\n      oldrProperty: {},\n      options: null,\n      rules: {\n        categoryId: [{\n          required: true,\n          message: '请选择',\n          trigger: 'change'\n        }],\n        targetCostQuantity: [{\n          validator: _validate.validate.logic,\n          logic: function logic(value) {\n            return value > 0;\n          },\n          required: true,\n          trigger: 'blur'\n        }],\n        targetCostPrice: [{\n          validator: _validate.validate.logic,\n          logic: function logic(value) {\n            return value > 0;\n          },\n          required: true,\n          trigger: 'blur'\n        }],\n        targetCostAmount: [{\n          validator: _validate.validate.logic,\n          logic: function logic(value) {\n            return value > 0;\n          },\n          required: true,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: {\n    getEndCategoryId: function getEndCategoryId() {\n      // 获取categoryId数 组中最后一个 id\n      return this.ruleForm.categoryId[this.ruleForm.categoryId.length - 1];\n    }\n  },\n  watch: {\n    'ruleForm.targetCostPrice': {\n      handler: function handler(value) {\n        this.ruleForm.targetCostAmount = this.ruleForm.targetCostQuantity * value;\n      },\n      immediate: true\n    },\n    'ruleForm.targetCostQuantity': {\n      handler: function handler(value) {\n        this.ruleForm.targetCostAmount = this.ruleForm.targetCostPrice * value;\n      },\n      immediate: true\n    }\n  },\n  created: function created() {},\n  mounted: function mounted() {\n    this.initData();\n  },\n  methods: {\n    submitForm: function submitForm(formName) {\n      var _this = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var newObj = _this.ruleForm; // 获取级联数组中的最后一个id,就是当前选中的最末级的分类id\n\n          var computerCategoryId = newObj.categoryId[newObj.categoryId.length - 1];\n          newObj.category = _this.categoryList.find(function (f) {\n            return f.id === computerCategoryId;\n          });\n          newObj.categoryId = computerCategoryId;\n\n          if (newObj.category.level !== 3) {\n            _this.$message.error('选择的材料必须是三级分类');\n\n            return false;\n          } // console.log('提交的数据：', newObj)\n\n\n          if (_this.obj) {\n            _this.$emit('dialogClose', newObj, 'update');\n          } else {\n            _this.$emit('dialogClose', newObj, 'add');\n          }\n        }\n      });\n    },\n    initData: function initData() {\n      var _this2 = this;\n\n      var promise = this.getCategory();\n\n      if (this.obj) {\n        promise.then(function () {\n          var newObj = JSON.parse(JSON.stringify(_this2.obj)); // console.log('newObj:', newObj)\n\n          _this2.ruleForm = newObj; // 拼接id成三级数组，来匹配 选材料 级联菜单\n\n          var categoryIdArray = [];\n\n          var secondCategoryId = _this2.categoryList.find(function (f) {\n            return f.id === _this2.ruleForm.categoryId;\n          }).pid;\n\n          var firstCategoryId = _this2.categoryList.find(function (f) {\n            return f.id === secondCategoryId;\n          }).pid;\n\n          categoryIdArray.push(firstCategoryId);\n          categoryIdArray.push(secondCategoryId);\n          categoryIdArray.push(_this2.ruleForm.categoryId);\n          _this2.ruleForm.categoryId = categoryIdArray;\n\n          _this2.getCategoryInfo();\n        });\n      }\n    },\n    getCategoryInfo: function getCategoryInfo() {\n      var _this3 = this;\n\n      // 材料级联，最后一个id 才是选中的id\n      var computerCategoryId = this.ruleForm.categoryId[this.ruleForm.categoryId.length - 1];\n      (0, _material.getMaterialCategoryPropertyByCategoryId)({\n        categoryId: computerCategoryId\n      }).then(function (response) {\n        var data = response.data; // categoryId v-model 改变了，还要改变的category对象\n\n        var categoryObject = _this3.categoryList.find(function (f) {\n          return f.id === computerCategoryId;\n        });\n\n        _this3.ruleForm.category = {\n          id: categoryObject.id,\n          name: categoryObject.name,\n          unit: categoryObject.unit,\n          isMain: categoryObject.isMain\n        }; // 上次选择的数据\n\n        _this3.oldrProperty.unit = _this3.ruleForm.unit;\n        _this3.oldrProperty.unit2 = _this3.ruleForm.unit2;\n        _this3.oldrProperty.brand = _this3.ruleForm.brand;\n        _this3.oldrProperty.model = _this3.ruleForm.model;\n        _this3.oldrProperty.spec = _this3.ruleForm.spec;\n        _this3.oldrProperty.thickness = _this3.ruleForm.thickness;\n        _this3.oldrProperty.texture = _this3.ruleForm.texture;\n        _this3.oldrProperty.surfaceTreatment = _this3.ruleForm.surfaceTreatment;\n        _this3.oldrProperty.designNumber = _this3.ruleForm.designNumber; // 清空数据\n\n        _this3.empty(); // 遍历获得选中分类的分类属性\n\n\n        var _iterator = (0, _createForOfIteratorHelper2.default)(data),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var row = _step.value;\n            var oldvalue = _this3.oldrProperty[row.property.materialField]; // 分类属性中的选项的名称 是否等于 上次选择的分类属性的名称\n\n            _this3.ruleForm[row.property.materialField] = oldvalue;\n\n            if (row.mcpItem.length === 1) {\n              _this3.ruleForm[row.property.materialField] = row.mcpItem[0].name;\n            }\n          } // 绑定属性\n\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        _this3.categoryPropertyList = data;\n      }).catch(function () {});\n    },\n    empty: function empty() {\n      this.ruleForm.unit = '';\n      this.ruleForm.unit2 = '';\n      this.ruleForm.brand = '';\n      this.ruleForm.model = '';\n      this.ruleForm.spec = '';\n      this.ruleForm.thickness = '';\n      this.ruleForm.texture = '';\n      this.ruleForm.surfaceTreatment = '';\n      this.ruleForm.designNumber = '';\n    },\n    getCategory: function getCategory(query) {\n      var _this4 = this;\n\n      var pro1 = new Promise(function (resolve, reject) {\n        (0, _material.getAllMaterialCategory)({\n          name: query\n        }).then(function (response) {\n          var data = response.data;\n          data.forEach(function (e) {\n            e.pid = e.pId;\n            e.label = e.name;\n            e.value = e.id;\n            delete e.pId;\n          });\n          _this4.categoryList = data;\n          _this4.options = (0, _index.getTree)(0, data);\n          resolve();\n        }).catch(function () {\n          reject();\n        });\n      });\n      return pro1; // }\n    } // getBusinessCostInfo() {\n    //   // 商务成本明细对应的材料ID\n    //   if (this.ruleForm.businessCostDetailId) {\n    //     var newObj = this.swcbDetails.find(s => s.id === this.ruleForm.businessCostDetailId)\n    //     this.ruleForm.categoryId = newObj.materialCategoryId\n    //     this.ruleForm.businessCostDetail = newObj\n    //     // 拼接id成三级数组，来匹配 选材料 级联菜单\n    //     var categoryIdArray = []\n    //     var secondCategoryId = this.categoryList.find(f => f.id === this.ruleForm.categoryId).pid\n    //     var firstCategoryId = this.categoryList.find(f => f.id === secondCategoryId).pid\n    //     categoryIdArray.push(firstCategoryId)\n    //     categoryIdArray.push(secondCategoryId)\n    //     categoryIdArray.push(this.ruleForm.categoryId)\n    //     this.ruleForm.categoryId = categoryIdArray\n    //     this.getCategoryInfo()\n    //   }\n    // }\n\n  }\n};\nexports.default = _default;",null]}