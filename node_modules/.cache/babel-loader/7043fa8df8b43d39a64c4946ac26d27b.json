{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\quotation\\quotationSupplier.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\quotation\\quotationSupplier.vue","mtime":1628756195069},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _quotation = require(\"@/api/cggl/quotation\");\n\nvar _dictionary = require(\"@/api/xtgl/dictionary\");\n\nvar _index = _interopRequireDefault(require(\"@/components/OrgSelect/index2\"));\n\nvar _validate = require(\"@/utils/validate\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'QuotationSupplier',\n  components: {\n    OrgSelect2: _index.default\n  },\n  props: {\n    obj: {\n      type: Object,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      supplierForm: {\n        supplierId: null\n      },\n      priceListSuppliers: [],\n      ruleForm: {},\n      loading: false,\n      showbuttons: false,\n      // 附件页面\n      dialogTableVisible: false,\n      dialogTitle: '保存',\n      dialogWidth: '70%',\n      currentRow: null,\n      // 材料明细\n      list: [],\n      // 付款方式明细\n      paymodel: {\n        rules: {\n          requirement: [{\n            required: true,\n            message: '请输入',\n            trigger: 'blur'\n          }],\n          days: [{\n            validator: _validate.validate.logic,\n            logic: function logic(value) {\n              return value > 0;\n            },\n            required: true,\n            trigger: 'blur'\n          }],\n          scale: [{\n            validator: _validate.validate.logic,\n            logic: function logic(value) {\n              return value > 0;\n            },\n            required: true,\n            trigger: 'blur'\n          }]\n        },\n        list: []\n      },\n      materialModel: {\n        rules: {\n          taxExclusivePrice: [{\n            validator: _validate.validate.logic,\n            logic: function logic(value) {\n              return value > 0;\n            },\n            required: true,\n            trigger: 'blur'\n          }],\n          taxRate: [{\n            validator: _validate.validate.logic,\n            logic: function logic(value) {\n              return value > 0 && value < 1;\n            },\n            required: true,\n            trigger: 'blur'\n          }],\n          taxInclusivePrice: [{\n            validator: _validate.validate.logic,\n            logic: function logic(value) {\n              return value > 0;\n            },\n            required: true,\n            trigger: 'blur'\n          }],\n          taxExclusiveAmount: [{\n            validator: _validate.validate.logic,\n            logic: function logic(value) {\n              return value > 0;\n            },\n            required: true,\n            trigger: 'blur'\n          }],\n          tax: [{\n            validator: _validate.validate.logic,\n            logic: function logic(value) {\n              return value > 0;\n            },\n            required: true,\n            trigger: 'blur'\n          }],\n          taxInclusiveAmount: [{\n            validator: _validate.validate.logic,\n            logic: function logic(value) {\n              return value > 0;\n            },\n            required: true,\n            trigger: 'blur'\n          }]\n        },\n        list: []\n      },\n      fileList: [],\n      // 供应商\n      suppliers: [],\n      // 发票种类\n      receiptTypes: [],\n      keyreceiptType: 0,\n      // 卸车费归属\n      otherPricePays: [],\n      keyotherPricePay: 0,\n      rules: {\n        brand: [{\n          required: true,\n          message: '请输入',\n          trigger: 'blur'\n        }],\n        standardData: [{\n          required: true,\n          message: '请输入',\n          trigger: 'blur'\n        }],\n        receiptType: [{\n          required: true,\n          message: '请选择',\n          trigger: 'blur'\n        }],\n        otherPricePay: [{\n          required: true,\n          message: '请选择',\n          trigger: 'blur'\n        }],\n        amountContain: [{\n          required: true,\n          message: '请输入',\n          trigger: 'blur'\n        }],\n        supplyData: [{\n          required: true,\n          message: '请输入',\n          trigger: 'blur'\n        }],\n        explain: [{\n          required: true,\n          message: '请输入',\n          trigger: 'blur'\n        }],\n        contacts: [{\n          required: true,\n          message: '请输入',\n          trigger: 'blur'\n        }],\n        contactsPhone: [{\n          required: true,\n          message: '请输入',\n          trigger: 'blur'\n        }],\n        remark: [{\n          required: true,\n          message: '请输入',\n          trigger: 'blur'\n        }]\n      },\n      supplierRule: {},\n      active: 0,\n      disabled: false,\n      columnShow: {\n        unit2: true,\n        brand: true,\n        model: true,\n        spec: true,\n        thickness: true,\n        texture: true,\n        surfaceTreatment: true,\n        designNumber: true\n      }\n    };\n  },\n  computed: {\n    getOrgList: function getOrgList() {\n      return this.$store.state.user.info.orgList;\n    }\n  },\n  watch: {},\n  activated: function activated() {// this.initData()\n  },\n  mounted: function mounted() {\n    this.initData();\n  },\n  methods: {\n    saveForm: function saveForm() {},\n    submitForm: function submitForm(state) {\n      var _this = this;\n\n      this.$refs['ruleForm'].validate(function (valid) {\n        if (valid) {\n          _this.$refs['paymodel'].validate(function (val) {\n            if (val) {\n              _this.$refs['materialModel'].validate(function (val2) {\n                if (val2) {\n                  var postData = {};\n                  var newObj = JSON.parse(JSON.stringify(_this.ruleForm)); // 拼接材料明细参数\n\n                  var arr1 = [];\n\n                  _this.materialModel.list.forEach(function (e) {\n                    var item = {};\n                    item = e;\n                    item.quotationSupplierId = _this.obj.id;\n                    item.state = 0;\n                    arr1.push(item);\n                  }); // 拼接付款方式参数\n\n\n                  var arr2 = [];\n\n                  _this.paymodel.list.forEach(function (e) {\n                    var item2 = {};\n                    item2 = e;\n                    item2.quotationId = newObj.quotationId;\n                    item2.quotationSupplierId = _this.obj.id;\n                    arr2.push(item2);\n                  });\n\n                  postData.id = newObj.id;\n                  postData.brand = newObj.brand;\n                  postData.standardData = newObj.standardData;\n                  postData.receiptType = newObj.receiptType;\n                  postData.payStatus = newObj.payStatus;\n                  postData.otherPricePay = newObj.otherPricePay;\n                  postData.amountContain = newObj.amountContain;\n                  postData.supplyData = newObj.supplyData;\n                  postData.explain = newObj.explain;\n                  postData.contacts = newObj.contacts;\n                  postData.contactsPhone = newObj.contactsPhone;\n                  postData.remark = newObj.remark;\n                  postData.state = state;\n                  postData.quotationId = newObj.quotationId;\n                  postData.supplierId = newObj.supplierId;\n                  postData.fillMode = newObj.fillMode;\n                  postData.createUserId = newObj.createUserId;\n                  postData.createUserName = newObj.createUserName;\n                  postData.quotationSupplierDetails = arr1; // 材料\n\n                  postData.quotationSupplierPayModes = arr2; // 付款方式\n\n                  _this.loading = true;\n                  (0, _quotation.fillQuotationSupplier)(postData).then(function (response) {\n                    _this.$message(response.message);\n\n                    _this.loading = false;\n\n                    _this.$emit('dialogClose', response, ''); // this.closeThePage()\n\n                  }).catch(function () {\n                    _this.loading = false;\n                  });\n                }\n              });\n            }\n          });\n        }\n      });\n    },\n    initData: function () {\n      var _initData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                (0, _dictionary.getDictionarysByTypes)({\n                  types: 'receiptTypes,otherPricePays'\n                }).then(function (response) {\n                  var data = response.data;\n                  data.forEach(function (element) {\n                    element.pid = element.pId;\n\n                    if (element.type === 'receiptTypes') {\n                      _this2.receiptTypes.push(element);\n                    }\n\n                    if (element.type === 'otherPricePays') {\n                      _this2.otherPricePays.push(element);\n                    }\n                  });\n                  _this2.keyreceiptType += 1;\n                  _this2.keyotherPricePay += 1;\n                });\n\n                if (this.obj) {\n                  (0, _quotation.getQuotationSupplierInfo)({\n                    id: this.obj.id\n                  }).then(function (response) {\n                    _this2.ruleForm = response.data; // this.list = response.detailList\n\n                    _this2.setData(response);\n\n                    _this2.activsetData = 1;\n                    _this2.keyreceiptType += 1;\n                    _this2.keyotherPricePay += 1;\n                  });\n                  this.disabled = true;\n                }\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function initData() {\n        return _initData.apply(this, arguments);\n      }\n\n      return initData;\n    }(),\n    closeThePage: function closeThePage() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    },\n    dialogClose: function dialogClose(data, state) {\n      this.dialogTableVisible = false;\n    },\n    showFileList: function showFileList(fileList) {\n      this.dialogTitle = '附件列表';\n      this.comName = 'UpFile';\n      this.dialogWidth = '50%';\n      this.fileList = fileList;\n      this.dialogTableVisible = true;\n    },\n    previous: function previous() {\n      this.active = 0;\n      this.disabled = false;\n    },\n    setData: function setData(response) {\n      var data = response.data;\n      var pom = [];\n      data.quotationSupplierDetails.forEach(function (e) {\n        pom.push({\n          id: e.id,\n          categoryId: e.material.categoryId,\n          category: {\n            id: e.material.categoryId,\n            name: e.material.materialCategory.name,\n            unit: e.material.materialCategory.unit\n          },\n          unit2: e.material.unit2,\n          brand: e.material.brand,\n          model: e.material.model,\n          spec: e.material.spec,\n          thickness: e.material.thickness,\n          texture: e.material.texture,\n          surfaceTreatment: e.material.surfaceTreatment,\n          designNumber: e.material.designNumber,\n          applicationQuantity: e.quotationDetail.planDetail.applicationQuantity,\n          applicationQuantity2: e.quotationDetail.planDetail.applicationQuantity2,\n          quantity: e.quotationDetail.planDetail.quantity,\n          quantity2: e.quotationDetail.planDetail.quantity2,\n          entryDate: e.quotationDetail.planDetail.entryDate,\n          remark: e.remark,\n          materialId: e.materialId,\n          quotationDetailId: e.quotationDetailId,\n          taxExclusivePrice: e.taxExclusivePrice,\n          taxRate: e.taxRate,\n          taxInclusivePrice: e.taxInclusivePrice,\n          taxExclusiveAmount: e.taxExclusiveAmount,\n          tax: e.tax,\n          taxInclusiveAmount: e.taxInclusiveAmount // fileList: detailList.upFile.filter(f => f.tableId === e.id)\n\n        });\n      }); // 填充 明细列表\n\n      this.materialModel.list = pom;\n      var pom2 = [];\n      data.quotationSupplierPayModes.forEach(function (e) {\n        pom2.push({\n          id: e.id,\n          requirement: e.requirement,\n          days: e.days,\n          scale: e.scale,\n          remark: e.remark\n        });\n      });\n\n      if (pom2.length === 0) {\n        pom2.push({\n          id: 0,\n          requirement: '',\n          days: '',\n          scale: '',\n          remark: ''\n        });\n      }\n\n      this.paymodel.list = pom2;\n      this.setColumnShow();\n    },\n    setColumnShow: function setColumnShow() {\n      // 设置列的显示。列中，都没有值，就隐藏\n      var modelunit2 = false;\n      var modelbrand = false;\n      var modelmodel = false;\n      var modelspec = false;\n      var modelthickness = false;\n      var modeltexture = false;\n      var modelsurfaceTreatment = false;\n      var modeldesignNumber = false;\n\n      var _iterator = (0, _createForOfIteratorHelper2.default)(this.materialModel.list),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var row = _step.value;\n\n          if (row.unit2) {\n            modelunit2 = true;\n          }\n\n          if (row.brand) {\n            modelbrand = true;\n          }\n\n          if (row.model) {\n            modelmodel = true;\n          }\n\n          if (row.spec) {\n            modelspec = true;\n          }\n\n          if (row.thickness) {\n            modelthickness = true;\n          }\n\n          if (row.texture) {\n            modeltexture = true;\n          }\n\n          if (row.surfaceTreatment) {\n            modelsurfaceTreatment = true;\n          }\n\n          if (row.designNumber) {\n            modeldesignNumber = true;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      this.columnShow['unit2'] = modelunit2;\n      this.columnShow['brand'] = modelbrand;\n      this.columnShow['model'] = modelmodel;\n      this.columnShow['spec'] = modelspec;\n      this.columnShow['thickness'] = modelthickness;\n      this.columnShow['texture'] = modeltexture;\n      this.columnShow['surfaceTreatment'] = modelsurfaceTreatment;\n      this.columnShow['designNumber'] = modeldesignNumber;\n    },\n    add: function add() {\n      var data = {\n        requirement: '',\n        days: '',\n        scale: '',\n        remark: ''\n      };\n      this.paymodel.list.push(data);\n    },\n    del: function del(d) {\n      // 列表删除\n      this.paymodel.list.splice(d.$index, 1);\n    },\n    handleChangeMoney: function handleChangeMoney(row) {\n      if (row.taxInclusivePrice && row.taxRate) {\n        row.taxInclusiveAmount = Number(row.taxInclusivePrice) * Number(row.applicationQuantity);\n        row.taxExclusiveAmount = (Number(row.taxInclusiveAmount) / (1 + Number(row.taxRate))).toFixed(2);\n        row.tax = (Number(row.taxInclusiveAmount) - Number(row.taxExclusiveAmount)).toFixed(2);\n        row.taxExclusivePrice = (Number(row.taxInclusivePrice) / (1 + Number(row.taxRate))).toFixed(10);\n      }\n\n      this.$set(row);\n    }\n  }\n};\nexports.default = _default;",null]}