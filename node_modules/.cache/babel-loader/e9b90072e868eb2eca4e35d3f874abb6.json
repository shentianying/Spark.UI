{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\fbgl\\fbdwgl\\SubcontractPeople\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\fbgl\\fbdwgl\\SubcontractPeople\\edit.vue","mtime":1635844823960},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/objectSpread2\"));\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nvar _MyForm = _interopRequireDefault(require(\"@/components/MyForm\"));\n\nvar _subcontractPeople = require(\"@/api/fbgl/subcontractPeople\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'SubcontractPeopleEdit',\n  components: {\n    MyForm: _MyForm.default\n  },\n  data: function data() {\n    return {\n      state: 0,\n      labelWidth: '160px',\n      size: 'mini',\n      selectPlaceholder: '输入选择',\n      inputPlaceholder: '请输入',\n      firstForm: {\n        id: 0,\n        name: '',\n        // 分包人\n        idNumber: '',\n        // 身份证号\n        orgId: '',\n        // 部门\n        address: '',\n        // 地址\n        tel: '',\n        // 电话\n        phone: '',\n        // 手机\n        fax: '',\n        // 传真\n        email: '',\n        // Email\n        type: '',\n        // 类型\n        isForbidden: 0,\n        remark: '',\n        // 备注\n        fileList: [] // 附件\n\n      },\n      firstRules: {\n        orgId: [{\n          required: true,\n          message: '请选择部门',\n          trigger: 'change'\n        }],\n        name: [{\n          required: true,\n          message: '请输入姓名',\n          trigger: 'change'\n        }],\n        type: [{\n          required: true,\n          message: '请选择类型',\n          trigger: 'change'\n        }]\n      },\n      filter: {\n        isForbiddenalist: [{\n          label: '是',\n          value: 1\n        }, {\n          label: '否',\n          value: 0\n        }],\n        typeList: [] // 分包人类型\n\n      }\n    };\n  },\n  computed: {\n    formNodeData: function formNodeData() {\n      var selectPlaceholder = this.selectPlaceholder,\n          inputPlaceholder = this.inputPlaceholder,\n          _this$filter = this.filter,\n          isForbiddenalist = _this$filter.isForbiddenalist,\n          typeList = _this$filter.typeList;\n      return [{\n        label: '分包人姓名:',\n        keyword: 'name',\n        props: {\n          placeholder: inputPlaceholder,\n          maxlength: 4\n        }\n      }, {\n        label: '身份证号:',\n        keyword: 'idNumber',\n        props: {\n          placeholder: inputPlaceholder,\n          maxlength: 18\n        }\n      }, {\n        label: '部门:',\n        keyword: 'orgId',\n        component: 'OrgSelect',\n        props: {\n          placeholder: selectPlaceholder\n        }\n      }, {\n        label: '地址:',\n        keyword: 'address',\n        props: {\n          placeholder: inputPlaceholder,\n          maxlength: 100\n        }\n      }, {\n        label: '电话:',\n        keyword: 'tel',\n        props: {\n          placeholder: inputPlaceholder,\n          maxlength: 11\n        }\n      }, {\n        label: '手机:',\n        keyword: 'phone',\n        props: {\n          placeholder: inputPlaceholder,\n          maxlength: 11\n        }\n      }, {\n        label: '传真:',\n        keyword: 'fax',\n        props: {\n          placeholder: inputPlaceholder\n        }\n      }, {\n        label: 'Email:',\n        keyword: 'email',\n        props: {\n          placeholder: inputPlaceholder\n        }\n      }, {\n        label: '类型:',\n        keyword: 'type',\n        component: 'Select',\n        props: {\n          propsLabel: 'name',\n          placeholder: selectPlaceholder,\n          options: typeList\n        }\n      }, {\n        label: '是否禁止:',\n        keyword: 'isForbidden',\n        component: 'Select',\n        props: {\n          placeholder: selectPlaceholder,\n          options: isForbiddenalist\n        }\n      }, {\n        label: '备注:',\n        monopolize: true,\n        keyword: 'remark',\n        props: {\n          placeholder: inputPlaceholder,\n          type: 'textarea'\n        }\n      }, {\n        label: '附件:',\n        monopolize: true,\n        keyword: 'fileList',\n        component: 'UpFile',\n        width: '100%',\n        props: {\n          isUpfile: true,\n          isDelete: true,\n          fileSize: 100,\n          isPreview: true\n        }\n      }];\n    }\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    next(function (vm) {\n      vm.initSelect();\n      var newId = vm.$route.query.id;\n      var oldId = vm.firstForm.id;\n      var type = vm.$route.query.type;\n\n      if (type === 'edit' && newId !== oldId) {\n        // 说明是打开另一个单子的编辑页面\n        vm.firstForm.id = newId;\n        vm.initForm();\n        vm.initDataById(newId);\n      } else {\n        var form = vm.firstForm;\n        form.companyId = vm.$store.state.user.selectOrgId; // 由于缓存的原因，防止上一次是编辑留下的数据，所以需要判断一下oldId\n\n        if (type === 'add' && oldId) {\n          vm.initForm();\n        }\n      }\n    });\n  },\n  methods: {\n    /* 重新设置输入框的内容 */\n    resetData: function resetData(value, str) {\n      var emailReg = /.+@globex\\.com/g;\n      var idReg = /\\d{15}|d{18}/g;\n      var phoneReg = /\\d{11}/g;\n      var telReg = /^([0-9]{3,4}-)?[0-9]{7,8}$|\\d{11}/g;\n      var faxReg = /[\\+? *[1-9]+]?[0-9]+/g;\n\n      switch (str) {\n        case 'email':\n          if (value !== '' && !emailReg.test(value)) {\n            this.firstForm[str] = '';\n            this.$message.error('请输入正确的邮箱');\n          }\n\n          break;\n\n        case 'idNumber':\n          if (value !== '' && !idReg.test(value)) {\n            this.firstForm[str] = '';\n            this.$message.error('请输入正确的身份证号');\n          }\n\n          break;\n\n        case 'phone':\n          if (value !== '' && !phoneReg.test(value)) {\n            this.firstForm[str] = '';\n            this.$message.error('请输入正确的手机号');\n          }\n\n          break;\n\n        case 'tel':\n          if (value !== '' && !telReg.test(value)) {\n            this.firstForm[str] = '';\n            this.$message.error('请输入正确的电话');\n          }\n\n          break;\n\n        case 'fax':\n          if (value !== '' && !faxReg.test(value)) {\n            this.firstForm[str] = '';\n            this.$message.error('请输入正确的传真号');\n          }\n\n          break;\n      }\n    },\n\n    /* 初始化选择框数据 */\n    initSelect: function initSelect() {\n      var _this = this;\n\n      (0, _subcontractPeople.InitSubcontractPeople)().then(function (res) {\n        var typeList = res.typeList;\n        _this.filter.typeList = typeList;\n      });\n    },\n    initForm: function initForm() {\n      var _this2 = this;\n\n      Object.assign(this.$data.firstForm, this.$options.data().firstForm);\n      this.$nextTick(function () {\n        _this2.$refs.firstForm.clearValidate();\n      });\n    },\n\n    /**\r\n     * @description: 根据id获取数据并且初始化选项框数据\r\n     */\n    initDataById: function initDataById(id) {\n      var _this3 = this;\n\n      (0, _subcontractPeople.GetSubcontractPeopleById)({\n        id: id\n      }).then(function (res) {\n        var form = _this3.firstForm;\n\n        for (var key in form) {\n          if (Object.hasOwnProperty.call(form, key)) {\n            form[key] = res.data[key] || form[key];\n          }\n        }\n\n        form.isForbidden = Number(form.isForbidden);\n        form.fileList = res.data.upFile;\n      });\n    },\n\n    /**\r\n     * 提交表单\r\n     * @param {Number} state 提交类型，0：保存；1：提交; 10000: 修改\r\n     */\n    submitForm: function submitForm(formName) {\n      var _this4 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var req = (0, _objectSpread2.default)({}, _this4.firstForm);\n\n          if (req.id) {\n            (0, _subcontractPeople.PutSubcontractPeople)(req).then(function (res) {\n              // 更新\n              _this4.$message.success('保存成功');\n\n              _this4.back();\n            });\n          } else {\n            (0, _subcontractPeople.AddSubcontractPeople)(req).then(function () {\n              // 添加\n              _this4.$message.success('保存成功');\n\n              _this4.back();\n            });\n          }\n        }\n      });\n    },\n\n    /**\r\n     * 返回上一页，并关闭当前页\r\n     */\n    back: function back() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    }\n  }\n};\nexports.default = _default;",null]}