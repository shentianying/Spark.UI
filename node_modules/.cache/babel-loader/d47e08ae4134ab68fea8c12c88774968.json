{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\material\\components\\addMCPItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\material\\components\\addMCPItem.vue","mtime":1624071363315},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.set\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.array.from\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nvar _material = require(\"@/api/cggl/material\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'AddMCPItem',\n  props: {\n    obj: {\n      type: Object,\n      default: null\n    },\n    pid: {\n      type: Number,\n      default: 0\n    }\n  },\n  data: function data() {\n    return {\n      ruleForm: {\n        list: [],\n        id: null,\n        isRequired: false,\n        isTargetRequired: false,\n        canInput: false,\n        itemName: '',\n        sort: 10\n      },\n      buttonLoading: false\n    };\n  },\n  mounted: function mounted() {\n    this.initData();\n  },\n  methods: {\n    submitForm: function submitForm(formName) {\n      var _this = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _this.buttonLoading = true;\n          var items = []; // 拼装子项数据\n\n          var cnaArr = _this.ruleForm.itemName.split('\\n').filter(function (a) {\n            return a.trim();\n          }); // 分割并且去掉空行\n\n\n          cnaArr = Array.from(new Set(cnaArr)); // ES6 去掉重复项\n\n          cnaArr.forEach(function (e) {\n            var a = {};\n            a.categoryId = _this.obj.categoryId;\n            a.propertyId = _this.obj.propertyId;\n            a.mCPId = _this.obj.id;\n            a.name = e;\n            a.sort = 10;\n            items.push(a);\n          });\n          var postData = {\n            id: _this.ruleForm.id,\n            isRequired: _this.ruleForm.isRequired,\n            isTargetRequired: _this.ruleForm.isTargetRequired,\n            canInput: _this.ruleForm.canInput,\n            mCPItem: items\n          };\n          (0, _material.putMaterialCategoryProperty)(postData).then(function (response) {\n            _this.$message(response.message);\n\n            _this.buttonLoading = false;\n\n            _this.$emit('addItemclose');\n          }).catch(function () {\n            _this.buttonLoading = false;\n          }); // AddMaterialCategoryPropertyItem(postData).then(response => {\n          //   this.$message(response.message)\n          //   this.buttonLoading = false\n          //   this.$emit('addItemclose')\n          // }).catch(() => { this.buttonLoading = false })\n        }\n      });\n    },\n    // resetForm(formName) {\n    //   this.$refs[formName].resetFields()\n    // },\n    // addItem() {\n    //   this.ruleForm.list.push({ name: '', sort: 1 })\n    // },\n    // removeItem(item) {\n    //   var index = this.ruleForm.list.indexOf(item)\n    //   if (index !== -1) {\n    //     this.ruleForm.list.splice(index, 1)\n    //   }\n    // },\n    initData: function initData() {\n      var newObj = JSON.parse(JSON.stringify(this.obj));\n      var itemsStr = '';\n      newObj.mcpItem.forEach(function (e) {\n        itemsStr += e.name + '\\n';\n      });\n      this.ruleForm = {\n        itemName: itemsStr,\n        isRequired: newObj.isRequired,\n        isTargetRequired: newObj.isTargetRequired,\n        canInput: newObj.canInput,\n        id: newObj.id\n      }; // getMaterialCategoryPropertyItem({ mcpId: this.obj.id }).then(response => {\n      //   const { data } = response\n      //   var itemsStr = ''\n      //   data.forEach(e => {\n      //     itemsStr += e.name + '\\n'\n      //   })\n      //   this.ruleForm.name = itemsStr\n      // })\n    }\n  }\n};\nexports.default = _default;",null]}