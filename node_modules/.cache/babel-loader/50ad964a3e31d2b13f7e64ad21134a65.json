{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\zjgl\\Acceptance\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\zjgl\\Acceptance\\index.vue","mtime":1630891145117},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _Acceptance = require(\"@/api/cwgl/zjgl/Acceptance.js\");\n\nvar _SearchBar = _interopRequireDefault(require(\"@/components/SearchBar\"));\n\nvar _searchData = _interopRequireDefault(require(\"./searchData\"));\n\nvar _pikazExcelJs = require(\"pikaz-excel-js\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'ChengDuiXinXi',\n  components: {\n    SearchBar: _SearchBar.default,\n    ExcelExport: _pikazExcelJs.ExcelExport\n  },\n  data: function data() {\n    return {\n      size: 'mini',\n      // 整体大小 medium / small / mini\n      searchData: _searchData.default,\n      // 渲染搜索栏数据\n      filename: '资金承兑列表',\n      exLoading: false,\n      sheet: [],\n\n      /* 列表数据相关 */\n      table: {\n        list: [],\n        loading: false,\n        total: 0,\n        currentPage: 1,\n        pageSize: 10\n      }\n    };\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    next(function (vm) {\n      vm.fetchData();\n    });\n  },\n  methods: {\n    /**\r\n     * @description: 权限判断\r\n     */\n    promise: function promise(expiration, state, row) {\n      // 本地时间>到期时间 并且 state是未支付状态\n      if (new Date() > new Date(expiration) && state === 0) {\n        return false;\n      }\n\n      return true;\n    },\n\n    /**\r\n     * @description: 获取列表数据、搜索数据\r\n     * @return {*}\r\n     */\n    fetchData: function () {\n      var _fetchData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var postData, response, data, count, stateOptions, capitalTypeOptions;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.table.loading = true;\n                _context.prev = 1;\n                // 获取请求参数\n                postData = this.getSearchData();\n                postData.currentPage = this.table.currentPage;\n                postData.pageSize = this.table.pageSize;\n                console.log('fetchData:请求数据', postData); // 请求开始\n\n                _context.next = 8;\n                return (0, _Acceptance.GetAcceptDetailPaging)(postData);\n\n              case 8:\n                response = _context.sent;\n                data = response.data, count = response.count, stateOptions = response.stateOptions, capitalTypeOptions = response.capitalTypeOptions; // 搜索栏数据初始化\n\n                stateOptions.forEach(function (ele) {\n                  ele.label = ele.name;\n                }); // 资金形式选项数据转换\n\n                capitalTypeOptions.forEach(function (ele) {\n                  ele.label = ele.name;\n                }); // 收款类型选项数据转换\n\n                this.searchData = this.searchData.map(function (item) {\n                  item.options = item.name === 'states' ? stateOptions : item.options;\n                  item.options = item.name === 'capitalTypes' ? capitalTypeOptions : item.options;\n                  return item;\n                }); // 列表数据初始化\n\n                this.table.list = data;\n                this.table.total = count;\n                _context.next = 20;\n                break;\n\n              case 17:\n                _context.prev = 17;\n                _context.t0 = _context[\"catch\"](1);\n                console.log('fetchData:请求列表数据失败，错误信息：', _context.t0);\n\n              case 20:\n                _context.prev = 20;\n                this.table.loading = false;\n                return _context.finish(20);\n\n              case 23:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 17, 20, 23]]);\n      }));\n\n      function fetchData() {\n        return _fetchData.apply(this, arguments);\n      }\n\n      return fetchData;\n    }(),\n\n    /**\r\n     * @description: 搜索栏数据转换\r\n     * @return {Object} request数据\r\n     */\n    getSearchData: function getSearchData() {\n      var data = {};\n      this.searchData.forEach(function (item) {\n        if (item.name === 'ticketDate') {\n          data.ticketDate1 = item.value[0];\n          data.ticketDate2 = item.value[1];\n        } else if (item.name === 'expiration') {\n          data.expiration1 = item.value[0];\n          data.expiration2 = item.value[1];\n        } else if (item.name === 'amount') {\n          data.amount1 = item.value[0];\n          data.amount2 = item.value[1];\n        } else {\n          data[item.name] = item.value;\n        }\n      });\n      return data;\n    },\n\n    /**\r\n     * @description: 设置表格名字\r\n     */\n    setFname: function setFname() {\n      var date = this.utils.parseTime(new Date());\n      date = date.replace(' ', '_');\n      date = date.replace(':', '_');\n      this.filename = this.filename + date;\n    },\n\n    /**\r\n     * @description:表格导出功能\r\n     */\n    exportExcel: function () {\n      var _exportExcel = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var postData, _yield$GetAcceptDetai, data;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                this.exLoading = true;\n                postData = this.getSearchData();\n                postData.currentPage = this.table.currentPage;\n                postData.pageSize = this.table.total;\n                _context2.next = 7;\n                return (0, _Acceptance.GetAcceptDetailPaging)(postData);\n\n              case 7:\n                _yield$GetAcceptDetai = _context2.sent;\n                data = _yield$GetAcceptDetai.data;\n                this.sheet = [{\n                  sheetName: '承兑信息列表',\n                  keys: ['ticketNumber', 'orgName', 'capitalType', 'ticketDate', 'expiration', 'payer', 'bank', 'amount', 'remark', 'stateName'],\n                  tHeader: ['票号', '收款部门', '类型', '开票日期', '到期日期', '付款人', '收款银行', '金额', '备注', '状态'],\n                  table: data\n                }];\n                this.setFname();\n                this.$refs.excelExport.pikaExportExcel();\n                _context2.next = 18;\n                break;\n\n              case 14:\n                _context2.prev = 14;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n                this.onError('获取表格数据失败！');\n\n              case 18:\n                _context2.prev = 18;\n                this.exLoading = false;\n                return _context2.finish(18);\n\n              case 21:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 14, 18, 21]]);\n      }));\n\n      function exportExcel() {\n        return _exportExcel.apply(this, arguments);\n      }\n\n      return exportExcel;\n    }(),\n\n    /**\r\n     * @description: excel导出错误处理\r\n     */\n    onError: function onError(err) {\n      this.$message.info('导出失败：' + err);\n    },\n\n    /**\r\n     * @description: 设置分页大小\r\n     * @param {Number} val\r\n     */\n    sizeChange: function sizeChange(val) {\n      this.table.pageSize = val;\n      this.fetchData();\n    },\n\n    /**\r\n     * @description: 搜索回调\r\n     */\n    handelSearch: function handelSearch() {\n      this.fetchData();\n    },\n\n    /**\r\n     * @description: 路由到详情页\r\n     * @param {*} row\r\n     */\n    handleDetails: function handleDetails(row, type) {\n      this.$router.push({\n        name: 'ChengDuiXinXiDetails',\n        query: {\n          id: row.id,\n          type: type,\n          refreshRouterName: this.$route.name\n        }\n      });\n    }\n  }\n};\nexports.default = _default;",null]}