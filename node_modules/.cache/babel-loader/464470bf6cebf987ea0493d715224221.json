{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\swcb\\businessCostDetailAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\swcb\\businessCostDetailAdd.vue","mtime":1634539861955},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.find\");\n\nvar _material = require(\"@/api/cggl/material\");\n\nvar _index = require(\"@/utils/index\");\n\nvar _validate = require(\"@/utils/validate\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'BusinessCostDetailAdd',\n  components: {},\n  props: {\n    obj: {\n      type: Object,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      ruleForm: {\n        materialCategoryId: null,\n        materialCategory: null,\n        quantity: null,\n        price: null,\n        amount: null,\n        remark: '' // confirmTime: null,\n        // processOrgId: null,\n        // processUser: null,\n        // enteredQuantity: null\n\n      },\n      buttonLoading: false,\n      comName: '',\n      list: null,\n      categoryList: null,\n      // categoryPropertyList: null,\n      oldrProperty: {},\n      options: null,\n      rules: {\n        materialCategoryId: [{\n          required: true,\n          message: '请选择',\n          trigger: 'change'\n        }],\n        quantity: [{\n          validator: _validate.validate.logic,\n          logic: function logic(value) {\n            return value >= 0;\n          },\n          required: true,\n          trigger: 'blur'\n        }],\n        price: [{\n          validator: _validate.validate.logic,\n          logic: function logic(value) {\n            return value >= 0;\n          },\n          required: true,\n          trigger: 'blur'\n        }] // amount: [{ validator: validate.logic, logic: value => value >= 0, required: true, trigger: 'blur' }]\n\n      }\n    };\n  },\n  computed: {\n    getEndCategoryId: function getEndCategoryId() {\n      // 获取categoryId数 组中最后一个 id\n      return this.ruleForm.materialCategoryId[this.ruleForm.materialCategoryId.length - 1];\n    }\n  },\n  watch: {\n    'ruleForm.quantity': {\n      handler: function handler(value) {\n        this.ruleForm.amount = this.ruleForm.price * value;\n      },\n      immediate: true\n    },\n    'ruleForm.price': {\n      handler: function handler(value) {\n        this.ruleForm.amount = this.ruleForm.quantity * value;\n      },\n      immediate: true\n    }\n  },\n  created: function created() {},\n  mounted: function mounted() {\n    this.initData();\n  },\n  methods: {\n    submitForm: function submitForm(formName) {\n      var _this = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var newObj = JSON.parse(JSON.stringify(_this.ruleForm)); // 获取级联数组中的最后一个id,就是当前选中的最末级的分类id\n\n          var computerCategoryId = newObj.materialCategoryId[newObj.materialCategoryId.length - 1];\n          newObj.category = _this.categoryList.find(function (f) {\n            return f.id === computerCategoryId;\n          });\n          newObj.materialCategoryId = computerCategoryId;\n\n          if (newObj.materialCategory.level !== 3) {\n            _this.$message.error('选择的材料必须是三级分类');\n\n            return false;\n          } // console.log('提交的数据：', newObj)\n\n\n          if (_this.obj) {\n            _this.$emit('dialogClose', newObj, 'update');\n          } else {\n            _this.$emit('dialogClose', newObj, 'add');\n          }\n        }\n      });\n    },\n    initData: function initData() {\n      var _this2 = this;\n\n      var promise = this.getCategory();\n\n      if (this.obj) {\n        promise.then(function () {\n          var newObj = JSON.parse(JSON.stringify(_this2.obj)); // console.log('newObj:', newObj)\n\n          _this2.ruleForm = newObj; // 拼接id成三级数组，来匹配 选材料 级联菜单\n\n          var categoryIdArray = [];\n\n          var secondCategoryId = _this2.categoryList.find(function (f) {\n            return f.id === _this2.ruleForm.materialCategoryId;\n          }).pid;\n\n          var firstCategoryId = _this2.categoryList.find(function (f) {\n            return f.id === secondCategoryId;\n          }).pid;\n\n          categoryIdArray.push(firstCategoryId);\n          categoryIdArray.push(secondCategoryId);\n          categoryIdArray.push(_this2.ruleForm.materialCategoryId);\n          _this2.ruleForm.materialCategoryId = categoryIdArray;\n        });\n      }\n    },\n    getCategoryInfo: function getCategoryInfo() {\n      // 材料级联，最后一个id 才是选中的id\n      var computerCategoryId = this.ruleForm.materialCategoryId[this.ruleForm.materialCategoryId.length - 1];\n      this.ruleForm.materialCategory = this.categoryList.find(function (f) {\n        return f.id === computerCategoryId;\n      }); // console.log(this.ruleForm.materialCategory)\n    },\n    getCategory: function getCategory(query) {\n      var _this3 = this;\n\n      var pro1 = new Promise(function (resolve, reject) {\n        (0, _material.getAllMaterialCategory)({\n          name: query\n        }).then(function (response) {\n          var data = response.data;\n          data.forEach(function (e) {\n            e.pid = e.pId;\n            e.label = e.name;\n            e.value = e.id;\n            delete e.pId;\n          });\n          _this3.categoryList = data;\n          _this3.options = (0, _index.getTree)(0, data);\n          resolve();\n        }).catch(function () {\n          reject();\n        });\n      });\n      return pro1; // }\n    }\n  }\n};\nexports.default = _default;",null]}