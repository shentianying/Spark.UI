{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\zjgl\\shouKuan\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\zjgl\\shouKuan\\index.vue","mtime":1629874990611},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _zjsk = require(\"@/api/cwgl/zjgl/zjsk.js\");\n\nvar _SearchBar = _interopRequireDefault(require(\"@/components/SearchBar\"));\n\nvar _searchData = _interopRequireDefault(require(\"./searchData\"));\n\nvar _pikazExcelJs = require(\"pikaz-excel-js\");\n\nvar _person = require(\"@/api/rsgl/person\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import { getBussinessInfoPaging, getBussinessInfoEditInit } from '@/api/ywgl/bussinessInfo'\nvar _default = {\n  name: 'ZiJinShouKuan',\n  components: {\n    SearchBar: _SearchBar.default,\n    ExcelExport: _pikazExcelJs.ExcelExport\n  },\n  filters: {\n    date: function date(val) {\n      return new Date(val).toLocaleDateString().replaceAll('/', '-');\n    }\n  },\n  data: function data() {\n    return {\n      size: 'small',\n      // 整体大小 medium / small / mini\n      searchData: _searchData.default,\n      // 渲染搜索栏数据\n      amount: 0,\n      // 统计金额\n      sheet: [{\n        // title: '材料计划导入模板', //表格标题\n        tHeader: [],\n        // 表头\n        keys: [],\n        // 数据键名，需与表头内容顺序对应\n        table: [],\n        // 表格数据，如果无数据，设置为空字符\"\"，避免使用null或undefined\n        sheetName: '资金收款列表' // 表格名称\n\n      }],\n\n      /* 列表数据相关 */\n      table: {\n        list: [],\n        loading: false,\n        total: 0,\n        currentPage: 1,\n        pageSize: 10\n      }\n    };\n  },\n  created: function created() {\n    this.fetchData();\n  },\n  methods: {\n    /**\r\n     * @description: 获取列表数据、搜索数据\r\n     * @return {*}\r\n     */\n    fetchData: function () {\n      var _fetchData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        var postData, response, data, count, capitalTypeOptions, gatheringTypeOptions, amount;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.table.loading = true;\n                _context.prev = 1;\n                // 获取请求参数\n                postData = this.getSearchData();\n                postData.currentPage = this.table.currentPage;\n                postData.pageSize = this.table.pageSize;\n                console.log('fetchData:请求数据', postData);\n                (0, _person.getPersonList)().then(function (response) {\n                  var person = _this.searchData.find(function (item) {\n                    return item.name === 'person';\n                  });\n\n                  if (person !== undefined) {\n                    var tmp = response.data.map(function (item) {\n                      return {\n                        label: item.name,\n                        value: item.id\n                      };\n                    });\n\n                    _this.$set(person, 'options', tmp);\n                  }\n                }); // 请求开始\n\n                _context.next = 9;\n                return (0, _zjsk.GetGatheringPaging)(postData);\n\n              case 9:\n                response = _context.sent;\n                data = response.data, count = response.count, capitalTypeOptions = response.capitalTypeOptions, gatheringTypeOptions = response.gatheringTypeOptions, amount = response.amount;\n                this.amount = amount; // 搜索栏数据初始化\n\n                capitalTypeOptions.forEach(function (ele) {\n                  // 资金形式选项数据转换\n                  ele.label = ele.name;\n                });\n                gatheringTypeOptions.forEach(function (ele) {\n                  // 收款类型选项数据转换\n                  ele.label = ele.name;\n                });\n                this.searchData = this.searchData.map(function (item) {\n                  item.options = item.name === 'gatheringTyps' ? gatheringTypeOptions : item.options;\n                  item.options = item.name === 'capitalTypes' ? capitalTypeOptions : item.options;\n                  return item;\n                }); // 列表数据初始化\n\n                console.log(data);\n                this.table.list = data;\n                this.table.total = count;\n                _context.next = 23;\n                break;\n\n              case 20:\n                _context.prev = 20;\n                _context.t0 = _context[\"catch\"](1);\n                console.log('fetchData:请求列表数据失败，错误信息：', _context.t0);\n\n              case 23:\n                _context.prev = 23;\n                this.table.loading = false;\n                return _context.finish(23);\n\n              case 26:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 20, 23, 26]]);\n      }));\n\n      function fetchData() {\n        return _fetchData.apply(this, arguments);\n      }\n\n      return fetchData;\n    }(),\n    beforeStart: function beforeStart(bookType, filename, sheet) {\n      sheet.length = 0;\n      sheet.push({\n        keys: ['number', 'orgName', 'capitalType', 'gatheringType', 'bank', 'personName', 'gatheringDate'],\n        tHeader: ['编号', '部门名称', '资金形式', '收款类型', '收款银行', '经手人', '收款日期'],\n        table: this.table.list\n      });\n      /* this.sheet[0].keys =\r\n      this.sheet[0].tHeader =\r\n      this.sheet[0].table = this.table.list */\n    },\n\n    /**\r\n     * @description: excel导出错误处理\r\n     */\n    onError: function onError(err) {\n      this.$message.info('导出失败：' + err);\n    },\n\n    /**\r\n     * @description: 搜索栏数据转换\r\n     * @return {Object} request数据\r\n     */\n    getSearchData: function getSearchData() {\n      var data = {};\n      this.searchData.forEach(function (item) {\n        if (item.name === 'dateRange') {\n          data.date1 = item.value[0];\n          data.date2 = item.value[1];\n        } else if (item.name === 'moneySection') {\n          data.amount1 = item.value[0];\n          data.amount2 = item.value[1];\n        } else if (item.name === 'year') {\n          data.year = new Date(item.value).getFullYear();\n        } else {\n          data[item.name] = item.value;\n        }\n      });\n      return data;\n    },\n\n    /**\r\n     * @description: 设置分页大小\r\n     * @param {Number} val\r\n     */\n    sizeChange: function sizeChange(val) {\n      this.table.pageSize = val;\n      this.fetchData();\n    },\n\n    /**\r\n     * @description: 搜索回调\r\n     */\n    HandelSearch: function () {\n      var _HandelSearch = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.fetchData();\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function HandelSearch() {\n        return _HandelSearch.apply(this, arguments);\n      }\n\n      return HandelSearch;\n    }(),\n\n    /**\r\n     * @description: 路由到详情页\r\n     * @param {*} row\r\n     */\n    handleDetails: function handleDetails(row) {\n      this.$router.push({\n        name: 'ShouKuanDetails',\n        params: {\n          id: row.id\n        }\n      });\n    },\n\n    /**\r\n     * @description: table编辑\r\n     * @param {Object} row\r\n     */\n    handleEdit: function handleEdit() {\n      var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      this.$router.push({\n        name: 'ShouKuanEdit',\n        params: {\n          id: id\n        }\n      });\n    }\n  }\n};\nexports.default = _default;",null]}