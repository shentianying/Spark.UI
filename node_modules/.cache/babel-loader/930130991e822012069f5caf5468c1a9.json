{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\quotation\\quotationSuppliersAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\quotation\\quotationSuppliersAdd.vue","mtime":1627292107404},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.array.find\");\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _supplier = require(\"@/api/cggl/supplier\");\n\nvar _dictionary = require(\"@/api/xtgl/dictionary\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import OrgSelect2 from '@/components/OrgSelect/index2'\nvar _default = {\n  name: 'QuotationSuppliersAdd',\n  components: {// OrgSelect2\n  },\n  props: {\n    obj: {\n      type: Array,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      ruleForm: {},\n      // 星级\n      supplierRateOptions: [],\n      keySupplierRate: 0,\n      total: 0,\n      currentPage: 1,\n      pageSize: 10,\n      name: '',\n      loading: false,\n      list: [],\n      fileList: [],\n      listLoading: false,\n      multipleSelection: [],\n      columnShow: {\n        unit2: true,\n        brand: true,\n        model: true,\n        spec: true,\n        thickness: true,\n        texture: true,\n        surfaceTreatment: true,\n        designNumber: true\n      },\n      rules: {\n        number: [{\n          required: true,\n          message: '请输入',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  computed: {},\n  watch: {},\n  activated: function activated() {},\n  mounted: function mounted() {\n    this.initData();\n  },\n  methods: {\n    initData: function () {\n      var _initData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.listLoading = true;\n                (0, _supplier.getSupplierPaging)({\n                  currentPage: this.currentPage,\n                  pageSize: this.pageSize,\n                  name: this.name\n                }).then(function (response) {\n                  var data = response.data,\n                      count = response.count;\n                  _this.list = data;\n                  _this.total = count;\n                  _this.listLoading = false;\n                });\n                (0, _dictionary.getDictionarysByTypes)({\n                  types: 'supplierRate'\n                }).then(function (response) {\n                  var data = response.data;\n                  data.forEach(function (element) {\n                    element.pid = element.pId;\n\n                    if (element.type === 'supplierRate') {\n                      _this.supplierRateOptions.push(element);\n                    }\n                  }); // this.keyImportType += 1\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function initData() {\n        return _initData.apply(this, arguments);\n      }\n\n      return initData;\n    }(),\n    setColumnShow: function setColumnShow() {\n      // 设置列的显示。列中，都没有值，就隐藏\n      var modelunit2 = false;\n      var modelbrand = false;\n      var modelmodel = false;\n      var modelspec = false;\n      var modelthickness = false;\n      var modeltexture = false;\n      var modelsurfaceTreatment = false;\n      var modeldesignNumber = false;\n\n      var _iterator = (0, _createForOfIteratorHelper2.default)(this.list),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var row = _step.value;\n\n          if (row.unit2) {\n            modelunit2 = true;\n          }\n\n          if (row.brand) {\n            modelbrand = true;\n          }\n\n          if (row.model) {\n            modelmodel = true;\n          }\n\n          if (row.spec) {\n            modelspec = true;\n          }\n\n          if (row.thickness) {\n            modelthickness = true;\n          }\n\n          if (row.texture) {\n            modeltexture = true;\n          }\n\n          if (row.surfaceTreatment) {\n            modelsurfaceTreatment = true;\n          }\n\n          if (row.designNumber) {\n            modeldesignNumber = true;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      this.columnShow['unit2'] = modelunit2;\n      this.columnShow['brand'] = modelbrand;\n      this.columnShow['model'] = modelmodel;\n      this.columnShow['spec'] = modelspec;\n      this.columnShow['thickness'] = modelthickness;\n      this.columnShow['texture'] = modeltexture;\n      this.columnShow['surfaceTreatment'] = modelsurfaceTreatment;\n      this.columnShow['designNumber'] = modeldesignNumber;\n    },\n    // 多选框选中数据\n    handleSelectionChange: function handleSelectionChange(selection) {\n      this.multipleSelection = selection;\n    },\n    checkSuppliers: function checkSuppliers() {\n      if (this.multipleSelection.length <= 0) {\n        this.$message.error('必须选择供应商');\n      } else {\n        var data = {\n          list: this.multipleSelection\n        };\n        this.$emit('dialogClose', data, 'addSuppliers');\n      }\n    },\n    sizeChange: function sizeChange(val) {\n      this.pageSize = val;\n      this.initData();\n    },\n    getSupplierRate: function getSupplierRate(rate) {\n      var supplierRate = this.supplierRateOptions.find(function (f) {\n        return f.value === rate;\n      });\n      return supplierRate.name;\n    },\n    selectInit: function selectInit(row, index) {\n      if (this.obj && this.obj.length > 0) {\n        var supplier = this.obj.find(function (f) {\n          return f.supplier.number === row.number;\n        });\n\n        if (supplier) {\n          return false; // 不可选\n        } else {\n          return true;\n        }\n      } else {\n        return true;\n      }\n    }\n  }\n};\nexports.default = _default;",null]}