{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\qxgl\\component\\selectRole.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\qxgl\\component\\selectRole.vue","mtime":1624071363353},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nvar _role = require(\"@/api/xtgl/role\");\n\nvar _page = require(\"@/api/xtgl/page\");\n\nvar _userRoleAdd = _interopRequireDefault(require(\"./userRoleAdd\"));\n\nvar _index = require(\"@/utils/index\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'SelectRole',\n  components: {\n    UserRoleAdd: _userRoleAdd.default\n  },\n  props: {\n    id: {\n      type: Number,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      list: [],\n      listLoading: true,\n      selection: [],\n      buttonLoading: false,\n      dialogTableVisible: false,\n      currentRow: null,\n      comName: '',\n      // componentName: RolePermit,\n      // render: false,\n      userRoleList: null,\n      userRolePermit: [],\n      roleIds: null,\n      checkList: [],\n      permit: [],\n      pageList: []\n    };\n  },\n  computed: {},\n  mounted: function mounted() {\n    this.fetchData();\n  },\n  activated: function activated() {\n    if (this.$route.params.id) {\n      this.refreshRouterName = this.$route.params.refreshRouterName;\n    }\n  },\n  methods: {\n    fetchData: function fetchData() {\n      var _this = this;\n\n      this.listLoading = true;\n      var postData = {};\n      postData.currentPage = this.currentPage;\n      postData.pageSize = this.pageSize;\n      (0, _role.getUserRole)({\n        userId: this.$route.query.id\n      }).then(function (response) {\n        var data = response.data; // this.list = ua\n\n        _this.userRoleList = data;\n        _this.roleIds = data.map(function (m) {\n          return m.roleId;\n        }).toString();\n\n        _this.getUserRolePermit();\n\n        _this.listLoading = false;\n      });\n    },\n    getUserRolePermit: function getUserRolePermit() {\n      var _this2 = this;\n\n      new Promise(function (resolve, reject) {\n        (0, _page.GetPageAndPermit)().then(function (response) {\n          var _response$data = response.data,\n              permitData = _response$data.permitData,\n              pageData = _response$data.pageData;\n          _this2.permit = permitData;\n          _this2.pageList = pageData;\n          _this2.userRolePermit = (0, _index.getTree)(0, pageData);\n          resolve();\n        });\n      }).then(function (res) {\n        // 设置 角色的 节点\n        (0, _role.getRolePermitByRoleId)({\n          roleId: _this2.roleIds\n        }).then(function (response) {\n          _this2.checkList = response.data.map(function (m) {\n            return m.permitId;\n          });\n        });\n      }).catch(function () {});\n    },\n    // delUserRole(row) {\n    //   this.$confirm('是否继续?', '提示', {\n    //     confirmButtonText: '确定',\n    //     cancelButtonText: '取消',\n    //     type: 'warning'\n    //   }).then(() => {\n    //     deleteUserRole({ id: row.id }).then(response => {\n    //       this.fetchData()\n    //       this.$message.success('删除成功')\n    //       // this.render = false\n    //       // this.$nextTick(() => {\n    //       //   this.render = true\n    //       // })\n    //     })\n    //   }).catch(() => {})\n    // },\n    // addUserRole() {\n    //   this.comName = 'UserRoleAdd'\n    //   this.currentRow = null\n    //   this.dialogTableVisible = true\n    // },\n    // editUsreRole(row) {\n    //   this.currentRow = row\n    //   this.comName = 'UserRoleAdd'\n    //   this.dialogTableVisible = true\n    // },\n    // handleSelectionChange(val) {\n    //   this.selection = val\n    // },\n    dialogClose: function dialogClose() {\n      this.dialogTableVisible = false; // this.render = false\n      // this.$nextTick(() => {\n      //   this.render = true\n      // })\n\n      this.fetchData();\n    }\n  }\n};\nexports.default = _default;",null]}