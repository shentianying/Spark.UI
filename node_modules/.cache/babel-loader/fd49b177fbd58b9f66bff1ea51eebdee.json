{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\byj\\Imprest\\WriteOffIndex.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\byj\\Imprest\\WriteOffIndex.vue","mtime":1635844823959},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _utils = require(\"@/utils\");\n\nvar _TableEx = _interopRequireDefault(require(\"@/components/TableEx\"));\n\nvar _SearchBar = _interopRequireDefault(require(\"@/components/SearchBar\"));\n\nvar _Impresst = require(\"@/api/cwgl/Impresst\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'ImpresstWriteOffIndex',\n  components: {\n    SearchBar: _SearchBar.default,\n    TableEx: _TableEx.default\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      size: 'mini',\n      searchData: require(\"./WriteOffSearchData\").default(),\n      // 渲染搜索栏数据\n      lastSearch: null,\n      // 最近一次搜索的数据\n      amount: 0,\n      // 统计金额\n      filter: {\n        // 过滤数据\n        imprestTypeList: [],\n        type: ''\n      },\n      user: {},\n\n      /* 列表数据相关 */\n      table: {\n        columns: [{\n          label: '编号',\n          // 表头\n          prop: 'number',\n          // 渲染的属性\n          class: 'link',\n          // class\n          minWidth: '180',\n          // 最小宽度\n          click: function click(row) {\n            return _this.handleDetails(row);\n          }\n        }, {\n          label: '部门',\n          prop: 'orgName',\n          minWidth: '200'\n        }, {\n          label: '冲销人',\n          prop: 'personName',\n          minWidth: '120'\n        }, {\n          label: '冲销方式',\n          prop: 'type',\n          width: '120'\n        }, {\n          align: 'right',\n          label: '冲销金额',\n          prop: 'amount',\n          format: function format(val, _format, row, column) {\n            return val < 0 ? (0, _utils.formatMoney)(Math.abs(val), 2, 0) : (0, _utils.formatMoney)(val, 2, 0);\n          },\n          width: '120'\n        }, {\n          business: 'state',\n          // 业务部分的快捷使用参考 src\\components\\TableEx\\Column\\businessList.js\n          options: [{\n            name: '作废',\n            color: 'red',\n            value: -1\n          }, {\n            name: '制单',\n            color: '#919191',\n            value: 0\n          }, {\n            name: '完成',\n            color: '#52C41A',\n            value: 10000\n          }]\n        }, {\n          business: 'createUser' // 业务部分的快捷使用参考 src\\components\\TableEx\\Column\\businessList.js\n\n        }],\n        list: [],\n        exLoading: false,\n        // 导出loading\n        tbLoading: false,\n        // table loading\n        total: 0,\n        currentPage: 1,\n        pageSize: this.utils.getPersonalSettings().pageSize\n      }\n    };\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    next(function (vm) {\n      var user = vm.$store.state.user;\n      vm.user = user;\n      vm.fetchData();\n    });\n  },\n  methods: {\n    /**\r\n     * @description: 获取列表数据、搜索数据\r\n     * @return {*}\r\n     */\n    getTable: function getTable() {\n      var currentPage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.table.currentPage;\n      var pageSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.table.pageSize;\n      var postData = this.getSearchData();\n      postData.currentPage = currentPage;\n      postData.pageSize = pageSize;\n      return (0, _Impresst.GetImprestWriteOffPaging)(postData);\n    },\n    fetchData: function fetchData(type) {\n      var _this2 = this;\n\n      switch (type) {\n        case 'filter':\n          this.table.currentPage = 1;\n          break;\n\n        case 'reset':\n        case 'search':\n          this.table.currentPage = 1;\n          this.lastSearch = null;\n          break;\n      }\n\n      this.table.tbLoading = true;\n      this.getTable().then(function (res) {\n        return _this2.parseServeDate(res);\n      }).finally(function () {\n        _this2.table.tbLoading = false;\n      });\n    },\n\n    /**\r\n     * @description: 搜索栏数据转换\r\n     * @return {Object} request数据\r\n     */\n    getSearchData: function getSearchData() {\n      var _this3 = this;\n\n      if (this.lastSearch === null) {\n        this.lastSearch = {};\n        this.searchData.forEach(function (item) {\n          var value = item.value,\n              transformType = item.transformType,\n              name = item.name;\n\n          if (transformType === 'property-serial') {\n            value.forEach(function (ele, index) {\n              var serial = index + 1;\n              _this3.lastSearch[name + serial] = ele;\n            });\n          } else {\n            _this3.lastSearch[name] = value;\n          }\n        });\n      }\n\n      return this.lastSearch;\n    },\n    parseServeDate: function parseServeDate(res) {\n      var data = res.data,\n          count = res.count,\n          amount = res.amount,\n          stateList = res.stateList;\n      this.$refs['SearchBar'].setData('states', 'options', stateList, 'init');\n      this.amount = amount < 0 ? Math.abs(amount) : amount;\n      data.forEach(function (e) {\n        e.options = stateList;\n      }); // 列表数据初始化\n\n      this.table.list = data;\n      this.table.total = count;\n    },\n\n    /**\r\n     * @description: table编辑\r\n     * @param {Object} row\r\n     */\n    handleEdit: function handleEdit() {\n      var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var type = arguments.length > 1 ? arguments[1] : undefined;\n      this.$router.push({\n        name: 'ImprestWriteOffEdit',\n        query: {\n          type: type,\n          id: id,\n          refreshRouterName: this.$route.name\n        }\n      });\n    },\n\n    /**\r\n     * @description: 路由到详情页\r\n     * @param {*} row\r\n     */\n    handleDetails: function handleDetails(row) {\n      this.$router.push({\n        name: 'ImprestWriteOffDetails',\n        query: {\n          id: row.id,\n          refreshRouterName: this.$route.name\n        }\n      });\n    }\n  }\n};\nexports.default = _default;",null]}