{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\components\\Other\\selectContract.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\components\\Other\\selectContract.vue","mtime":1628557652959},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nvar _organization = require(\"@/api/xtgl/organization\");\n\nvar _incomeContract = require(\"@/api/ywgl/incomeContract\");\n\nvar _utils = require(\"@/utils\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'SelectContract',\n  components: {},\n  props: {\n    multiple: {\n      type: Boolean,\n      default: true\n    },\n    // 默认多选\n    maxItem: {\n      type: Number,\n      default: 3\n    },\n    // 多选最大个数\n    selectValue: {\n      type: Array,\n      default: null\n    } // 初始化选中的数据\n\n  },\n  data: function data() {\n    return {\n      treeList: null,\n      tableList: null,\n      tableLoading: null,\n      buttonLoading: false,\n      selectionItem: [],\n      // 选中的人员数组\n      searchText: '',\n      searchOrg: 0,\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      }\n    };\n  },\n  computed: {\n    getStr: function getStr() {\n      if (this.multiple) {\n        return '多选限' + this.maxItem;\n      } else {\n        return '单选';\n      }\n    }\n  },\n  watch: {},\n  created: function created() {},\n  mounted: function mounted() {\n    this.fetchData();\n  },\n  methods: {\n    fetchData: function fetchData() {\n      var _this = this;\n\n      this.buttonLoading = true;\n      this.selectionItem = this.selectValue;\n      (0, _organization.getOrgWithProject)().then(function (res) {\n        var data = res.data;\n        _this.treeList = (0, _utils.getTree)(0, data);\n        _this.buttonLoading = false;\n      }).catch(function () {\n        _this.buttonLoading = false;\n      });\n    },\n    filterNode: function filterNode(value, data) {\n      if (!value) return true;\n      return data.name.indexOf(value) !== -1;\n    },\n    add: function add(row) {\n      if (!this.selectionItem) {\n        this.selectionItem.push(row);\n      } else {\n        // 单选模式，判断提示不能 多选\n        if (!this.multiple) {\n          if (this.selectionItem.length > 0) {\n            this.$alert('单选只能选一个哦');\n            return;\n          }\n        } else {\n          if (this.maxItem < 2) {\n            this.$alert(\"\\u591A\\u9009\\u6A21\\u5F0F\\uFF0CmaxItem\\u53C2\\u6570\\u5FC5\\u987B\\u5927\\u4E8E2\");\n            return;\n          }\n\n          if (this.selectionItem.length >= this.maxItem) {\n            this.$alert(\"\\u591A\\u9009\\u6700\\u591A\\u53EA\\u80FD\\u9009\".concat(this.maxItem, \"\\u4E2A\\u54E6\"));\n            return;\n          }\n        }\n\n        var isRepeat = this.selectionItem.find(function (f) {\n          return f.id === row.id;\n        });\n\n        if (isRepeat) {\n          this.$alert('不能重复添加！');\n        } else {\n          this.selectionItem.push(row);\n        }\n      }\n    },\n    handleNodeClick: function handleNodeClick(data, node) {\n      this.searchOrg = data.id;\n      this.searchText = '';\n      this.getContractList({\n        orgId: data.id\n      }); // 如果是叶子节点，就查找信息\n      //   if (node.isLeaf) {\n      //     this.getProjectList({ orgId: data.id })\n      //   } else {\n      //     // this.$alert('选中的必须是最后的节点')\n      //   }\n    },\n    tagClose: function tagClose(uid) {\n      this.selectionItem = this.selectionItem.filter(function (f) {\n        return f.id !== uid;\n      });\n    },\n    getContractList: function getContractList(postData) {\n      var _this2 = this;\n\n      (0, _incomeContract.getContractList)(postData).then(function (res) {\n        _this2.tableList = res.data;\n        _this2.buttonLoading = false;\n      }).catch(function () {\n        _this2.buttonLoading = false;\n      });\n    },\n    search: function search() {\n      var _this3 = this;\n\n      if (this.searchText.trim() === '') {\n        this.$alert('不能为空');\n        return;\n      }\n\n      var postData = {};\n      postData.name = this.searchText;\n      postData.orgId = this.searchOrg;\n      this.buttonLoading = true;\n      setTimeout(function () {\n        _this3.getContractList(postData);\n      }, 700);\n    },\n    save: function save() {\n      var _this4 = this;\n\n      this.buttonLoading = true; // 触发父组件的事件\n\n      setTimeout(function () {\n        _this4.$emit('dialogClose', _this4.selectionItem, 'contract');\n\n        _this4.buttonLoading = false;\n      }, 700);\n    }\n  }\n};\nexports.default = _default;",null]}