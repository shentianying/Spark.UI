{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\fpgl\\InvoiceReimburse\\details.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\fpgl\\InvoiceReimburse\\details.vue","mtime":1635749455628},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/objectSpread2\"));\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/toConsumableArray\"));\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nvar _InvoiceReimburse = require(\"@/api/cwgl/InvoiceReimburse.js\");\n\nvar _TableEx = _interopRequireDefault(require(\"@/components/TableEx\"));\n\nvar _flowDisplay = _interopRequireDefault(require(\"@/components/Flow/flowDisplay\"));\n\nvar _validate = require(\"@/utils/validate\");\n\nvar _utils = require(\"@/utils\");\n\nvar _flowAttitude = _interopRequireDefault(require(\"@/components/Flow/flowAttitude\"));\n\nvar _Detailsedit = _interopRequireDefault(require(\"@/components/Detailsedit\"));\n\nvar _CapitalSelect = _interopRequireDefault(require(\"@/components/SearchBar/form/CapitalSelect\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default2 = {\n  name: 'DepositDetails',\n  components: {\n    FlowDisplay: _flowDisplay.default,\n    FlowAttitude: _flowAttitude.default,\n    Detailsedit: _Detailsedit.default,\n    TableEx: _TableEx.default,\n    CapitalSelect: _CapitalSelect.default\n  },\n  data: function data() {\n    var _this = this;\n\n    var h = this.$createElement;\n    return {\n      type: 'InvoiceReimburseDetails',\n      // 审核:approval 详情:details 支付:pay 变更:alteration 回收:recycle\n      size: 'mini',\n      // 过滤器\n      filter: {\n        stateOptions: []\n      },\n\n      /* 列表数据相关 */\n      invoiceTable: {\n        // 变更列表\n        columns: [{\n          label: '序号',\n          // 表头\n          minWidth: '50',\n          // 最小宽度\n          type: 'index'\n        }, {\n          label: '发票类别',\n          // 表头\n          prop: 'invoiceCategoryName',\n          // 渲染的属性\n          minWidth: '80' // 最小宽度\n\n        }, {\n          label: '发票代码',\n          prop: 'invoiceCode',\n          minWidth: '100'\n        }, {\n          label: '票号',\n          prop: 'invoiceNum',\n          minWidth: '120'\n        }, {\n          align: 'right',\n          label: '申请金额(含税)',\n          format: 'money',\n          prop: 'applicationAmount',\n          minWidth: '120'\n        }, {\n          label: '税率',\n          prop: 'tax',\n          format: function format(val) {\n            return \"\".concat(val * 100, \"%\");\n          },\n          minWidth: '80'\n        }, {\n          align: 'right',\n          format: 'money',\n          label: '税额',\n          prop: 'taxAmount',\n          minWidth: '80'\n        }, {\n          align: 'right',\n          label: '金额(不含税)',\n          format: 'money',\n          prop: 'excludeTaxAmount',\n          minWidth: '120'\n        }, {\n          // align: 'right',\n          // label: '批准金额',\n          // format: 'money',\n          // prop: 'amount',\n          // minWidth: '120'\n          render: function render(h) {\n            return h(\"el-table-column\", {\n              \"class\": 'TableExColumn',\n              \"attrs\": {\n                \"label\": '批准金额',\n                \"min-width\": '120',\n                \"align\": 'right'\n              },\n              \"scopedSlots\": {\n                default: function _default(_ref) {\n                  var row = _ref.row;\n                  var size = _this.size;\n\n                  if (_this.state === 1) {\n                    return h(\"el-input\", {\n                      \"attrs\": {\n                        \"value\": row.amount,\n                        \"placeholder\": '请输入，流程中可编辑',\n                        \"size\": size\n                      },\n                      \"on\": {\n                        \"input\": function input(val) {\n                          console.log(val);\n\n                          _this.$set(row, 'amount', val.replace(/[^\\d.]/g, ''));\n                        }\n                      }\n                    });\n                  } else {\n                    return (0, _utils.formatMoney)(row.amount, 2, 0);\n                  }\n                }\n              }\n            });\n          }\n        }, {\n          label: '备注',\n          prop: 'remark',\n          minWidth: '120'\n        }],\n        list: [],\n        loading: false\n      },\n      payForm: {\n        // 支付表单\n        id: 0,\n        bank: '',\n        account: '',\n        imprestAmount: '',\n        balance: '',\n        capitalType: '1'\n      },\n      payRules: {\n        text: [{\n          required: true,\n          message: '请输入内容',\n          trigger: 'change'\n        }],\n        amount: [{\n          required: true,\n          message: '请输入金额',\n          trigger: 'change'\n        }, {\n          validator: _validate.validate.money,\n          message: '金额格式不正确',\n          trigger: 'change'\n        }, {\n          validator: _validate.validate.max_amount,\n          message: '超过所能存储的最大金额',\n          trigger: 'change'\n        }]\n      },\n      saveLoading: false,\n      payLoading: false,\n      myDetails: null,\n      // 详情数据\n      billFlowData: null,\n      // 流程信息\n      attitudePara: null // 审批信息\n\n    };\n  },\n  computed: {\n    state: function state() {\n      var _this$myDetails, _this$myDetails$data;\n\n      return (_this$myDetails = this.myDetails) === null || _this$myDetails === void 0 ? void 0 : (_this$myDetails$data = _this$myDetails.data) === null || _this$myDetails$data === void 0 ? void 0 : _this$myDetails$data.state;\n    },\n\n    /**\r\n     * 详情各字段计算\r\n     */\n    infoList: function infoList() {\n      var _this2 = this;\n\n      var _this$myDetails$data2 = this.myDetails.data,\n          orgStr = _this$myDetails$data2.orgStr,\n          costPlanNumber = _this$myDetails$data2.costPlanNumber,\n          reimburseTypeName = _this$myDetails$data2.reimburseTypeName,\n          account = _this$myDetails$data2.account,\n          accountName = _this$myDetails$data2.accountName,\n          capitalType = _this$myDetails$data2.capitalType,\n          balance = _this$myDetails$data2.balance,\n          bank = _this$myDetails$data2.bank,\n          imprestAmount = _this$myDetails$data2.imprestAmount,\n          number = _this$myDetails$data2.number,\n          invoiceType = _this$myDetails$data2.invoiceType,\n          invoiceDate = _this$myDetails$data2.invoiceDate,\n          invoiceCategory = _this$myDetails$data2.invoiceCategory,\n          entertainmentPlanNumber = _this$myDetails$data2.entertainmentPlanNumber,\n          entertainmentPlanId = _this$myDetails$data2.entertainmentPlanId,\n          summary = _this$myDetails$data2.summary,\n          costPlanId = _this$myDetails$data2.costPlanId,\n          personName = _this$myDetails$data2.personName,\n          IsBussinessFee = _this$myDetails$data2.IsBussinessFee,\n          personNumber = _this$myDetails$data2.personNumber,\n          applicationAmount = _this$myDetails$data2.applicationAmount,\n          payoutUserName = _this$myDetails$data2.payoutUserName,\n          payoutDate = _this$myDetails$data2.payoutDate,\n          remark = _this$myDetails$data2.remark,\n          upFile = _this$myDetails$data2.upFile,\n          invoiceUpFile = _this$myDetails$data2.invoiceUpFile,\n          createUserName = _this$myDetails$data2.createUserName,\n          createDate = _this$myDetails$data2.createDate,\n          lastEditUserName = _this$myDetails$data2.lastEditUserName,\n          lastEditDate = _this$myDetails$data2.lastEditDate,\n          submitUserName = _this$myDetails$data2.submitUserName,\n          submitDate = _this$myDetails$data2.submitDate,\n          state = _this$myDetails$data2.state; // 数据格式化\n\n      var m = function m(val) {\n        return _this2.utils.formatMoney(val, 2, 4);\n      };\n\n      var d = function d(dataStr) {\n        return dataStr ? _this2.$moment(dataStr).format('YYYY-MM-DD') : dataStr;\n      }; // const a = this.utils.amountInWords\n      // 制单部分信息\n\n\n      var info = [{\n        label: '开户行',\n        value: bank\n      }, {\n        label: '账户',\n        value: account\n      }, {\n        label: '冲备用金金额',\n        value: imprestAmount\n      }, {\n        label: '支付方式',\n        value: capitalType\n      }, {\n        label: '付款金额',\n        value: balance,\n        monopolize: true\n      }, {\n        label: '制单人',\n        value: createUserName\n      }, {\n        label: '制单时间',\n        value: createDate\n      }, {\n        label: '提交人',\n        value: submitUserName\n      }, {\n        label: '提交时间',\n        value: submitDate\n      }, {\n        label: '支付人',\n        value: payoutUserName\n      }, {\n        label: '支付时间',\n        value: payoutDate\n      }, {\n        label: '更新人',\n        value: lastEditUserName\n      }, {\n        label: '更新时间',\n        value: lastEditDate\n      }, {\n        label: '状态',\n        value: this.filter.stateOptions.find(function (item) {\n          return item.value === state;\n        }).name\n      }];\n      return [{\n        label: '报销类型',\n        value: reimburseTypeName\n      }, {\n        label: '编号',\n        value: number\n      }, {\n        label: '部门',\n        value: orgStr\n      }, // { label: '账套', value: NCAccountSetName },\n      {\n        label: '账套',\n        value: accountName\n      }, {\n        label: '发票类型',\n        value: invoiceType\n      }, {\n        label: '发票日期',\n        value: d(invoiceDate)\n      }, {\n        label: '发票类别',\n        value: invoiceCategory\n      }, {\n        label: '费用计划号',\n        value: costPlanNumber || entertainmentPlanNumber,\n        class: 'link',\n        click: function click() {\n          return _this2.toCostPlanDetails(costPlanId || entertainmentPlanId, costPlanId ? 'costPlan' : 'entertainmentPlan');\n        }\n      }, {\n        label: '工号',\n        value: personNumber\n      }, {\n        label: '姓名',\n        value: personName\n      }, {\n        label: '项目营销费用',\n        value: IsBussinessFee ? '是' : '否'\n      }, {\n        label: '金额',\n        value: m(applicationAmount)\n      }, {\n        label: '事由',\n        value: summary\n      }, {\n        label: '备注',\n        value: remark\n      }, {\n        label: '发票附件',\n        value: invoiceUpFile || [],\n        component: 'UpFile'\n      }, {\n        label: '其他附件',\n        value: upFile || [],\n        component: 'UpFile'\n      }].concat((0, _toConsumableArray2.default)(state === 10000 || this.type === 'recycle' ? info : []));\n    },\n    amount: function amount() {\n      var count = 0;\n      this.invoiceTable.list.forEach(function (item) {\n        count += Number(item.amount) || 0;\n      });\n      return count;\n    }\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    next(function (vm) {\n      vm.initData();\n    });\n  },\n  methods: {\n    toCostPlanDetails: function toCostPlanDetails(id, type) {\n      this.$router.push({\n        name: type === 'costPlan' ? 'CostPlanDetails' : 'EntertainmentPlanDetails',\n        query: {\n          type: '',\n          id: id,\n          refreshRouterName: this.$route.name\n        }\n      });\n    },\n    // 作废\n    saveFlow: function saveFlow() {\n      var _this3 = this;\n\n      this.$confirm('是否确定保存？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        var attitude = _this3.$refs.flowAttitude.getPostData();\n\n        if (attitude.attitudeType === 1 || attitude.attitudeType === 2) {\n          var errCount = 0;\n\n          _this3.invoiceTable.list.forEach(function (_ref2) {\n            var amount = _ref2.amount;\n            if (/[^\\d.]/g.test(amount) && amount !== 0) errCount++;\n          });\n\n          if (errCount) {\n            return _this3.$message.error('请填写批准金额');\n          }\n\n          if (Number(_this3.amount) > _this3.myDetails.data.applicationAmount) {\n            return _this3.$message.error('批准金额不能大于申请金额');\n          }\n        }\n\n        _this3.saveLoading = true;\n        var postData = {\n          attitude: attitude,\n          id: _this3.myDetails.data.id,\n          amount: _this3.amount,\n          invoiceReimburseDetails: _this3.invoiceTable.list\n        };\n        (0, _InvoiceReimburse.CheckInvoiceReimburse)(postData).then(function (res) {\n          if (res.code === 200) {\n            _this3.$message.success(res.message);\n\n            _this3.goBack(); // 跳转\n\n          } else {\n            _this3.$message.error(res.message);\n          }\n        }).finally(function () {\n          _this3.saveLoading = false;\n        });\n      });\n    },\n    wantToPay2: function wantToPay2() {\n      var _this4 = this;\n\n      if (this.payForm.balance > this.myDetails.data.amount) {\n        return this.$message.error('付款金额不能大于批准金额');\n      }\n\n      var _this$payForm = this.payForm,\n          imprestAmount = _this$payForm.imprestAmount,\n          balance = _this$payForm.balance;\n\n      if (this.myDetails.data.amount !== Number(imprestAmount) + Number(balance)) {\n        return this.$message.error('冲备用金金额、付款金额之和必须与批准金额一致');\n      }\n\n      this.$refs['payForm'].validate(function (valid) {\n        if (valid) {\n          _this4.$confirm('确定要支付吗?', '提示', {\n            type: 'warning'\n          }).then(function () {\n            _this4.payLoading = true;\n            var id = _this4.myDetails.data.id;\n\n            var attitudeData = _this4.$refs.flowAttitude.getPostData();\n\n            (0, _InvoiceReimburse.PayFor)((0, _objectSpread2.default)((0, _objectSpread2.default)({}, _this4.payForm), {}, {\n              attitude: attitudeData,\n              id: id\n            })).then(function (res) {\n              if (res.code === 200) {\n                _this4.$message.success(res.message);\n\n                _this4.goBack(); // 跳转\n\n              } else {\n                _this4.$message.error(res.message);\n              }\n            }).finally(function () {\n              _this4.payLoading = false;\n            });\n          });\n        }\n      });\n    },\n\n    /**\r\n     * @description: 初始化数据\r\n     */\n    initData: function initData() {\n      var _this$$route$query = this.$route.query,\n          id = _this$$route$query.id,\n          type = _this$$route$query.type;\n      this.type = type;\n      this.myId = id;\n      this.fetchData();\n    },\n\n    /**\r\n     * 提交审批意见以后的回调函数\r\n     */\n    updateFlow: function updateFlow() {\n      // 直接返回\n      this.goBack();\n    },\n\n    /**\r\n     * 获取详情信息\r\n     */\n    fetchData: function () {\n      var _fetchData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this5 = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.myId) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                (0, _InvoiceReimburse.GetInvoiceReimburseDetailById)({\n                  id: this.myId\n                }).then(function (res) {\n                  var _res$billFlowData, _res$billFlowData$for;\n\n                  _this5.billFlowData = res.billFlowData;\n                  _this5.invoiceTable.list = res.data.invoiceReimburseDetails;\n                  _this5.filter.stateOptions = ((_res$billFlowData = res.billFlowData) === null || _res$billFlowData === void 0 ? void 0 : (_res$billFlowData$for = _res$billFlowData.form) === null || _res$billFlowData$for === void 0 ? void 0 : _res$billFlowData$for.formState) || [];\n                  _this5.myDetails = res;\n                  _this5.attitudePara = {\n                    formId: res.billFlowData.formId,\n                    billFlowId: res.billFlowData.id,\n                    planId: res.data.id\n                  };\n\n                  _this5.$nextTick(function () {\n                    _this5.$refs['flowAttitude'].ruleForm.content = res.data.state === 1000 ? '已支付' : '';\n                  });\n                });\n                (0, _InvoiceReimburse.GetInvoiceReimburseAttitudeById)({\n                  id: this.myId\n                }).then(function (res) {\n                  _this5.payForm = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, _this5.payForm), {}, {\n                    account: res.data.account,\n                    bank: res.data.bank,\n                    capitalType: res.capitalType || _this5.payForm.capitalType,\n                    imprestAmount: res.data.imprestAmount,\n                    balance: res.data.balance\n                  });\n                }).catch(function (e) {\n                  console.log('fetchData:请求列表数据失败，错误信息：', e);\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function fetchData() {\n        return _fetchData.apply(this, arguments);\n      }\n\n      return fetchData;\n    }(),\n    goBack: function goBack() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    }\n  }\n};\nexports.default = _default2;",null]}