{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\components\\SelectDialog\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\components\\SelectDialog\\index.vue","mtime":1635844823957},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nvar _Select = _interopRequireDefault(require(\"@/components/SearchBar/form/Select\"));\n\nvar _Dialog = _interopRequireDefault(require(\"./Dialog\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default2 = {\n  name: 'SelectDialog',\n  components: {\n    Dialog: _Dialog.default,\n    Select: _Select.default\n  },\n  model: {\n    event: 'change',\n    prop: 'value'\n  },\n  props: {\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    // 默认单选\n    propsValue: {\n      type: String,\n      default: 'id'\n    },\n    // 与props.value作用相同，但优先于其\n    propsLabel: {\n      type: String,\n      default: 'name'\n    },\n    // 与props.value作用相同，但优先于其\n    tableColumn: {\n      // 表格渲染的列\n      type: Array,\n      default: function _default() {\n        return [// { prop: 'number', label: '编号', minWidth: '130' },\n          // { prop: 'name', label: '单位名称', minWidth: '90' },\n          // { prop: 'corporation', label: '法定代表人', minWidth: '120' }\n        ];\n      }\n    },\n    request: {\n      type: Object,\n      default: function _default() {\n        return {// fn: async(postData) => {\n          //     const res = await GetSubcontractorList(postData)\n          //     // to do 获取一些需要的数据\n          //     if(!this.init){\n          //       this.list = options\n          //       this.init=true\n          //     }\n          //     return res\n          //   },\n          //   params: [\n          //     { name: 'type', label: '分包类型', component: Select, props: { propsLabel: 'name', options: (res) => res.subcontractorTypeList }},\n          //     { name: 'name', label: '名称或编号', component: 'ElInput' }\n          //   ]\n        };\n      }\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    placeholder: {\n      type: String,\n      default: '选择'\n    },\n    size: {\n      type: String,\n      default: 'mini'\n    },\n    value: {\n      type: [Array, String, Number],\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      list: [],\n      loading: false,\n      curr: {}\n    };\n  },\n  computed: {\n    opLabel: function opLabel() {\n      return this.propsLabel || this.props.label;\n    },\n    opValue: function opValue() {\n      return this.propsValue || this.props.value;\n    },\n    inputVal: {\n      set: function set(val) {\n        this.$emit('change', val);\n        this.$emit('input', val);\n      },\n      get: function get() {\n        return this.value;\n      }\n    }\n  },\n  created: function created() {},\n  methods: {\n    fetchData: function fetchData() {\n      var _this = this;\n\n      var _this$request = this.request,\n          _fn = _this$request.fn,\n          params = _this$request.params;\n      return {\n        fn: function () {\n          var _fn2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee(postData) {\n            var res;\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _this.loading = true;\n                    _context.next = 3;\n                    return _fn(postData);\n\n                  case 3:\n                    res = _context.sent;\n\n                    // to do 获取一些需要的数据\n                    if (!_this.init) {\n                      _this.list = res.data;\n                      _this.init = true;\n                    }\n\n                    _this.loading = false;\n                    return _context.abrupt(\"return\", res);\n\n                  case 7:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          function fn(_x) {\n            return _fn2.apply(this, arguments);\n          }\n\n          return fn;\n        }(),\n        params: params\n      };\n    },\n    save: function save(val) {\n      this.curr = val;\n      this.$emit('select', val);\n    },\n    openDialog: function openDialog() {\n      this.$refs.select.blur();\n      this.$refs.personRef.openDialog();\n    }\n  }\n};\nexports.default = _default2;",null]}