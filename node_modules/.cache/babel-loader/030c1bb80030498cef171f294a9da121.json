{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\ywgl\\khgl\\customerSurveyAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\ywgl\\khgl\\customerSurveyAdd.vue","mtime":1628919666181},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nvar _customer = require(\"@/api/ywgl/customer\");\n\nvar _UpFile = _interopRequireDefault(require(\"@/components/UpLoad/UpFile\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'CustomerSurveyAdd',\n  components: {\n    UpFile: _UpFile.default\n  },\n  props: {\n    obj: {\n      type: Object,\n      default: null\n    },\n    customer: {\n      type: Number,\n      default: 0\n    }\n  },\n  data: function data() {\n    return {\n      ruleForm: {\n        id: 0,\n        formId: 0,\n        billId: 0,\n        title: '客户调研',\n        content: '',\n        operation: '调研',\n        fileList: [],\n        attitudeType: 2,\n        backGroup: 0,\n        // 0 制单\n        type: 6\n      },\n      buttonLoading: false,\n      refreshRouterName: '',\n      rules: {\n        content: [{\n          required: true,\n          message: '不能为空',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.fetchData();\n  },\n  methods: {\n    submitForm: function submitForm(formName) {\n      var _this = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var postData = JSON.parse(JSON.stringify(_this.ruleForm));\n          postData.formId = _this.customer;\n          postData.billId = _this.customer;\n          var tempIds = [];\n\n          if (postData.fileList.length > 0) {\n            tempIds = postData.fileList.map(function (m) {\n              return {\n                id: m.id,\n                addFlag: m.addFlag\n              };\n            });\n          }\n\n          postData.fileList = tempIds;\n\n          if (_this.obj) {\n            _this.buttonLoading = true;\n            (0, _customer.putCustomerSurvey)(postData).then(function (response) {\n              _this.$message(response.message);\n\n              _this.buttonLoading = false;\n\n              _this.$emit('dialogClose');\n            }).catch(function () {\n              _this.buttonLoading = false;\n            });\n          } else {\n            _this.buttonLoading = true;\n            (0, _customer.addCustomerSurvey)(postData).then(function (response) {\n              _this.$message(response.message);\n\n              _this.buttonLoading = false;\n\n              _this.$emit('dialogClose');\n            }).catch(function () {\n              _this.buttonLoading = false;\n            });\n          }\n        }\n      });\n    },\n    fetchData: function fetchData() {\n      if (this.obj) {\n        var newObj = JSON.parse(JSON.stringify(this.obj));\n        this.ruleForm = newObj;\n        this.ruleForm.fileList = newObj.upFiles;\n      }\n    }\n  }\n};\nexports.default = _default;",null]}