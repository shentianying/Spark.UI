{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\swcb\\businessCostEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\swcb\\businessCostEdit.vue","mtime":1628756195078},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _businessCost = require(\"@/api/cggl/businessCost\");\n\nvar _businessCostDetailAdd = _interopRequireDefault(require(\"./businessCostDetailAdd\"));\n\nvar _index = _interopRequireDefault(require(\"@/components/OrgSelect/index2\"));\n\nvar _flowSelect = _interopRequireDefault(require(\"@/components/Flow/flowSelect\"));\n\nvar _flowDisplay = _interopRequireDefault(require(\"@/components/Flow/flowDisplay\"));\n\nvar _flowAttitude = _interopRequireDefault(require(\"@/components/Flow/flowAttitude\"));\n\nvar _pikazExcelJs = require(\"pikaz-excel-js\");\n\nvar _validate = require(\"@/utils/validate\");\n\nvar _index2 = require(\"@/utils/index\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'BusinessCostEdit',\n  components: {\n    BusinessCostDetailAdd: _businessCostDetailAdd.default,\n    OrgSelect2: _index.default,\n    ExcelExport: _pikazExcelJs.ExcelExport,\n    ExcelImport: _pikazExcelJs.ExcelImport,\n    FlowSelect: _flowSelect.default,\n    FlowDisplay: _flowDisplay.default,\n    FlowAttitude: _flowAttitude.default\n  },\n  data: function data() {\n    return {\n      ruleForm: {\n        id: 0,\n        number: '',\n        orgId: null,\n        remark: '',\n        state: 0,\n        billFlowId: 0\n      },\n      loading: false,\n      showbuttons: false,\n      activate: false,\n      dialogTableVisible: false,\n      dialogTitle: '保存',\n      dialogWidth: '70%',\n      comName: 'BusinessCostDetailAdd',\n      currentRow: null,\n      listIndex: 0,\n      list: [],\n      attitudePara: null,\n      loadFlow: false,\n      active: 0,\n      billFlow: null,\n      columnShow: {\n        unit2: true,\n        brand: true,\n        model: true,\n        spec: true,\n        thickness: true,\n        texture: true,\n        surfaceTreatment: true,\n        designNumber: true\n      },\n      sheet: [{\n        // title: '材料导入模板',\n        tHeader: ['材料名称', '数量', '单价', '总金额', '备注'],\n        table: [],\n        keys: ['CategoryName', 'Quantity', 'Price', 'Amount', 'Remark'],\n        sheetName: '商务成本材料明细'\n      }],\n      rules: {\n        orgId: [{\n          required: true,\n          message: '请输入',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  watch: {\n    'ruleForm.orgId': {\n      handler: function handler(value, oldvalue) {\n        if (!oldvalue) {\n          this.$refs['ruleForm'].validateField('orgId', function (valid) {});\n        }\n      },\n      deep: true\n    }\n  },\n  activated: function activated() {\n    if (this.$route.params.id) {\n      this.ruleForm.orgId = null; // 刷新 org 列表\n\n      this.initData();\n      this.refreshRouterName = this.$route.params.refreshRouterName;\n    }\n  },\n  mounted: function mounted() {\n    if (!this.$route.params.id) {\n      this.showbuttons = true;\n      this.activate = true;\n    }\n  },\n  methods: {\n    // 根据表单获取流程\n    getDynamicFlow: function getDynamicFlow(formName) {\n      var _this = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var newObj = JSON.parse(JSON.stringify(_this.ruleForm)); // 拼接材料明细参数\n\n          var arr1 = [];\n\n          _this.list.forEach(function (e) {\n            var item = {};\n            item.id = e.id;\n            item.quantity = e.quantity;\n            item.price = e.price;\n            item.amount = e.amount;\n            item.remark = e.remark;\n            arr1.push(item);\n          });\n\n          newObj.businessCostDetails = arr1; // console.log('添加计划的数据：', newObj)\n\n          (0, _businessCost.getBillFlow)(newObj).then(function (response) {\n            if (response.success) {\n              _this.billFlow = response.data.billFlow;\n              _this.active = 1;\n            } else {\n              _this.$message(response.message);\n            }\n          });\n        }\n      });\n    },\n    submitForm: function submitForm(formName, state) {\n      var _this2 = this;\n\n      this.active = 2;\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var newObj = JSON.parse(JSON.stringify(_this2.ruleForm)); // 计划状态\n\n          newObj.state = state; // 拼接材料明细参数\n\n          var arr1 = [];\n\n          _this2.list.forEach(function (e) {\n            var item = {};\n            item.id = e.id;\n            item.materialCategoryId = e.materialCategoryId;\n            item.quantity = e.quantity;\n            item.price = e.price;\n            item.amount = e.amount;\n            item.remark = e.remark;\n            arr1.push(item);\n          });\n\n          newObj.businessCostDetails = arr1;\n\n          if (_this2.billFlow) {\n            // 获取流程组件中的数据\n            var billFlow = _this2.$refs.flowSelect.getBillFlow();\n\n            if (!billFlow) {\n              return false;\n            }\n\n            newObj.billFlow = billFlow;\n          } else {\n            _this2.$message('流程数据不能为空');\n\n            return;\n          }\n\n          _this2.loading = true;\n\n          if (_this2.id) {\n            (0, _businessCost.putBusinessCost)(newObj).then(function (response) {\n              if (response.errorMsg) {\n                // 验证错误\n                _this2.$alert(\"\".concat(response.errorMsg.replace(/；/g, '；<br />')), {\n                  dangerouslyUseHTMLString: true\n                });\n\n                return;\n              }\n\n              _this2.$message(response.message);\n\n              _this2.loading = false;\n\n              _this2.closeThePage(); // this.setData(response)\n\n            }).catch(function () {\n              _this2.loading = false;\n              _this2.active = 0;\n            });\n          } else {\n            console.log(newObj);\n            (0, _businessCost.addBusinessCost)(newObj).then(function (response) {\n              if (response.errorMsg) {\n                // 验证错误\n                _this2.$alert(\"\".concat(response.errorMsg.replace(/；/g, '；<br />')), {\n                  dangerouslyUseHTMLString: true\n                });\n\n                return;\n              }\n\n              _this2.$message(response.message);\n\n              _this2.loading = false;\n\n              _this2.closeThePage(); // this.setData(response)\n\n            }).catch(function () {\n              _this2.loading = false;\n              _this2.active = 0;\n            });\n          }\n        }\n      });\n    },\n    initData: function () {\n      var _initData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this3 = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // 有参数id 就是编辑\n                if (this.$route.query.id) {\n                  this.id = this.$route.query.id;\n                }\n\n                if (!this.id) {\n                  _context.next = 6;\n                  break;\n                }\n\n                this.loading = true;\n                this.activate = false; // 销毁部门组件\n\n                _context.next = 6;\n                return (0, _businessCost.getBusinessCostById)({\n                  id: this.id\n                }).then(function (response) {\n                  return _this3.setData(response);\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function initData() {\n        return _initData.apply(this, arguments);\n      }\n\n      return initData;\n    }(),\n    setData: function setData(response) {\n      var data = response.data; // 填充参数\n\n      this.ruleForm = {\n        id: data.id,\n        number: data.number,\n        orgId: data.orgId,\n        remark: data.remark,\n        billFlowId: data.billFlowId,\n        state: data.state\n      }; // 填充 明细列表\n\n      this.list = data.businessCostDetails;\n      this.loading = false; // loading 状态关闭\n\n      this.attitudePara = {\n        planId: data.id,\n        billFlowId: data.billFlowId\n      };\n      this.showbuttons = true; // 初始化完成，显示上面的按钮\n\n      this.activate = true; // 加载部门组件\n\n      this.loadFlow = true; // 加载审批组件\n    },\n    closeThePage: function closeThePage() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    },\n    dialogClose: function dialogClose(data, state) {\n      this.addMaterial(data, state);\n      this.dialogTableVisible = false;\n    },\n    addMaterial: function addMaterial(data, state) {\n      if (data) {\n        if (state === 'add') {\n          this.list.push(data);\n        } else if (state === 'update') {\n          this.list.splice(this.listIndex, 1, data);\n        }\n      }\n    },\n    previous: function previous() {\n      // 上一步\n      this.active = 0;\n      this.billFlow = null;\n    },\n    edit: function edit(d) {\n      this.currentRow = d.row;\n      this.listIndex = d.$index;\n      this.dialogTitle = '编辑材料';\n      this.comName = 'BusinessCostDetailAdd';\n      this.dialogWidth = '70%';\n      this.dialogTableVisible = true;\n    },\n    add: function add() {\n      this.currentRow = null;\n      this.dialogTitle = '添加材料';\n      this.comName = 'BusinessCostDetailAdd';\n      this.dialogWidth = '70%';\n      this.dialogTableVisible = true;\n    },\n    del: function del(d) {\n      // 页面删除\n      this.list.splice(d.$index, 1);\n    },\n    onError: function onError(err) {\n      this.$message.info('导出失败：' + err);\n    },\n    onSuccess: function onSuccess(d, file) {\n      var _this4 = this;\n\n      // 导入判断\n      var data = d[0].data; // console.log('数据为空的字段data中不会有该字段:', data)\n\n      if (data.length) {\n        var postData = [];\n        var errorMessage = '';\n\n        var _iterator = (0, _createForOfIteratorHelper2.default)(data),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var e = _step.value;\n\n            if (!e.材料名称) {\n              errorMessage += '第' + e.__rowNum__ + '行，材料名称不能为空；';\n            }\n\n            if (!e.材料名称) {\n              errorMessage += '第' + e.__rowNum__ + '行，材料名称不能为空；';\n            }\n\n            if (!e.数量) {\n              errorMessage += '第' + e.__rowNum__ + '行，数量不能为空；';\n            } // 必须是数字\n\n\n            if (e.数量) {\n              if (!_validate.validateData.dbl(e.数量.trim()).isSuccess) {\n                errorMessage += '第' + e.__rowNum__ + '行，数量必须是数字；';\n              }\n            }\n\n            if (!e.单价) {\n              errorMessage += '第' + e.__rowNum__ + '行，单价不能为空；';\n            }\n\n            if (e.单价) {\n              if (!_validate.validateData.dbl(e.单价.trim()).isSuccess) {\n                errorMessage += '第' + e.__rowNum__ + '行，单价必须是数字；';\n              }\n            }\n\n            if (!e.总金额) {\n              errorMessage += '第' + e.__rowNum__ + '行，总金额不能为空；';\n            }\n\n            if (e.总金额) {\n              if (!_validate.validateData.dbl(e.总金额.trim()).isSuccess) {\n                errorMessage += '第' + e.__rowNum__ + '行，总金额必须是数字；';\n              }\n            }\n\n            var obj1 = {};\n            var obj2 = {};\n            var detailCols = ['CategoryName', 'Quantity', 'Price', 'Amount', 'Remark'];\n            this.sheet[0].keys.forEach(function (v, i) {\n              var value = e[_this4.sheet[0].tHeader[i]]; // 清除空格 回车 换行符\n\n              if (value) {\n                value = (0, _index2.cleanText)(value);\n              } else {\n                value = '';\n              } // console.log('v:' + v + ';value:' + value)\n\n\n              if (detailCols.includes(v)) {\n                obj1[v] = value;\n              } else {\n                obj2[v] = value;\n              }\n            });\n            obj1['Material'] = obj2;\n            postData.push(obj1);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        this.loading = true;\n\n        if (errorMessage.length > 0) {\n          this.$alert(\"\".concat(errorMessage.replace(/；/g, '；<br />')), {\n            dangerouslyUseHTMLString: true\n          });\n          this.loading = false;\n          return;\n        } // console.log('postData:', postData)\n        // 把数据推送到后端进行验证\n\n\n        (0, _businessCost.checkBusinessCostDetail)(postData).then(function (response) {\n          _this4.loading = false;\n\n          if (response.request === 100) {\n            _this4.$alert(\"\".concat(response.msg.replace(/；/g, '；<br />')), {\n              dangerouslyUseHTMLString: true\n            });\n          } else {\n            if (response.data) {\n              var _data = response.data; // 拼接成数组对象\n\n              var _iterator2 = (0, _createForOfIteratorHelper2.default)(_data),\n                  _step2;\n\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  var item1 = _step2.value;\n                  var obj2 = {\n                    materialCategoryId: item1.materialCategoryId,\n                    materialCategory: item1.materialCategory,\n                    quantity: item1.quantity,\n                    price: item1.price,\n                    amount: item1.amount,\n                    remark: item1.remark\n                  };\n                  console.log(obj2);\n\n                  _this4.addMaterial(obj2, 'add');\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n            }\n          }\n        }).catch(function () {\n          _this4.loading = false;\n        });\n      } else {\n        this.$message.info('模板中数据不能为空');\n      }\n    },\n    cancel: function cancel() {\n      var _this5 = this;\n\n      // 作废\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this5.active = 2;\n        _this5.loading = true;\n        (0, _businessCost.deleteBusinessCost)({\n          id: _this5.ruleForm.id\n        }).then(function (response) {\n          _this5.$message(response.message);\n\n          _this5.loading = false;\n\n          _this5.closeThePage();\n        });\n      }).catch(function () {});\n    }\n  }\n};\nexports.default = _default;",null]}