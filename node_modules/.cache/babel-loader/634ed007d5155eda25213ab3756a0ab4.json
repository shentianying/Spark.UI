{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\jcsj\\components\\userDataRange.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\jcsj\\components\\userDataRange.vue","mtime":1624613416892},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nvar _index = require(\"@/utils/index\");\n\nvar _role = require(\"@/api/xtgl/role\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'UserDataRange',\n  components: {},\n  props: {\n    id: {\n      type: Number,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      list: null,\n      buttonLoading: false,\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      },\n      userOrg: [],\n      orgList: []\n    };\n  },\n  activated: function activated() {\n    if (this.$route.params.id) {\n      this.fetchData();\n      this.refreshRouterName = this.$route.params.refreshRouterName;\n    }\n  },\n  mounted: function mounted() {\n    this.fetchData();\n  },\n  methods: {\n    fetchData: function fetchData() {\n      var _this = this;\n\n      this.buttonLoading = true;\n      var postData = {};\n      postData.userId = this.id;\n      (0, _role.getUserDataRange)(postData).then(function (response) {\n        var data1 = response.data1,\n            data2 = response.data2;\n        _this.orgList = data2;\n        _this.list = (0, _index.getTree)(0, data2);\n        _this.userOrg = data1; // 默认设置\n\n        var orgIdArray = _this.userOrg.map(function (m) {\n          return m.organizationId;\n        });\n\n        _this.$refs.tree.setCheckedKeys(orgIdArray);\n\n        _this.buttonLoading = false;\n      }).catch(function () {\n        _this.buttonLoading = false;\n      });\n    },\n    closeThePage: function closeThePage() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    },\n    save: function save() {\n      var _this2 = this;\n\n      var nodes = this.$refs.tree.getCheckedNodes();\n\n      if (!nodes) {\n        this.$message('请选择用户范围权限');\n        return;\n      } // console.log('nodes:', nodes)\n\n\n      var arr = [];\n      nodes.forEach(function (ele) {\n        // 取最大父节点\n        var pNodes = (0, _index.findPNode)(_this2.orgList, ele.id);\n        var pNode = pNodes.find(function (f) {\n          return f.pid === 0;\n        }); // 添加到数组\n\n        arr.push({\n          userId: _this2.$route.query.id,\n          companyId: pNode.id,\n          organizationId: ele.id\n        });\n      }); // console.log('拼装后的userorgList：', arr)\n\n      this.buttonLoading = true;\n      (0, _role.addUserOrg)(arr).then(function (response) {\n        _this2.$message(response.message);\n\n        _this2.buttonLoading = false;\n      }).catch(function () {\n        _this2.buttonLoading = false;\n      });\n    }\n  }\n};\nexports.default = _default;",null]}