{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\material\\components\\addMaterialCategoryProperty.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\material\\components\\addMaterialCategoryProperty.vue","mtime":1624071363317},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nvar _material = require(\"@/api/cggl/material\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'AddMaterialCategoryProperty',\n  props: {\n    obj: {\n      type: Object,\n      default: null\n    },\n    organizationId: {\n      type: Number,\n      default: 0\n    }\n  },\n  data: function data() {\n    return {\n      ruleForm: {},\n      list: null,\n      listLoading: false,\n      buttonLoading: false,\n      selectionItem: [],\n      rules: {// propertyArray: [{ type: 'array', required: true, message: '请选择', trigger: 'change' }]\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.fetchData();\n  },\n  methods: {\n    submitForm: function submitForm(formName) {\n      var _this = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          if (_this.selectionItem.length <= 0) {\n            _this.$message.error('请选择属性');\n\n            return false;\n          }\n\n          var postData = [];\n\n          _this.selectionItem.forEach(function (element) {\n            var row = {};\n            row.categoryId = _this.obj.id;\n            row.propertyId = element.propertyId;\n            row.canInput = element.canInput;\n            row.inUse = element.inUse;\n            postData.push(row);\n          });\n\n          _this.buttonLoading = true;\n          (0, _material.addMaterialCategoryProperty)(postData).then(function (response) {\n            _this.$message(response.message);\n\n            _this.buttonLoading = false;\n\n            _this.$emit('dialogClose');\n          }).catch(function () {\n            _this.buttonLoading = false;\n          });\n        }\n      });\n    },\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    fetchData: function fetchData() {\n      var _this2 = this;\n\n      this.listLoading = true;\n      new Promise(function (resolve, reject) {\n        var postData = {};\n        postData.organizationId = _this2.organizationId;\n        (0, _material.getAllMaterialProperty)(postData).then(function (response) {\n          var data = [];\n          response.data.forEach(function (ele) {\n            var row = {};\n            row.name = ele.name;\n            row.inUse = true;\n            row.canInput = true;\n            row.propertyId = ele.id;\n            data.push(row);\n          });\n          _this2.list = data;\n          resolve(data);\n        });\n      }).then(function (res) {\n        (0, _material.getMaterialCategoryPropertyByCategoryId)({\n          categoryId: _this2.obj.id\n        }).then(function (response) {\n          response.data.forEach(function (ele) {\n            res.forEach(function (row) {\n              if (row.propertyId === ele.propertyId) {\n                row.inUse = ele.inUse;\n                row.canInput = ele.canInput;\n              }\n            });\n\n            _this2.$refs.selectTable.toggleRowSelection(res.find(function (item) {\n              return item.propertyId === ele.propertyId;\n            }));\n          });\n          _this2.listLoading = false;\n        });\n      }).catch(function () {\n        _this2.listLoading = false;\n      });\n    },\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.selectionItem = val;\n    }\n  }\n};\nexports.default = _default;",null]}