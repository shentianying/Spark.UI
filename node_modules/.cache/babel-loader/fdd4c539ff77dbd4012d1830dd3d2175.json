{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\project\\projectAttitude.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\project\\projectAttitude.vue","mtime":1628155080771},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _project = require(\"@/api/xmgl/project\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import UpFile from '@/components/UpLoad/UpFile'\nvar _default = {\n  name: 'ProjectAttitude',\n  components: {// UpFile\n  },\n  data: function data() {\n    return {\n      ruleForm: {\n        orgId: 0,\n        managementiState: 0,\n        inUse: true,\n        organization: {\n          name: ''\n        }\n      },\n      fileList: [],\n      engPropertiesName: '',\n      managementiStateName: '',\n      structureName: '',\n      informationSourceName: '',\n      taxTypeName: '',\n      projectPropertyName: '',\n      proPropertiesName: '',\n      stateName: '',\n      projectId: null,\n      rules: {}\n    };\n  },\n  created: function created() {},\n  mounted: function mounted() {\n    this.initData();\n  },\n  activated: function activated() {},\n  methods: {\n    initData: function initData() {\n      var _this = this;\n\n      this.projectId = this.$route.query.id;\n\n      if (this.projectId) {\n        (0, _project.getProjectById)({\n          id: this.projectId\n        }).then(function (response) {\n          var data = response.data,\n              files = response.files,\n              dictionaries = response.dictionaries; // const { data } = response\n\n          _this.ruleForm = data;\n          _this.fileList = files;\n          dictionaries.forEach(function (element) {\n            if (element.type === 'engProperties') {\n              _this.engPropertiesName = element.name;\n            }\n\n            if (element.type === 'managementiState') {\n              _this.managementiStateName = element.name;\n            }\n\n            if (element.type === 'structureType') {\n              _this.structureName = element.name;\n            }\n\n            if (element.type === 'informationSource') {\n              _this.informationSourceName = element.name;\n            }\n\n            if (element.type === 'taxType') {\n              _this.taxTypeName = element.name;\n            }\n\n            if (element.type === 'projectProperty') {\n              _this.projectPropertyName = element.name;\n            }\n\n            if (element.type === 'proProperties') {\n              _this.proPropertiesName = element.name;\n            }\n\n            if (element.type === 'stateType') {\n              _this.stateName = element.name;\n            }\n          });\n        });\n      }\n    },\n    closeThePage: function closeThePage() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    }\n  }\n};\nexports.default = _default;",null]}