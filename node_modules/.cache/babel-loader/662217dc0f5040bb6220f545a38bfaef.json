{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\supplier\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\supplier\\index.vue","mtime":1635216068752},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _supplier = require(\"@/api/cggl/supplier\");\n\nvar _index = require(\"@/utils/index\");\n\nvar _searchForm = _interopRequireDefault(require(\"@/components/Other/searchForm\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'Supplier',\n  components: {\n    SearchForm: _searchForm.default\n  },\n  data: function data() {\n    return {\n      list: [],\n      listLoading: false,\n      dialogTableVisible: false,\n      dialogTitle: '保存',\n      total: 0,\n      currentPage: 1,\n      pageSize: this.utils.getPersonalSettings().pageSize,\n      currentRow: null,\n      buttonLoading: false,\n      searchText: '' // organizationId: this.$store.state.user.selectOrgId\n\n    };\n  },\n  activated: function activated() {\n    if (this.$route.params.refresh) {\n      this.fetchData();\n    }\n  },\n  mounted: function mounted() {\n    // console.log('index 页面：router:', this.$route)\n    this.fetchData();\n  },\n  methods: {\n    fetchData: function fetchData() {\n      this.getPorperty();\n    },\n    sizeChange: function sizeChange(val) {\n      this.pageSize = val;\n      this.fetchData();\n    },\n    goSearch: function goSearch() {\n      this.getPorperty();\n    },\n    getPorperty: function getPorperty() {\n      var _this = this;\n\n      this.listLoading = true;\n      var postData = {};\n      postData.name = this.searchText;\n      postData.currentPage = this.currentPage;\n      postData.pageSize = this.pageSize; // postData.orgId = this.orgValue\n\n      (0, _supplier.getSupplierPaging)(postData).then(function (response) {\n        var data = response.data,\n            count = response.count; // 星级数字更改显示：-1——不合格 0——合格等等\n\n        data.forEach(function (element) {\n          if (element.rate === -1) {\n            element.rate = '不合格';\n          }\n\n          if (element.rate === 0) {\n            element.rate = '合格';\n          }\n\n          if (element.rate === 1) {\n            element.rate = '⭐';\n          }\n\n          if (element.rate === 2) {\n            element.rate = '⭐⭐';\n          }\n\n          if (element.rate === 3) {\n            element.rate = '⭐⭐⭐';\n          }\n\n          if (element.rate === 4) {\n            element.rate = '⭐⭐⭐⭐';\n          }\n\n          if (element.rate === 5) {\n            element.rate = '⭐⭐⭐⭐⭐';\n          }\n\n          element.message = '制单人：' + element.createUserName + '  制单时间：' + (0, _index.formatTime)(new Date(element.createDate), '{y}-{m}-{d} {h}:{i}:{s}') + '\\n' + '更新人：' + element.lastEditUserName + '更新时间：' + (0, _index.formatTime)(new Date(element.lastEditDate), '{y}-{m}-{d} {h}:{i}:{s}');\n        });\n        _this.list = data;\n        _this.total = count;\n        _this.listLoading = false;\n      }).catch(function () {\n        _this.listLoading = false;\n      });\n    },\n    dialogClose: function dialogClose() {\n      this.dialogTableVisible = false;\n      this.getPorperty();\n    },\n    handleAdd: function handleAdd() {\n      var _this2 = this;\n\n      this.$store.dispatch('tagsView/delView', {\n        name: 'SupplierAdd'\n      }).then(function () {\n        _this2.$router.push({\n          name: 'SupplierAdd',\n          query: {\n            refreshRouterName: _this2.$route.name\n          }\n        });\n      });\n    },\n    handleEdit: function handleEdit(id) {\n      this.$router.push({\n        name: 'SupplierAdd',\n        query: {\n          id: id,\n          refreshRouterName: this.$route.name\n        },\n        params: {\n          id: id\n        }\n      });\n    },\n    handleDetail: function handleDetail(id) {\n      this.$router.push({\n        name: 'SupplierDetail',\n        query: {\n          id: id,\n          refreshRouterName: this.$route.name\n        },\n        params: {\n          id: id\n        }\n      });\n    },\n    handleApproval: function handleApproval(id, type) {\n      this.$router.push({\n        name: 'SupplierAttitude',\n        query: {\n          id: id,\n          type: type,\n          refreshRouterName: this.$route.name\n        },\n        params: {\n          id: id\n        }\n      });\n    } // ,\n    // handleDel(id) {\n    //   this.$confirm('是否确定删除?', '提示', {\n    //     confirmButtonText: '确定',\n    //     cancelButtonText: '取消',\n    //     type: 'warning'\n    //   }).then(() => {\n    //     deleteMaterialProperty({ id: id }).then(response => {\n    //       this.getPorperty()\n    //       this.$message.success(response.message)\n    //     })\n    //   }).catch(() => {\n    //     this.$message.info('已经取消删除')\n    //   })\n    // }\n\n  }\n};\nexports.default = _default;",null]}