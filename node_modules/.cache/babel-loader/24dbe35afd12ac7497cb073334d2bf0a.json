{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\lcgl\\flowDesign\\component\\addFlowNode.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\lcgl\\flowDesign\\component\\addFlowNode.vue","mtime":1624235546386},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nvar _addFlowNodeRole = _interopRequireDefault(require(\"./addFlowNodeRole\"));\n\nvar _index = require(\"@/utils/index\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import { initFlowNode } from '@/api/xtgl/flow'\nvar _default = {\n  name: 'AddFlowNode',\n  components: {\n    AddFlowNodeRole: _addFlowNodeRole.default\n  },\n  props: {\n    obj: {\n      type: [Object, Array],\n      default: null\n    },\n    formStateId: {\n      type: Number,\n      default: null\n    },\n    dropDownData: {\n      type: Object,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      ruleForm: {\n        group: 0,\n        // state: null,\n        mode: 1,\n        maxDays: 0,\n        grade: 0\n      },\n      list: [],\n      flowNodeType: [],\n      flowNodeMode: [],\n      buttonLoading: false,\n      dialogTableVisible: false,\n      rules: {\n        group: [{\n          required: true,\n          message: '必填',\n          trigger: 'blur'\n        }],\n        // state: [{ required: true, message: '必填', trigger: 'blur' }],\n        mode: [{\n          required: true,\n          message: '必填',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: {\n    getObjectValue: function getObjectValue() {\n      return _index.getObjectValue;\n    }\n  },\n  mounted: function mounted() {\n    // console.log('addFlowNode.vue==>this.obj:', this.obj)\n    this.initData();\n  },\n  created: function created() {},\n  methods: {\n    submitForm: function submitForm() {\n      var _this = this;\n\n      this.$refs['ruleForm1'].validate(function (valid) {\n        if (valid) {\n          var newObj = JSON.parse(JSON.stringify(_this.ruleForm));\n          var result = [];\n\n          _this.list.forEach(function (e) {\n            result.push({\n              group: newObj.group,\n              // state: newObj.state,\n              maxDays: e.maxDays,\n              grade: e.grade,\n              option: e.option,\n              mode: newObj.mode,\n              roleId: e.roleId,\n              roleType: e.roleType\n            });\n          }); // console.log('result:', result)\n\n\n          if (_this.obj) {\n            _this.$emit('dialogEditClose', result); // 编辑\n\n          } else {\n            _this.$emit('dialogAddClose', result); // 添加\n\n          }\n        }\n      });\n    },\n    initData: function initData() {\n      if (this.obj) {\n        var thisObj = JSON.parse(JSON.stringify(this.obj));\n        this.ruleForm = {\n          flowId: thisObj[0].flowId,\n          group: thisObj[0].group,\n          // state: thisObj[0].state,\n          mode: thisObj[0].mode\n        };\n        this.list = thisObj;\n      }\n    },\n    dialogClose: function dialogClose(data) {\n      // console.log('this.list:', this.list)\n      // console.log('data:', data)\n      // 添加 角色 判断重复\n      if (data.roleId === 0) {\n        var _has = this.list.find(function (f) {\n          return f.roleType === data.roleType;\n        });\n\n        if (_has) {\n          var roleType = this.dropDownData.roleTypeList.find(function (f) {\n            return f.value === data.roleType;\n          }).name;\n          this.$alert(\"\\u9009\\u7684\\u3010\".concat(roleType, \"\\u3011\\u91CD\\u590D\\u4E86\"));\n          return false;\n        }\n      }\n\n      if (data.roleId > 0) {\n        var _has2 = this.list.find(function (f) {\n          return f.roleId === data.roleId;\n        });\n\n        if (_has2) {\n          var roleName = (0, _index.getObjectValue)(this.dropDownData.roleList.find(function (f) {\n            return f.id === data.roleId;\n          }), 'name');\n\n          var _roleType = (0, _index.getObjectValue)(this.dropDownData.roleTypeList.find(function (f) {\n            return f.value === data.roleType;\n          }), 'name');\n\n          this.$alert(\"\\u9009\\u7684\\u3010\".concat(_roleType, \"\\u3011-\\u3010\").concat(roleName, \"\\u3011\\u91CD\\u590D\\u4E86\"));\n          return false;\n        }\n      }\n\n      this.list.push(data);\n      this.dialogTableVisible = false;\n    },\n    addNodeRole: function addNodeRole() {\n      this.dialogTableVisible = true;\n    },\n    deleteFlowNode: function deleteFlowNode(index) {\n      this.list.splice(index, 1);\n    } // ,\n    // getObjectValue(v, a) { // 获取对象中某个属性的值 v:值 a:属性名称\n    //   if (v) { return v[a] } else { return '无' }\n    // }\n\n  }\n};\nexports.default = _default;",null]}