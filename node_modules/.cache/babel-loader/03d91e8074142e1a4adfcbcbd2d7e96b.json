{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\material\\components\\addRangeMCP.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\material\\components\\addRangeMCP.vue","mtime":1626514528229},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nvar _material = require(\"@/api/cggl/material\");\n\nvar _addMCPItem = _interopRequireDefault(require(\"./addMCPItem2\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'AddRangeMCP',\n  components: {\n    AddMCPItem2: _addMCPItem.default\n  },\n  props: {\n    obj: {\n      type: Object,\n      default: null\n    },\n    organizationId: {\n      type: Number,\n      default: 0\n    },\n    nodes: {\n      type: Array,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      ruleForm: {},\n      list: null,\n      listLoading: false,\n      buttonLoading: false,\n      selectionItem: [],\n      dialogTableVisible: false,\n      currentRow: null,\n      rules: {\n        propertyArray: [{\n          type: 'array',\n          required: true,\n          message: '请选择',\n          trigger: 'change'\n        }],\n        sort: [{\n          required: true,\n          message: '请输入',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.fetchData();\n  },\n  methods: {\n    submitForm: function submitForm(formName) {\n      var _this = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          if (_this.selectionItem.length <= 0) {\n            _this.$message.error('请选择属性');\n\n            return false;\n          }\n\n          var postData = [];\n\n          var categoryIds = _this.nodes.map(function (m) {\n            return m.id;\n          });\n\n          categoryIds.forEach(function (ele1) {\n            _this.selectionItem.forEach(function (ele2) {\n              var row = {};\n              row.categoryId = ele1;\n              row.propertyId = ele2.propertyId;\n              row.canInput = ele2.canInput;\n              row.isRequired = ele2.isRequired2;\n              row.MCPItem = ele2.MCPItem;\n              row.isTargetRequired = ele2.isTargetRequired;\n              postData.push(row);\n            });\n          });\n          _this.buttonLoading = true;\n          (0, _material.addMaterialCategoryProperty)(postData).then(function (response) {\n            _this.$message(response.message);\n\n            _this.buttonLoading = false;\n\n            _this.$emit('addProClose');\n          }).catch(function () {\n            _this.buttonLoading = false;\n          });\n        }\n      });\n    },\n    fetchData: function fetchData() {\n      var _this2 = this;\n\n      this.listLoading = true;\n      var postData = {};\n      postData.organizationId = this.organizationId;\n      (0, _material.getAllMaterialProperty)(postData).then(function (response) {\n        var data = [];\n        var selectionRow = [];\n        response.data.forEach(function (ele) {\n          var row = {};\n          row.id = ele.id;\n          row.name = ele.name;\n          row.canInput = false;\n          row.propertyId = ele.id;\n          row.MCPItem = [];\n          row.isRequired = ele.isRequired; // 属性的必选\n\n          row.isRequired2 = true;\n          row.isTargetRequired = true;\n\n          if (ele.isRequired) {\n            selectionRow.push(row);\n          }\n\n          data.push(row);\n        });\n        _this2.list = data;\n\n        _this2.$nextTick(function () {\n          selectionRow.forEach(function (row) {\n            _this2.$refs.selectTable.toggleRowSelection(row);\n          });\n        });\n\n        _this2.listLoading = false;\n      });\n    },\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.selectionItem = val;\n    },\n    handleEdit: function handleEdit(row) {\n      this.currentRow = row;\n      this.comName = 'AddMCPItem2';\n      this.dialogTableVisible = true;\n    },\n    addItemClose: function addItemClose(data) {\n      var _this3 = this;\n\n      // 查询出选中对象所在 list 中的对象\n      var list0 = this.list.find(function (f) {\n        return f.id === _this3.currentRow.propertyId;\n      }); // list 对象中添加属性 值为传过来的对象\n\n      list0.MCPItem = data; // 可选项不为空时，设置该行为选中状态\n\n      if (data.length > 0) this.$refs.selectTable.toggleRowSelection(list0, true);\n      this.dialogTableVisible = false;\n    },\n    checkboxT: function checkboxT(row, index) {\n      // 必选的行，就 禁用\n      if (row.isRequired) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }\n};\nexports.default = _default;",null]}