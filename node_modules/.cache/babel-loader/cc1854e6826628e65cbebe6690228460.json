{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\htly\\ProjectSiteSign\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xmgl\\htly\\ProjectSiteSign\\edit.vue","mtime":1633684104562},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/objectSpread2\"));\n\nvar _flowSelect = _interopRequireDefault(require(\"@/components/Flow/flowSelect\"));\n\nvar _MyForm = _interopRequireDefault(require(\"@/components/MyForm\"));\n\nvar _validate = require(\"@/utils/validate\");\n\nvar _project = require(\"@/api/xmgl/project.js\");\n\nvar _ProjectSiteSign = require(\"@/api/xmgl/ProjectSiteSign.js\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'ProjectSiteSignEdit',\n  components: {\n    FlowSelect: _flowSelect.default,\n    MyForm: _MyForm.default\n  },\n  data: function data() {\n    return {\n      size: 'mini',\n      inputPlaceholder: '请输入',\n      selectPlaceholder: '请选择',\n      active: 1,\n      // 提交进度 1: 编辑信息 2: 编辑审批流程\n      firstForm: {\n        companyId: '',\n        // 公司id\n        projectId: '',\n        // 项目id\n        id: 0,\n        // 新增为0\n        number: '',\n        // 新增时,编号后端生成\n        orgId: '',\n        // 部门id\n        orgName: '',\n        // 组织机构名称\n        name: '',\n        // 签证名称\n        reportAmount: '',\n        // 上报值\n        approveAmount: '',\n        // 审定值\n        costAmount: '',\n        // 成本值\n        firstRepresent: '',\n        // 甲方代表\n        occurDate: '',\n        // 发生日期\n        predictFinishDate: '',\n        // 计划完成日期\n        coordinateType: 0,\n        // 是否协助类型\n        firstPartyContent: '',\n        // 甲方指令内容\n        noTransactReason: '',\n        // 未办理原因\n        coordinateContent: '',\n        // 协调配合内容\n        remark: '',\n        // 备注\n        progressType: 1,\n        // 进度id\n        sendDate: '',\n        // 上报日期\n        transactDate: '',\n        // 办理日期\n        fileList: [],\n        // 附件\n        state: 0,\n        // 状态\n        billFlow: null // 单据流程\n\n      },\n      firstRules: {\n        projectId: [{\n          required: true,\n          message: '请选择项目',\n          trigger: 'change'\n        }],\n        name: [{\n          required: true,\n          message: '请输入签证名称',\n          trigger: 'change'\n        }],\n        reportAmount: [{\n          required: true,\n          message: '请输入上报值',\n          trigger: 'change'\n        }, {\n          validator: _validate.validate.money,\n          message: '金额格式不正确',\n          trigger: 'change'\n        }, {\n          validator: _validate.validate.max_amount,\n          message: '超过所能存储的最大金额',\n          trigger: 'change'\n        }],\n        approveAmount: [{\n          required: true,\n          message: '请输入审定值',\n          trigger: 'change'\n        }, {\n          validator: _validate.validate.money,\n          message: '金额格式不正确',\n          trigger: 'change'\n        }, {\n          validator: _validate.validate.max_amount,\n          message: '超过所能存储的最大金额',\n          trigger: 'change'\n        }],\n        costAmount: [{\n          required: true,\n          message: '请输入成本值',\n          trigger: 'change'\n        }, {\n          validator: _validate.validate.money,\n          message: '金额格式不正确',\n          trigger: 'change'\n        }, {\n          validator: _validate.validate.max_amount,\n          message: '超过所能存储的最大金额',\n          trigger: 'change'\n        }],\n        firstRepresent: [{\n          required: true,\n          message: '请输入甲方代表',\n          trigger: 'change'\n        }],\n        occurDate: [{\n          required: true,\n          message: '请选择发生日期',\n          trigger: 'change'\n        }],\n        predictFinishDate: [{\n          required: true,\n          message: '请选择预计完成日期',\n          trigger: 'change'\n        }],\n        coordinateType: [{\n          required: true,\n          message: '请选择协助类型',\n          trigger: 'change'\n        }],\n        progressType: [{\n          required: true,\n          message: '请选择进度',\n          trigger: 'change'\n        }],\n        sendDate: [],\n        transactDate: []\n      },\n      filter: {\n        orgList: [],\n        coordinateTypes: [],\n        progressTypes: []\n      },\n      project: {}\n    };\n  },\n  computed: {\n    disabled: function disabled() {\n      return this.firstForm.state === 10000;\n    },\n    title: function title() {\n      var active = this.active;\n      return active === 2 ? '审批流程' : '对外签证';\n    },\n\n    /**\r\n     * 处理form表单的数据\r\n     */\n    formNodeData: function formNodeData() {\n      var disabled = this.disabled,\n          selectPlaceholder = this.selectPlaceholder,\n          inputPlaceholder = this.inputPlaceholder,\n          _this$filter = this.filter,\n          coordinateTypes = _this$filter.coordinateTypes,\n          progressTypes = _this$filter.progressTypes;\n      return [{\n        label: '编码:',\n        monopolize: true,\n        keyword: 'number',\n        props: {\n          disabled: true,\n          placeholder: '系统自动生成'\n        }\n      }, {\n        label: '项目:',\n        keyword: 'projectId',\n        component: 'ProjectSelect',\n        props: {\n          disabled: disabled,\n          placeholder: selectPlaceholder\n        }\n      }, {\n        label: '组织机构:',\n        keyword: 'orgName',\n        props: {\n          disabled: true,\n          placeholder: '请选择有项目的部门'\n        }\n      }, {\n        label: '签证名称:',\n        keyword: 'name',\n        props: {\n          disabled: disabled,\n          placeholder: inputPlaceholder\n        }\n      }, {\n        label: '上报值:',\n        keyword: 'reportAmount',\n        props: {\n          disabled: disabled,\n          placeholder: inputPlaceholder\n        }\n      }, {\n        label: '审定值:',\n        keyword: 'approveAmount',\n        props: {\n          disabled: disabled,\n          placeholder: inputPlaceholder\n        }\n      }, {\n        label: '成本值:',\n        keyword: 'costAmount',\n        props: {\n          disabled: disabled,\n          placeholder: inputPlaceholder\n        }\n      }, {\n        label: '甲方代表:',\n        keyword: 'firstRepresent',\n        props: {\n          disabled: disabled,\n          placeholder: inputPlaceholder\n        }\n      }, {\n        label: '发生日期:',\n        keyword: 'occurDate',\n        component: 'el-date-picker',\n        props: {\n          type: 'date',\n          placeholder: selectPlaceholder,\n          valueFormat: 'yyyy-MM-dd'\n        }\n      }, {\n        label: '预计完成日期:',\n        keyword: 'predictFinishDate',\n        component: 'el-date-picker',\n        props: {\n          type: 'date',\n          placeholder: selectPlaceholder,\n          valueFormat: 'yyyy-MM-dd'\n        }\n      }, {\n        label: '是否协助:',\n        keyword: 'coordinateType',\n        component: 'Select',\n        props: {\n          propsLabel: 'name',\n          options: coordinateTypes,\n          placeholder: selectPlaceholder\n        }\n      }, {\n        label: '甲方指令内容:',\n        keyword: 'firstPartyContent',\n        props: {\n          disabled: disabled,\n          placeholder: inputPlaceholder,\n          type: 'textarea'\n        }\n      }, {\n        label: '未办理原因:',\n        keyword: 'noTransactReason',\n        props: {\n          disabled: disabled,\n          placeholder: inputPlaceholder,\n          type: 'textarea'\n        }\n      }, {\n        label: '协调配合内容:',\n        keyword: 'coordinateContent',\n        props: {\n          disabled: disabled,\n          placeholder: inputPlaceholder,\n          type: 'textarea'\n        }\n      }, {\n        label: '备注:',\n        keyword: 'remark',\n        props: {\n          disabled: disabled,\n          placeholder: inputPlaceholder,\n          type: 'textarea'\n        }\n      }, {\n        label: '进度:',\n        keyword: 'progressType',\n        monopolize: true,\n        component: 'Select',\n        props: {\n          disabled: disabled,\n          propsLabel: 'name',\n          options: progressTypes,\n          placeholder: selectPlaceholder\n        }\n      }, {\n        label: '上报日期:',\n        keyword: 'sendDate',\n        component: 'el-date-picker',\n        props: {\n          type: 'date',\n          placeholder: selectPlaceholder,\n          valueFormat: 'yyyy-MM-dd'\n        }\n      }, {\n        label: '办理日期:',\n        keyword: 'transactDate',\n        component: 'el-date-picker',\n        props: {\n          type: 'date',\n          placeholder: selectPlaceholder,\n          valueFormat: 'yyyy-MM-dd'\n        }\n      }, {\n        label: '附件:',\n        monopolize: true,\n        keyword: 'fileList',\n        component: 'UpFile',\n        width: '100%',\n        props: {\n          isUpfile: true,\n          isDelete: true\n        }\n      }];\n    }\n  },\n  watch: {\n    'firstForm.progressType': {\n      handler: function handler(val) {\n        var _this = this;\n\n        var changeRules = {\n          sendDate: [],\n          transactDate: []\n        };\n\n        if (val === 1) {\n          changeRules.sendDate = [{\n            required: true,\n            message: '进度选项为已发生时，上报日期为必填项',\n            trigger: 'change'\n          }];\n        } else if (val === 2) {\n          changeRules.transactDate = [{\n            required: true,\n            message: '进度选项为已上报时，办理日期为必填项',\n            trigger: 'change'\n          }];\n        }\n\n        Object.assign(this.firstRules, changeRules);\n        this.$nextTick(function () {\n          _this.$refs.firstForm.clearValidate();\n        });\n      },\n      immediate: true\n    }\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    next(function (vm) {\n      vm.initSelect();\n      var newId = vm.$route.query.id;\n      var oldId = vm.firstForm.id;\n      var type = vm.$route.query.type;\n\n      if (type === 'edit' && newId !== oldId) {\n        // 说明是打开另一个单子的编辑页面\n        vm.firstForm.id = newId;\n        vm.initForm();\n        vm.initDataById(newId);\n        vm.active = 1;\n      } else {\n        if (type === 'add' && oldId) {\n          // 说明是打开一个新建页面\n          vm.initForm();\n          vm.active = 1;\n        }\n      }\n    });\n  },\n  methods: {\n    /**\r\n     * 处理项目选择器选择事件\r\n     */\n    handelProjectSelect: function handelProjectSelect(val) {\n      Object.assign(this.firstForm, {\n        orgId: val ? val.orgId : '',\n        orgName: val ? val.orgStr : '',\n        companyId: val ? val.companyId : ''\n      });\n    },\n\n    /**\r\n     * 根据id获取项目信息\r\n     */\n    getProjectMessage: function getProjectMessage() {\n      var _this2 = this;\n\n      var req = {\n        id: this.firstForm.projectId\n      };\n\n      var formatDate = function formatDate(date) {\n        return date ? _this2.$moment(date).format('YYYY-MM-DD') : '';\n      };\n\n      (0, _project.getProjectById)(req).then(function (_ref) {\n        var data = _ref.data;\n        _this2.project = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, data), {}, {\n          orgName: data.organization.name,\n          contractStartDate: formatDate(data.contractStartDate),\n          contractFinishDate: formatDate(data.contractFinishDate),\n          realStartDate: formatDate(data.realStartDate),\n          computeFinishDate: formatDate(data.computeFinishDate)\n        });\n      });\n    },\n    initForm: function initForm() {\n      var _this3 = this;\n\n      Object.assign(this.$data.firstForm, this.$options.data().firstForm);\n      this.project = {};\n      this.$nextTick(function () {\n        _this3.$refs.firstForm.resetFields();\n      });\n    },\n\n    /**\r\n     * @description: 初始化选项框数据\r\n     */\n    initSelect: function initSelect() {\n      var _this4 = this;\n\n      (0, _ProjectSiteSign.InitProjectSiteSign)().then(function (res) {\n        _this4.filter.coordinateTypes = res.coordinateTypeList;\n        _this4.filter.progressTypes = res.progressTypeList;\n      });\n    },\n\n    /**\r\n     * @description: 根据id获取数据并且初始化选项框数据\r\n     */\n    initDataById: function initDataById(id) {\n      var _this5 = this;\n\n      (0, _ProjectSiteSign.GetProjectSiteSignById)({\n        id: id\n      }).then(function (res) {\n        var form = _this5.firstForm;\n\n        for (var key in form) {\n          if (Object.hasOwnProperty.call(res.data, key)) {\n            form[key] = res.data[key] || form[key];\n          }\n        }\n\n        form.billFlow = res.billFlowData;\n        form.fileList = res.data.upFile;\n\n        _this5.$set(form, 'orgName', res.data.organization.name);\n      });\n    },\n    getBillFlow: function getBillFlow() {\n      var _this6 = this;\n\n      // 获取流程数据\n      var _this$firstForm = this.firstForm,\n          state = _this$firstForm.state,\n          billFlow = _this$firstForm.billFlow;\n      var req = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, this.firstForm), {}, {\n        state: state || 0\n      });\n      if (billFlow) req.billFlowId = billFlow.id;\n      delete req.billFlow;\n      delete req.number;\n      (0, _ProjectSiteSign.GetBillFlow)(req).then(function (_ref2) {\n        var data = _ref2.data,\n            success = _ref2.success,\n            message = _ref2.message;\n\n        if (success) {\n          _this6.firstForm.billFlow = data.billFlow;\n\n          _this6.setActive(2);\n        } else {\n          _this6.$message.error(message);\n        }\n      });\n    },\n\n    /**\r\n     * 修改填报进度\r\n     */\n    setActive: function setActive(active) {\n      this.active = active;\n    },\n\n    /**\r\n     * 下一步\r\n     */\n    nextStep: function nextStep(formName) {\n      var _this7 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var _this7$firstForm = _this7.firstForm,\n              progressType = _this7$firstForm.progressType,\n              transactDate = _this7$firstForm.transactDate,\n              sendDate = _this7$firstForm.sendDate;\n\n          if (progressType === 1 && !sendDate) {\n            return _this7.$message.error('进度选项为已发生时，上报日期为必填项');\n          } else if (progressType === 2 && !transactDate) {\n            return _this7.$message.error('进度选项为已上报时，办理日期为必填项');\n          }\n\n          _this7.getBillFlow();\n        }\n      });\n    },\n    // 作废\n    invalidForm: function invalidForm() {\n      var _this8 = this;\n\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        return (0, _ProjectSiteSign.DeleteProjectSiteSign)({\n          id: _this8.firstForm.id\n        });\n      }).then(function () {\n        _this8.$message.success('操作成功');\n\n        _this8.back();\n      });\n    },\n\n    /**\r\n     * 提交表单\r\n     * @param {Number} state 提交类型，0：保存；1：提交;\r\n     */\n    submitForm: function submitForm(state) {\n      var _this9 = this;\n\n      var req = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, this.firstForm), {}, {\n        state: state\n      });\n      delete req.number;\n\n      if (this.firstForm.billFlow) {\n        // 获取流程组件中的数据\n        var billFlow = this.$refs.flowSelect.getBillFlow();\n\n        if (!billFlow) {\n          return false;\n        }\n\n        req.billFlow = billFlow;\n      } else {\n        this.$message.error('流程数据不能为空');\n        return;\n      }\n\n      if (req.progressType !== 2 && req.state === 1) {\n        return this.$message.error('进度选项为已上报时，才能提交审批');\n      }\n\n      if (req.id) {\n        (0, _ProjectSiteSign.PutProjectSiteSign)(req).then(function (res) {\n          // 更新\n          _this9.$message.success('保存成功');\n\n          _this9.back();\n        });\n      } else {\n        (0, _ProjectSiteSign.AddProjectSiteSign)(req).then(function () {\n          // 添加\n          _this9.$message.success('提交成功');\n\n          _this9.back();\n        });\n      }\n    },\n\n    /**\r\n     * 修改\r\n    */\n    updateForm: function updateForm(formName) {\n      var _this10 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var req = (0, _objectSpread2.default)({}, _this10.firstForm);\n          delete req.number;\n          delete req.billFlow;\n          (0, _ProjectSiteSign.UpdateProjectSiteSign)(req).then(function (res) {\n            // 修改\n            _this10.$message.success('修改成功');\n\n            _this10.back();\n          });\n        }\n      });\n    },\n\n    /**\r\n     * 返回上一页，并关闭当前页\r\n     */\n    back: function back() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    }\n  }\n};\nexports.default = _default;",null]}