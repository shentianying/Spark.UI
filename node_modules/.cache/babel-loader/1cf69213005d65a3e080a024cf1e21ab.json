{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\jhgl\\cancel\\planDetailCancel.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\jhgl\\cancel\\planDetailCancel.vue","mtime":1624071363310},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _plan = require(\"@/api/cggl/plan\");\n\nvar _flowSelect = _interopRequireDefault(require(\"@/components/Flow/flowSelect\"));\n\nvar _flowAttitude = _interopRequireDefault(require(\"@/components/Flow/flowAttitude\"));\n\nvar _UpFile = _interopRequireDefault(require(\"@/components/UpLoad/UpFile\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'PlanDetailCancel',\n  components: {\n    FlowSelect: _flowSelect.default,\n    FlowAttitude: _flowAttitude.default,\n    UpFile: _UpFile.default\n  },\n  props: {\n    obj: {\n      type: Object,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      ruleForm: {\n        id: 0,\n        number: '',\n        orgId: null,\n        orgStr: '',\n        planNumber: '',\n        remark: '',\n        state: 0,\n        billFlowId: 0,\n        fileList: []\n      },\n      loading: false,\n      active: 0,\n      listIndex: 0,\n      list: [],\n      billFlow: null,\n      attitudePara: null,\n      loadFlow: false,\n      columnShow: {\n        unit2: true,\n        brand: true,\n        model: true,\n        spec: true,\n        thickness: true,\n        texture: true,\n        surfaceTreatment: true,\n        designNumber: true\n      },\n      rules: {}\n    };\n  },\n  watch: {// 'ruleForm.orgId': {\n    //   handler: function(value, oldvalue) {\n    //     if (!oldvalue) {\n    //       this.$refs['ruleForm'].validateField('orgId', (valid) => {})\n    //     }\n    //   }, deep: true\n    // }\n  },\n  activated: function activated() {\n    if (this.obj) {\n      this.setData(this.obj);\n    }\n  },\n  mounted: function mounted() {\n    if (this.obj) {\n      this.setData(this.obj);\n    }\n  },\n  methods: {\n    // 根据表单获取流程\n    getDynamicFlow: function getDynamicFlow() {\n      var _this = this;\n\n      var newObj = JSON.parse(JSON.stringify(this.ruleForm)); // 拼接材料明细参数\n\n      var arr1 = [];\n      this.list.forEach(function (e) {\n        var m = {};\n        m.categoryId = e.categoryId;\n        m.categoryName = e.category.name;\n        m.unit2 = e.unit2;\n        m.brand = e.brand;\n        m.model = e.model;\n        m.spec = e.spec;\n        m.thickness = e.thickness;\n        m.texture = e.texture;\n        m.surfaceTreatment = e.surfaceTreatment;\n        m.designNumber = e.designNumber;\n        var item = {};\n        item.material = m;\n        item.id = e.id;\n        item.isMain = e.category.isMain;\n        item.applicationQuantity = e.applicationQuantity;\n        item.applicationQuantity2 = e.applicationQuantity2 || 0;\n        item.quantity = e.quantity;\n        item.quantity2 = e.quantity2;\n        item.entryDate = e.entryDate;\n        item.remark = e.remark;\n        item.targetCostMaterialId = e.targetCostMaterialId;\n        arr1.push(item);\n      });\n\n      if (arr1.length === 0) {\n        this.$message('明细不能为空！');\n        return;\n      }\n\n      newObj.planDetails = arr1;\n      this.loading = true;\n      (0, _plan.getMaterialCancelBillFlow)(newObj).then(function (response) {\n        _this.loading = false;\n\n        if (response.success) {\n          _this.billFlow = response.data.billFlow;\n          _this.active = 1;\n        } else {\n          _this.$message(response.message);\n        }\n      }).catch(function () {\n        _this.loading = false;\n      });\n      this.loading = false;\n    },\n    submitForm: function submitForm(state) {\n      var _this2 = this;\n\n      this.$refs['ruleForm'].validate(function (valid) {\n        if (valid) {\n          var newObj = JSON.parse(JSON.stringify(_this2.ruleForm)); // 计划状态\n\n          newObj.state = state; // 拼接材料明细参数\n\n          var arr1 = [];\n\n          _this2.list.forEach(function (e) {\n            var m = {};\n            m.categoryId = e.categoryId;\n            m.categoryName = e.category.name; // m.unit = e.category.unit\n\n            m.unit2 = e.unit2;\n            m.brand = e.brand;\n            m.model = e.model;\n            m.spec = e.spec;\n            m.thickness = e.thickness;\n            m.texture = e.texture;\n            m.surfaceTreatment = e.surfaceTreatment;\n            m.designNumber = e.designNumber;\n            var item = {};\n            item.material = m; // item.fileList = []\n            // if (e.fileList.length) {\n            //   item.fileList = e.fileList.map(m => { return { id: m.id, addFlag: m.addFlag } })\n            // }\n\n            item.id = e.id;\n            item.applicationQuantity = e.applicationQuantity;\n            item.applicationQuantity2 = e.applicationQuantity2 || 0;\n            item.quantity = e.quantity;\n            item.quantity2 = e.quantity2;\n            item.entryDate = e.entryDate;\n            item.remark = e.remark;\n            item.targetCostMaterialId = e.targetCostMaterialId;\n            item.state = 0;\n            arr1.push(item);\n          });\n\n          newObj.planDetails = arr1; // 获取流程组件中的数据\n\n          if (state === 1) {\n            // 如果是提交，验证流程人员的完整信息\n            var checkBillFlow = _this2.$refs.flowSelect.checkBillFlow();\n\n            if (!checkBillFlow) {\n              _this2.$message('流程错误，流程中审批人员不能为空');\n\n              return false;\n            }\n          }\n\n          var billFlow = _this2.$refs.flowSelect.getBillFlow();\n\n          console.log('获取的billFlow:', billFlow);\n          newObj.billFlow = billFlow; // 保存单据\n\n          _this2.loading = true;\n          (0, _plan.cancelPlanDetailsSubmit)(newObj).then(function (response) {\n            if (response.errorMsg) {\n              // 验证错误\n              _this2.$alert(\"\".concat(response.errorMsg.replace(/；/g, '；<br />')), {\n                dangerouslyUseHTMLString: true\n              });\n\n              return;\n            }\n\n            _this2.$message(response.message);\n\n            _this2.loading = false;\n\n            _this2.$emit('dialogClose');\n          }).catch(function () {\n            _this2.loading = false;\n          });\n        }\n      });\n    },\n    previous: function previous() {\n      // 上一步\n      this.active = 0;\n      this.billFlow = null;\n    },\n    setData: function setData(response) {\n      this.ruleForm = {\n        planId: response.planId,\n        planNumber: response.planNumber,\n        orgId: response.orgId,\n        orgStr: response.orgStr,\n        state: 0,\n        fileList: []\n      }; // 填充 明细列表\n\n      this.list = response.planDetail; // this.billFlow = data.billFlow\n\n      this.setColumnShow();\n      this.loading = false; // loading 状态关闭\n      // 如果 存在单据和 流程Id 就加载审批组件\n      //   if (data.id && data.billFlowId) {\n      //     this.attitudePara = { planId: data.id, billFlowId: data.billFlowId }\n      //     this.loadFlow = true // 加载审批组件\n      //   }\n    },\n    setColumnShow: function setColumnShow() {\n      // 设置列的显示。列中，都没有值，就隐藏\n      var modelunit2 = false;\n      var modelbrand = false;\n      var modelmodel = false;\n      var modelspec = false;\n      var modelthickness = false;\n      var modeltexture = false;\n      var modelsurfaceTreatment = false;\n      var modeldesignNumber = false;\n\n      var _iterator = (0, _createForOfIteratorHelper2.default)(this.list),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var row = _step.value;\n\n          if (row.unit2) {\n            modelunit2 = true;\n          }\n\n          if (row.brand) {\n            modelbrand = true;\n          }\n\n          if (row.model) {\n            modelmodel = true;\n          }\n\n          if (row.spec) {\n            modelspec = true;\n          }\n\n          if (row.thickness) {\n            modelthickness = true;\n          }\n\n          if (row.texture) {\n            modeltexture = true;\n          }\n\n          if (row.surfaceTreatment) {\n            modelsurfaceTreatment = true;\n          }\n\n          if (row.designNumber) {\n            modeldesignNumber = true;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      this.columnShow['unit2'] = modelunit2;\n      this.columnShow['brand'] = modelbrand;\n      this.columnShow['model'] = modelmodel;\n      this.columnShow['spec'] = modelspec;\n      this.columnShow['thickness'] = modelthickness;\n      this.columnShow['texture'] = modeltexture;\n      this.columnShow['surfaceTreatment'] = modelsurfaceTreatment;\n      this.columnShow['designNumber'] = modeldesignNumber;\n    } // cancel() { // 作废\n    //   this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\n    //     type: 'warning'\n    //   }).then(() => {\n    //     this.loading = true\n    //     deletePlan({ id: this.ruleForm.id }).then(response => {\n    //       this.$message(response.message)\n    //       this.loading = false\n    //       this.closeThePage()\n    //     })\n    //   }).catch(() => {})\n    // }\n\n  }\n};\nexports.default = _default;",null]}