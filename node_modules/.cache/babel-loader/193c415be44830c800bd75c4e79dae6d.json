{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\components\\SearchBar\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\components\\SearchBar\\index.vue","mtime":1631087446327},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.search\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _typeof2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/typeof\"));\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _MyInput = _interopRequireDefault(require(\"./MyInput\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default3 = {\n  name: 'SearchBar',\n  components: {\n    MyInput: _MyInput.default\n  },\n  model: {\n    event: 'change',\n    prop: 'data'\n  },\n  props: {\n    data: {\n      type: Array,\n      default: function _default() {\n        // 该属性用于遍历表单组件\n        return [\n          /*  示例\r\n          {\r\n            name:'id',//属性名，当调用handleSearch事件时将返回一个对象该值作为属性名\r\n            value:'1',//属性值，当调用handleSearch事件时将返回一个对象该值作为属性值\r\n            defaultValue: '1', //默认值,当重置时会被设置成该值\r\n            component:'Input',//form组件类型,根据该值判断使用什么组件\r\n            isMain:true, //默认显示，否则展开时展示\r\n              //-------------以下当component为Select时有效---------------//\r\n            multiple:false,\r\n            checkStrictly:true,\r\n            options:[ //用于遍历el-option，Option Attributes具体请参考element ui\r\n              {\r\n                label:'',\r\n                value\r\n              }\r\n            ],\r\n              //-------------以下当component为DatePicker时有效---------------//\r\n            dateType:'daterange',  //对应DatePicker的type\r\n            valueFormat: 'yyyy-MM-dd HH:mm:ss', //对应DatePicker的value-format\r\n            //-------------以下为Form-Item Attributes具体请参考element ui-------------//\r\n            label:'',\r\n            placeholder:'',\r\n            labelWidth:0px,\r\n            required：false,\r\n            rules:[]\r\n          }\r\n          */\n        ];\n      }\n    },\n    size: {\n      type: String,\n      default: 'mini'\n    },\n    // 所有组件大小\n    labelWidth: {\n      type: String,\n      default: '68px'\n    },\n    // 作用与element ui form组件一致，请参考element ui\n    search: {\n      type: Function,\n      default: function () {\n        var _default2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        function _default() {\n          return _default2.apply(this, arguments);\n        }\n\n        return _default;\n      }()\n    },\n    // 异步回调函数，点击搜索按钮时触发并且修改prop loading\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    // 查询按钮的loading(使用sync绑定时会在回调函数search触发前后修改该值)\n    showToggle: {\n      type: Boolean,\n      default: true\n    } // 是否显示“展开”和“收起\" 切换按钮\n\n  },\n  data: function data() {\n    return {\n      showMore: false\n    };\n  },\n  computed: {\n    searchData: {\n      get: function get() {\n        return this.data;\n      },\n      set: function set(val) {\n        this.$emit('change', val);\n      }\n    }\n  },\n  methods: {\n    /**\r\n     * @description: 重置所有参数并且触发搜索回调\r\n     */\n    resetSearchData: function resetSearchData() {\n      var _this = this;\n\n      this.searchData.forEach(function (item) {\n        var tmp = '';\n\n        if (typeof item.defaultValue !== 'undefined') {\n          tmp = item.defaultValue;\n        } else if (Array.isArray(item.value)) {\n          tmp = [];\n        } else if ((0, _typeof2.default)(item.value) === 'object') {\n          tmp = {};\n        }\n\n        _this.$set(item, 'value', tmp);\n      });\n      this.handleSearch();\n    },\n\n    /**\r\n     * @description: 以对象方式返回所有参数(data数组每一项的label作为key，value作为值)\r\n     * @return {Object} 所有参数\r\n     */\n    getSearchData: function getSearchData() {\n      var searchData = {};\n      this.data.forEach(function (item) {\n        searchData[item.name] = item.value;\n      });\n      return searchData;\n    },\n\n    /**\r\n     * @description: 触发search回调，接受promise\r\n     * @return {*}\r\n     */\n    handleSearch: function () {\n      var _handleSearch = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.$emit('update:loading', true);\n                _context2.next = 3;\n                return this.search();\n\n              case 3:\n                this.$emit('update:loading', false);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handleSearch() {\n        return _handleSearch.apply(this, arguments);\n      }\n\n      return handleSearch;\n    }(),\n    toggleState: function toggleState() {\n      this.showMore = !this.showMore;\n    }\n  }\n};\nexports.default = _default3;",null]}