{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\zggl\\organization\\workerOrgEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\zggl\\organization\\workerOrgEdit.vue","mtime":1634371102587},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nrequire(\"core-js/modules/es6.array.find\");\n\nvar _workerOrg = require(\"@/api/zggl/workerOrg\");\n\nvar _PersonSelect = _interopRequireDefault(require(\"@/components/Other/PersonSelect2\"));\n\nvar _person = require(\"@/api/rsgl/person\");\n\nvar _WorkerSelect = _interopRequireDefault(require(\"@/components/Other/WorkerSelect\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'WorkerOrgEdit',\n  // 局部注册的组件\n  components: {\n    PersonSelect2: _PersonSelect.default,\n    WorkerSelect: _WorkerSelect.default\n  },\n  // 组件状态值\n  data: function data() {\n    return {\n      size: 'mini',\n      // 整体大小\n      type: '',\n      // edit：编辑 add:新增\n      ruleForm: {\n        id: 0,\n        type: null,\n        personId: null,\n        post: null,\n        number: '',\n        parentPersonId: null,\n        orgPost: null,\n        orgPostName: '',\n        parentPerson: {},\n        person: []\n      },\n      postTypeOptions: [],\n      personTypeOptions: [],\n      // 验证规则\n      rules: {\n        type: [{\n          required: true,\n          message: '请选择',\n          trigger: 'change'\n        }],\n        post: [{\n          required: true,\n          message: '请选择',\n          trigger: 'change'\n        }],\n        parentPersonId: [{\n          required: true,\n          message: '请选择',\n          trigger: 'change'\n        }],\n        personId: [{\n          required: true,\n          message: '请选择',\n          trigger: 'change'\n        }]\n      },\n      personList: [],\n      // workerList: [],\n      loading: false\n    };\n  },\n  watch: {\n    'ruleForm.personId': {\n      handler: function handler(value) {\n        /**\r\n         * 联动工号和岗位\r\n         */\n        var person = this.personList.find(function (f) {\n          return f.id === value;\n        });\n\n        if (person !== undefined) {\n          this.ruleForm.number = person.number;\n          this.ruleForm.orgPostName = person.postName;\n          this.ruleForm.orgPost = person.postId;\n        }\n      },\n      immediate: false\n    },\n    'ruleForm.type': {\n      handler: function handler(value, oldvalue) {\n        if (oldvalue !== null && value !== oldvalue) {\n          this.ruleForm.number = '';\n          this.ruleForm.orgPostName = '';\n          this.ruleForm.personId = null;\n        }\n      },\n      immediate: false\n    }\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    next(function (vm) {\n      vm.initData();\n    });\n  },\n  // 组件方法\n  methods: {\n    initData: function initData() {\n      var id = this.$route.query.id;\n      this.ruleForm.id = id;\n      this.getOptions();\n      this.getPersonList();\n      this.getWorkerOrgForm();\n    },\n    // async invalid() {\n    //   // 作废之前弹窗确定一下\n    //   this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\n    //     type: 'warning'\n    //   })\n    //     .then(() => {\n    //       return invalid(this.ruleForm.id)\n    //     })\n    //     .then(res => {\n    //       this.$message.success(res.message)\n    //       this.utils.closeAndRefresh(this.$route.query.refreshRouterName)\n    //     })\n    //     .catch(err => {\n    //       console.log(err)\n    //       // this.$message.error(err.errorMsg || '操作失败')\n    //     })\n    // },\n    getOptions: function () {\n      var _getOptions = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _yield$getDefaultOpti, personTypeOptions, postTypeOptions;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _workerOrg.getDefaultOptions)();\n\n              case 2:\n                _yield$getDefaultOpti = _context.sent;\n                personTypeOptions = _yield$getDefaultOpti.personTypeOptions;\n                postTypeOptions = _yield$getDefaultOpti.postTypeOptions;\n                this.personTypeOptions = personTypeOptions;\n                this.postTypeOptions = postTypeOptions;\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getOptions() {\n        return _getOptions.apply(this, arguments);\n      }\n\n      return getOptions;\n    }(),\n    // 获取劳务关系数据\n    getWorkerOrgForm: function getWorkerOrgForm() {\n      var _this = this;\n\n      (0, _workerOrg.getWorkerOrgById)(this.ruleForm).then(function (res) {\n        var code = res.code,\n            data = res.data;\n\n        if (code === 200 && data !== undefined) {\n          for (var key in _this.ruleForm) {\n            if (Object.hasOwnProperty.call(_this.ruleForm, key)) {\n              _this.ruleForm[key] = data[key];\n            }\n          }\n        }\n      }).catch(function (err) {\n        console.log(err); // this.$message.error(err.errorMsg)\n      });\n    },\n    // 提交表单\n    submitForm: function submitForm(formName) {\n      var _this2 = this;\n\n      this.$refs[formName].validate( /*#__PURE__*/function () {\n        var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(valid) {\n          var data, res;\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  if (!valid) {\n                    _context2.next = 7;\n                    break;\n                  }\n\n                  data = {\n                    id: _this2.ruleForm.id,\n                    number: _this2.ruleForm.number,\n                    orgPost: _this2.ruleForm.orgPost,\n                    parentPersonId: _this2.ruleForm.parentPersonId,\n                    personId: _this2.ruleForm.personId,\n                    post: _this2.ruleForm.post,\n                    type: _this2.ruleForm.type\n                  };\n                  _context2.next = 4;\n                  return (0, _workerOrg.saveData)(data);\n\n                case 4:\n                  res = _context2.sent;\n\n                  _this2.utils.closeAndRefresh(_this2.$route.query.refreshRouterName);\n\n                  _this2.$message.success(res.message);\n\n                case 7:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n\n    /**\r\n     * 取消并返回上一页\r\n     */\n    goBack: function goBack() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    },\n\n    /**\r\n     * 获取人员信息\r\n     */\n    getPersonList: function getPersonList() {\n      var _this3 = this;\n\n      (0, _person.getPersonListWithType)().then(function (res) {\n        var code = res.code,\n            data = res.data;\n\n        if (code === 200) {\n          _this3.personList = data;\n        }\n      }).catch(function (err) {\n        console.log(err); // this.$message.error(err.errorMsg)\n      });\n    } // selectWorkers() {\n    //   this.$refs.workerRef.openDialog()\n    // },\n    // getPersons(workerList) {\n    //   if ((workerList || []).length > 0) {\n    //     this.workerList = workerList.map(m => { return { id: m.id, name: m.name } })\n    //     this.$nextTick(() => {\n    //       this.ruleForm.parentPersonId = workerList[0].id\n    //       // this.ruleForm.personName = workerList[0].name\n    //     })\n    //   }\n    // }\n\n  }\n};\nexports.default = _default;",null]}