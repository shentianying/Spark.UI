{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\storage\\allocation\\allocationEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cggl\\storage\\allocation\\allocationEdit.vue","mtime":1628836283470},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _allocation = require(\"@/api/cggl/allocation\");\n\nvar _index = _interopRequireDefault(require(\"@/components/OrgSelect/index2\"));\n\nvar _UpFile = _interopRequireDefault(require(\"@/components/UpLoad/UpFile\"));\n\nvar _flowSelect = _interopRequireDefault(require(\"@/components/Flow/flowSelect\"));\n\nvar _flowDisplay = _interopRequireDefault(require(\"@/components/Flow/flowDisplay\"));\n\nvar _flowAttitude = _interopRequireDefault(require(\"@/components/Flow/flowAttitude\"));\n\nvar _storageInDetailCheck = _interopRequireDefault(require(\"@/views/cggl/storage/storageIn/storageInDetailCheck\"));\n\nvar _person = require(\"@/api/rsgl/person\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import { getSupplierInfo } from '@/api/cggl/supplier'\nvar _default = {\n  name: 'StorageOutEdit',\n  components: {\n    OrgSelect2: _index.default,\n    UpFile: _UpFile.default,\n    FlowSelect: _flowSelect.default,\n    FlowDisplay: _flowDisplay.default,\n    FlowAttitude: _flowAttitude.default,\n    StorageInDetailCheck: _storageInDetailCheck.default\n  },\n  data: function data() {\n    return {\n      ruleForm: {\n        id: 0,\n        number: '',\n        orgIdIn: null,\n        orgIdOut: null,\n        fileList: []\n      },\n      loading: false,\n      activate: true,\n      active: 0,\n      dialogTableVisible: false,\n      dialogTitle: '保存',\n      dialogWidth: '70%',\n      comName: 'ContractDetailCheck',\n      currentRow: null,\n      list: [],\n      suppliers: [],\n      outTypeOptions: [],\n      keyOutType: 0,\n      billFlow: null,\n      attitudePara: null,\n      loadFlow: false,\n      orgKey: 0,\n      fileListKey: 0,\n      columnShow: {\n        unit2: true,\n        brand: true,\n        model: true,\n        spec: true,\n        thickness: true,\n        texture: true,\n        surfaceTreatment: true,\n        designNumber: true\n      },\n      rules: {\n        orgIdIn: [{\n          required: true,\n          message: '请选择',\n          trigger: 'blur'\n        }],\n        orgIdOut: [{\n          required: true,\n          message: '请选择',\n          trigger: 'blur'\n        }],\n        personId: [{\n          required: true,\n          message: '请选择',\n          trigger: 'blur'\n        }] // outDate: [{ required: true, message: '请选择', trigger: 'blur' }],\n        // useSpace: [{ required: true, message: '请输入', trigger: 'blur' }]\n\n      },\n      personList: []\n    };\n  },\n  computed: {\n    getOrgList: function getOrgList() {\n      return this.$store.state.user.info.orgList;\n    }\n  },\n  watch: {\n    'ruleForm.orgIdOut': {\n      handler: function handler(value, oldvalue) {\n        if (value !== oldvalue && oldvalue !== null) {\n          this.list = [];\n        }\n      },\n      deep: true\n    }\n  },\n  activated: function activated() {// this.initData()\n  },\n  mounted: function mounted() {\n    this.initData();\n  },\n  methods: {\n    // 根据表单获取流程\n    getDynamicFlow: function getDynamicFlow() {\n      var _this = this;\n\n      this.$refs['ruleForm'].validate(function (valid) {\n        if (valid) {\n          _this.loading = true;\n          var newObj = JSON.parse(JSON.stringify(_this.ruleForm));\n          var postData = {};\n          postData.number = newObj.number;\n          postData.orgIdIn = newObj.orgIdIn;\n          postData.orgIdOut = newObj.orgIdOut;\n          postData.remark = newObj.remark;\n          postData.fileList = newObj.fileList;\n          postData.billFlowId = newObj.billFlowId;\n\n          if (_this.id) {\n            postData.id = _this.id;\n          }\n\n          var isFailed = false;\n\n          _this.list.forEach(function (e) {\n            if (e.quantity === 0) {\n              isFailed = true;\n            }\n          });\n\n          if (isFailed === true) {\n            _this.$message.error('调拨数量不可为空！');\n\n            _this.loading = false;\n          } else if (_this.ruleForm.orgIdIn === _this.ruleForm.orgIdOut) {\n            _this.$message.error('调出项目不可与调入项目一致，请检查。');\n\n            _this.loading = false;\n          } else {\n            (0, _allocation.getBillFlow)(postData).then(function (response) {\n              _this.loading = false;\n\n              if (response.success) {\n                _this.billFlow = response.data.billFlow;\n                _this.active = 1;\n              } else {\n                _this.$message(response.message);\n              }\n            }).catch(function () {\n              _this.loading = false;\n            });\n          }\n        }\n      });\n    },\n    submitForm: function submitForm(state) {\n      var _this2 = this;\n\n      this.$refs['ruleForm'].validate(function (valid) {\n        if (valid) {\n          _this2.ruleForm.state = state;\n          _this2.loading = true;\n          var newObj = JSON.parse(JSON.stringify(_this2.ruleForm));\n          var postData = {};\n          var pom = [];\n\n          _this2.list.forEach(function (e) {\n            pom.push({\n              id: e.id,\n              storageInDetailId: e.storageInDetail.id,\n              materialId: e.material.id,\n              quantity: e.quantity,\n              quantity2: e.quantity2,\n              remark: e.remark\n            });\n          });\n\n          postData.orgIdIn = newObj.orgIdIn;\n          postData.orgIdOut = newObj.orgIdOut;\n          postData.remark = newObj.remark;\n          postData.personId = newObj.personId;\n          postData.fileList = newObj.fileList;\n          postData.state = state;\n          postData.allocationDetails = pom; // 获取流程组件中的数据\n\n          if (state === 1) {\n            // 如果是提交，验证流程人员的完整信息\n            var checkBillFlow = _this2.$refs.flowSelect.checkBillFlow();\n\n            if (!checkBillFlow) {\n              _this2.$message('流程错误，流程中审批人员不能为空');\n\n              return false;\n            }\n          }\n\n          var billFlow = _this2.$refs.flowSelect.getBillFlow();\n\n          console.log('获取的billFlow:', billFlow);\n          _this2.ruleForm.billFlow = billFlow;\n          postData.billFlow = billFlow;\n\n          if (_this2.id) {\n            postData.id = _this2.id;\n            (0, _allocation.putAllocation)(postData).then(function (response) {\n              _this2.closeThePage();\n            });\n          } else {\n            postData.id = 0;\n            (0, _allocation.addAllocation)(postData).then(function (response) {\n              _this2.closeThePage();\n            });\n          }\n        }\n      });\n    },\n    previous: function previous() {\n      // 上一步\n      this.active = 0;\n      this.billFlow = null;\n    },\n    initData: function () {\n      var _initData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this3 = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // 有参数id 就是编辑\n                if (this.$route.query.id) {\n                  this.id = this.$route.query.id;\n                }\n\n                if (!this.id) {\n                  _context.next = 8;\n                  break;\n                }\n\n                this.loading = true;\n                this.activate = false; // 销毁部门组件\n\n                _context.next = 6;\n                return (0, _allocation.getAllocationById)({\n                  id: this.id\n                }).then(function (response) {\n                  return _this3.setData(response);\n                });\n\n              case 6:\n                _context.next = 9;\n                break;\n\n              case 8:\n                (0, _allocation.getDefaultInfo)().then(function (response) {\n                  _this3.personList = response.data;\n                  _this3.ruleForm.person = response.uid;\n                });\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function initData() {\n        return _initData.apply(this, arguments);\n      }\n\n      return initData;\n    }(),\n    setData: function setData(response) {\n      var data = response.data;\n      this.ruleForm = data;\n      this.ruleForm.fileList = data.upFile;\n      this.orgKey++; // 重新加载项目组件\n\n      this.fileListKey++; // 重新加载文件组件\n\n      this.keyOutType++; // 重新加载出库类别组件\n      // 填充 明细列表\n\n      var pom = [];\n      data.allocationDetails.forEach(function (e) {\n        pom.push({\n          id: e.id,\n          material: e.material,\n          storageInDetail: e.storageInDetail,\n          planDetailId: e.planDetailId,\n          quantity: e.quantity,\n          quantity2: e.quantity2,\n          remark: ''\n        });\n      });\n      this.list = pom;\n      this.personList = data.personList;\n      this.setColumnShow();\n      this.loading = false; // loading 状态关闭\n\n      this.activate = true; // 加载部门组件\n    },\n    closeThePage: function closeThePage() {\n      this.utils.closeAndRefresh(this.$route.query.refreshRouterName);\n    },\n    setColumnShow: function setColumnShow() {\n      // 设置列的显示。列中，都没有值，就隐藏\n      var modelunit2 = false;\n      var modelbrand = false;\n      var modelmodel = false;\n      var modelspec = false;\n      var modelthickness = false;\n      var modeltexture = false;\n      var modelsurfaceTreatment = false;\n      var modeldesignNumber = false;\n\n      var _iterator = (0, _createForOfIteratorHelper2.default)(this.list),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var row = _step.value;\n\n          if (row.material.unit2) {\n            modelunit2 = true;\n          }\n\n          if (row.material.brand) {\n            modelbrand = true;\n          }\n\n          if (row.material.model) {\n            modelmodel = true;\n          }\n\n          if (row.material.spec) {\n            modelspec = true;\n          }\n\n          if (row.material.thickness) {\n            modelthickness = true;\n          }\n\n          if (row.material.texture) {\n            modeltexture = true;\n          }\n\n          if (row.material.surfaceTreatment) {\n            modelsurfaceTreatment = true;\n          }\n\n          if (row.material.designNumber) {\n            modeldesignNumber = true;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      this.columnShow['unit2'] = modelunit2;\n      this.columnShow['brand'] = modelbrand;\n      this.columnShow['model'] = modelmodel;\n      this.columnShow['spec'] = modelspec;\n      this.columnShow['thickness'] = modelthickness;\n      this.columnShow['texture'] = modeltexture;\n      this.columnShow['surfaceTreatment'] = modelsurfaceTreatment;\n      this.columnShow['designNumber'] = modeldesignNumber;\n    },\n    add: function add() {\n      var _this4 = this;\n\n      this.$refs['ruleForm'].validate(function (valid) {\n        if (valid) {\n          var data = {\n            orgId: _this4.ruleForm.orgIdOut,\n            datalist: _this4.list\n          };\n          _this4.dialogTitle = '选择材料';\n          _this4.comName = 'StorageInDetailCheck';\n          _this4.currentRow = data;\n          _this4.dialogWidth = '100%';\n          _this4.fileList = [];\n          _this4.dialogTableVisible = true;\n        }\n      });\n    },\n    dialogClose: function dialogClose(data, state) {\n      this.addMaterial(data, state);\n      this.dialogTableVisible = false;\n    },\n    cancel: function cancel() {\n      var _this5 = this;\n\n      // 作废\n      this.$confirm('作废以后将无法编辑，是否确定作废？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this5.loading = true;\n        (0, _allocation.deleteAllocation)({\n          id: _this5.ruleForm.id\n        }).then(function (response) {\n          _this5.$message(response.message);\n\n          _this5.loading = false;\n\n          _this5.closeThePage();\n        });\n      }).catch(function () {});\n    },\n    addMaterial: function addMaterial(data, state) {\n      if (state === 'check') {\n        this.loading = true;\n        var pom = [];\n        data.list.forEach(function (e) {\n          pom.push({\n            material: e.material,\n            storageInDetail: e,\n            quantity: 0,\n            quantity2: 0,\n            remark: ''\n          });\n        });\n        this.list = pom;\n        this.setColumnShow();\n        this.loading = false;\n      } else {\n        this.initData();\n      }\n    },\n    handleChange: function handleChange() {//\n    },\n    getRemotePerson: function getRemotePerson(query) {\n      var _this6 = this;\n\n      query = query.trim();\n\n      if (query !== '') {\n        this.loading = true;\n        setTimeout(function () {\n          (0, _person.getPersonList)().then(function (response) {\n            _this6.personList = response.data;\n            _this6.loading = false;\n          });\n        }, 200);\n      } else {\n        this.personList = [];\n      }\n    }\n  }\n};\nexports.default = _default;",null]}