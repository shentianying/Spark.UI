{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\zjgl\\Acceptance\\shouZhi.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\cwgl\\zjgl\\Acceptance\\shouZhi.vue","mtime":1635749455632},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/toConsumableArray\"));\n\nvar _Gathering = require(\"@/api/cwgl/zjgl/Gathering.js\");\n\nvar _Expend = require(\"@/api/cwgl/zjgl/Expend.js\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// monopolize\nvar _default = {\n  name: 'ShouZhiMessage',\n  data: function data() {\n    return {\n      type: 'shou',\n      // shou:收款 zhi:支出\n      id: '',\n      size: 'mini',\n      table: {\n        list: [],\n        loading: false\n      },\n      details: {}\n    };\n  },\n  computed: {\n    infoList: function infoList() {\n      var _this = this;\n\n      var tmp1 = [];\n      var tmp2 = [];\n      var _this$details = this.details,\n          orgName = _this$details.orgName,\n          gatheringDate = _this$details.gatheringDate,\n          gatheringTypeName = _this$details.gatheringTypeName,\n          bank = _this$details.bank,\n          summary = _this$details.summary,\n          expendDate = _this$details.expendDate,\n          expendTypeName = _this$details.expendTypeName,\n          number = _this$details.number,\n          pageName = _this$details.pageName,\n          pageId = _this$details.pageId,\n          billId = _this$details.billId,\n          amount = _this$details.amount,\n          personName = _this$details.personName,\n          capitalTypeName = _this$details.capitalTypeName,\n          remark = _this$details.remark,\n          createUserName = _this$details.createUserName,\n          createDate = _this$details.createDate,\n          lastEditUserName = _this$details.lastEditUserName,\n          lastEditDate = _this$details.lastEditDate;\n\n      var formatDate = function formatDate(date) {\n        return _this.$moment(date).format('YYYY-MM-DD');\n      };\n\n      if (this.type === 'shou') {\n        // 支出 摘要 summary\n        tmp1 = [{\n          label: '部门',\n          value: orgName,\n          monopolize: true\n        }];\n        tmp2 = [{\n          label: '收款日期',\n          value: formatDate(gatheringDate)\n        }, {\n          label: '收款类型',\n          value: gatheringTypeName\n        }, {\n          label: '收款银行',\n          value: bank\n        }];\n      } else {\n        tmp1 = [{\n          label: '部门',\n          value: orgName\n        }, {\n          label: '摘要',\n          value: summary\n        }];\n        tmp2 = [{\n          label: '支出日期',\n          value: formatDate(expendDate)\n        }, {\n          label: '支出类型',\n          value: expendTypeName,\n          monopolize: true\n        }];\n      }\n\n      return [{\n        label: '编号',\n        value: number\n      }, {\n        label: '源头',\n        value: pageName,\n        click: this.goDeal,\n        params: [pageId, billId]\n      }].concat((0, _toConsumableArray2.default)(tmp1), [{\n        label: '金额',\n        value: amount\n      }, {\n        label: '经手人',\n        value: personName\n      }, {\n        label: '资金形式',\n        value: capitalTypeName\n      }], (0, _toConsumableArray2.default)(tmp2), [{\n        label: '备注',\n        value: remark,\n        monopolize: true\n      }, {\n        label: '制单人',\n        value: createUserName\n      }, {\n        label: '制单时间',\n        value: createDate\n      }, {\n        label: '更新人',\n        value: lastEditUserName\n      }, {\n        label: '更新时间',\n        value: lastEditDate\n      }]);\n    }\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    next(function (vm) {\n      vm.initData();\n    });\n  },\n  methods: {\n    /**\r\n     * @description: 初始化数据\r\n     */\n    initData: function initData() {\n      // 获取路由信息 shou:收款 zhi:支出\n      var _this$$route$query = this.$route.query,\n          type = _this$$route$query.type,\n          id = _this$$route$query.id;\n\n      if (!type) {\n        return;\n      }\n\n      this.type = type;\n      this.id = id;\n      this.fetchData();\n    },\n\n    /**\r\n     * @description: 数据获取\r\n     */\n    fetchData: function () {\n      var _fetchData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var func, res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.table.loading = true;\n                _context.prev = 1;\n                // To do\n                func = this.type === 'shou' ? _Gathering.GetPaymentById : _Expend.GetExpendById;\n                _context.next = 5;\n                return func(this.id);\n\n              case 5:\n                res = _context.sent;\n                this.table.list = res.data.acceptanceList;\n                res.data.amount = this.utils.formatMoney(res.data.amount, 2, 0);\n                this.details = res.data;\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](1);\n                console.log('fetchData:请求列表数据失败，错误信息：', _context.t0);\n\n              case 14:\n                _context.prev = 14;\n                this.table.loading = false;\n                return _context.finish(14);\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 11, 14, 17]]);\n      }));\n\n      function fetchData() {\n        return _fetchData.apply(this, arguments);\n      }\n\n      return fetchData;\n    }(),\n\n    /**\r\n     * 前往源头\r\n     * @param {*} pageId 路由id\r\n     * @param {*} billId 单据id\r\n     */\n    goDeal: function goDeal(pageId, billId) {\n      if (!pageId) return;\n\n      var _this$getRoute = this.getRoute(pageId),\n          routerName = _this$getRoute.routerName;\n\n      this.$router.replace({\n        name: routerName,\n        query: {\n          id: billId,\n          refreshRouterName: this.$route.name\n        },\n        params: {\n          id: billId,\n          type: 1\n        }\n      });\n    },\n\n    /**\r\n     * 获取源头路由\r\n     * @param {*} pageId 路由ID\r\n     * @returns 对应路由\r\n     */\n    getRoute: function getRoute(pageId) {\n      // 获取菜单列表\n      var getIsMenu = this.$store.getters.menus;\n      return getIsMenu.find(function (f) {\n        return f.id === pageId;\n      });\n    }\n  }\n};\nexports.default = _default;",null]}