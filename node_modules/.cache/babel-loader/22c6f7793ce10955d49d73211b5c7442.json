{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\qxgl\\pagePermit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\qxgl\\pagePermit.vue","mtime":1626852980491},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _page = require(\"@/api/xtgl/page\");\n\nvar _index = require(\"@/utils/index\");\n\nvar _pageButtonAdd = _interopRequireDefault(require(\"./pageButtonAdd\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'Permit',\n  components: {\n    PageButtonAdd: _pageButtonAdd.default\n  },\n  data: function data() {\n    return {\n      list: null,\n      listLoading: false,\n      dialogTableVisible: false,\n      currentRow: null,\n      // 选中的右边的权限编辑项目\n      currentPage: null,\n      // 选中的左边的菜单项目\n      comName: '',\n      treeList: null\n    };\n  },\n  mounted: function mounted() {\n    this.initTree(); // new Promise(resolve => {\n    //   this.initTree()\n    //   resolve()\n    // }).then(res => {\n    //   this.fetchData()\n    // })\n  },\n  methods: {\n    fetchData: function fetchData() {\n      var _this = this;\n\n      var postData = {};\n      postData.PageId = this.currentPage.id;\n      this.listLoading = true;\n      (0, _page.getPermit)(postData).then(function (response) {\n        var data = response.data;\n        _this.list = data;\n        _this.listLoading = false;\n      }).catch(function () {\n        _this.listLoading = false;\n      });\n    },\n    initTree: function initTree() {\n      var _this2 = this;\n\n      this.listLoading = true;\n      (0, _page.GetAllList)().then(function (response) {\n        var data = response.data;\n        data.forEach(function (ele) {\n          ele.label = ele.routerTitle;\n        });\n        _this2.treeList = (0, _index.getTree)(0, data);\n        _this2.listLoading = false;\n      });\n    },\n    dialogClose: function dialogClose() {\n      this.dialogTableVisible = false;\n      this.fetchData();\n    },\n    handleAdd: function handleAdd() {\n      this.currentRow = null;\n      this.comName = 'PageButtonAdd';\n      this.dialogTableVisible = true;\n    },\n    handleEdit: function handleEdit(row) {\n      this.currentRow = row;\n      this.comName = 'PageButtonAdd';\n      this.dialogTableVisible = true;\n    },\n    handleNodeClick: function handleNodeClick(data, node) {\n      if (node.isLeaf) {\n        // 多次点击同一个节点不请求\n        if (this.currentPage) {\n          if (data.id === this.currentPage.id) {\n            return;\n          }\n        } // console.log('data:', data)\n\n\n        this.currentPage = data;\n        this.fetchData();\n      } else {\n        this.list = [];\n      }\n    },\n    handleDelete: function handleDelete(id) {\n      var _this3 = this;\n\n      this.listLoading = true;\n      (0, _page.deletePermit)({\n        id: id\n      }).then(function (response) {\n        _this3.listLoading = false;\n\n        _this3.$message(response.message);\n\n        _this3.fetchData();\n      }).catch(function () {\n        _this3.listLoading = false;\n      });\n    }\n  }\n};\nexports.default = _default;",null]}