{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\jcsj\\organization.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\jcsj\\organization.vue","mtime":1634606917763},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.regexp.search\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _organizationAdd = _interopRequireDefault(require(\"./organizationAdd\"));\n\nvar _index = require(\"@/utils/index\");\n\nvar _dictionary = require(\"@/api/xtgl/dictionary\");\n\nvar _organization = require(\"@/api/xtgl/organization\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import { getCurrentUserOrg } from '@/api/xtgl/role'\nvar _default = {\n  name: 'Organization',\n  components: {\n    OrganizationAdd: _organizationAdd.default\n  },\n  data: function data() {\n    return {\n      list: [],\n      categoryList: [],\n      options: [{\n        value: false,\n        label: '否'\n      }, {\n        value: true,\n        label: '是'\n      }],\n      listLoading: true,\n      dialogTableVisible: false,\n      dialogTitle: '保存',\n      currentRow: null,\n      pid: 0,\n      search: {\n        name: '',\n        categoryIds: [],\n        isProject: null\n      }\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    (0, _dictionary.getDictionaryList)({\n      type: 'postPoolCategory'\n    }).then(function (response) {\n      var data = response.data;\n      _this.categoryList = data;\n    });\n    this.fetchData();\n  },\n  methods: {\n    fetchData: function fetchData() {\n      var _this2 = this;\n\n      this.listLoading = true;\n      var postData = {};\n      postData.name = this.search.name;\n      postData.categoryIds = this.search.categoryIds;\n      postData.isProject = this.search.isProject;\n      (0, _organization.getComOrganizationList)(postData).then(function (response) {\n        response.data.forEach(function (ele) {\n          ele.label = ele.name;\n        }); // console.log('list:', response.data)\n\n        _this2.list = (0, _index.getTree)(0, response.data);\n        _this2.listLoading = false;\n      });\n    },\n    goSearch: function goSearch() {\n      this.fetchData();\n    },\n    dialogClose: function dialogClose() {\n      this.dialogTableVisible = false;\n      this.fetchData();\n    },\n    handleAdd: function handleAdd() {\n      this.currentRow = null;\n      this.pid = 0;\n      this.dialogTableVisible = true;\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.currentRow = val;\n    },\n    // append(node, data) {\n    //   this.currentRow = null\n    //   this.pid = data.id\n    //   this.dialogTableVisible = true\n    // },\n    // remove(node, data) {\n    //   if (node.childNodes.length) {\n    //     this.$message.warning('请先删除子项目')\n    //   } else {\n    //     deleteOganization({ id: data.id }).then(response => {\n    //       this.fetchData()\n    //       this.$message.success('删除成功')\n    //     }).catch(() => { this.$message.danger('删除失败') })\n    //   }\n    // },\n    update: function update(data) {\n      this.currentRow = data;\n      this.pid = data.id;\n      this.dialogTableVisible = true;\n    },\n    details: function details(data) {\n      this.$router.push({\n        name: 'OrganizationDetails',\n        query: {\n          id: data.id,\n          refreshRouterName: this.$route.name\n        }\n      });\n    }\n  }\n};\nexports.default = _default;",null]}