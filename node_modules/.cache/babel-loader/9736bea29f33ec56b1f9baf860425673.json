{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\jcsj\\accountSetAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\jcsj\\accountSetAdd.vue","mtime":1624071363344},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _accountSet = require(\"@/api/xtgl/accountSet\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'AddAccountSet',\n  props: {\n    obj: {\n      type: Object,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      ruleForm: {\n        name: '',\n        fullName: '',\n        shortName: '',\n        taxNumber: '',\n        address: '',\n        phoneNumber: '',\n        bank: '',\n        accountNumber: '',\n        remark: '',\n        inUse: true\n      },\n      buttonLoading: false,\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入组织机构名称',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.initData();\n  },\n  methods: {\n    submitForm: function submitForm(formName) {\n      var _this = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var newObj = JSON.parse(JSON.stringify(_this.ruleForm));\n\n          if (_this.obj) {\n            _this.buttonLoading = true;\n            (0, _accountSet.putAccountSet)(newObj).then(function (response) {\n              _this.$message(response.message);\n\n              _this.buttonLoading = false;\n\n              _this.$emit('dialogClose');\n            }).catch(function () {\n              _this.buttonLoading = false;\n            });\n          } else {\n            (0, _accountSet.addAccountSet)(newObj).then(function (response) {\n              _this.$message(response.message);\n\n              _this.buttonLoading = false;\n\n              _this.$emit('dialogClose');\n            }).catch(function () {\n              _this.buttonLoading = false;\n            });\n          }\n        }\n      });\n    },\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    initData: function initData() {\n      if (this.obj) {\n        var newObj = JSON.parse(JSON.stringify(this.obj));\n        this.ruleForm = newObj;\n      }\n    }\n  }\n};\nexports.default = _default;",null]}