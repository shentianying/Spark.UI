{"remainingRequest":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\qxgl\\pageButtonAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\spark\\Spark.UI\\src\\views\\xtgl\\qxgl\\pageButtonAdd.vue","mtime":1628836283478},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\spark\\Spark.UI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Projects/spark/Spark.UI/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _page = require(\"@/api/xtgl/page\");\n\nvar _index = _interopRequireDefault(require(\"@/components/OrgSelect/index2\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import { getTree } from '@/utils/index'\n// import Treeselect from '@riophae/vue-treeselect'\n// import '@riophae/vue-treeselect/dist/vue-treeselect.css'\nvar _default = {\n  name: 'AddButton',\n  components: {\n    // Treeselect\n    OrgSelect2: _index.default\n  },\n  props: {\n    obj: {\n      type: Object,\n      default: null\n    },\n    currentPage: {\n      type: Object,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      ruleForm: {\n        name: '',\n        code: '',\n        controller: '',\n        action: '',\n        pageId: null,\n        sort: null,\n        isView: false\n      },\n      treeList: null,\n      buttonLoading: false,\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入',\n          trigger: 'blur'\n        }],\n        code: [{\n          required: true,\n          message: '请输入',\n          trigger: 'blur'\n        }],\n        controller: [{\n          required: true,\n          message: '请输入',\n          trigger: 'blur'\n        }],\n        action: [{\n          required: true,\n          message: '请输入',\n          trigger: 'blur'\n        }],\n        pageId: [{\n          required: true,\n          message: '请选择',\n          trigger: 'change'\n        }],\n        sort: [{\n          required: true,\n          message: '请选择',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  // watch: {\n  //   'ruleForm.pageId': {\n  //     handler: function(value, oldvalue) {\n  //       if (!oldvalue) {\n  //         this.$refs['ruleForm'].validateField('pageId', (valid) => {})\n  //       }\n  //     }, deep: true\n  //   }\n  // },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.initData();\n    this.listLoading = true;\n    (0, _page.GetAllList)().then(function (response) {\n      _this.treeList = response.data;\n\n      _this.$refs['ruleForm'].validateField('pageId', function (valid) {});\n\n      _this.listLoading = false;\n    });\n  },\n  methods: {\n    submitForm: function submitForm(formName) {\n      var _this2 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var newObj = JSON.parse(JSON.stringify(_this2.ruleForm));\n          newObj.code = newObj.code.toUpperCase();\n\n          if (_this2.obj) {\n            _this2.buttonLoading = true;\n            (0, _page.updatePermit)(newObj).then(function (response) {\n              _this2.$message(response.message);\n\n              _this2.$emit('dialogClose');\n            }).catch(function () {\n              _this2.buttonLoading = false;\n            });\n          } else {\n            _this2.buttonLoading = true;\n            (0, _page.addPermit)(newObj).then(function (response) {\n              _this2.$message(response.message);\n\n              _this2.$emit('dialogClose');\n            }).catch(function () {\n              _this2.buttonLoading = false;\n            });\n          }\n        }\n      });\n    },\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    initData: function initData() {\n      if (this.obj) {\n        var newObj = JSON.parse(JSON.stringify(this.obj));\n        this.ruleForm = newObj;\n      } else {\n        // 初始化选中项\n        this.ruleForm.pageId = this.currentPage.id;\n      }\n    },\n    isView: function isView(checked) {\n      if (checked) {\n        this.ruleForm.name = '查看';\n      }\n    }\n  }\n};\nexports.default = _default;",null]}